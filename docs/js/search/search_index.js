var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/B3PropagatorService.html",[0,0.312,1,1.702]],["body/injectables/B3PropagatorService.html",[0,0.487,1,3.047,2,1.262,3,0.498,4,0.498,5,0.387,6,0.421,7,4.216,8,1.763,9,0.498,10,0.387,11,1.235,12,2.778,13,0.901,14,3.353,15,1.3,16,2.456,17,0.982,18,0.033,19,2.863,20,0.637,21,0.557,22,2.035,23,2.111,24,1.763,25,2.589,26,1.262,27,1.262,28,0.498,29,0.982,30,1.262,31,0.619,32,0.02,33,0.025,34,0.02]],["title/interfaces/CommonCollectorConfig.html",[35,0.606,36,1.305]],["body/interfaces/CommonCollectorConfig.html",[3,0.31,4,0.31,5,0.241,6,0.208,9,0.31,10,0.241,16,1.006,18,0.033,20,0.274,21,0.346,28,0.707,31,0.385,32,0.012,33,0.018,34,0.012,35,0.989,36,1.74,37,0.926,38,1.006,39,1.006,40,1.604,41,1.528,42,1.472,43,1.418,44,1.868,45,2.073,46,2.319,47,2.319,48,1.7,49,1.957,50,1.406,51,2.546,52,1.493,53,2.279,54,1.472,55,1.921,56,1.921,57,2.395,58,0.819,59,1.148,60,1.313,61,1.751,62,1.066,63,1.473,64,1.472,65,0.926,66,1.096,67,0.722,68,0.852,69,1.096,70,1.096,71,1.096,72,1.472,73,1.915,74,1.057,75,1.354,76,1.197,77,1.472,78,1.604,79,1.604,80,1.472,81,1.197,82,2.038,83,1.197,84,1.006,85,1.096,86,0.684,87,1.751,88,1.751,89,1.604,90,1.604,91,0.819,92,0.513,93,1.197,94,1.197,95,1.197]],["title/injectables/CompositePropagatorService.html",[0,0.312,96,1.877]],["body/injectables/CompositePropagatorService.html",[0,0.425,1,3.027,2,1.024,3,0.404,4,0.404,5,0.314,6,0.416,8,1.431,9,0.404,10,0.314,11,1.077,12,2.564,13,0.988,15,1.199,16,1.313,17,0.797,18,0.033,19,2.678,20,0.658,21,0.452,22,1.776,23,1.714,24,1.431,25,2.101,26,1.024,27,1.024,28,0.404,29,0.797,30,1.024,31,0.502,32,0.016,33,0.022,34,0.016,43,0.797,50,0.867,52,1.384,58,0.731,62,0.988,65,1.208,67,0.943,69,2.527,86,0.61,92,0.669,96,3.1,97,4.168,98,2.564,99,3.26,100,3.094,101,3.094,102,3.26,103,1.431,104,3.26,105,1.714,106,2.721,107,2.367,108,3.624,109,2.555,110,1.431,111,1.431,112,3.26,113,2.624,114,3.26,115,3.26,116,3.26,117,3.26,118,3.26,119,3.26]],["title/injectables/ConsoleSpanExporterService.html",[0,0.312,120,2.087]],["body/injectables/ConsoleSpanExporterService.html",[0,0.484,2,1.251,3,0.494,4,0.494,5,0.384,6,0.419,9,0.494,10,0.384,11,1.228,13,0.893,15,1.296,17,0.974,18,0.033,20,0.604,21,0.552,26,1.251,27,1.251,28,0.494,29,0.974,30,1.251,31,0.614,32,0.02,33,0.025,34,0.02,74,1.453,120,3.725,121,4.194,122,3.35,123,1.91,124,2.912,125,3.038,126,3.984,127,3.038,128,2.856,129,2.205,130,2.309,131,1.91]],["title/injectables/HttpTextPropagatorService.html",[0,0.312,132,2.087]],["body/injectables/HttpTextPropagatorService.html",[0,0.387,1,2.904,2,0.895,3,0.353,4,0.353,5,0.275,6,0.335,8,1.251,9,0.353,10,0.275,11,0.982,12,2.421,13,0.639,15,0.901,17,0.697,18,0.033,19,2.23,20,0.647,21,0.395,22,1.874,23,1.499,24,1.251,26,0.895,27,0.895,28,0.498,29,0.697,30,0.895,32,0.014,33,0.02,34,0.014,41,1.162,48,1.763,52,1.262,59,1.461,62,0.639,65,1.056,67,0.824,68,1.37,74,0.824,86,0.752,91,0.901,92,1.037,96,3.203,100,2.904,101,2.799,108,3.865,109,2.697,110,1.251,111,2.337,132,3.256,133,2.59,134,2.445,135,3.354,136,4.01,137,2.851,138,2.916,139,2.916,140,1.251,141,3.203,142,3.354,143,2.38,144,3.377,145,2.38,146,2.38,147,2.07,148,1.838,149,2.07,150,2.38,151,2.38,152,2.851,153,4.216,154,2.851,155,4.445,156,2.851,157,2.38,158,2.851]],["title/injectables/HttpTraceContextPropagatorService.html",[0,0.312,100,1.702]],["body/injectables/HttpTraceContextPropagatorService.html",[0,0.483,2,1.248,3,0.492,4,0.492,5,0.383,6,0.418,8,1.743,9,0.492,10,0.383,11,1.226,12,2.767,13,0.891,14,3.316,15,1.295,17,0.971,18,0.033,19,2.853,20,0.634,21,0.551,22,2.021,23,2.088,24,1.743,25,2.561,26,1.248,27,1.248,28,0.492,29,0.971,30,1.248,31,0.612,32,0.02,33,0.025,34,0.02,52,1.575,67,1.758,100,3.034,110,2.201,133,3.233]],["title/interfaces/IExporter.html",[35,0.606,129,1.421]],["body/interfaces/IExporter.html",[3,0.527,4,0.527,5,0.41,6,0.436,9,0.527,10,0.41,11,1.279,13,0.953,15,0.953,17,1.039,18,0.032,20,0.467,28,0.527,32,0.021,33,0.026,34,0.021,35,1.061,37,1.575,74,1.513,124,3.428,125,3.109,128,3.002,129,2.296,131,2.038,159,3.549,160,3.798,161,4.252,162,3.798,163,5.232]],["title/interfaces/IPropagator.html",[22,1.305,35,0.606]],["body/interfaces/IPropagator.html",[3,0.533,4,0.533,5,0.415,6,0.44,9,0.533,10,0.415,11,1.288,12,2.846,13,0.965,15,0.965,17,1.052,18,0.032,19,2.92,20,0.473,22,2.123,24,1.888,28,0.533,32,0.021,33,0.026,34,0.021,35,1.067,37,1.594,48,1.717,160,3.826,162,3.826,164,3.591,165,4.302,166,4.399]],["title/interfaces/JaegerCollectorConfig.html",[35,0.606,77,1.305]],["body/interfaces/JaegerCollectorConfig.html",[3,0.339,4,0.339,5,0.263,6,0.228,9,0.339,10,0.263,16,1.101,18,0.033,20,0.3,21,0.379,28,0.723,31,0.421,32,0.013,33,0.019,34,0.013,35,1.02,36,1.571,37,1.013,38,1.101,39,1.101,40,1.199,41,1.576,42,1.571,43,1.212,44,1.761,45,1.684,46,1.711,47,1.711,48,1.515,49,1.445,50,1.037,51,2.175,52,1.225,53,2.376,54,1.101,55,1.437,56,1.437,57,2.461,58,0.613,59,0.858,60,1.437,61,1.869,62,1.175,63,1.55,64,1.571,65,1.013,66,1.199,67,0.79,68,0.932,69,1.199,70,1.199,71,1.199,72,1.571,73,1.997,74,1.127,75,1.445,76,1.31,77,1.831,78,2.391,79,2.391,80,1.571,81,1.31,82,2.111,83,1.31,84,1.101,85,1.199,86,0.73,87,1.869,88,1.869,89,1.711,90,1.711,91,0.874,92,0.561,93,1.31,94,1.31,95,1.31]],["title/injectables/JaegerExporterService.html",[0,0.312,167,1.877]],["body/injectables/JaegerExporterService.html",[0,0.428,2,1.036,3,0.409,4,0.409,5,0.318,6,0.419,9,0.55,10,0.318,11,1.086,13,0.996,15,1.296,17,0.806,18,0.033,20,0.59,21,0.457,26,1.036,27,1.036,28,0.409,29,1.228,30,1.036,31,0.508,32,0.016,33,0.022,34,0.016,43,0.806,49,1.222,50,0.877,58,0.739,78,1.447,79,1.447,86,1.082,91,0.739,92,1.103,98,2.407,103,1.447,105,1.733,111,1.447,113,1.733,123,1.58,125,2.824,127,3.037,128,2.688,129,1.949,130,1.911,131,1.58,140,1.447,167,3.115,168,4.192,169,4.441,170,3.707,171,3.707,172,4.823,173,3.707,174,3.224,175,2.574,176,3.707,177,3.224,178,3.707,179,1.911,180,3.297,181,3.297,182,3.297,183,2.752,184,2.125,185,3.297,186,2.393,187,3.297,188,3.297]],["title/injectables/JaegerHttpTracePropagatorService.html",[0,0.312,101,1.702]],["body/injectables/JaegerHttpTracePropagatorService.html",[0,0.433,2,1.055,3,0.416,4,0.416,5,0.324,6,0.452,8,1.474,9,0.557,10,0.324,11,1.099,12,2.595,13,1.137,15,1.214,17,0.821,18,0.033,19,2.705,20,0.638,21,0.465,22,1.811,23,1.765,24,1.474,26,1.055,27,1.055,28,0.416,29,0.821,30,1.055,31,0.517,32,0.017,33,0.022,34,0.017,42,1.811,43,0.821,50,1.196,52,1.7,57,1.973,58,0.753,62,0.753,67,1.565,85,2.224,86,1.087,91,0.753,92,1.111,98,2.429,101,2.845,103,1.474,105,1.765,106,2.803,107,2.438,109,3.138,111,1.474,113,2.664,140,1.474,179,1.947,184,2.165,189,4.519,190,4.496,191,3.358,192,2.803,193,2.803,194,3.358,195,3.358,196,3.358]],["title/interfaces/JaegerPropagatorConfig.html",[35,0.606,82,1.305]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.344,4,0.344,5,0.268,6,0.232,9,0.344,10,0.268,16,1.12,18,0.033,20,0.305,21,0.385,28,0.726,31,0.428,32,0.014,33,0.019,34,0.014,35,1.026,36,1.59,37,1.03,38,1.12,39,1.12,40,1.22,41,1.585,42,1.59,43,0.965,44,1.721,45,1.7,46,1.732,47,1.732,48,1.585,49,1.462,50,0.74,51,2.192,52,1.24,53,1.892,54,1.12,55,1.461,56,1.461,57,2.473,58,0.623,59,0.873,60,1.461,61,1.892,62,1.12,63,1.565,64,1.59,65,1.03,66,1.22,67,0.804,68,0.948,69,1.22,70,1.22,71,1.22,72,1.59,73,2.012,74,1.141,75,1.462,76,1.333,77,1.59,78,1.732,79,1.732,80,1.59,81,1.333,82,2.27,83,1.892,84,1.59,85,2.192,86,0.739,87,1.892,88,1.892,89,1.732,90,1.732,91,0.885,92,0.571,93,1.333,94,1.333,95,1.333]],["title/injectables/NoopHttpTextPropagatorService.html",[0,0.312,141,1.877]],["body/injectables/NoopHttpTextPropagatorService.html",[0,0.487,2,1.262,3,0.498,4,0.498,5,0.387,6,0.421,8,1.763,9,0.498,10,0.387,11,1.235,12,2.778,13,0.901,15,1.3,17,0.982,18,0.033,19,2.863,20,0.607,21,0.557,22,2.035,23,2.111,24,1.763,26,1.262,27,1.262,28,0.498,29,0.982,30,1.262,31,0.619,32,0.02,33,0.025,34,0.02,109,2.928,134,2.655,141,3.36,197,4.216,198,4.017,199,6.096]],["title/interfaces/OpenTelemetryConfig.html",[35,0.606,86,0.606]],["body/interfaces/OpenTelemetryConfig.html",[3,0.323,4,0.323,5,0.251,6,0.217,9,0.323,10,0.251,16,1.05,18,0.033,20,0.286,21,0.361,28,0.715,31,0.401,32,0.013,33,0.019,34,0.013,35,1.004,36,1.953,37,0.965,38,1.05,39,1.05,40,1.143,41,1.488,42,1.518,43,1.384,44,1.684,45,1.64,46,1.653,47,1.653,48,1.488,49,1.396,50,1.369,51,2.128,52,1.183,53,1.806,54,1.05,55,1.37,56,1.37,57,2.257,58,0.584,59,0.818,60,1.37,61,1.806,62,1.087,63,1.509,64,1.518,65,0.965,66,1.143,67,0.753,68,0.889,69,1.143,70,1.143,71,1.143,72,1.953,73,1.953,74,1.089,75,1.396,76,1.249,77,1.953,78,1.653,79,1.653,80,1.953,81,1.249,82,2.39,83,1.249,84,1.05,85,1.143,86,0.908,87,2.57,88,2.57,89,2.353,90,2.353,91,0.845,92,0.535,93,1.249,94,1.249,95,1.249]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[200,1.877,201,2.087]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[0,0.235,3,0.184,4,0.184,5,0.143,6,0.418,9,0.583,10,0.143,11,0.597,13,1.092,15,0.89,17,1.042,18,0.033,20,0.576,21,0.206,24,0.653,25,1.574,26,0.467,27,0.467,28,0.184,29,0.759,30,0.467,31,0.694,32,0.007,33,0.012,34,0.007,41,1.039,42,0.984,43,1.101,45,1.668,46,1.363,47,1.871,48,1.147,50,1.251,51,1.871,53,1.488,58,1.01,59,0.767,74,0.898,75,0.551,84,1.448,86,0.673,91,0.334,92,0.965,94,1.902,98,1.722,103,1.976,105,0.782,108,1.08,110,1.072,111,2.3,113,2.983,122,3.184,124,2.083,127,1.284,128,2.254,131,0.713,132,3.031,134,0.782,135,2.038,140,0.653,147,1.08,160,1.773,175,1.415,179,0.863,193,1.242,200,1.8,201,1.574,202,1.488,203,4.183,204,1.242,205,2.038,206,3.593,207,3.759,208,2.442,209,2.442,210,3.105,211,2.442,212,3.105,213,2.592,214,3.031,215,2.442,216,2.442,217,1.488,218,2.442,219,2.592,220,2.442,221,1.8,222,3.593,223,2.442,224,2.442,225,5.011,226,1.488,227,2.038,228,5.77,229,2.442,230,4.264,231,1.488,232,1.488,233,1.415,234,2.442,235,2.038,236,2.442,237,1.488,238,3.559,239,1.773,240,2.442,241,1.488,242,1.488,243,2.592,244,3.593,245,2.592,246,2.038,247,1.488,248,4.264,249,3.593,250,1.488,251,2.442,252,2.038,253,3,254,1.415,255,2.038,256,3.105,257,3.105,258,2.442,259,3,260,1.488,261,2.442,262,2.442,263,3.105,264,1.08,265,1.242,266,1.08,267,2.442,268,2.442,269,2.442,270,2.442,271,1.488,272,1.488,273,1.242,274,1.488,275,2.442,276,1.488,277,1.488,278,1.488,279,2.442,280,1.488,281,1.488,282,1.488,283,1.488,284,1.488,285,1.488,286,1.488,287,1.488,288,1.488,289,1.488,290,1.488,291,1.488,292,2.608,293,2.442,294,2.442,295,2.442,296,1.488,297,1.773,298,1.488,299,1.488,300,1.488,301,1.488,302,1.488,303,1.488,304,1.488,305,1.488,306,1.488,307,1.488,308,1.488,309,1.488,310,1.488,311,3.105,312,1.488,313,1.488,314,3.105,315,1.488,316,1.488,317,1.488,318,1.488,319,1.488,320,1.488,321,1.488,322,1.488,323,2.442,324,1.488,325,1.488,326,1.488,327,1.488]],["title/modules/OpenTelemetryInterceptorModule.html",[328,2.351,329,2.087]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.45,4,0.45,5,0.35,6,0.395,11,0.889,13,0.815,15,0.815,17,0.889,18,0.033,20,0.636,21,0.504,28,0.45,29,0.889,31,0.56,32,0.018,33,0.023,34,0.018,43,1.289,50,0.967,58,0.815,86,1.046,91,1.062,92,1.082,98,1.742,103,1.595,140,1.595,148,3.054,192,3.034,201,3.054,239,2.639,264,2.639,329,3.733,330,2.639,331,4.738,332,3.635,333,4.738,334,3.635,335,4.738,336,3.635,337,5.271,338,4.4,339,4.738,340,3.955,341,3.955,342,3.635,343,3.635,344,2.639,345,3.034,346,3.034,347,4.738,348,3.635,349,3.034,350,3.635,351,3.635,352,3.034,353,2.639,354,3.635,355,3.635,356,3.635]],["title/interfaces/OtelCollectorConfig.html",[35,0.606,72,1.305]],["body/interfaces/OtelCollectorConfig.html",[3,0.343,4,0.343,5,0.267,6,0.231,9,0.343,10,0.267,16,1.116,18,0.033,20,0.304,21,0.384,28,0.725,31,0.427,32,0.014,33,0.019,34,0.014,35,1.025,36,1.586,37,1.026,38,1.116,39,1.116,40,1.215,41,1.583,42,1.586,43,0.962,44,1.768,45,1.696,46,1.727,47,1.727,48,1.523,49,1.458,50,0.737,51,2.188,52,1.236,53,1.887,54,1.116,55,1.456,56,1.456,57,2.471,58,0.621,59,0.87,60,1.456,61,1.887,62,1.118,63,1.562,64,1.586,65,1.026,66,1.215,67,0.801,68,0.945,69,1.215,70,1.215,71,1.727,72,1.845,73,2.318,74,1.324,75,1.696,76,1.887,77,1.586,78,1.727,79,1.727,80,1.586,81,1.328,82,2.122,83,1.328,84,1.116,85,1.215,86,0.737,87,1.887,88,1.887,89,1.727,90,1.727,91,0.883,92,0.568,93,1.328,94,1.328,95,1.328]],["title/injectables/OtelcolExporterService.html",[0,0.312,357,1.877]],["body/injectables/OtelcolExporterService.html",[0,0.433,2,1.055,3,0.416,4,0.416,5,0.324,6,0.452,9,0.557,10,0.324,11,1.099,13,1.137,15,1.214,17,0.821,18,0.033,20,0.62,21,0.465,26,1.055,27,1.055,28,0.416,29,1.239,30,1.055,31,0.517,32,0.017,33,0.022,34,0.017,41,1.3,42,1.811,43,0.821,44,1.055,49,1.244,50,1.196,58,0.753,73,1.353,86,1.087,90,2.224,91,0.753,92,1.111,98,2.429,103,1.474,105,1.765,111,1.474,113,2.664,123,1.61,125,2.845,128,2.429,129,1.973,130,1.947,131,1.61,140,1.474,179,1.947,184,2.165,186,2.438,357,3.138,358,4.519,359,4.496,360,3.358,361,5.643,362,5.643,363,2.438,364,3.358,365,3.358,366,3.358]],["title/injectables/SpanExporterService.html",[0,0.312,214,2.087]],["body/injectables/SpanExporterService.html",[0,0.404,2,0.951,3,0.375,4,0.375,5,0.292,6,0.35,9,0.375,10,0.292,11,1.025,13,0.679,15,1.078,17,0.741,18,0.033,20,0.646,21,0.42,26,0.951,27,0.951,28,0.519,29,0.741,30,0.951,32,0.015,33,0.021,34,0.015,44,1.509,45,1.553,59,0.951,62,0.94,63,1.429,64,1.688,74,0.876,86,0.785,91,0.94,92,1.064,111,2.389,120,3.098,122,1.756,123,1.452,124,3.265,125,2.726,127,2.526,128,2.304,129,2.109,130,1.756,131,1.452,136,4.088,138,3.042,139,3.042,140,1.329,143,2.529,145,2.529,146,2.529,147,2.199,149,2.199,150,2.529,151,2.529,153,4.012,155,4.329,167,3.265,214,2.702,254,2.43,273,4.329,357,3.265,367,3.042,368,4.012,369,3.029,370,3.265,371,3.042,372,3.029,373,3.029,374,2.529,375,3.029]],["title/interfaces/ZipkinCollectorConfig.html",[35,0.606,80,1.305]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.344,4,0.344,5,0.267,6,0.231,9,0.344,10,0.267,16,1.118,18,0.033,20,0.305,21,0.385,28,0.726,31,0.427,32,0.014,33,0.019,34,0.014,35,1.025,36,1.588,37,1.028,38,1.118,39,1.118,40,1.218,41,1.584,42,1.588,43,0.964,44,1.72,45,1.698,46,1.73,47,1.73,48,1.524,49,1.46,50,0.738,51,2.19,52,1.238,53,1.889,54,1.118,55,1.459,56,1.459,57,2.472,58,0.622,59,0.871,60,1.459,61,1.889,62,1.119,63,1.702,64,1.588,65,1.028,66,1.218,67,0.802,68,0.946,69,1.218,70,1.218,71,1.218,72,1.588,73,2.319,74,1.325,75,1.698,76,1.33,77,1.588,78,1.73,79,1.73,80,1.847,81,1.889,82,2.123,83,1.33,84,1.118,85,1.218,86,0.738,87,1.889,88,1.889,89,1.73,90,1.73,91,0.884,92,0.569,93,1.33,94,1.33,95,1.33]],["title/injectables/ZipkinExporterService.html",[0,0.312,370,1.877]],["body/injectables/ZipkinExporterService.html",[0,0.437,2,1.069,3,0.422,4,0.422,5,0.328,6,0.426,9,0.562,10,0.328,11,1.109,13,1.018,15,1.221,17,0.832,18,0.033,20,0.598,21,0.472,26,1.069,27,1.069,28,0.422,29,0.832,30,1.069,31,0.524,32,0.017,33,0.022,34,0.017,43,0.832,49,1.262,50,0.906,58,0.764,73,1.372,86,1.092,89,1.494,91,0.764,92,1.117,98,2.447,103,1.494,105,1.79,111,1.494,113,1.79,123,1.632,125,2.861,127,2.861,128,2.718,129,1.991,130,1.974,131,1.632,140,1.494,170,3.788,171,3.788,172,4.544,173,3.788,174,3.294,175,2.631,176,3.788,177,3.294,178,3.788,179,1.974,183,2.843,184,2.195,186,2.472,370,2.631,376,4.261,377,4.538,378,3.405,379,3.405,380,3.405,381,3.405]],["title/changelog.html",[382,1.577,383,1.577,384,2.271]],["body/changelog.html",[5,0.486,18,0.022,31,0.512,32,0.016,33,0.022,34,0.016,41,0.962,48,1.292,54,1.34,62,1.002,68,1.839,70,1.961,84,1.34,110,1.961,221,2.59,233,3.532,254,2.59,384,2.777,385,3.327,386,3.327,387,2.415,388,3.327,389,2.145,390,3.327,391,3.73,392,3.327,393,3.327,394,4.211,395,5.393,396,4.468,397,5.393,398,5.393,399,4.468,400,4.468,401,5.045,402,5.045,403,4.468,404,4.468,405,4.468,406,4.468,407,4.468,408,3.327,409,3.327,410,3.327,411,3.327,412,3.327,413,3.327,414,3.327,415,3.327,416,3.327,417,2.415,418,5.918,419,3.327,420,3.327,421,3.327,422,3.327,423,2.777,424,3.327,425,3.327,426,3.327,427,3.327,428,3.327,429,3.327,430,3.327,431,3.327,432,2.415,433,3.327,434,2.777,435,3.327,436,3.327,437,3.327,438,2.777,439,3.327,440,3.327,441,4.468,442,3.327,443,3.327,444,4.468,445,4.468,446,3.327,447,3.327,448,2.777,449,3.327,450,3.73,451,4.468,452,4.468,453,3.327,454,3.327,455,3.327,456,5.393,457,3.327,458,3.327,459,3.327,460,3.327,461,3.327,462,4.468,463,3.327,464,3.327]],["title/coverage.html",[465,3.662]],["body/coverage.html",[0,0.588,1,1.579,5,0.289,6,0.538,7,2.508,8,2.528,18,0.032,22,1.21,31,0.463,32,0.015,33,0.021,34,0.015,35,1.1,36,1.21,38,2.321,39,2.321,50,0.799,52,1.309,72,1.21,77,1.21,80,1.21,82,1.21,86,0.562,91,0.674,96,1.741,97,2.508,100,1.579,101,1.579,109,2.416,110,1.318,120,1.936,121,2.508,122,1.741,123,2.692,129,1.318,132,1.936,133,3.084,134,2.515,141,1.741,144,2.181,149,3.025,159,2.508,164,2.508,167,1.741,168,2.508,189,2.508,197,2.508,200,1.741,201,1.936,203,2.508,204,2.508,214,1.936,357,1.741,358,2.508,367,3.025,370,1.741,371,2.181,376,2.508,465,2.508,466,2.508,467,3.004,468,3.004,469,6.431,470,3.004,471,5.168,472,6.1,473,3.004,474,3.004,475,4.785,476,3.004,477,3.004,478,3.004,479,3.004,480,3.004,481,2.508]],["title/dependencies.html",[482,2.271,483,2.821]],["body/dependencies.html",[18,0.033,21,0.576,32,0.021,33,0.025,34,0.021,44,1.305,62,0.932,107,3.016,265,3.468,266,3.016,297,3.016,363,3.016,394,4.306,483,3.016,484,4.155,485,6.299,486,4.155,487,5.158,488,4.155,489,4.155,490,4.155,491,4.155,492,5.158,493,4.306,494,4.155,495,4.155,496,4.155,497,4.155,498,4.155,499,4.155,500,4.155,501,4.155,502,4.155,503,3.468,504,3.468,505,4.155,506,4.155,507,4.155,508,4.155,509,4.155]],["title/miscellaneous/enumerations.html",[510,1.43,511,3.244]],["body/miscellaneous/enumerations.html",[6,0.372,10,0.43,16,1.797,18,0.032,32,0.022,33,0.027,34,0.022,38,1.797,39,2.332,44,1.692,48,1.558,62,1.298,63,1.837,64,2.17,65,1.653,66,1.957,67,1.29,68,1.521,69,1.957,70,1.957,75,2.344,510,2.345,511,3.723,512,4.497]],["title/miscellaneous/functions.html",[510,1.43,513,3.244]],["body/miscellaneous/functions.html",[1,2.692,6,0.427,8,2.248,9,0.635,10,0.396,15,0.921,18,0.029,32,0.02,33,0.025,34,0.02,43,1.252,45,1.522,48,1.481,58,1.149,59,1.609,62,0.921,63,1.401,64,1.655,67,1.188,68,1.401,92,1.199,96,2.969,100,2.692,101,2.692,103,2.248,123,2.455,127,2.692,133,2.648,134,2.692,136,3.718,141,2.969,142,3.429,144,4.051,148,2.648,167,2.969,357,2.969,367,2.982,368,3.429,370,2.969,371,3.718,510,2.159,513,3.429,514,4.108,515,4.108,516,4.108,517,4.108]],["title/index.html",[10,0.262,382,1.577,383,1.577]],["body/index.html",[3,0.455,18,0.032,20,0.494,21,0.265,28,0.37,29,0.467,32,0.022,33,0.015,34,0.009,35,0.559,36,0.77,40,1.309,41,1.643,43,0.729,44,1.893,45,1.536,46,0.838,47,1.61,48,1.378,49,1.105,51,1.61,52,1.564,54,1.812,57,2.092,58,0.669,59,0.937,61,2.285,62,1.237,63,1.626,65,1.36,66,1.309,67,0.552,68,1.017,71,2.323,72,0.77,73,2.076,74,0.863,75,0.708,76,1.43,77,0.77,78,1.82,79,1.82,80,0.77,81,1.43,82,0.77,83,1.43,84,1.478,85,1.309,86,0.687,87,1.43,88,1.43,89,1.309,90,1.309,110,0.838,122,1.729,138,1.387,157,1.595,166,1.595,174,3.615,175,1.107,200,2.887,205,1.595,207,1.595,213,1.595,221,1.107,227,1.595,233,1.729,238,3.063,239,2.664,243,3.063,245,2.49,252,1.595,253,1.595,254,3.249,255,1.595,259,1.595,264,1.387,266,1.387,292,1.387,297,1.387,328,3.265,329,2.365,338,2.49,340,1.595,341,3.462,344,1.387,345,1.595,349,3.462,352,1.595,353,1.387,363,1.387,374,1.595,382,1.729,383,1.729,387,2.165,389,2.673,417,3.93,432,2.664,434,1.595,438,1.595,481,1.595,482,1.595,493,1.595,503,1.595,504,1.595,518,3.67,519,3.67,520,1.911,521,2.664,522,1.911,523,1.595,524,2.983,525,2.983,526,4.147,527,2.983,528,3.67,529,1.911,530,1.911,531,2.983,532,4.147,533,2.49,534,2.983,535,2.983,536,2.983,537,2.983,538,1.911,539,1.911,540,1.911,541,1.911,542,1.595,543,1.911,544,1.911,545,1.911,546,1.911,547,1.911,548,1.911,549,1.911,550,1.911,551,1.911,552,4.147,553,1.911,554,1.911,555,1.911,556,1.911,557,1.911,558,1.595,559,1.911,560,1.911,561,1.911,562,1.911,563,3.67,564,1.911,565,1.911,566,1.911,567,1.911,568,1.595,569,1.595,570,1.911,571,1.911,572,1.911,573,1.911,574,1.911,575,1.911,576,2.983,577,1.911,578,2.983,579,2.983,580,1.911,581,1.911,582,1.911,583,1.911,584,1.911,585,1.911,586,2.983,587,2.983,588,1.232,589,1.911,590,1.911,591,1.911,592,1.911,593,1.911,594,1.911,595,1.595,596,1.595,597,1.911,598,1.911,599,1.911,600,1.911,601,1.911,602,1.911,603,1.911,604,1.911,605,1.911,606,2.983,607,2.983,608,1.911,609,1.911,610,1.911,611,1.911,612,1.911,613,1.911,614,1.911]],["title/license.html",[382,1.577,383,1.577,615,2.271]],["body/license.html",[4,0.612,5,0.419,9,0.153,13,0.276,18,0.013,20,0.135,29,0.301,32,0.01,33,0.01,34,0.006,37,0.456,40,0.54,41,0.356,54,1.886,58,0.608,59,0.387,134,1.677,139,1.513,148,0.794,162,0.894,177,0.894,221,0.714,233,1.208,235,1.74,246,3.236,292,0.894,389,0.794,391,2.263,417,0.894,432,3.987,448,2.263,450,1.74,466,2.263,521,0.894,523,1.028,533,1.74,542,2.263,558,1.028,569,1.028,588,0.794,596,2.98,615,4.992,616,3.191,617,2.711,618,1.231,619,1.231,620,1.231,621,4.526,622,5.045,623,3.191,624,3.57,625,1.231,626,5.225,627,4.682,628,1.231,629,1.231,630,1.231,631,1.231,632,4.682,633,5.045,634,3.877,635,4.682,636,2.085,637,1.231,638,3.57,639,1.231,640,1.231,641,1.231,642,3.191,643,1.231,644,4.526,645,3.191,646,2.085,647,1.231,648,2.711,649,2.085,650,2.085,651,1.231,652,1.231,653,5.434,654,3.191,655,2.085,656,1.231,657,2.085,658,1.231,659,1.231,660,1.231,661,1.231,662,1.231,663,1.231,664,1.231,665,2.711,666,1.231,667,2.711,668,2.085,669,5.045,670,1.231,671,1.231,672,3.877,673,4.526,674,3.191,675,2.085,676,2.711,677,3.877,678,1.231,679,1.231,680,1.231,681,1.231,682,1.231,683,2.085,684,1.231,685,1.231,686,1.231,687,6.002,688,2.711,689,2.085,690,1.231,691,4.526,692,2.085,693,1.231,694,3.57,695,2.085,696,1.231,697,5.434,698,1.231,699,1.231,700,1.231,701,1.231,702,1.231,703,1.231,704,2.085,705,1.231,706,1.231,707,1.231,708,1.231,709,1.231,710,3.191,711,3.57,712,1.231,713,2.085,714,3.191,715,2.085,716,1.231,717,3.57,718,2.085,719,1.231,720,1.231,721,2.711,722,1.231,723,1.231,724,1.231,725,1.231,726,2.085,727,1.028,728,1.231,729,1.231,730,2.711,731,1.231,732,1.231,733,2.711,734,1.231,735,1.231,736,1.231,737,3.191,738,4.682,739,1.231,740,1.231,741,2.085,742,4.344,743,2.711,744,3.191,745,2.085,746,2.085,747,2.085,748,2.085,749,2.711,750,2.085,751,2.711,752,2.085,753,2.085,754,2.085,755,2.085,756,1.028,757,2.085,758,1.231,759,1.231,760,3.57,761,4.131,762,2.711,763,2.085,764,1.231,765,1.231,766,2.085,767,2.085,768,1.231,769,1.231,770,2.711,771,2.085,772,1.231,773,1.231,774,1.231,775,2.711,776,1.231,777,1.231,778,1.231,779,2.085,780,2.085,781,1.231,782,1.231,783,1.231,784,1.231,785,1.231,786,1.231,787,1.231,788,2.085,789,1.231,790,1.231,791,1.231,792,1.231,793,1.231,794,1.231,795,1.231,796,1.231,797,2.711,798,1.231,799,2.711,800,1.231,801,1.231,802,1.231,803,1.231,804,4.344,805,1.231,806,1.231,807,1.231,808,1.231,809,1.231,810,3.191,811,2.085,812,3.191,813,1.231,814,1.231,815,1.231,816,1.231,817,1.231,818,2.711,819,1.231,820,1.231,821,2.085,822,2.085,823,1.231,824,1.231,825,1.231,826,2.085,827,1.231,828,1.231,829,3.57,830,1.231,831,1.231,832,1.231,833,1.231,834,1.231,835,1.231,836,1.231,837,2.711,838,3.191,839,1.231,840,1.231,841,1.231,842,1.231,843,1.231,844,1.231,845,1.231,846,1.231,847,1.231,848,1.231,849,1.231,850,2.085,851,1.231,852,1.231,853,2.085,854,1.231,855,1.231,856,3.191,857,1.231,858,1.231,859,1.231,860,1.231,861,1.231,862,1.231,863,1.231,864,3.191,865,2.711,866,2.711,867,2.711,868,2.085,869,2.085,870,2.711,871,2.085,872,2.085,873,2.085,874,2.085,875,1.231,876,1.231,877,1.231,878,1.231,879,1.231,880,1.231,881,1.231,882,1.231,883,1.231,884,2.085,885,1.231,886,1.231,887,1.231,888,1.231,889,3.57,890,1.231,891,1.231,892,1.231,893,1.231,894,1.231,895,1.231,896,1.231,897,1.231,898,3.57,899,1.231,900,1.231,901,1.231,902,1.231,903,1.231,904,1.028,905,1.231,906,1.231,907,1.231,908,1.231,909,1.231,910,1.231,911,1.231,912,1.231,913,1.231,914,1.231,915,1.231,916,1.231,917,2.711,918,1.231,919,1.231,920,1.231,921,1.231,922,1.231,923,2.085,924,1.231,925,1.231,926,1.231,927,1.231,928,1.231,929,1.231,930,1.231,931,1.231,932,1.231,933,1.231,934,1.231,935,1.231,936,1.231,937,1.231,938,1.231,939,2.085,940,1.231,941,1.231,942,1.231,943,2.085,944,2.085,945,1.231,946,1.231,947,1.231,948,1.231,949,1.231,950,1.231,951,1.231,952,1.231,953,1.231,954,1.231,955,1.231,956,1.231,957,1.231,958,1.231,959,1.231,960,1.231,961,1.231,962,1.231,963,1.231,964,1.231,965,1.231,966,1.231,967,1.231]],["title/modules.html",[330,3.185]],["body/modules.html",[18,0.029,32,0.025,33,0.029,34,0.025,329,3.243,330,3.653,588,3.243,968,5.032,969,5.032]],["title/overview.html",[970,3.662]],["body/overview.html",[2,1.512,18,0.028,32,0.024,33,0.028,34,0.024,37,1.784,221,2.791,328,4.093,344,3.495,346,4.019,353,3.495,483,3.495,568,4.019,904,4.019,970,4.019,971,4.815,972,5.638,973,4.815,974,4.815,975,4.815]],["title/todo.html",[382,1.577,383,1.577,976,2.271]],["body/todo.html",[18,0.031,32,0.021,33,0.026,34,0.021,41,1.714,44,1.343,62,1.274,63,1.938,71,2.304,110,1.877,124,3.044,175,3.044,200,2.479,219,3.57,233,3.635,254,2.479,387,3.105,389,2.757,423,3.57,521,4.125,588,3.385,595,5.077,727,3.57,756,3.57,976,4.744,977,4.277,978,4.277,979,4.277,980,4.277,981,4.277]],["title/miscellaneous/variables.html",[510,1.43,982,3.244]],["body/miscellaneous/variables.html",[6,0.4,10,0.462,18,0.03,31,0.739,32,0.024,33,0.028,34,0.024,38,1.933,39,2.267,74,1.388,75,1.778,91,1.339,92,0.985,93,2.3,95,2.3,510,2.523,512,4.006,982,4.006]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":549,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.2",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["0.7",{"_index":543,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["0.8.2",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":394,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["05",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.13.0",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":974,"title":{},"body":{"overview.html":{}}}],["12.0.2",{"_index":609,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":617,"title":{},"body":{"license.html":{}}}],["2/2",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["2004",{"_index":619,"title":{},"body":{"license.html":{}}}],["2020",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":438,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["5.2.0",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":660,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["6.5.4",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["6832",{"_index":553,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":975,"title":{},"body":{"overview.html":{}}}],["80f7bf8",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":630,"title":{},"body":{"license.html":{}}}],["9.0.0",{"_index":504,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.1.9",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["9.2.4",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["9/node",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":842,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":920,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":917,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":611,"title":{},"body":{"index.html":{}}}],["act",{"_index":927,"title":{},"body":{"license.html":{}}}],["acting",{"_index":640,"title":{},"body":{"license.html":{}}}],["acts",{"_index":896,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":828,"title":{},"body":{"license.html":{}}}],["adding",{"_index":575,"title":{},"body":{"index.html":{}}}],["additional",{"_index":829,"title":{},"body":{"license.html":{}}}],["additions",{"_index":712,"title":{},"body":{"license.html":{}}}],["advised",{"_index":915,"title":{},"body":{"license.html":{}}}],["against",{"_index":780,"title":{},"body":{"license.html":{}}}],["agent",{"_index":552,"title":{},"body":{"index.html":{}}}],["agree",{"_index":930,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":867,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":847,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":785,"title":{},"body":{"license.html":{}}}],["alone",{"_index":776,"title":{},"body":{"license.html":{}}}],["along",{"_index":819,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":827,"title":{},"body":{"license.html":{}}}],["already",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":577,"title":{},"body":{"index.html":{}}}],["always",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["always_sampler",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":613,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":800,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":807,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":813,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":924,"title":{},"body":{"license.html":{}}}],["angular",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular/animations",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":701,"title":{},"body":{"license.html":{}}}],["apache",{"_index":616,"title":{},"body":{"license.html":{}}}],["api",{"_index":193,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":539,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.span",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":532,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":564,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":562,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":590,"title":{},"body":{"index.html":{}}}],["appand",{"_index":581,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":563,"title":{},"body":{"index.html":{}}}],["appear",{"_index":824,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":695,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":865,"title":{},"body":{"license.html":{}}}],["application",{"_index":174,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["applies",{"_index":769,"title":{},"body":{"license.html":{}}}],["apply",{"_index":939,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":352,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":949,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":882,"title":{},"body":{"license.html":{}}}],["archives",{"_index":958,"title":{},"body":{"license.html":{}}}],["arising",{"_index":903,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":936,"title":{},"body":{"license.html":{}}}],["associated",{"_index":887,"title":{},"body":{"license.html":{}}}],["assume",{"_index":885,"title":{},"body":{"license.html":{}}}],["async",{"_index":556,"title":{},"body":{"index.html":{}}}],["attach",{"_index":940,"title":{},"body":{"license.html":{}}}],["attached",{"_index":693,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":810,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":636,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":688,"title":{},"body":{"license.html":{}}}],["available",{"_index":588,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["b3,httptrace,composite,jaeger",{"_index":560,"title":{},"body":{"index.html":{}}}],["b3propagator",{"_index":16,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["b3propagatorservice",{"_index":1,"title":{"injectables/B3PropagatorService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b63afc1",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":569,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":869,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":717,"title":{},"body":{"license.html":{}}}],["below",{"_index":696,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":664,"title":{},"body":{"license.html":{}}}],["between",{"_index":548,"title":{},"body":{"index.html":{}}}],["bind",{"_index":709,"title":{},"body":{"license.html":{}}}],["body",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":941,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":51,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":554,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":568,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":944,"title":{},"body":{"license.html":{}}}],["break",{"_index":155,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["browse",{"_index":969,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":493,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":573,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":802,"title":{},"body":{"license.html":{}}}],["case",{"_index":153,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["cause",{"_index":650,"title":{},"body":{"license.html":{}}}],["changed",{"_index":806,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":384,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":902,"title":{},"body":{"license.html":{}}}],["charge",{"_index":751,"title":{},"body":{"license.html":{}}}],["choose",{"_index":918,"title":{},"body":{"license.html":{}}}],["claim",{"_index":782,"title":{},"body":{"license.html":{}}}],["claims",{"_index":771,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":448,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["collector",{"_index":44,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"todo.html":{}}}],["collector(otelcol",{"_index":541,"title":{},"body":{"index.html":{}}}],["collector.jaeger",{"_index":373,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector.otelcol",{"_index":374,"title":{},"body":{"injectables/SpanExporterService.html":{},"index.html":{}}}],["collector.zipkin",{"_index":375,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collectorconfiguration",{"_index":530,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":361,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporter(this.otelcolconfig",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfig",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":777,"title":{},"body":{"license.html":{}}}],["command",{"_index":579,"title":{},"body":{"index.html":{}}}],["comment",{"_index":950,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":912,"title":{},"body":{"license.html":{}}}],["commit",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":40,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":36,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["communication",{"_index":721,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":682,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":961,"title":{},"body":{"license.html":{}}}],["complies",{"_index":835,"title":{},"body":{"license.html":{}}}],["compose",{"_index":587,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":591,"title":{},"body":{"index.html":{}}}],["composite",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["compositepropagator",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["compositepropagatorservice",{"_index":96,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["computer",{"_index":909,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":622,"title":{},"body":{"license.html":{}}}],["config",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.collector",{"_index":372,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["config.commonconfig.propagator",{"_index":152,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["config.commonconfig.servicename",{"_index":186,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerconfig.host",{"_index":187,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["config.jaegerconfig.port",{"_index":188,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":195,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.url",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":39,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig.url",{"_index":381,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configjaeger",{"_index":182,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["configurable",{"_index":545,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":41,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":140,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":531,"title":{},"body":{"index.html":{}}}],["configured",{"_index":368,"title":{},"body":{"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["consequential",{"_index":901,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":926,"title":{},"body":{"license.html":{}}}],["console",{"_index":45,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["console.error('error",{"_index":146,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["consolespanexporter",{"_index":127,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["consolespanexporterservice",{"_index":120,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":734,"title":{},"body":{"license.html":{}}}],["const",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":786,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":98,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":184,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":99,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":179,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":830,"title":{},"body":{"license.html":{}}}],["contained",{"_index":816,"title":{},"body":{"license.html":{}}}],["content",{"_index":862,"title":{},"body":{"license.html":{}}}],["contents",{"_index":523,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":655,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":711,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":775,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":837,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":738,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":787,"title":{},"body":{"license.html":{}}}],["control",{"_index":642,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":643,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":684,"title":{},"body":{"license.html":{}}}],["copies",{"_index":794,"title":{},"body":{"license.html":{}}}],["copy",{"_index":799,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":633,"title":{},"body":{"license.html":{}}}],["correlation",{"_index":980,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":783,"title":{},"body":{"license.html":{}}}],["cours",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":465,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":571,"title":{},"body":{"index.html":{}}}],["cross",{"_index":781,"title":{},"body":{"license.html":{}}}],["current",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":858,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["damages",{"_index":898,"title":{},"body":{"license.html":{}}}],["date",{"_index":791,"title":{},"body":{"license.html":{}}}],["day",{"_index":178,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["dd7a0e5",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":612,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":932,"title":{},"body":{"license.html":{}}}],["define",{"_index":160,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":139,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"license.html":{}}}],["definitions",{"_index":625,"title":{},"body":{"license.html":{}}}],["del",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":893,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":607,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":483,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":520,"title":{},"body":{"index.html":{}}}],["deps",{"_index":145,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["derivative",{"_index":697,"title":{},"body":{"license.html":{}}}],["derived",{"_index":698,"title":{},"body":{"license.html":{}}}],["describing",{"_index":859,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["designated",{"_index":736,"title":{},"body":{"license.html":{}}}],["determining",{"_index":881,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":593,"title":{},"body":{"index.html":{}}}],["different",{"_index":834,"title":{},"body":{"license.html":{}}}],["dir",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":648,"title":{},"body":{"license.html":{}}}],["direction",{"_index":651,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":863,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":731,"title":{},"body":{"license.html":{}}}],["display",{"_index":533,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":760,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":818,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":624,"title":{},"body":{"license.html":{}}}],["doc",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":586,"title":{},"body":{"index.html":{}}}],["docs",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":631,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":466,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":948,"title":{},"body":{"license.html":{}}}],["done",{"_index":981,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["e5eb09e",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":744,"title":{},"body":{"license.html":{}}}],["easier",{"_index":956,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":699,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":702,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":718,"title":{},"body":{"license.html":{}}}],["en",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":943,"title":{},"body":{"license.html":{}}}],["end",{"_index":938,"title":{},"body":{"license.html":{}}}],["entities",{"_index":641,"title":{},"body":{"license.html":{}}}],["entity",{"_index":635,"title":{},"body":{"license.html":{}}}],["enum",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["enumerations",{"_index":511,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":565,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":566,"title":{},"body":{"index.html":{}}}],["error",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["even",{"_index":914,"title":{},"body":{"license.html":{}}}],["event",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.status",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":417,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":762,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":733,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":750,"title":{},"body":{"license.html":{}}}],["executed",{"_index":848,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":888,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":666,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":839,"title":{},"body":{"license.html":{}}}],["export",{"_index":28,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":603,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":124,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"todo.html":{}}}],["exporter.interface",{"_index":130,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.service",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["exporter.service.ts",{"_index":123,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["exporter.service.ts:16",{"_index":378,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":126,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:18",{"_index":180,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:23",{"_index":359,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:32",{"_index":369,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["exporter.service.ts:34",{"_index":379,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:37",{"_index":181,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:40",{"_index":360,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":183,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exports",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":872,"title":{},"body":{"license.html":{}}}],["f",{"_index":589,"title":{},"body":{"index.html":{}}}],["factory",{"_index":136,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["fad044a",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":910,"title":{},"body":{"license.html":{}}}],["false",{"_index":534,"title":{},"body":{"index.html":{}}}],["features",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":919,"title":{},"body":{"license.html":{}}}],["fields",{"_index":942,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":658,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":792,"title":{},"body":{"license.html":{}}}],["files",{"_index":676,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":877,"title":{},"body":{"license.html":{}}}],["fix",{"_index":599,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":797,"title":{},"body":{"license.html":{}}}],["form",{"_index":669,"title":{},"body":{"license.html":{}}}],["format",{"_index":952,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":753,"title":{},"body":{"license.html":{}}}],["function",{"_index":149,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["functions",{"_index":513,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generally",{"_index":561,"title":{},"body":{"index.html":{}}}],["generated",{"_index":683,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":125,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":12,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["getting",{"_index":382,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":978,"title":{},"body":{"todo.html":{}}}],["give",{"_index":162,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":525,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":907,"title":{},"body":{"license.html":{}}}],["governing",{"_index":966,"title":{},"body":{"license.html":{}}}],["grant",{"_index":743,"title":{},"body":{"license.html":{}}}],["granted",{"_index":668,"title":{},"body":{"license.html":{}}}],["granting",{"_index":637,"title":{},"body":{"license.html":{}}}],["grants",{"_index":746,"title":{},"body":{"license.html":{}}}],["graph",{"_index":968,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":894,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":934,"title":{},"body":{"license.html":{}}}],["header",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["here",{"_index":595,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":745,"title":{},"body":{"license.html":{}}}],["herein",{"_index":844,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":933,"title":{},"body":{"license.html":{}}}],["host",{"_index":78,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["http.interceptor",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:113",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:139",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:161",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:175",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:191",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:43",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:47",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:82",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":594,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":583,"title":{},"body":{"index.html":{}}}],["http://localhost:9090/v1/trace",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":620,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":963,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://github.com/open",{"_index":536,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":522,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":19,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["httptextpropagatorservice",{"_index":132,"title":{"injectables/HttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["httptextpropagatorservicefactory",{"_index":144,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httptextpropagatorservicefactory(config",{"_index":516,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httptrace",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["httptracecontext",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["httptracecontextpropagatorservice",{"_index":100,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["identification",{"_index":957,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":946,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":129,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":656,"title":{},"body":{"license.html":{}}}],["iii",{"_index":663,"title":{},"body":{"license.html":{}}}],["implement",{"_index":570,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":166,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":30,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["implied",{"_index":873,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["improving",{"_index":732,"title":{},"body":{"license.html":{}}}],["inability",{"_index":905,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":900,"title":{},"body":{"license.html":{}}}],["include",{"_index":542,"title":{},"body":{"index.html":{},"license.html":{}}}],["included",{"_index":692,"title":{},"body":{"license.html":{}}}],["includes",{"_index":814,"title":{},"body":{"license.html":{}}}],["including",{"_index":673,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":715,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":741,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":935,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":931,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":922,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":690,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":649,"title":{},"body":{"license.html":{}}}],["individual",{"_index":665,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":947,"title":{},"body":{"license.html":{}}}],["informational",{"_index":825,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":774,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":788,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":105,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptextpropagatorservice",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":0,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":135,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":163,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":529,"title":{},"body":{"index.html":{}}}],["installation",{"_index":524,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":778,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":713,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":200,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.module.ts",{"_index":332,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":38,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":331,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console",{"_index":121,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":159,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":161,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/jaeger",{"_index":168,"title":{},"body":{"injectables/JaegerExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol",{"_index":358,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":367,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/exporter/zipkin",{"_index":376,"title":{},"body":{"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":97,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":133,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":189,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":197,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":164,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":165,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":35,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":37,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":22,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":754,"title":{},"body":{"license.html":{}}}],["isn't",{"_index":170,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["issue",{"_index":727,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":175,"title":{},"body":{"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["jaeger's",{"_index":551,"title":{},"body":{"index.html":{}}}],["jaegercollectorconfig",{"_index":77,"title":{"interfaces/JaegerCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["jaegerconfig",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["jaegerexporter",{"_index":169,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporterservice",{"_index":167,"title":{"injectables/JaegerExporterService.html":{}},"body":{"injectables/JaegerExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerhttptracepropagator",{"_index":106,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":196,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":101,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerpropagator",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["jaegerpropagatorconfig",{"_index":82,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":618,"title":{},"body":{"license.html":{}}}],["js",{"_index":503,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":538,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["json.stringify(event.error",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":518,"title":{},"body":{"index.html":{}}}],["key",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["kind",{"_index":871,"title":{},"body":{"license.html":{}}}],["language",{"_index":965,"title":{},"body":{"license.html":{}}}],["law",{"_index":866,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":784,"title":{},"body":{"license.html":{}}}],["legal",{"_index":638,"title":{},"body":{"license.html":{}}}],["legend",{"_index":971,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":889,"title":{},"body":{"license.html":{}}}],["liable",{"_index":897,"title":{},"body":{"license.html":{}}}],["library",{"_index":519,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":772,"title":{},"body":{"license.html":{}}}],["license",{"_index":615,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":832,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":960,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":789,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":632,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":874,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":967,"title":{},"body":{"license.html":{}}}],["limited",{"_index":674,"title":{},"body":{"license.html":{}}}],["link",{"_index":708,"title":{},"body":{"license.html":{}}}],["list",{"_index":979,"title":{},"body":{"todo.html":{}}}],["lists",{"_index":725,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":779,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":351,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["localhost",{"_index":550,"title":{},"body":{"index.html":{}}}],["loss",{"_index":906,"title":{},"body":{"license.html":{}}}],["losses",{"_index":913,"title":{},"body":{"license.html":{}}}],["made",{"_index":689,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":724,"title":{},"body":{"license.html":{}}}],["make",{"_index":765,"title":{},"body":{"license.html":{}}}],["making",{"_index":671,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":911,"title":{},"body":{"license.html":{}}}],["managed",{"_index":729,"title":{},"body":{"license.html":{}}}],["management",{"_index":652,"title":{},"body":{"license.html":{}}}],["manager",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["marked",{"_index":735,"title":{},"body":{"license.html":{}}}],["marks",{"_index":854,"title":{},"body":{"license.html":{}}}],["matching",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":627,"title":{},"body":{"license.html":{}}}],["means",{"_index":646,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":679,"title":{},"body":{"license.html":{}}}],["media",{"_index":685,"title":{},"body":{"license.html":{}}}],["medium",{"_index":795,"title":{},"body":{"license.html":{}}}],["meet",{"_index":796,"title":{},"body":{"license.html":{}}}],["member",{"_index":604,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":876,"title":{},"body":{"license.html":{}}}],["merely",{"_index":707,"title":{},"body":{"license.html":{}}}],["method",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":510,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":672,"title":{},"body":{"license.html":{}}}],["modified",{"_index":801,"title":{},"body":{"license.html":{}}}],["modify",{"_index":826,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":831,"title":{},"body":{"license.html":{}}}],["module",{"_index":328,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":330,"title":{"modules.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["moment",{"_index":172,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["more",{"_index":521,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":356,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":853,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":601,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":773,"title":{},"body":{"license.html":{}}}],["need",{"_index":606,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":892,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":895,"title":{},"body":{"license.html":{}}}],["new",{"_index":31,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngmodule",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ngx",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":602,"title":{},"body":{"index.html":{}}}],["non",{"_index":749,"title":{},"body":{"license.html":{}}}],["noop",{"_index":142,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"miscellaneous/functions.html":{}}}],["noophttptextpropagator",{"_index":199,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{}}}],["noophttptextpropagatorservice",{"_index":141,"title":{"injectables/NoopHttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normally",{"_index":823,"title":{},"body":{"license.html":{}}}],["notable",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":843,"title":{},"body":{"license.html":{}}}],["notice",{"_index":691,"title":{},"body":{"license.html":{}}}],["notices",{"_index":804,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":841,"title":{},"body":{"license.html":{}}}],["npm",{"_index":528,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["number",{"_index":53,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["object",{"_index":677,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":923,"title":{},"body":{"license.html":{}}}],["observable",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":962,"title":{},"body":{"license.html":{}}}],["offer",{"_index":766,"title":{},"body":{"license.html":{}}}],["ok",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":177,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["open",{"_index":582,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":24,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/core",{"_index":25,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/exporter",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{}}}],["opentelemetry/tracing",{"_index":131,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["opentelemetry/web",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":86,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":201,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":329,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":567,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":527,"title":{},"body":{"index.html":{}}}],["operationnal",{"_index":171,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["optional",{"_index":43,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["origin",{"_index":860,"title":{},"body":{"license.html":{}}}],["original",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["otelcol,zipkin,jaeger",{"_index":559,"title":{},"body":{"index.html":{}}}],["otelcolconfig",{"_index":90,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexporterservice",{"_index":357,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["otelcollectorconfig",{"_index":72,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["out",{"_index":904,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":661,"title":{},"body":{"license.html":{}}}],["overide",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":970,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":634,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":657,"title":{},"body":{"license.html":{}}}],["package",{"_index":482,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":955,"title":{},"body":{"license.html":{}}}],["param",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameters",{"_index":103,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["parentmodule",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parser",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":812,"title":{},"body":{"license.html":{}}}],["particular",{"_index":878,"title":{},"body":{"license.html":{}}}],["party",{"_index":822,"title":{},"body":{"license.html":{}}}],["patent",{"_index":761,"title":{},"body":{"license.html":{}}}],["percent",{"_index":659,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":546,"title":{},"body":{"index.html":{}}}],["perform",{"_index":758,"title":{},"body":{"license.html":{}}}],["permission",{"_index":851,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":667,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":747,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":811,"title":{},"body":{"license.html":{}}}],["places",{"_index":817,"title":{},"body":{"license.html":{}}}],["port",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["possibility",{"_index":916,"title":{},"body":{"license.html":{}}}],["power",{"_index":647,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":670,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":756,"title":{},"body":{"license.html":{},"todo.html":{}}}],["present",{"_index":176,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["printed",{"_index":954,"title":{},"body":{"license.html":{}}}],["private",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["probabilitysampler",{"_index":46,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["probabilitysampler(sampleconfig",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["problem",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":855,"title":{},"body":{"license.html":{}}}],["production",{"_index":47,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":423,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":387,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../http",{"_index":514,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../opentelemetry",{"_index":512,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../span",{"_index":515,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/example",{"_index":576,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":803,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":572,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":48,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["propagator.b3",{"_index":154,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.composite",{"_index":157,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"index.html":{}}}],["propagator.httptrace",{"_index":156,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.interface",{"_index":23,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.jaeger",{"_index":158,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.service",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":8,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["propagator.service.ts:15",{"_index":190,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":198,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":14,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:19",{"_index":102,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:28",{"_index":191,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":137,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.service.ts:37",{"_index":104,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagators",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["properties",{"_index":42,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["provide",{"_index":148,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["provided",{"_index":694,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":26,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":353,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":868,"title":{},"body":{"license.html":{}}}],["public",{"_index":192,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":757,"title":{},"body":{"license.html":{}}}],["publish",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":730,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":645,"title":{},"body":{"license.html":{}}}],["randomtraceid",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["readable",{"_index":815,"title":{},"body":{"license.html":{}}}],["readme",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":937,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":857,"title":{},"body":{"license.html":{}}}],["received",{"_index":739,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":798,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":558,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":884,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":793,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":849,"title":{},"body":{"license.html":{}}}],["release",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":705,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":945,"title":{},"body":{"license.html":{}}}],["represent",{"_index":703,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":723,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":755,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":861,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":623,"title":{},"body":{"license.html":{}}}],["request",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":856,"title":{},"body":{"license.html":{}}}],["reset",{"_index":973,"title":{},"body":{"overview.html":{}}}],["response",{"_index":574,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":929,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":880,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":678,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":808,"title":{},"body":{"license.html":{}}}],["return",{"_index":15,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":17,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":700,"title":{},"body":{"license.html":{}}}],["rights",{"_index":925,"title":{},"body":{"license.html":{}}}],["risks",{"_index":886,"title":{},"body":{"license.html":{}}}],["root",{"_index":27,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":752,"title":{},"body":{"license.html":{}}}],["run",{"_index":526,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":953,"title":{},"body":{"license.html":{}}}],["sample",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":544,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":764,"title":{},"body":{"license.html":{}}}],["sections",{"_index":628,"title":{},"body":{"license.html":{}}}],["see",{"_index":389,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":767,"title":{},"body":{"license.html":{}}}],["send",{"_index":535,"title":{},"body":{"index.html":{}}}],["sending",{"_index":597,"title":{},"body":{"index.html":{}}}],["sent",{"_index":722,"title":{},"body":{"license.html":{}}}],["separable",{"_index":706,"title":{},"body":{"license.html":{}}}],["separate",{"_index":846,"title":{},"body":{"license.html":{}}}],["service",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":49,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/http",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":626,"title":{},"body":{"license.html":{}}}],["shares",{"_index":662,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":675,"title":{},"body":{"license.html":{}}}],["sole",{"_index":928,"title":{},"body":{"license.html":{}}}],["solely",{"_index":879,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":122,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('error",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.addevent('response",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.context().traceid",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('http.status_code",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":128,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spanexporterservice",{"_index":214,"title":{"injectables/SpanExporterService.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["spanexporterservicefactory",{"_index":371,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spanexporterservicefactory(config",{"_index":517,"title":{},"body":{"miscellaneous/functions.html":{}}}],["special",{"_index":899,"title":{},"body":{"license.html":{}}}],["specific",{"_index":964,"title":{},"body":{"license.html":{}}}],["specified",{"_index":540,"title":{},"body":{"index.html":{}}}],["stackcontextmanager",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":578,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":580,"title":{},"body":{"index.html":{}}}],["started",{"_index":383,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":840,"title":{},"body":{"license.html":{}}}],["stated",{"_index":763,"title":{},"body":{"license.html":{}}}],["statement",{"_index":833,"title":{},"body":{"license.html":{}}}],["statements",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":333,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":805,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":908,"title":{},"body":{"license.html":{}}}],["string",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":450,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":759,"title":{},"body":{"license.html":{}}}],["submission",{"_index":836,"title":{},"body":{"license.html":{}}}],["submit",{"_index":716,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":714,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":740,"title":{},"body":{"license.html":{}}}],["such",{"_index":653,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":845,"title":{},"body":{"license.html":{}}}],["support",{"_index":921,"title":{},"body":{"license.html":{}}}],["switch",{"_index":151,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["sync",{"_index":557,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":951,"title":{},"body":{"license.html":{}}}],["systems",{"_index":726,"title":{},"body":{"license.html":{}}}],["table",{"_index":481,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":977,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":537,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":790,"title":{},"body":{"license.html":{}}}],["terms",{"_index":621,"title":{},"body":{"license.html":{}}}],["test",{"_index":434,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":134,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["theory",{"_index":890,"title":{},"body":{"license.html":{}}}],["there's",{"_index":585,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":710,"title":{},"body":{"license.html":{}}}],["third",{"_index":821,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.configjaeger",{"_index":185,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["this.contextmanager",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":194,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(config.commonconfig.probabilitysampler",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptextpropagatorservice.getpropagator",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":380,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":770,"title":{},"body":{"license.html":{}}}],["through",{"_index":629,"title":{},"body":{"license.html":{}}}],["throw",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":605,"title":{},"body":{"index.html":{}}}],["title",{"_index":875,"title":{},"body":{"license.html":{}}}],["todo",{"_index":976,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["tort",{"_index":891,"title":{},"body":{"license.html":{}}}],["trace",{"_index":52,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":547,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":728,"title":{},"body":{"license.html":{}}}],["trade",{"_index":852,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":809,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":850,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":768,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":680,"title":{},"body":{"license.html":{}}}],["translation",{"_index":681,"title":{},"body":{"license.html":{}}}],["troubleshoot",{"_index":598,"title":{},"body":{"index.html":{}}}],["true",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts1086",{"_index":610,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":600,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":50,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":608,"title":{},"body":{"index.html":{}}}],["types",{"_index":686,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":614,"title":{},"body":{"index.html":{}}}],["typo",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["under",{"_index":644,"title":{},"body":{"license.html":{}}}],["union",{"_index":639,"title":{},"body":{"license.html":{}}}],["unless",{"_index":838,"title":{},"body":{"license.html":{}}}],["unused",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":592,"title":{},"body":{"index.html":{}}}],["url",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["use",{"_index":54,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":355,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["used",{"_index":138,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"index.html":{}}}],["usefactory",{"_index":143,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["usevalue",{"_index":354,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":883,"title":{},"body":{"license.html":{}}}],["value",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":982,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":719,"title":{},"body":{"license.html":{}}}],["version",{"_index":391,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["via",{"_index":555,"title":{},"body":{"index.html":{}}}],["void",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":584,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":870,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":864,"title":{},"body":{"license.html":{}}}],["web",{"_index":173,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["webtracerprovider",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":820,"title":{},"body":{"license.html":{}}}],["whether",{"_index":654,"title":{},"body":{"license.html":{}}}],["whole",{"_index":704,"title":{},"body":{"license.html":{}}}],["within",{"_index":742,"title":{},"body":{"license.html":{}}}],["without",{"_index":596,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":687,"title":{},"body":{"license.html":{}}}],["works",{"_index":432,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":748,"title":{},"body":{"license.html":{}}}],["writing",{"_index":737,"title":{},"body":{"license.html":{}}}],["written",{"_index":720,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["yyyy",{"_index":959,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["zipkincollectorconfig",{"_index":80,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":377,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporterservice",{"_index":370,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":972,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return HttpTextPropagator as B3Propagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collector\n                                \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                            Optional\n                                        propagator\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collector\n                                    \n                                \n                                \n                                    \n                                        collector:         Collector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Collector\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    collector \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        propagator\n                                    \n                                \n                                \n                                    \n                                        propagator:         Propagator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Propagator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    propagator \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9090/v1/trace)\n   */\n  url?: string;\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /** host */\n  host?: string;\n  /** port */\n  port?: number;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:37\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n  B3Propagator,\n  HttpTraceContext,\n} from '@opentelemetry/core';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return HttpTextPropagator as CompositePropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTextPropagatorService.html":{"url":"injectables/HttpTextPropagatorService.html","title":"injectable - HttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTextPropagatorService\nInjected service with factory to get a propagator by configuration\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { Injectable } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  Propagator,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { NoopHttpTextPropagatorService } from './noop-http-text-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n/**\n * HttpTextPropagatorService\n * Injected service with factory to get a propagator by configuration\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: httpTextPropagatorServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    HttpTraceContextPropagatorService,\n    B3PropagatorService,\n    CompositePropagatorService,\n    NoopHttpTextPropagatorService,\n    JaegerHttpTracePropagatorService,\n  ],\n})\nexport class HttpTextPropagatorService implements IPropagator {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getPropagator(): HttpTextPropagator {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * httpTextPropagatorServiceFactory\n * Provide a factory to have a propagator service\n * @param config config\n * @param httpTraceContextPropagatorService httpTraceContext\n * @param b3PropagatorService propagator\n * @param compositePropagatorService  composite\n * @param noopHttpTextPropagatorService noop\n *\n */\nexport function httpTextPropagatorServiceFactory(\n  config: OpenTelemetryConfig,\n  httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n  b3PropagatorService: B3PropagatorService,\n  compositePropagatorService: CompositePropagatorService,\n  noopHttpTextPropagatorService: NoopHttpTextPropagatorService,\n  jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n) {\n  let propagator: IPropagator = null;\n  switch (config.commonConfig.propagator) {\n    case Propagator.b3:\n      propagator = b3PropagatorService;\n      break;\n    case Propagator.httpTrace:\n      propagator = httpTraceContextPropagatorService;\n      break;\n    case Propagator.composite:\n      propagator = compositePropagatorService;\n      break;\n    case Propagator.jaeger:\n      propagator = jaegerHttpTracePropagatorService;\n      break;\n    default:\n      propagator = noopHttpTextPropagatorService;\n      break;\n  }\n  return propagator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerCollectorConfig.html":{"url":"interfaces/JaegerCollectorConfig.html","title":"interface - JaegerCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Jaeger Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        host\n                                \n                                \n                                            Optional\n                                        port\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        host\n                                    \n                                \n                                \n                                    \n                                        host:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    host \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    port \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9090/v1/trace)\n   */\n  url?: string;\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /** host */\n  host?: string;\n  /** port */\n  port?: number;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerExporterService.html":{"url":"injectables/JaegerExporterService.html","title":"injectable - JaegerExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerExporterService class\nJaegerExporter isn't operationnal for the moment in web application.\nit's present if one day..\nFor the moment return a ConsoleSpanExporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:37\n                \n            \n\n\n            \n                \n                    Return for the moment a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * JaegerExporterService class\n * JaegerExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n * For the moment return a ConsoleSpanExporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerExporterService implements IExporter {\n  // private configJaeger: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.configJaeger = {\n      serviceName: config.commonConfig.serviceName,\n      host: config.jaegerConfig.host,\n      port: config.jaegerConfig.port,\n    };*/\n  }\n\n  /**\n   * Return for the moment a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:28\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9090/v1/trace)\n   */\n  url?: string;\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /** host */\n  host?: string;\n  /** port */\n  port?: number;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopHttpTextPropagatorService.html":{"url":"injectables/NoopHttpTextPropagatorService.html","title":"injectable - NoopHttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopHttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopHttpTextPropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as NoopHttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator, NoopHttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopHttpTextPropagatorService implements IPropagator {\n  /**\n   * Return an NoopHttpTextPropagator\n   * @return HttpTextPropagator as NoopHttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerConfig:         JaegerCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9090/v1/trace)\n   */\n  url?: string;\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /** host */\n  host?: string;\n  /** port */\n  port?: number;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, httpTextPropagatorService: HttpTextPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:47\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        httpTextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:191\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ProbabilitySampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:113\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     api.Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: api.Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:139\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            api.Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:161\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:175\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:82\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new StackContextManager()\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:47\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:43\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  ALWAYS_SAMPLER,\n  setActiveSpan,\n  ProbabilitySampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { HttpTextPropagatorService } from '../services/propagator/http-text-propagator.service';\nimport { randomTraceId } from '@opentelemetry/core';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager = new StackContextManager();\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param httpTextPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(HttpTextPropagatorService)\n    private httpTextPropagatorService: HttpTextPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(config.commonConfig.probabilitySampler),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.httpTextPropagatorService.getPropagator(),\n      contextManager: this.contextManager,\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const span: api.Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('error', { body: JSON.stringify(event.error) });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): api.Span {\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n          },\n        },\n        this.contextManager.active()\n      );\n    span.context().traceId = randomTraceId();\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: api.Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): ProbabilitySampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return ALWAYS_SAMPLER;\n    } else {\n      return new ProbabilitySampler(sampleConfig);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9090/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9090/v1/trace)\n   */\n  url?: string;\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /** host */\n  host?: string;\n  /** port */\n  port?: number;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:40\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectorExporterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport {\n  CollectorExporterConfig,\n  CollectorExporter,\n} from '@opentelemetry/exporter-collector';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfig\n   */\n  private otelcolConfig: CollectorExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpanExporterService.html":{"url":"injectables/SpanExporterService.html","title":"injectable - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                An Angular Factory to have the configured collector\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:32\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\nimport { Injectable } from '@angular/core';\nimport { JaegerExporterService } from './jaeger-exporter.service';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\nimport {\n  OpenTelemetryConfig,\n  Collector,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\n\n/**\n * An Angular Factory to have the configured collector\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: spanExporterServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    JaegerExporterService,\n    OtelcolExporterService,\n    ZipkinExporterService,\n    ConsoleSpanExporterService,\n  ],\n})\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getExporter(): SpanExporter {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * Factory to return Service configured\n * @param config config\n * @param jaegerExporterService jaeger\n * @param otelcolExporterService otelcol\n * @param zipkinExporterService zipkin\n * @param consoleSpanExporter console\n */\nexport function spanExporterServiceFactory(\n  config: OpenTelemetryConfig,\n  jaegerExporterService: JaegerExporterService,\n  otelcolExporterService: OtelcolExporterService,\n  zipkinExporterService: ZipkinExporterService,\n  consoleSpanExporter: ConsoleSpanExporterService\n) {\n  let exporter: IExporter = null;\n  switch (config.commonConfig.collector) {\n    case Collector.jaeger:\n      exporter = jaegerExporterService;\n      break;\n    case Collector.otelcol:\n      exporter = otelcolExporterService;\n      break;\n    case Collector.zipkin:\n      exporter = zipkinExporterService;\n      break;\n    default:\n      exporter = consoleSpanExporter;\n      break;\n  }\n  return exporter;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9090/v1/trace)\n   */\n  url?: string;\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /** host */\n  host?: string;\n  /** port */\n  port?: number;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporter isn't operationnal for the moment in web application.\nit's present if one day..\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:34\n                \n            \n\n\n            \n                \n                    Return for the moment a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ZipkinExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  // private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig.url,\n    };*/\n  }\n\n  /**\n   * Return for the moment a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n            \n            injectable\n            JaegerExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            injectable\n            SpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            function\n            spanExporterServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            injectable\n            HttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            function\n            httpTextPropagatorServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n            \n            injectable\n            NoopHttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.9\n        \n            @angular/cdk : ^9.2.4\n        \n            @angular/common : ^9.1.9\n        \n            @angular/compiler : ^9.1.9\n        \n            @angular/core : ^9.1.9\n        \n            @angular/forms : ^9.1.9\n        \n            @angular/material : ^9.2.4\n        \n            @angular/platform-browser : ^9.1.9\n        \n            @angular/platform-browser-dynamic : ^9.1.9\n        \n            @angular/router : ^9.1.9\n        \n            @opentelemetry/exporter-collector : ^0.8.3\n        \n            @opentelemetry/propagator-jaeger : ^0.8.0\n        \n            @opentelemetry/web : ^0.8.3\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.13.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Collector   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            Propagator   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n            \n                \n                    \n                        \n                        Collector\n                    \n                \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : jaeger\n                            \n                        \n                        \n                            \n                                 zipkin\n                            \n                        \n                        \n                            \n                                Value : zipkin\n                            \n                        \n                        \n                            \n                                 otelcol\n                            \n                        \n                        \n                            \n                                Value : otelcol\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Propagator\n                    \n                \n                        \n                            \n                                 b3\n                            \n                        \n                        \n                            \n                                Value : B3Propagator\n                            \n                        \n                        \n                            \n                                 httpTrace\n                            \n                        \n                        \n                            \n                                Value : HttpTraceContext\n                            \n                        \n                        \n                            \n                                 composite\n                            \n                        \n                        \n                            \n                                Value : CompositePropagator\n                            \n                        \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : JaegerPropagator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpTextPropagatorServiceFactory   (projects/.../http-text-propagator.service.ts)\n                        \n                        \n                            spanExporterServiceFactory   (projects/.../span-exporter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            httpTextPropagatorServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nhttpTextPropagatorServiceFactory(config, httpTraceContextPropagatorService, b3PropagatorService, compositePropagatorService, noopHttpTextPropagatorService, jaegerHttpTracePropagatorService)\n                \n            \n\n\n\n\n            \n                \n                    httpTextPropagatorServiceFactory\nProvide a factory to have a propagator service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    httpTraceContextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        httpTraceContext\n\n                                    \n                                \n                                \n                                    b3PropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        propagator\n\n                                    \n                                \n                                \n                                    compositePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        composite\n\n                                    \n                                \n                                \n                                    noopHttpTextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        noop\n\n                                    \n                                \n                                \n                                    jaegerHttpTracePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            spanExporterServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nspanExporterServiceFactory(config, jaegerExporterService, otelcolExporterService, zipkinExporterService, consoleSpanExporter)\n                \n            \n\n\n\n\n            \n                \n                    Factory to return Service configured\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    jaegerExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jaeger\n\n                                    \n                                \n                                \n                                    otelcolExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        otelcol\n\n                                    \n                                \n                                \n                                    zipkinExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zipkin\n\n                                    \n                                \n                                \n                                    consoleSpanExporter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library use opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nZipkin Collector Configuration\nJaeger Collector Configuration\n\n\nAngular Module\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collectorConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpentelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  jaegerConfig?: JaegerCollectorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      collector: Collector.otelcol, //Enum to specified the collector : OpenTelemetry Collector(otelcol), Zipkin (zipkin), Jaeger (jaeger)\n      propagator: Propagator.composite, // Enum to propagator : B3 (b3), HttpTraceContext (httpTrace), Jaeger Propagator (jaeger) and Composite that include b3, httpTrace and Jaeger (composite)\n      probabilitySampler: 0.7, //Samples a configurable percentage of traces, value between 0 to 1\n    },\n    otelcolConfig: {\n      url: 'http://localhost:9090/v1/trace', //URL of opentelemetry collector\n    },\n    zipkinConfig: {\n      url: 'http://localhost:9411/api/v2/spans', //url of zipkin collector\n    },\n    jaegerConfig: {\n      host: 'localhost', //Host and port of jaeger's agent.\n      port: 6832,\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\ncollector: (Enum) use Enum Collector (otelcol,zipkin,jaeger)\npropagator: (Enum) use Propagator Enum (b3,httpTrace,composite,jaeger)\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:9090/v1/trace)\n\nZipkin Collector Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\n\nJaeger Collector Configuration\n\nhost: (string) host jaeger agent\nport: (string) port jaeger agent\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header\n\nAngular Module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
