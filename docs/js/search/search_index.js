var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/modules/B3PropagatorModule.html",[0,1.216,1,1.886]],["body/modules/B3PropagatorModule.html",[1,3.045,2,1.461,3,0.388,4,0.388,5,0.286,6,0.336,7,3.064,8,2.455,9,2.455,10,0.473,11,0.032,12,2.131,13,0.556,14,2.526,15,1.868,16,3.045,17,2.725,18,2.526,19,2.131,20,1.718,21,1.583,22,1.583,23,1.718,24,1.583,25,1.718,26,1.868,27,0.388,28,0.498,29,0.02,30,0.025,31,0.02]],["title/injectables/B3PropagatorService.html",[16,1.886,32,0.749]],["body/injectables/B3PropagatorService.html",[3,0.356,4,0.356,5,0.263,6,0.395,7,3.603,8,2.887,10,0.459,11,0.032,13,0.511,16,3.356,27,0.356,28,0.457,29,0.018,30,0.023,31,0.018,32,1.146,33,1.717,34,1.872,35,0.895,36,0.754,37,1.464,38,2.785,39,1.055,40,3.232,41,1.702,42,6.079,43,1.144,44,2.878,45,2.021,46,2.049,47,1.579,48,2.256,49,1.717,50,1.717,51,1.455,52,0.754]],["title/interfaces/CommonCollectorConfig.html",[53,0.882,54,1.565]],["body/interfaces/CommonCollectorConfig.html",[3,0.26,4,0.26,5,0.192,6,0.226,10,0.226,11,0.032,13,0.374,27,0.492,29,0.013,30,0.019,31,0.013,35,0.654,36,0.551,52,0.551,53,1.381,54,2.252,55,1.255,56,1.498,57,1.498,58,2.122,59,1.904,60,1.939,61,2.087,62,2.821,63,2.939,64,2.939,65,2.939,66,3.184,67,1.904,68,1.497,69,3.184,70,1.939,71,2.594,72,2.594,73,1.39,74,1.939,75,1.83,76,1.498,77,1.255,78,1.939,79,2.122,80,1.154,81,1.498,82,1.649,83,2.336,84,2.122,85,1.649,86,2.585,87,1.368,88,1.154,89,1.498,90,1.39,91,2.336,92,2.122,93,1.507,94,1.154,95,1.368,96,1.649,97,1.649]],["title/modules/CompositePropagatorModule.html",[0,1.216,98,2.094]],["body/modules/CompositePropagatorModule.html",[1,2.235,2,1.33,3,0.353,4,0.353,5,0.26,6,0.306,8,2.235,9,2.235,10,0.492,11,0.032,12,2.009,13,0.506,14,2.381,15,1.701,17,2.481,18,2.381,19,2.009,20,2.341,21,1.442,22,1.442,23,1.564,24,1.442,25,1.564,26,1.701,27,0.353,28,0.453,29,0.018,30,0.023,31,0.018,68,1.696,98,3.186,99,2.789,100,2.789,101,3.186,102,3.202,103,5.43,104,2.235,105,2.009,106,2.235,107,2.235,108,1.701,109,2.235]],["title/injectables/CompositePropagatorService.html",[32,0.749,101,2.094]],["body/injectables/CompositePropagatorService.html",[3,0.285,4,0.285,5,0.21,6,0.39,8,1.805,10,0.467,11,0.032,13,0.409,16,3.33,17,2.004,18,2.364,20,1.994,27,0.285,28,0.366,29,0.015,30,0.02,31,0.015,32,0.988,33,1.374,34,1.498,35,0.716,36,0.603,37,1.262,38,2.548,39,1.165,41,1.557,43,0.915,44,2.673,45,1.742,46,1.64,47,1.264,48,1.805,49,1.374,50,1.374,51,1.164,52,0.603,61,1.164,67,1.164,68,1.557,73,1.074,99,3.556,100,3.556,101,3.409,105,1.742,106,1.805,108,1.374,109,1.805,110,3.071,111,3.093,112,3.413,113,3.413,114,2.253,115,1.805,116,3.093,117,5.706,118,2.004,119,3.093,120,3.163,121,3.093,122,3.093,123,2.587,124,3.093,125,3.093,126,3.093]],["title/modules/ConsoleSpanExporterModule.html",[0,1.216,127,2.094]],["body/modules/ConsoleSpanExporterModule.html",[2,1.461,3,0.388,4,0.388,5,0.286,6,0.336,10,0.473,11,0.032,12,2.131,13,0.556,14,2.526,15,1.868,22,1.583,23,1.718,24,1.583,25,1.718,26,1.868,27,0.388,28,0.498,29,0.02,30,0.025,31,0.02,62,2.037,127,3.38,128,3.064,129,3.006,130,3.517,131,3.38,132,3.8,133,2.765]],["title/injectables/ConsoleSpanExporterService.html",[32,0.749,131,2.094]],["body/injectables/ConsoleSpanExporterService.html",[3,0.355,4,0.355,5,0.262,6,0.394,10,0.435,11,0.031,13,0.51,27,0.355,28,0.456,29,0.018,30,0.023,31,0.018,32,1.143,33,1.711,35,0.893,36,0.751,37,1.461,39,1.052,41,1.7,43,1.14,49,1.711,50,1.711,51,1.45,52,0.751,80,2.017,128,3.596,129,3.045,131,3.721,134,2.496,135,2.881,136,3.721,137,3.853,138,4.803,139,3.465,140,2.617,141,2.807,142,2.042]],["title/classes/HttpTextPropagatorService.html",[19,1.32,28,0.382]],["body/classes/HttpTextPropagatorService.html",[3,0.376,4,0.376,5,0.277,6,0.409,10,0.409,11,0.031,19,2.396,21,1.927,27,0.376,28,0.483,29,0.019,30,0.024,31,0.019,34,1.976,35,0.945,36,0.796,37,1.515,38,2.841,39,1.114,41,1.208,43,1.208,44,2.709,45,2.285,46,2.164,47,1.667,51,1.927,95,2.479,143,2.973,144,3.317,145,4.081,146,3.729,147,3.729,148,2.973]],["title/modules/HttpTraceContextPropagatorModule.html",[0,1.216,104,1.886]],["body/modules/HttpTraceContextPropagatorModule.html",[2,1.432,3,0.38,4,0.38,5,0.28,6,0.329,9,2.406,10,0.47,11,0.032,12,2.105,13,0.545,14,2.495,15,1.831,18,2.495,19,2.105,20,2.105,21,1.552,22,1.552,23,1.684,24,1.552,25,1.684,26,1.831,27,0.38,28,0.488,29,0.02,30,0.024,31,0.02,68,1.663,104,3.007,105,2.296,106,2.406,112,3.007,144,2.671]],["title/injectables/HttpTraceContextPropagatorService.html",[32,0.749,112,1.886]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.348,4,0.348,5,0.256,6,0.389,10,0.455,11,0.031,13,0.499,27,0.348,28,0.446,29,0.018,30,0.023,31,0.018,32,1.128,33,1.675,34,1.826,35,0.873,36,0.735,37,1.441,38,2.759,39,1.03,40,3.153,41,1.686,43,1.116,44,2.856,45,1.989,46,1.999,47,1.54,48,2.201,49,1.675,50,1.675,51,1.42,52,0.735,68,1.686,105,2.327,106,2.841,112,3.325,144,3.154,149,4.4]],["title/interfaces/IExporter.html",[53,0.882,140,1.713]],["body/interfaces/IExporter.html",[3,0.382,4,0.382,5,0.282,6,0.413,10,0.331,11,0.031,27,0.382,29,0.02,30,0.025,31,0.02,35,0.961,36,0.809,37,1.531,39,1.133,41,1.228,43,1.228,53,1.539,55,1.843,80,2.113,135,3.444,136,3.823,139,3.665,140,2.742,142,2.2,150,3.47,151,3.768,152,4.149,153,3.768,154,5.173]],["title/interfaces/IPropagator.html",[45,1.32,53,0.882]],["body/interfaces/IPropagator.html",[3,0.388,4,0.388,5,0.286,6,0.417,10,0.336,11,0.031,27,0.388,29,0.02,30,0.025,31,0.02,35,0.974,36,0.82,37,1.544,38,2.871,39,1.148,41,1.245,43,1.245,44,2.952,45,2.131,47,1.718,53,1.548,55,1.868,88,2.422,151,3.8,153,3.8,155,3.517,156,4.206,157,4.362]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.216,107,1.886]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.432,3,0.38,4,0.38,5,0.28,6,0.329,9,2.406,10,0.47,11,0.032,12,2.105,13,0.545,14,2.495,15,1.831,18,2.495,19,2.105,20,2.405,21,1.552,22,1.552,23,1.684,24,1.552,25,1.684,26,1.831,27,0.38,28,0.488,29,0.02,30,0.024,31,0.02,68,1.663,107,3.007,108,1.831,109,2.406,113,3.007,158,3.003]],["title/injectables/JaegerHttpTracePropagatorService.html",[32,0.749,113,1.886]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.281,4,0.281,5,0.207,6,0.417,10,0.465,11,0.032,13,0.403,20,2.425,27,0.281,28,0.361,29,0.014,30,0.02,31,0.014,32,0.978,33,1.354,34,1.476,35,0.978,36,0.594,37,1.249,38,2.532,39,1.322,41,1.547,43,0.902,44,2.659,45,1.725,46,1.615,47,1.725,49,1.354,50,1.354,51,1.147,52,0.594,60,2.044,61,1.147,67,1.589,68,1.757,69,2.238,73,1.058,89,2.567,90,1.973,93,1.147,94,2.136,108,1.354,109,3.051,110,2.827,113,3.051,114,3.075,115,1.779,118,1.975,120,3.138,149,3.809,158,3.809,159,2.22,160,3.047,161,3.047,162,2.22,163,2.548,164,1.975,165,2.548,166,2.548,167,2.22,168,2.548,169,3.047,170,3.047,171,3.047]],["title/interfaces/JaegerPropagatorConfig.html",[53,0.882,86,1.565]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.286,4,0.286,5,0.211,6,0.248,10,0.248,11,0.032,13,0.41,27,0.509,29,0.015,30,0.02,31,0.015,35,0.718,36,0.605,52,0.605,53,1.438,54,2.069,55,1.377,56,1.644,57,1.644,58,1.644,59,1.983,60,2.069,61,1.608,62,2.367,63,2.265,64,2.265,65,2.265,66,2.792,67,1.167,68,1.264,69,3.16,70,1.502,71,2.009,72,2.009,73,1.077,74,1.502,75,2.009,76,1.644,77,1.377,78,2.069,79,2.265,80,1.267,81,1.644,82,1.81,83,2.853,84,2.265,85,1.81,86,2.834,87,2.069,88,1.745,89,2.792,90,1.484,91,2.493,92,2.265,93,1.608,94,1.267,95,1.502,96,1.81,97,1.81]],["title/modules/NoopHttpTextPropagatorModule.html",[0,1.216,172,2.094]],["body/modules/NoopHttpTextPropagatorModule.html",[2,1.432,3,0.38,4,0.38,5,0.28,6,0.329,9,2.406,10,0.47,11,0.032,12,2.105,13,0.545,14,2.495,15,1.831,18,2.495,19,2.105,20,2.405,21,2.216,22,1.552,23,1.684,24,1.552,25,1.684,26,1.831,27,0.38,28,0.488,29,0.02,30,0.024,31,0.02,172,3.338,173,3.003,174,3.003,175,3.338,176,4.122]],["title/injectables/NoopHttpTextPropagatorService.html",[32,0.749,175,2.094]],["body/injectables/NoopHttpTextPropagatorService.html",[3,0.352,4,0.352,5,0.259,6,0.392,10,0.433,11,0.031,13,0.505,20,2.338,21,2.155,27,0.352,28,0.452,29,0.018,30,0.023,31,0.018,32,1.137,33,1.696,34,1.849,35,0.884,36,0.744,37,1.452,38,2.772,39,1.042,41,1.694,43,1.13,44,2.867,45,2.005,46,2.024,47,1.559,49,1.696,50,1.696,51,1.437,52,0.744,114,2.781,163,5.068,173,3.574,174,3.574,175,3.708]],["title/interfaces/OpenTelemetryConfig.html",[53,0.882,90,1.122]],["body/interfaces/OpenTelemetryConfig.html",[3,0.275,4,0.275,5,0.203,6,0.239,10,0.239,11,0.032,13,0.395,27,0.502,29,0.014,30,0.02,31,0.014,35,0.692,36,0.583,52,0.583,53,1.416,54,2.511,55,1.327,56,1.584,57,1.584,58,1.584,59,1.804,60,2.017,61,1.952,62,2.321,63,2.208,64,2.208,65,2.208,66,2.748,67,1.804,68,1.232,69,2.993,70,1.447,71,1.936,72,1.936,73,1.038,74,1.447,75,1.936,76,1.584,77,1.327,78,2.511,79,2.208,80,1.221,81,1.584,82,1.744,83,2.431,84,2.208,85,1.744,86,2.974,87,1.447,88,1.221,89,1.584,90,1.801,91,3.295,92,2.993,93,1.568,94,1.221,95,1.447,96,1.744,97,1.744]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[177,1.713,178,2.094]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.118,4,0.118,5,0.087,6,0.382,10,0.403,11,0.032,13,0.17,18,0.622,19,1.818,21,0.484,27,0.118,28,0.332,29,0.006,30,0.01,31,0.006,32,0.501,35,1.031,36,0.25,37,0.64,39,1.264,41,0.974,43,1.179,47,0.884,48,0.75,49,0.571,50,0.571,51,0.484,52,0.826,59,1.239,60,1.048,61,1.595,62,2.052,63,0.681,64,2.111,66,2.111,67,1.743,73,1.471,74,1.048,80,0.884,85,0.75,87,1.594,88,1.501,90,1.143,93,0.484,94,1.818,96,2.324,105,0.884,110,1.921,115,2.473,118,0.832,120,3.584,129,3.04,132,0.936,133,2.359,135,1.921,138,1.81,139,2.597,142,0.681,148,0.936,151,1.576,159,0.936,164,0.832,166,1.074,167,3.672,177,1.487,178,1.402,179,1.284,180,4.003,181,1.074,182,1.81,183,2.804,184,3.543,185,2.164,186,2.164,187,2.804,188,2.164,189,2.804,190,2.345,191,2.164,192,2.164,193,2.164,194,2.804,195,1.284,196,1.81,197,3.33,198,1.576,199,2.164,200,1.817,201,3.673,202,2.164,203,2.164,204,4.786,205,1.284,206,1.81,207,5.64,208,2.164,209,1.284,210,1.284,211,1.263,212,2.164,213,1.81,214,2.164,215,1.284,216,3.33,217,1.576,218,2.164,219,1.284,220,1.284,221,2.345,222,3.291,223,2.345,224,1.81,225,1.284,226,3.982,227,3.291,228,1.284,229,2.164,230,1.81,231,2.752,232,1.402,233,1.81,234,2.804,235,3.291,236,2.164,237,2.752,238,1.284,239,2.164,240,2.164,241,2.804,242,0.936,243,1.074,244,1.284,245,0.936,246,2.164,247,1.284,248,2.164,249,1.284,250,2.164,251,2.164,252,1.284,253,1.284,254,1.284,255,1.284,256,1.284,257,1.284,258,2.164,259,1.284,260,1.284,261,1.284,262,1.284,263,1.284,264,1.284,265,1.284,266,1.284,267,1.284,268,1.284,269,1.284,270,1.284,271,2.397,272,2.164,273,2.164,274,2.164,275,2.164,276,2.164,277,2.164,278,1.284,279,0.936,280,1.284,281,1.284,282,1.284,283,1.284,284,1.284,285,2.164,286,1.284,287,1.284,288,1.284,289,0.936,290,1.284,291,1.284,292,1.284,293,1.284,294,1.284,295,1.284,296,1.284,297,1.284,298,1.284,299,1.284,300,1.284,301,1.284,302,1.284,303,1.284,304,1.284,305,1.284,306,1.284,307,1.284,308,1.284,309,1.284,310,1.284,311,2.804,312,1.284,313,2.804,314,1.284,315,1.284,316,1.284,317,1.284,318,1.284,319,1.284,320,1.284,321,2.164,322,1.284,323,1.284,324,1.284,325,1.284]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.216,326,2.094]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.207,3,0.32,4,0.32,5,0.236,6,0.368,10,0.459,11,0.032,12,2.116,13,0.46,22,1.308,23,1.42,24,1.308,25,1.885,26,1.543,27,0.32,28,0.411,29,0.016,30,0.022,31,0.016,37,1.028,39,0.949,41,1.028,43,1.028,52,0.678,61,1.95,67,1.308,73,1.207,90,1.917,93,1.737,94,2.116,110,2.028,115,2.028,164,2.251,165,2.906,178,2.99,217,2.531,242,2.531,326,3.722,327,4.614,328,3.474,329,4.614,330,3.474,331,4.614,332,3.474,333,5.18,334,4.614,335,3.859,336,3.859,337,3.474,338,3.474,339,2.906,340,4.614,341,3.474,342,2.531,343,3.474,344,3.474,345,2.906,346,3.474,347,3.474]],["title/modules/OtelColExporterModule.html",[0,1.216,348,2.094]],["body/modules/OtelColExporterModule.html",[2,1.471,3,0.39,4,0.39,5,0.288,6,0.338,10,0.475,11,0.032,12,2.14,13,0.56,14,2.537,15,1.881,22,1.594,23,1.73,24,1.594,25,1.73,26,1.881,27,0.39,28,0.501,29,0.02,30,0.025,31,0.02,129,2.245,130,3.541,132,3.816,133,2.777,348,3.394,349,3.085,350,3.394,351,3.085]],["title/interfaces/OtelCollectorConfig.html",[53,0.882,78,1.565]],["body/interfaces/OtelCollectorConfig.html",[3,0.275,4,0.275,5,0.203,6,0.239,10,0.239,11,0.032,13,0.395,27,0.502,29,0.014,30,0.02,31,0.014,35,0.692,36,0.583,52,0.583,53,1.416,54,2.017,55,1.327,56,1.584,57,1.584,58,1.584,59,1.952,60,2.017,61,1.952,62,2.321,63,2.208,64,2.208,65,2.208,66,2.748,67,1.952,68,1.232,69,3.132,70,1.447,71,1.936,72,1.936,73,1.038,74,1.447,75,1.936,76,2.208,77,1.85,78,2.321,79,2.993,80,1.701,81,2.208,82,2.431,83,2.798,84,2.993,85,1.744,86,2.64,87,1.447,88,1.221,89,1.584,90,1.446,91,2.431,92,2.208,93,1.568,94,1.221,95,1.447,96,1.744,97,1.744,352,4.164]],["title/injectables/OtelcolExporterService.html",[32,0.749,350,2.094]],["body/injectables/OtelcolExporterService.html",[3,0.288,4,0.288,5,0.212,6,0.422,10,0.457,11,0.032,13,0.413,27,0.288,28,0.581,29,0.015,30,0.02,31,0.015,32,0.995,33,1.388,35,0.995,36,0.609,37,1.271,39,1.34,41,1.564,43,0.925,49,1.388,50,1.388,51,1.176,52,0.609,59,1.617,60,2.08,61,1.176,65,1.656,67,1.617,73,1.085,79,1.656,84,1.656,90,1.988,92,2.601,93,1.176,94,2.159,110,2.864,115,1.823,118,2.024,120,3.18,134,2.024,136,3.424,139,2.864,140,2.277,141,2.276,142,1.656,159,2.276,164,2.024,167,2.276,168,2.613,349,3.849,350,3.424,353,4.294,354,3.124,355,5.284,356,4.907,357,4.294,358,3.124,359,3.128,360,2.613,361,3.124,362,3.124,363,3.124,364,3.124,365,3.124,366,3.124]],["title/classes/SpanExporterService.html",[28,0.382,133,1.713]],["body/classes/SpanExporterService.html",[3,0.386,4,0.386,5,0.285,6,0.416,10,0.416,11,0.031,27,0.386,28,0.496,29,0.02,30,0.025,31,0.02,36,0.817,37,1.541,39,1.145,41,1.241,43,1.241,51,1.96,95,2.521,133,2.76,134,2.716,136,3.837,139,3.305,140,3.002,141,3.054,142,2.222,143,3.054,146,3.792,147,3.792,148,3.054,367,4.353,368,4.192]],["title/changelog.html",[369,1.579,370,1.579,371,2.263]],["body/changelog.html",[5,0.297,11,0.018,29,0.012,30,0.018,31,0.012,52,0.852,59,0.953,68,0.749,70,1.226,77,1.124,87,1.226,88,1.034,102,3.655,105,1.511,108,1.124,177,1.342,196,2.116,200,2.396,211,3.507,232,3.115,289,1.844,342,1.844,351,1.844,371,3.093,372,2.531,373,2.531,374,1.844,375,2.531,376,1.64,377,2.531,378,2.832,379,2.531,380,2.531,381,4.277,382,3.698,383,5.941,384,3.698,385,2.531,386,5.655,387,3.698,388,2.531,389,5.516,390,5.516,391,4.37,392,2.531,393,2.531,394,2.531,395,2.694,396,4.807,397,2.531,398,2.531,399,2.531,400,2.531,401,2.116,402,2.531,403,2.531,404,2.531,405,3.698,406,2.531,407,4.37,408,3.698,409,2.531,410,2.531,411,2.531,412,2.531,413,2.531,414,2.116,415,2.531,416,4.807,417,2.531,418,3.184,419,4.807,420,3.698,421,3.655,422,3.698,423,3.698,424,3.093,425,3.698,426,4.807,427,2.531,428,3.698,429,2.531,430,2.531,431,2.531,432,2.531,433,4.37,434,2.531,435,2.531,436,2.531,437,2.531,438,2.531,439,3.698,440,2.531,441,2.531,442,2.531,443,2.531,444,2.531,445,2.531,446,2.531,447,2.531,448,1.64,449,5.516,450,2.531,451,2.531,452,2.531,453,2.531,454,2.116,455,2.531,456,2.531,457,2.531,458,2.531,459,2.531,460,2.531,461,2.531,462,2.531,463,1.844,464,2.531,465,2.531,466,2.531,467,2.531,468,2.116,469,2.531,470,2.531,471,2.531,472,2.531,473,3.698,474,3.698,475,2.531,476,2.531,477,2.531,478,3.093,479,3.698,480,3.698,481,2.531,482,2.531,483,2.531,484,4.807,485,2.531,486,2.531,487,2.531,488,2.116,489,2.531,490,3.698,491,2.531,492,2.531]],["title/coverage.html",[493,3.675]],["body/coverage.html",[5,0.209,6,0.511,7,2.242,8,1.796,11,0.031,16,1.796,19,1.257,20,2.145,21,1.833,28,0.503,29,0.015,30,0.02,31,0.015,32,1.353,34,2.759,45,1.257,52,0.6,53,1.556,54,1.49,56,2.921,57,2.921,67,1.159,68,1.554,78,1.49,86,1.49,90,1.069,93,1.159,99,2.242,100,2.242,101,1.994,105,1.736,106,1.796,109,1.796,112,1.796,113,1.796,128,2.242,129,1.632,131,1.994,133,1.632,134,3.155,140,1.632,144,2.754,150,2.574,155,2.574,158,2.242,173,2.242,174,2.242,175,1.994,177,1.632,178,1.994,180,2.574,181,2.574,349,2.242,350,1.994,367,2.574,493,2.574,494,2.574,495,3.077,496,3.077,497,6.345,498,3.077,499,5.95,500,4.25,501,4.25,502,3.077,503,3.077,504,3.077,505,2.574,506,3.077,507,3.077,508,3.077,509,3.077,510,2.574]],["title/dependencies.html",[511,2.263,512,2.515]],["body/dependencies.html",[11,0.032,13,0.535,15,1.795,29,0.019,30,0.024,31,0.019,77,1.795,108,1.795,162,2.944,243,3.38,245,2.944,279,2.944,359,2.944,381,4.657,418,2.944,512,2.619,513,4.041,514,6.314,515,4.041,516,5.088,517,4.041,518,4.041,519,4.041,520,5.088,521,4.255,522,4.041,523,4.041,524,4.041,525,4.041,526,4.041,527,4.041,528,4.041,529,4.041,530,3.38,531,3.38,532,4.041,533,4.041,534,4.041,535,4.041]],["title/index.html",[36,0.528,369,1.579,370,1.579]],["body/index.html",[0,1.96,1,0.83,3,0.497,10,0.31,11,0.03,12,0.962,13,0.188,17,0.921,22,0.535,23,0.581,24,0.535,27,0.217,28,0.168,29,0.018,30,0.011,31,0.007,47,0.962,48,1.375,52,0.277,53,0.643,54,0.688,58,1.249,59,1.917,61,0.887,62,1.883,63,1.249,64,1.599,65,1.249,66,1.599,68,1.313,69,2.061,70,2.149,73,0.818,74,1.141,76,2.9,77,2.395,78,0.688,79,1.859,80,0.581,81,1.249,82,1.375,83,1.76,84,0.754,86,1.46,87,1.699,88,2.126,89,1.249,90,1.047,91,1.375,92,1.249,98,1.954,104,0.83,105,0.581,107,0.83,108,1.861,123,1.189,127,0.921,129,1.249,135,2.59,142,1.249,146,1.036,149,1.036,157,1.189,162,1.716,172,0.921,177,2.461,182,1.189,184,1.189,190,1.189,198,1.036,200,1.526,206,1.189,211,1.375,216,3.251,217,2.197,221,2.522,223,1.97,230,1.189,231,1.189,232,3.734,233,1.189,237,1.189,242,1.036,245,2.197,271,1.036,279,1.036,326,1.954,335,1.189,336,2.933,342,2.555,345,1.189,348,1.954,351,1.036,359,2.197,360,1.189,369,1.375,370,1.375,374,1.716,376,3.121,378,1.526,395,1.036,401,1.97,421,1.189,448,3.217,463,2.197,468,1.189,488,1.189,510,1.97,511,1.189,512,3.121,521,1.189,530,2.522,531,1.189,536,3.016,537,3.016,538,1.421,539,4.438,540,1.421,541,1.421,542,3.927,543,1.421,544,1.421,545,1.97,546,2.355,547,2.355,548,3.507,549,2.355,550,2.355,551,4.438,552,3.016,553,1.421,554,1.421,555,2.355,556,3.507,557,1.97,558,2.355,559,2.355,560,3.711,561,3.711,562,3.507,563,1.421,564,1.421,565,2.355,566,2.355,567,2.355,568,2.355,569,2.355,570,2.355,571,1.421,572,1.421,573,1.421,574,1.421,575,1.189,576,1.189,577,2.355,578,1.421,579,1.421,580,1.421,581,1.421,582,1.421,583,1.421,584,1.421,585,1.189,586,3.016,587,1.421,588,1.421,589,1.421,590,1.421,591,1.189,592,1.189,593,1.421,594,1.421,595,1.421,596,1.421,597,1.421,598,1.421,599,2.355,600,1.421,601,2.355,602,2.355,603,1.421,604,1.421,605,1.421,606,1.421,607,1.421,608,1.421,609,2.355,610,2.355,611,0.921,612,1.421,613,1.421,614,1.421,615,1.421,616,1.421,617,1.421,618,1.189,619,1.189,620,1.421,621,1.421,622,3.888,623,3.888,624,3.888,625,4.964,626,3.888,627,3.251,628,3.888,629,3.888,630,3.888,631,1.421,632,1.421,633,1.421,634,1.421,635,1.421,636,1.421,637,1.189,638,1.421,639,1.421,640,1.421,641,1.421,642,1.421,643,1.421,644,2.355,645,2.355,646,1.421,647,1.421,648,1.421,649,1.421,650,1.421,651,1.421,652,1.421]],["title/license.html",[369,1.579,370,1.579,653,2.263]],["body/license.html",[4,0.439,5,0.281,10,0.087,11,0.012,21,1.111,25,0.445,28,0.129,29,0.009,30,0.009,31,0.005,35,0.252,39,0.297,55,0.484,58,0.577,59,0.41,70,2.173,73,0.862,74,0.527,147,1.37,153,0.793,200,0.706,211,1.097,213,1.572,224,3.048,271,0.793,289,1.807,376,0.706,378,1.607,414,0.911,448,0.706,463,3.91,478,1.572,494,2.074,505,0.911,542,0.793,545,0.911,557,1.572,575,0.911,585,0.911,592,0.911,611,0.706,619,2.786,627,1.572,653,4.947,654,2.952,655,2.48,656,1.089,657,1.089,658,1.089,659,4.32,660,4.876,661,2.952,662,3.332,663,1.089,664,5.072,665,4.486,666,1.089,667,1.089,668,1.089,669,4.486,670,4.876,671,3.644,672,4.486,673,1.88,674,1.089,675,3.332,676,1.089,677,1.089,678,1.089,679,2.952,680,1.089,681,4.32,682,2.952,683,1.88,684,1.089,685,2.48,686,1.88,687,1.089,688,1.089,689,5.303,690,2.952,691,1.88,692,1.089,693,1.88,694,1.089,695,1.089,696,1.089,697,1.089,698,1.089,699,1.089,700,2.48,701,1.089,702,2.48,703,1.88,704,4.876,705,1.089,706,1.089,707,3.644,708,4.32,709,2.952,710,1.88,711,2.48,712,3.644,713,1.089,714,1.089,715,1.089,716,1.089,717,1.089,718,1.88,719,1.089,720,1.089,721,1.089,722,4.967,723,2.48,724,1.88,725,1.089,726,4.32,727,1.88,728,1.089,729,3.332,730,1.88,731,1.089,732,5.303,733,1.089,734,1.089,735,1.089,736,1.089,737,1.089,738,1.089,739,1.88,740,2.48,741,1.089,742,1.089,743,1.089,744,1.089,745,1.089,746,2.952,747,3.332,748,1.089,749,1.88,750,2.952,751,1.88,752,1.089,753,3.332,754,1.88,755,1.089,756,1.089,757,2.48,758,1.089,759,1.089,760,1.089,761,1.089,762,1.88,763,0.911,764,1.089,765,1.089,766,2.48,767,1.089,768,1.089,769,2.48,770,1.089,771,1.089,772,1.089,773,2.952,774,4.486,775,1.089,776,1.089,777,1.88,778,4.129,779,2.48,780,2.952,781,1.88,782,1.88,783,1.88,784,1.88,785,2.48,786,1.88,787,2.48,788,1.88,789,1.88,790,1.88,791,1.88,792,0.911,793,1.88,794,1.089,795,1.089,796,3.332,797,3.906,798,2.48,799,1.88,800,1.089,801,1.089,802,1.88,803,1.88,804,1.089,805,1.089,806,2.48,807,1.88,808,1.089,809,1.089,810,1.089,811,2.48,812,1.089,813,1.089,814,1.089,815,1.88,816,1.88,817,1.089,818,1.089,819,1.089,820,1.089,821,1.089,822,1.089,823,1.089,824,1.88,825,1.089,826,1.089,827,1.089,828,1.089,829,1.089,830,1.089,831,1.089,832,1.089,833,2.48,834,1.089,835,2.48,836,1.089,837,1.089,838,1.089,839,1.089,840,4.129,841,1.089,842,1.089,843,1.089,844,1.089,845,1.089,846,2.952,847,1.88,848,2.952,849,1.089,850,1.089,851,1.089,852,1.089,853,1.089,854,2.48,855,1.089,856,1.089,857,1.88,858,1.88,859,1.089,860,1.089,861,1.089,862,1.88,863,1.089,864,1.089,865,3.332,866,1.089,867,1.089,868,1.089,869,1.089,870,1.089,871,1.089,872,1.089,873,2.48,874,2.952,875,1.089,876,1.089,877,1.089,878,1.089,879,1.089,880,1.089,881,1.089,882,1.089,883,1.089,884,1.089,885,1.089,886,1.88,887,1.089,888,1.089,889,1.88,890,1.089,891,1.089,892,2.952,893,1.089,894,1.089,895,1.089,896,1.089,897,1.089,898,1.089,899,1.089,900,2.952,901,2.48,902,2.48,903,2.48,904,1.88,905,1.88,906,2.48,907,1.88,908,1.88,909,1.88,910,1.88,911,1.089,912,1.089,913,1.089,914,1.089,915,1.089,916,1.089,917,1.089,918,1.089,919,1.089,920,1.88,921,1.089,922,1.089,923,1.089,924,1.089,925,3.332,926,1.089,927,1.089,928,1.089,929,1.089,930,1.089,931,1.089,932,1.089,933,1.089,934,3.332,935,1.089,936,1.089,937,1.089,938,1.089,939,1.089,940,0.911,941,1.089,942,1.089,943,1.089,944,1.089,945,1.089,946,1.089,947,1.089,948,1.089,949,1.089,950,1.089,951,1.089,952,1.089,953,2.48,954,1.089,955,1.089,956,1.089,957,1.089,958,1.089,959,1.88,960,1.089,961,1.089,962,1.089,963,1.089,964,1.089,965,1.089,966,1.089,967,1.089,968,1.089,969,1.089,970,1.089,971,1.089,972,1.089,973,1.089,974,1.089,975,1.88,976,1.089,977,1.089,978,1.089,979,1.88,980,1.88,981,1.089,982,1.089,983,1.089,984,1.089,985,1.089,986,1.089,987,1.089,988,1.089,989,1.089,990,1.089,991,1.089,992,1.089,993,1.089,994,1.089,995,1.089,996,1.089,997,1.089,998,1.089,999,1.089,1000,1.089,1001,1.089,1002,1.089,1003,1.089]],["title/modules.html",[2,1.526]],["body/modules.html",[1,2.643,2,1.573,11,0.026,29,0.021,30,0.026,31,0.021,98,2.934,104,2.643,107,2.643,127,2.934,172,2.934,326,2.934,348,2.934,611,4.179,1004,6.45,1005,6.45]],["title/overview.html",[1006,3.675]],["body/overview.html",[0,1.79,2,1.651,11,0.027,22,1.79,24,1.79,29,0.023,30,0.027,31,0.023,33,2.112,55,2.112,143,3.464,339,3.976,395,3.464,424,3.976,512,3.081,591,3.976,940,3.976,1006,3.976,1007,4.755,1008,5.618,1009,4.755,1010,4.755,1011,4.755]],["title/todo.html",[369,1.579,370,1.579,1012,2.263]],["body/todo.html",[11,0.03,29,0.019,30,0.024,31,0.019,52,0.775,59,2.188,76,2.67,77,2.237,88,1.625,105,1.625,108,2.581,135,2.939,177,2.108,197,3.325,198,3.669,211,3.674,232,2.577,374,2.897,376,2.577,378,3.263,418,2.897,448,2.577,454,3.325,542,4.027,560,3.325,561,3.325,576,3.325,611,3.263,618,5.013,637,3.325,722,3.325,763,3.325,792,3.325,1012,4.622,1013,3.976,1014,3.976,1015,5.527,1016,3.976,1017,3.976,1018,3.976,1019,3.976]],["title/miscellaneous/variables.html",[1020,2.263,1021,3.246]],["body/miscellaneous/variables.html",[6,0.381,11,0.029,29,0.023,30,0.027,31,0.023,36,0.931,52,0.931,56,2.53,57,2.985,80,1.95,81,2.53,93,2.255,94,1.95,95,2.311,97,2.786,1020,3.992,1021,3.992,1022,4.773]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":570,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.1",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":381,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":564,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":418,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"todo.html":{}}}],["02",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":200,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.5",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["12.0.2",{"_index":647,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":395,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":655,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":657,"title":{},"body":{"license.html":{}}}],["2020",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":468,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":581,"title":{},"body":{"index.html":{}}}],["5.2.0",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":505,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["563071d",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":424,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.6.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1011,"title":{},"body":{"overview.html":{}}}],["735b05d",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1010,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":414,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":531,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/node",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":878,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":956,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":953,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":649,"title":{},"body":{"index.html":{}}}],["act",{"_index":963,"title":{},"body":{"license.html":{}}}],["acting",{"_index":677,"title":{},"body":{"license.html":{}}}],["acts",{"_index":932,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":864,"title":{},"body":{"license.html":{}}}],["adding",{"_index":598,"title":{},"body":{"index.html":{}}}],["additional",{"_index":865,"title":{},"body":{"license.html":{}}}],["additions",{"_index":748,"title":{},"body":{"license.html":{}}}],["advised",{"_index":951,"title":{},"body":{"license.html":{}}}],["against",{"_index":816,"title":{},"body":{"license.html":{}}}],["agent",{"_index":620,"title":{},"body":{"index.html":{}}}],["agree",{"_index":966,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":903,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":883,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":821,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":634,"title":{},"body":{"index.html":{}}}],["alone",{"_index":812,"title":{},"body":{"license.html":{}}}],["along",{"_index":855,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":863,"title":{},"body":{"license.html":{}}}],["already",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":600,"title":{},"body":{"index.html":{}}}],["always",{"_index":199,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":651,"title":{},"body":{"index.html":{}}}],["amd",{"_index":626,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":836,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":843,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":849,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":960,"title":{},"body":{"license.html":{}}}],["angular",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":632,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":15,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":13,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":736,"title":{},"body":{"license.html":{}}}],["apache",{"_index":654,"title":{},"body":{"license.html":{}}}],["api",{"_index":166,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":563,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":556,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":587,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":579,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":613,"title":{},"body":{"index.html":{}}}],["appand",{"_index":604,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":586,"title":{},"body":{"index.html":{}}}],["appear",{"_index":860,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":730,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":901,"title":{},"body":{"license.html":{}}}],["application",{"_index":539,"title":{},"body":{"index.html":{}}}],["applies",{"_index":805,"title":{},"body":{"license.html":{}}}],["apply",{"_index":975,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":985,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":918,"title":{},"body":{"license.html":{}}}],["archives",{"_index":994,"title":{},"body":{"license.html":{}}}],["arising",{"_index":939,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":972,"title":{},"body":{"license.html":{}}}],["associated",{"_index":923,"title":{},"body":{"license.html":{}}}],["assume",{"_index":921,"title":{},"body":{"license.html":{}}}],["async",{"_index":573,"title":{},"body":{"index.html":{}}}],["attach",{"_index":976,"title":{},"body":{"license.html":{}}}],["attached",{"_index":728,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":846,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":673,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":723,"title":{},"body":{"license.html":{}}}],["available",{"_index":611,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":17,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3propagator",{"_index":42,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatormodule",{"_index":1,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":16,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b63afc1",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":629,"title":{},"body":{"index.html":{}}}],["base",{"_index":636,"title":{},"body":{"index.html":{}}}],["based",{"_index":592,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":905,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":753,"title":{},"body":{"license.html":{}}}],["below",{"_index":731,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":699,"title":{},"body":{"license.html":{}}}],["between",{"_index":569,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":745,"title":{},"body":{"license.html":{}}}],["body",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":977,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":571,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":591,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":980,"title":{},"body":{"license.html":{}}}],["breaking",{"_index":540,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1005,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":521,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":596,"title":{},"body":{"index.html":{}}}],["canonicalcode",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["canonicalcode.unknown",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":838,"title":{},"body":{"license.html":{}}}],["cause",{"_index":627,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":541,"title":{},"body":{"index.html":{}}}],["changed",{"_index":842,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":371,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":938,"title":{},"body":{"license.html":{}}}],["charge",{"_index":787,"title":{},"body":{"license.html":{}}}],["choose",{"_index":954,"title":{},"body":{"license.html":{}}}],["claim",{"_index":818,"title":{},"body":{"license.html":{}}}],["claims",{"_index":807,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["classes",{"_index":143,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{},"overview.html":{}}}],["code",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":360,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["collector/build/src/platform/browser/types",{"_index":361,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collector/issues/1385",{"_index":1018,"title":{},"body":{"todo.html":{}}}],["collectorexporter",{"_index":355,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfig",{"_index":357,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbrowser",{"_index":356,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":358,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":813,"title":{},"body":{"license.html":{}}}],["command",{"_index":602,"title":{},"body":{"index.html":{}}}],["comment",{"_index":986,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":948,"title":{},"body":{"license.html":{}}}],["commit",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":54,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":625,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":14,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["communication",{"_index":757,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":717,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":997,"title":{},"body":{"license.html":{}}}],["complies",{"_index":871,"title":{},"body":{"license.html":{}}}],["compose",{"_index":610,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":614,"title":{},"body":{"index.html":{}}}],["composite",{"_index":102,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":98,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":101,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":945,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":660,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":170,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":566,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":164,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["configure",{"_index":555,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":937,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":962,"title":{},"body":{"license.html":{}}}],["console",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":138,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":127,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":131,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":770,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["constitutes",{"_index":822,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":168,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":159,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["construed",{"_index":866,"title":{},"body":{"license.html":{}}}],["contained",{"_index":852,"title":{},"body":{"license.html":{}}}],["content",{"_index":898,"title":{},"body":{"license.html":{}}}],["contents",{"_index":545,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":105,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":183,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":691,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":577,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":747,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":811,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":873,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":774,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":823,"title":{},"body":{"license.html":{}}}],["control",{"_index":679,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":680,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":719,"title":{},"body":{"license.html":{}}}],["copies",{"_index":830,"title":{},"body":{"license.html":{}}}],["copy",{"_index":835,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":670,"title":{},"body":{"license.html":{}}}],["core",{"_index":582,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1016,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":819,"title":{},"body":{"license.html":{}}}],["cours",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":493,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":594,"title":{},"body":{"index.html":{}}}],["cross",{"_index":817,"title":{},"body":{"license.html":{}}}],["current",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":894,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":934,"title":{},"body":{"license.html":{}}}],["date",{"_index":827,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":22,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":650,"title":{},"body":{"index.html":{}}}],["default",{"_index":80,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":968,"title":{},"body":{"license.html":{}}}],["define",{"_index":151,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":39,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":185,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":193,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":147,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{},"license.html":{}}}],["definitions",{"_index":663,"title":{},"body":{"license.html":{}}}],["del",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":929,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":645,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":512,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":631,"title":{},"body":{"index.html":{}}}],["depends",{"_index":624,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":538,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":732,"title":{},"body":{"license.html":{}}}],["derived",{"_index":733,"title":{},"body":{"license.html":{}}}],["describing",{"_index":895,"title":{},"body":{"license.html":{}}}],["description",{"_index":35,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"license.html":{}}}],["designated",{"_index":772,"title":{},"body":{"license.html":{}}}],["determining",{"_index":917,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":616,"title":{},"body":{"index.html":{}}}],["different",{"_index":870,"title":{},"body":{"license.html":{}}}],["dir",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":685,"title":{},"body":{"license.html":{}}}],["direction",{"_index":687,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":899,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":767,"title":{},"body":{"license.html":{}}}],["display",{"_index":557,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":796,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":854,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":662,"title":{},"body":{"license.html":{}}}],["doc",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":609,"title":{},"body":{"index.html":{}}}],["docs",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":668,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":494,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1017,"title":{},"body":{"todo.html":{}}}],["don't",{"_index":984,"title":{},"body":{"license.html":{}}}],["done",{"_index":1019,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":780,"title":{},"body":{"license.html":{}}}],["easier",{"_index":992,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":734,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":737,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":754,"title":{},"body":{"license.html":{}}}],["en",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":979,"title":{},"body":{"license.html":{}}}],["end",{"_index":974,"title":{},"body":{"license.html":{}}}],["entities",{"_index":678,"title":{},"body":{"license.html":{}}}],["entity",{"_index":672,"title":{},"body":{"license.html":{}}}],["environment",{"_index":588,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":589,"title":{},"body":{"index.html":{}}}],["error",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":950,"title":{},"body":{"license.html":{}}}],["event",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.error",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":448,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["except",{"_index":798,"title":{},"body":{"license.html":{}}}],["exception.message",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exception.stacktrace",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exception.type",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["excluding",{"_index":769,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":786,"title":{},"body":{"license.html":{}}}],["executed",{"_index":884,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":924,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":701,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":875,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["exported",{"_index":641,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":135,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["exporter.interface",{"_index":141,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["exporter.module.ts",{"_index":130,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service",{"_index":132,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service.ts",{"_index":134,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":137,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":353,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:43",{"_index":354,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:8",{"_index":368,"title":{},"body":{"classes/SpanExporterService.html":{}}}],["exporters",{"_index":580,"title":{},"body":{"index.html":{}}}],["exports",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":908,"title":{},"body":{"license.html":{}}}],["f",{"_index":612,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":946,"title":{},"body":{"license.html":{}}}],["fake",{"_index":583,"title":{},"body":{"index.html":{}}}],["false",{"_index":558,"title":{},"body":{"index.html":{}}}],["features",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":955,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":978,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":694,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":828,"title":{},"body":{"license.html":{}}}],["files",{"_index":711,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":913,"title":{},"body":{"license.html":{}}}],["fix",{"_index":637,"title":{},"body":{"index.html":{},"todo.html":{}}}],["fixes",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":833,"title":{},"body":{"license.html":{}}}],["form",{"_index":704,"title":{},"body":{"license.html":{}}}],["format",{"_index":988,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":330,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":331,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":789,"title":{},"body":{"license.html":{}}}],["generally",{"_index":578,"title":{},"body":{"index.html":{}}}],["generated",{"_index":718,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":136,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["getpropagator",{"_index":38,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["getting",{"_index":369,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1014,"title":{},"body":{"todo.html":{}}}],["give",{"_index":153,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":547,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":943,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1002,"title":{},"body":{"license.html":{}}}],["grant",{"_index":779,"title":{},"body":{"license.html":{}}}],["granted",{"_index":703,"title":{},"body":{"license.html":{}}}],["granting",{"_index":674,"title":{},"body":{"license.html":{}}}],["grants",{"_index":782,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1004,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":930,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":970,"title":{},"body":{"license.html":{}}}],["header",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["here",{"_index":618,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":781,"title":{},"body":{"license.html":{}}}],["herein",{"_index":880,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":969,"title":{},"body":{"license.html":{}}}],["http",{"_index":20,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":181,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:134",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:163",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:185",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:199",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:215",{"_index":195,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":191,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":617,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":606,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":658,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":999,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":630,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":560,"title":{},"body":{"index.html":{},"todo.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":544,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":44,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["httptextpropagatorservice",{"_index":19,"title":{"classes/HttpTextPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["httptracecontext",{"_index":149,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":104,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":112,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":993,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":982,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":140,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":692,"title":{},"body":{"license.html":{}}}],["iii",{"_index":698,"title":{},"body":{"license.html":{}}}],["implement",{"_index":593,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":157,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":51,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["implied",{"_index":909,"title":{},"body":{"license.html":{}}}],["import",{"_index":10,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["improving",{"_index":768,"title":{},"body":{"license.html":{}}}],["inability",{"_index":941,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":936,"title":{},"body":{"license.html":{}}}],["include",{"_index":740,"title":{},"body":{"license.html":{}}}],["included",{"_index":727,"title":{},"body":{"license.html":{}}}],["includes",{"_index":850,"title":{},"body":{"license.html":{}}}],["including",{"_index":708,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":751,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":777,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":971,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":967,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":958,"title":{},"body":{"license.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":725,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":686,"title":{},"body":{"license.html":{}}}],["individual",{"_index":700,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["information",{"_index":983,"title":{},"body":{"license.html":{}}}],["informational",{"_index":861,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":810,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":824,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":186,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptextpropagatorservice",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":122,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":32,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":187,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":192,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"classes/HttpTextPropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":154,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":188,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":189,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":553,"title":{},"body":{"index.html":{}}}],["installation",{"_index":546,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":814,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":749,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":190,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":177,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":623,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":328,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":332,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":180,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":327,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":128,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":150,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":152,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":349,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":367,"title":{},"body":{"classes/SpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":144,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":158,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":173,"title":{},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":155,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":156,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":179,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":53,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":45,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":790,"title":{},"body":{"license.html":{}}}],["issue",{"_index":763,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":198,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":108,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerconfiguration",{"_index":554,"title":{},"body":{"index.html":{}}}],["jaegerhttppropagator",{"_index":584,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":161,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":171,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":107,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":113,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":86,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":656,"title":{},"body":{"license.html":{}}}],["js",{"_index":530,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":562,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":536,"title":{},"body":{"index.html":{}}}],["key",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["kind",{"_index":907,"title":{},"body":{"license.html":{}}}],["language",{"_index":1001,"title":{},"body":{"license.html":{}}}],["law",{"_index":902,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":820,"title":{},"body":{"license.html":{}}}],["legal",{"_index":675,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1007,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":925,"title":{},"body":{"license.html":{}}}],["liable",{"_index":933,"title":{},"body":{"license.html":{}}}],["library",{"_index":537,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":808,"title":{},"body":{"license.html":{}}}],["license",{"_index":653,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":868,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":996,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":825,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":669,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":910,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1003,"title":{},"body":{"license.html":{}}}],["limited",{"_index":709,"title":{},"body":{"license.html":{}}}],["link",{"_index":744,"title":{},"body":{"license.html":{}}}],["list",{"_index":576,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":761,"title":{},"body":{"license.html":{}}}],["literal",{"_index":352,"title":{},"body":{"interfaces/OtelCollectorConfig.html":{}}}],["litigation",{"_index":815,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":942,"title":{},"body":{"license.html":{}}}],["losses",{"_index":949,"title":{},"body":{"license.html":{}}}],["made",{"_index":724,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":760,"title":{},"body":{"license.html":{}}}],["make",{"_index":801,"title":{},"body":{"license.html":{}}}],["making",{"_index":706,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":947,"title":{},"body":{"license.html":{}}}],["managed",{"_index":765,"title":{},"body":{"license.html":{}}}],["management",{"_index":688,"title":{},"body":{"license.html":{}}}],["manager",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["marked",{"_index":771,"title":{},"body":{"license.html":{}}}],["marks",{"_index":890,"title":{},"body":{"license.html":{}}}],["matching",{"_index":30,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":665,"title":{},"body":{"license.html":{}}}],["means",{"_index":683,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":714,"title":{},"body":{"license.html":{}}}],["media",{"_index":720,"title":{},"body":{"license.html":{}}}],["medium",{"_index":831,"title":{},"body":{"license.html":{}}}],["meet",{"_index":832,"title":{},"body":{"license.html":{}}}],["member",{"_index":642,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":912,"title":{},"body":{"license.html":{}}}],["merely",{"_index":743,"title":{},"body":{"license.html":{}}}],["merge",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":37,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["miscellaneous",{"_index":1020,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":707,"title":{},"body":{"license.html":{}}}],["modified",{"_index":837,"title":{},"body":{"license.html":{}}}],["modify",{"_index":862,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":867,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":333,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":542,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":889,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":639,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":809,"title":{},"body":{"license.html":{}}}],["need",{"_index":644,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":928,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":931,"title":{},"body":{"license.html":{}}}],["new",{"_index":52,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":12,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":640,"title":{},"body":{"index.html":{}}}],["non",{"_index":785,"title":{},"body":{"license.html":{}}}],["noop",{"_index":176,"title":{},"body":{"modules/NoopHttpTextPropagatorModule.html":{}}}],["noophttptextpropagator",{"_index":163,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["noophttptextpropagatormodule",{"_index":172,"title":{"modules/NoopHttpTextPropagatorModule.html":{}},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["noophttptextpropagatorservice",{"_index":175,"title":{"injectables/NoopHttpTextPropagatorService.html":{}},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":859,"title":{},"body":{"license.html":{}}}],["notable",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":879,"title":{},"body":{"license.html":{}}}],["notice",{"_index":726,"title":{},"body":{"license.html":{}}}],["notices",{"_index":840,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":877,"title":{},"body":{"license.html":{}}}],["npm",{"_index":552,"title":{},"body":{"index.html":{}}}],["number",{"_index":194,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["object",{"_index":712,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":959,"title":{},"body":{"license.html":{}}}],["observable",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":998,"title":{},"body":{"license.html":{}}}],["offer",{"_index":802,"title":{},"body":{"license.html":{}}}],["ok",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":585,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":605,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":47,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":635,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":48,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":359,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":162,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":142,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":90,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":178,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":182,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":326,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":590,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":549,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":628,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["options",{"_index":633,"title":{},"body":{"index.html":{}}}],["origin",{"_index":896,"title":{},"body":{"license.html":{}}}],["original",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":351,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":348,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":350,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":78,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":940,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":696,"title":{},"body":{"license.html":{}}}],["overide",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1006,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":671,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":693,"title":{},"body":{"license.html":{}}}],["package",{"_index":511,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":991,"title":{},"body":{"license.html":{}}}],["param",{"_index":167,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["parent",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":848,"title":{},"body":{"license.html":{}}}],["particular",{"_index":914,"title":{},"body":{"license.html":{}}}],["party",{"_index":858,"title":{},"body":{"license.html":{}}}],["patent",{"_index":797,"title":{},"body":{"license.html":{}}}],["percent",{"_index":695,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":567,"title":{},"body":{"index.html":{}}}],["perform",{"_index":794,"title":{},"body":{"license.html":{}}}],["permission",{"_index":887,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":702,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":783,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":847,"title":{},"body":{"license.html":{}}}],["places",{"_index":853,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":952,"title":{},"body":{"license.html":{}}}],["power",{"_index":684,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":705,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":792,"title":{},"body":{"license.html":{},"todo.html":{}}}],["printed",{"_index":990,"title":{},"body":{"license.html":{}}}],["private",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["probability",{"_index":196,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":891,"title":{},"body":{"license.html":{}}}],["production",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":454,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":374,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../opentelemetry",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":599,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":839,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":595,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["propagator.interface",{"_index":46,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.module",{"_index":103,"title":{},"body":{"modules/CompositePropagatorModule.html":{}}}],["propagator.module.ts",{"_index":9,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{}}}],["propagator.service",{"_index":18,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:11",{"_index":145,"title":{},"body":{"classes/HttpTextPropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":40,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:29",{"_index":160,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator/b3",{"_index":8,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":100,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":106,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":109,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":174,"title":{},"body":{"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":123,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["properties",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"license.html":{}}}],["provided",{"_index":729,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":49,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":904,"title":{},"body":{"license.html":{}}}],["public",{"_index":165,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":793,"title":{},"body":{"license.html":{}}}],["publish",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":766,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":682,"title":{},"body":{"license.html":{}}}],["readable",{"_index":851,"title":{},"body":{"license.html":{}}}],["readme",{"_index":488,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["reason",{"_index":973,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":893,"title":{},"body":{"license.html":{}}}],["received",{"_index":775,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":834,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":575,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":920,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":829,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":885,"title":{},"body":{"license.html":{}}}],["release",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":741,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":981,"title":{},"body":{"license.html":{}}}],["represent",{"_index":738,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":759,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":791,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":897,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":661,"title":{},"body":{"license.html":{}}}],["request",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":892,"title":{},"body":{"license.html":{}}}],["reset",{"_index":1009,"title":{},"body":{"overview.html":{}}}],["response",{"_index":597,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":965,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":916,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":713,"title":{},"body":{"license.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":844,"title":{},"body":{"license.html":{}}}],["return",{"_index":41,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["review",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":735,"title":{},"body":{"license.html":{}}}],["rights",{"_index":961,"title":{},"body":{"license.html":{}}}],["risks",{"_index":922,"title":{},"body":{"license.html":{}}}],["root",{"_index":50,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["royalty",{"_index":788,"title":{},"body":{"license.html":{}}}],["run",{"_index":548,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":989,"title":{},"body":{"license.html":{}}}],["sample",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":201,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":197,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":565,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":800,"title":{},"body":{"license.html":{}}}],["sections",{"_index":666,"title":{},"body":{"license.html":{}}}],["see",{"_index":376,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":803,"title":{},"body":{"license.html":{}}}],["send",{"_index":559,"title":{},"body":{"index.html":{}}}],["sending",{"_index":621,"title":{},"body":{"index.html":{}}}],["sent",{"_index":758,"title":{},"body":{"license.html":{}}}],["separable",{"_index":742,"title":{},"body":{"license.html":{}}}],["separate",{"_index":882,"title":{},"body":{"license.html":{}}}],["service",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/http",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":664,"title":{},"body":{"license.html":{}}}],["shares",{"_index":697,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":72,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":710,"title":{},"body":{"license.html":{}}}],["sole",{"_index":964,"title":{},"body":{"license.html":{}}}],["solely",{"_index":915,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"license.html":{}}}],["span",{"_index":129,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('exception",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.addevent('response",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":139,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["spanexporterservice",{"_index":133,"title":{"classes/SpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["special",{"_index":935,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1000,"title":{},"body":{"license.html":{}}}],["stackcontextmanager",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":601,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":603,"title":{},"body":{"index.html":{}}}],["started",{"_index":370,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":876,"title":{},"body":{"license.html":{}}}],["stated",{"_index":799,"title":{},"body":{"license.html":{}}}],["statement",{"_index":869,"title":{},"body":{"license.html":{}}}],["statements",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":329,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":841,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":944,"title":{},"body":{"license.html":{}}}],["string",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":478,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":795,"title":{},"body":{"license.html":{}}}],["submission",{"_index":872,"title":{},"body":{"license.html":{}}}],["submit",{"_index":752,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":750,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":776,"title":{},"body":{"license.html":{}}}],["such",{"_index":689,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":881,"title":{},"body":{"license.html":{}}}],["support",{"_index":957,"title":{},"body":{"license.html":{}}}],["sync",{"_index":574,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":987,"title":{},"body":{"license.html":{}}}],["systems",{"_index":762,"title":{},"body":{"license.html":{}}}],["table",{"_index":510,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1013,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":561,"title":{},"body":{"index.html":{},"todo.html":{}}}],["terminate",{"_index":826,"title":{},"body":{"license.html":{}}}],["terms",{"_index":659,"title":{},"body":{"license.html":{}}}],["test",{"_index":421,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":21,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"classes/HttpTextPropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"license.html":{}}}],["theory",{"_index":926,"title":{},"body":{"license.html":{}}}],["there's",{"_index":608,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":746,"title":{},"body":{"license.html":{}}}],["third",{"_index":857,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":124,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":169,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptextpropagatorservice.getpropagator",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":125,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":126,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["those",{"_index":806,"title":{},"body":{"license.html":{}}}],["through",{"_index":667,"title":{},"body":{"license.html":{}}}],["throw",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":643,"title":{},"body":{"index.html":{}}}],["title",{"_index":911,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1012,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["tort",{"_index":927,"title":{},"body":{"license.html":{}}}],["trace",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":184,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":568,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":764,"title":{},"body":{"license.html":{}}}],["trade",{"_index":888,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":845,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":886,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":804,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":715,"title":{},"body":{"license.html":{}}}],["translation",{"_index":716,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":550,"title":{},"body":{"index.html":{}}}],["true",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts1086",{"_index":648,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":638,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":646,"title":{},"body":{"index.html":{}}}],["types",{"_index":721,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":652,"title":{},"body":{"index.html":{}}}],["typo",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":148,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/SpanExporterService.html":{}}}],["under",{"_index":681,"title":{},"body":{"license.html":{}}}],["union",{"_index":676,"title":{},"body":{"license.html":{}}}],["unless",{"_index":874,"title":{},"body":{"license.html":{}}}],["unused",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":615,"title":{},"body":{"index.html":{}}}],["update",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":26,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopHttpTextPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["used",{"_index":146,"title":{},"body":{"classes/HttpTextPropagatorService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["uses",{"_index":543,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":919,"title":{},"body":{"license.html":{}}}],["value",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1021,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":755,"title":{},"body":{"license.html":{}}}],["version",{"_index":378,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["via",{"_index":572,"title":{},"body":{"index.html":{}}}],["void",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":607,"title":{},"body":{"index.html":{}}}],["warning",{"_index":551,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":906,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":900,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":856,"title":{},"body":{"license.html":{}}}],["whether",{"_index":690,"title":{},"body":{"license.html":{}}}],["whole",{"_index":739,"title":{},"body":{"license.html":{}}}],["within",{"_index":778,"title":{},"body":{"license.html":{}}}],["without",{"_index":619,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":722,"title":{},"body":{"license.html":{},"todo.html":{}}}],["works",{"_index":463,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":784,"title":{},"body":{"license.html":{}}}],["writing",{"_index":773,"title":{},"body":{"license.html":{}}}],["written",{"_index":756,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":622,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":995,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":1015,"title":{},"body":{"todo.html":{}}}],["zone.js",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1008,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return HttpTextPropagator as B3Propagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { B3PropagatorModule } from '../b3-propagator/b3-propagator.module';\nimport { HttpTraceContextPropagatorModule } from '../http-trace-context-propagator/http-trace-context-propagator.module';\nimport { JaegerHttpTracePropagatorModule } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.module';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return HttpTextPropagator as CompositePropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpTextPropagatorService.html":{"url":"classes/HttpTextPropagatorService.html","title":"class - HttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTextPropagatorService\n\n            \n\n\n            \n                Implements\n            \n            \n                            IPropagator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts:11\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\nimport { IPropagator } from './propagator.interface';\n\n/**\n * HttpTextPropagatorService\n */\nexport class HttpTextPropagatorService implements IPropagator {\n  /**\n   * Not used, just a definition for injection\n   */\n  getPropagator(): HttpTextPropagator {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:29\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { NoopHttpTextPropagator } from '@opentelemetry/api';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopHttpTextPropagatorModule.html":{"url":"modules/NoopHttpTextPropagatorModule.html","title":"module - NoopHttpTextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopHttpTextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTextPropagatorService } from '../http-text-propagator.service';\nimport { NoopHttpTextPropagatorService } from './noop-http-text-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: HttpTextPropagatorService, useClass: NoopHttpTextPropagatorService }\n  ]\n})\nexport class NoopHttpTextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopHttpTextPropagatorService.html":{"url":"injectables/NoopHttpTextPropagatorService.html","title":"injectable - NoopHttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopHttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopHttpTextPropagator\n\n\n                    \n                    \n                    \n                        Returns :     HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as NoopHttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { HttpTextPropagator, NoopHttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopHttpTextPropagatorService implements IPropagator {\n  /**\n   * Return an NoopHttpTextPropagator\n   * @return HttpTextPropagator as NoopHttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, httpTextPropagatorService: HttpTextPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        httpTextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:215\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:134\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:163\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:185\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:199\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, CanonicalCode } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { HttpTextPropagatorService } from '../services/propagator/http-text-propagator.service';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param httpTextPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(HttpTextPropagatorService)\n    private httpTextPropagatorService: HttpTextPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.httpTextPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttributes(\n              {\n                'http.status_code': event.status,\n                'http.status_text': event.statusText,\n              }\n            );\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttributes(\n              {\n                'http.status_text': event.statusText,\n                'http.status_code': event.status\n              }\n            );\n            span.addEvent('exception',\n            {\n              'exception.type': event.name,\n              'exception.message': event.message,\n              'exception.stacktrace': event.error\n            });\n            span.setStatus({\n              code: CanonicalCode.UNKNOWN,\n              message: event.message\n            });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CollectorExporterConfigBrowser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBrowser,\n} from '@opentelemetry/exporter-collector/build/src/platform/browser/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfig\n   */\n  private otelcolConfig: CollectorExporterConfigBrowser;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpanExporterService.html":{"url":"classes/SpanExporterService.html","title":"class - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IExporter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:8\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\n\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used, just a definition for injection\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            class\n            SpanExporterService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            class\n            HttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-http-text-propagator.service.ts\n            \n            injectable\n            NoopHttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.10.2\n        \n            @opentelemetry/propagator-jaeger : ^0.9.0\n        \n            @opentelemetry/web : ^0.10.2\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nNEW VERSION : !!breaking change!! this version use module (not configuration) more info in this readme\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 2 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopHttpTextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n jaeger-propagator doesn't work with version 0.9.0  \n Add new version collector in example after this fix (https://github.com/open-telemetry/opentelemetry-collector/issues/1385)  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
