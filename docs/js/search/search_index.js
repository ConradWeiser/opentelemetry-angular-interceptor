var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/B3PropagatorModule.html",[0,1.216,1,2.094]],["body/modules/B3PropagatorModule.html",[1,3.378,2,1.459,3,0.387,4,0.387,5,0.286,6,0.335,7,3.061,8,2.722,9,2.452,10,0.473,11,0.032,12,2.13,13,0.556,14,2.525,15,1.866,16,3.043,17,3.061,18,2.525,19,2.13,20,1.866,21,1.717,22,1.582,23,1.717,24,1.582,25,1.717,26,1.866,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02]],["title/injectables/B3PropagatorService.html",[16,1.886,32,0.749]],["body/injectables/B3PropagatorService.html",[3,0.356,4,0.356,5,0.262,6,0.395,7,3.6,8,3.202,10,0.459,11,0.032,13,0.511,16,3.354,27,0.356,28,0.457,29,0.018,30,0.023,31,0.018,32,1.145,33,1.714,34,1.869,35,0.894,36,0.753,37,1.462,38,2.783,39,1.054,40,3.228,41,1.701,42,6.077,43,1.142,44,2.877,45,2.019,46,2.046,47,1.577,48,2.253,49,1.714,50,1.714,51,1.453,52,0.821]],["title/interfaces/CommonCollectorConfig.html",[53,0.882,54,1.565]],["body/interfaces/CommonCollectorConfig.html",[3,0.26,4,0.26,5,0.192,6,0.225,10,0.225,11,0.032,13,0.373,27,0.492,29,0.013,30,0.019,31,0.013,35,0.653,36,0.55,52,0.6,53,1.38,54,2.249,55,1.252,56,1.494,57,1.494,58,2.119,59,1.902,60,1.935,61,2.086,62,2.819,63,2.937,64,2.937,65,2.937,66,3.183,67,1.902,68,1.62,69,3.183,70,1.935,71,2.589,72,2.589,73,1.388,74,1.935,75,1.826,76,1.494,77,1.252,78,1.935,79,2.119,80,1.151,81,1.494,82,1.645,83,2.332,84,2.119,85,1.645,86,2.583,87,1.365,88,1.151,89,1.494,90,1.388,91,2.332,92,2.119,93,1.505,94,1.151,95,1.365,96,1.645,97,1.645]],["title/modules/CompositePropagatorModule.html",[0,1.216,98,2.094]],["body/modules/CompositePropagatorModule.html",[2,1.459,3,0.387,4,0.387,5,0.286,6,0.335,9,2.452,10,0.473,11,0.032,12,2.13,13,0.556,14,2.525,15,1.866,18,2.525,19,2.13,20,1.866,21,1.717,22,1.582,23,1.717,24,1.582,25,1.717,26,1.866,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02,98,3.378,99,3.061,100,3.061,101,3.378,102,3.514]],["title/injectables/CompositePropagatorService.html",[32,0.749,101,2.094]],["body/injectables/CompositePropagatorService.html",[3,0.284,4,0.284,5,0.21,6,0.389,8,2,10,0.467,11,0.032,13,0.408,16,3.328,17,2.248,18,2.361,27,0.284,28,0.365,29,0.015,30,0.02,31,0.015,32,0.987,33,1.371,34,1.495,35,0.715,36,0.602,37,1.26,38,2.546,39,1.163,41,1.556,43,0.913,44,2.671,45,1.74,46,1.636,47,1.261,48,1.801,49,1.371,50,1.371,51,1.162,52,0.657,61,1.162,67,1.162,68,1.685,73,1.072,99,3.552,100,3.552,101,3.406,103,3.068,104,3.086,105,3.411,106,3.411,107,2.581,108,1.801,109,3.086,110,5.702,111,2,112,2.361,113,1.892,114,2,115,1.495,116,2,117,3.086,118,3.159,119,3.086,120,3.086,121,2.581,122,3.086,123,3.086,124,3.086]],["title/modules/ConsoleSpanExporterModule.html",[0,1.216,125,2.094]],["body/modules/ConsoleSpanExporterModule.html",[2,1.459,3,0.387,4,0.387,5,0.286,6,0.335,10,0.473,11,0.032,12,2.13,13,0.556,14,2.525,15,1.866,22,1.582,23,1.717,24,1.582,25,1.717,26,1.866,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02,62,2.035,125,3.378,126,3.061,127,3.005,128,3.514,129,3.378,130,3.798,131,2.764]],["title/injectables/ConsoleSpanExporterService.html",[32,0.749,129,2.094]],["body/injectables/ConsoleSpanExporterService.html",[3,0.355,4,0.355,5,0.262,6,0.394,10,0.435,11,0.031,13,0.509,27,0.355,28,0.455,29,0.018,30,0.023,31,0.018,32,1.142,33,1.709,35,0.891,36,0.75,37,1.46,39,1.051,41,1.699,43,1.139,49,1.709,50,1.709,51,1.448,52,0.819,80,2.015,126,3.593,127,3.043,129,3.719,132,2.493,133,2.878,134,3.719,135,3.847,136,4.801,137,3.464,138,2.614,139,2.803,140,2.04]],["title/modules/HttpTraceContextPropagatorModule.html",[0,1.216,141,2.094]],["body/modules/HttpTraceContextPropagatorModule.html",[2,1.43,3,0.38,4,0.38,5,0.28,6,0.329,9,2.403,10,0.47,11,0.032,12,2.103,13,0.545,14,2.493,15,1.829,18,2.493,19,2.103,20,1.829,21,1.682,22,1.55,23,1.682,24,1.55,25,1.682,26,1.829,27,0.38,28,0.487,29,0.02,30,0.024,31,0.02,68,1.801,105,3.005,112,1.994,113,2.495,114,2.668,141,3.336,142,2.999]],["title/injectables/HttpTraceContextPropagatorService.html",[32,0.749,105,1.886]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.347,4,0.347,5,0.256,6,0.388,10,0.455,11,0.031,13,0.498,27,0.347,28,0.446,29,0.018,30,0.023,31,0.018,32,1.127,33,1.672,34,1.823,35,0.872,36,0.734,37,1.439,38,2.757,39,1.028,40,3.149,41,1.685,43,1.114,44,2.855,45,1.987,46,1.996,47,1.538,48,2.198,49,1.672,50,1.672,51,1.418,52,0.801,68,1.826,105,3.323,113,2.529,114,3.151,142,3.543,143,5.049]],["title/interfaces/IExporter.html",[53,0.882,138,1.713]],["body/interfaces/IExporter.html",[3,0.382,4,0.382,5,0.282,6,0.413,10,0.331,11,0.031,27,0.382,29,0.02,30,0.025,31,0.02,35,0.96,36,0.808,37,1.53,39,1.132,41,1.227,43,1.227,53,1.538,55,1.841,80,2.112,133,3.443,134,3.822,137,3.664,138,2.74,140,2.197,144,3.466,145,3.766,146,4.145,147,3.766,148,5.169]],["title/interfaces/IPropagator.html",[45,1.32,53,0.882]],["body/interfaces/IPropagator.html",[3,0.387,4,0.387,5,0.286,6,0.416,10,0.335,11,0.031,27,0.387,29,0.02,30,0.025,31,0.02,35,0.973,36,0.819,37,1.543,38,2.87,39,1.147,41,1.243,43,1.243,44,2.745,45,2.13,47,1.717,53,1.548,55,1.866,88,2.421,145,3.798,147,3.798,149,3.514,150,4.201,151,4.36,152,5.213]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.216,153,2.094]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.43,3,0.38,4,0.38,5,0.28,6,0.329,9,2.403,10,0.47,11,0.032,12,2.103,13,0.545,14,2.493,15,1.829,18,2.493,19,2.103,20,1.829,21,1.682,22,1.55,23,1.682,24,1.55,25,1.682,26,1.829,27,0.38,28,0.487,29,0.02,30,0.024,31,0.02,68,1.801,106,3.005,112,2.72,115,1.994,116,2.668,153,3.336,154,2.999]],["title/injectables/JaegerHttpTracePropagatorService.html",[32,0.749,106,1.886]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.284,4,0.284,5,0.209,6,0.419,10,0.455,11,0.032,13,0.407,27,0.284,28,0.364,29,0.015,30,0.02,31,0.015,32,0.985,33,1.368,34,1.491,35,0.985,36,0.6,37,1.258,38,2.543,39,1.33,41,1.554,43,0.911,44,2.669,45,1.737,46,1.632,47,1.258,49,1.368,50,1.368,51,1.159,52,0.655,60,2.059,61,1.159,67,1.6,68,1.908,69,2.254,73,1.069,89,2.581,90,1.979,93,1.159,94,2.145,103,2.842,106,3.065,108,1.797,111,1.995,112,2.882,115,1.491,116,3.403,118,3.155,154,3.825,155,2.243,156,4.251,157,3.079,158,5.51,159,2.243,160,1.995,161,2.575,162,2.575,163,2.243,164,2.575,165,3.079,166,3.079,167,3.079]],["title/interfaces/JaegerPropagatorConfig.html",[53,0.882,86,1.565]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.285,4,0.285,5,0.21,6,0.247,10,0.247,11,0.032,13,0.409,27,0.509,29,0.015,30,0.02,31,0.015,35,0.717,36,0.603,52,0.658,53,1.437,54,2.066,55,1.374,56,1.64,57,1.64,58,1.64,59,1.981,60,2.066,61,1.606,62,2.364,63,2.262,64,2.262,65,2.262,66,2.79,67,1.165,68,1.368,69,3.159,70,1.498,71,2.005,72,2.005,73,1.075,74,1.498,75,2.005,76,1.64,77,1.374,78,2.066,79,2.262,80,1.264,81,1.64,82,1.806,83,2.85,84,2.262,85,1.806,86,2.832,87,2.066,88,1.743,89,2.79,90,1.482,91,2.49,92,2.262,93,1.606,94,1.264,95,1.498,96,1.806,97,1.806]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.216,168,2.354]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.43,3,0.38,4,0.38,5,0.28,6,0.329,9,2.403,10,0.47,11,0.032,12,2.103,13,0.545,14,2.493,15,1.829,18,2.493,19,2.103,20,2.614,21,2.295,22,1.55,23,1.682,24,1.55,25,1.682,26,1.829,27,0.38,28,0.487,29,0.02,30,0.024,31,0.02,112,1.994,168,3.75,169,2.999,170,2.999,171,3.336,172,4.117]],["title/injectables/NoopTextMapPropagatorService.html",[32,0.749,171,2.094]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.351,4,0.351,5,0.259,6,0.391,10,0.433,11,0.031,13,0.504,20,2.541,21,2.003,27,0.351,28,0.451,29,0.018,30,0.023,31,0.018,32,1.136,33,1.693,34,1.846,35,0.883,36,0.743,37,1.451,38,2.77,39,1.041,41,1.693,43,1.128,44,2.866,45,2.003,46,2.021,47,1.557,49,1.693,50,1.693,51,1.435,52,0.811,107,3.188,112,2.374,169,3.571,170,3.571,171,3.176,173,4.902,174,6.057]],["title/interfaces/OpenTelemetryConfig.html",[53,0.882,90,1.122]],["body/interfaces/OpenTelemetryConfig.html",[3,0.275,4,0.275,5,0.203,6,0.238,10,0.238,11,0.032,13,0.394,27,0.502,29,0.014,30,0.02,31,0.014,35,0.691,36,0.581,52,0.635,53,1.414,54,2.508,55,1.325,56,1.581,57,1.581,58,1.581,59,1.802,60,2.014,61,1.95,62,2.318,63,2.204,64,2.204,65,2.204,66,2.746,67,1.802,68,1.333,69,2.991,70,1.444,71,1.932,72,1.932,73,1.036,74,1.444,75,1.932,76,1.581,77,1.325,78,2.508,79,2.204,80,1.218,81,1.581,82,1.74,83,2.427,84,2.204,85,1.74,86,2.973,87,1.444,88,1.218,89,1.581,90,1.799,91,3.293,92,2.991,93,1.565,94,1.218,95,1.444,96,1.74,97,1.74]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[175,1.713,176,2.094]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.118,4,0.118,5,0.087,6,0.382,10,0.402,11,0.032,13,0.17,18,0.621,19,1.816,21,0.524,27,0.118,28,0.331,29,0.006,30,0.01,31,0.006,32,0.501,35,1.03,36,0.25,37,0.64,39,1.263,41,0.973,43,1.177,47,0.883,48,0.748,49,0.57,50,0.57,51,0.483,52,0.901,59,1.238,60,1.046,61,1.594,62,2.05,63,0.68,64,2.109,66,2.109,67,1.742,73,1.544,74,1.046,80,0.883,85,0.748,87,1.592,88,1.499,90,1.142,93,0.483,94,1.816,96,2.322,103,1.919,108,2.471,111,0.831,113,0.96,118,3.582,127,3.039,130,0.934,131,2.357,133,1.919,136,1.807,137,2.595,140,0.68,145,1.574,155,0.934,160,0.831,162,1.072,163,3.67,175,1.485,176,1.4,177,1.282,178,4,179,1.072,180,1.807,181,2.801,182,3.54,183,2.161,184,2.161,185,2.801,186,2.161,187,2.801,188,2.342,189,2.161,190,2.161,191,2.161,192,2.801,193,1.282,194,1.807,195,3.327,196,1.574,197,2.161,198,1.815,199,3.67,200,2.161,201,2.161,202,4.783,203,1.282,204,1.807,205,5.638,206,2.161,207,1.282,208,1.282,209,1.261,210,2.161,211,1.807,212,2.161,213,1.282,214,3.327,215,1.574,216,2.161,217,1.282,218,1.282,219,2.342,220,3.287,221,2.342,222,1.807,223,1.282,224,3.978,225,3.287,226,1.282,227,2.161,228,1.807,229,2.749,230,1.4,231,1.807,232,2.801,233,3.287,234,2.161,235,2.749,236,1.282,237,2.161,238,2.161,239,2.801,240,0.934,241,1.072,242,1.282,243,0.934,244,2.161,245,1.282,246,2.161,247,1.282,248,2.161,249,2.161,250,1.282,251,1.282,252,1.282,253,1.282,254,1.282,255,1.282,256,2.161,257,1.282,258,1.282,259,1.282,260,1.282,261,1.282,262,1.282,263,1.282,264,1.282,265,1.282,266,1.282,267,1.282,268,1.282,269,2.395,270,2.161,271,2.161,272,2.161,273,2.161,274,2.161,275,2.161,276,1.282,277,0.934,278,1.282,279,1.282,280,1.282,281,1.282,282,1.282,283,1.282,284,1.282,285,1.282,286,0.934,287,1.282,288,1.282,289,1.282,290,1.282,291,1.282,292,1.282,293,1.282,294,1.282,295,1.282,296,1.282,297,1.282,298,1.282,299,1.282,300,1.282,301,1.282,302,1.282,303,1.282,304,1.282,305,1.282,306,1.282,307,2.801,308,1.282,309,2.801,310,1.282,311,1.282,312,1.282,313,1.282,314,1.282,315,1.282,316,1.282,317,2.161,318,1.282,319,1.282,320,1.282,321,0.934,322,1.282]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.216,323,2.094]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.205,3,0.32,4,0.32,5,0.236,6,0.368,10,0.458,11,0.032,12,2.115,13,0.459,22,1.306,23,1.417,24,1.306,25,1.883,26,1.541,27,0.32,28,0.41,29,0.016,30,0.022,31,0.016,37,1.027,39,0.947,41,1.027,43,1.027,52,0.738,61,1.949,67,1.306,73,1.205,90,1.916,93,1.735,94,2.115,103,2.024,108,2.024,160,2.247,161,2.901,176,2.986,215,2.527,240,2.527,323,3.72,324,4.609,325,3.468,326,4.609,327,3.468,328,4.609,329,3.468,330,5.176,331,4.609,332,3.854,333,3.854,334,3.468,335,3.468,336,2.901,337,4.609,338,3.468,339,2.527,340,3.468,341,3.468,342,2.901,343,3.468,344,3.468]],["title/modules/OtelColExporterModule.html",[0,1.216,345,2.094]],["body/modules/OtelColExporterModule.html",[2,1.469,3,0.39,4,0.39,5,0.288,6,0.338,10,0.474,11,0.032,12,2.139,13,0.56,14,2.535,15,1.879,22,1.593,23,1.728,24,1.593,25,1.728,26,1.879,27,0.39,28,0.501,29,0.02,30,0.025,31,0.02,127,2.243,128,3.538,130,3.814,131,2.775,345,3.392,346,3.082,347,3.392,348,3.082]],["title/interfaces/OtelCollectorConfig.html",[53,0.882,78,1.565]],["body/interfaces/OtelCollectorConfig.html",[3,0.275,4,0.275,5,0.203,6,0.238,10,0.238,11,0.032,13,0.394,27,0.502,29,0.014,30,0.02,31,0.014,35,0.691,36,0.581,52,0.635,53,1.414,54,2.014,55,1.325,56,1.581,57,1.581,58,1.581,59,1.95,60,2.014,61,1.95,62,2.318,63,2.204,64,2.204,65,2.204,66,2.746,67,1.95,68,1.333,69,3.13,70,1.444,71,1.932,72,1.932,73,1.036,74,1.444,75,1.932,76,2.204,77,1.847,78,2.318,79,2.991,80,1.699,81,2.204,82,2.427,83,2.794,84,2.991,85,1.74,86,2.638,87,1.444,88,1.218,89,1.581,90,1.444,91,2.427,92,2.204,93,1.565,94,1.218,95,1.444,96,1.74,97,1.74,349,4.158]],["title/injectables/OtelcolExporterService.html",[32,0.749,347,2.094]],["body/injectables/OtelcolExporterService.html",[3,0.287,4,0.287,5,0.212,6,0.422,10,0.457,11,0.032,13,0.412,27,0.287,28,0.58,29,0.015,30,0.02,31,0.015,32,0.993,33,1.385,35,0.993,36,0.608,37,1.269,39,1.338,41,1.562,43,0.923,49,1.385,50,1.385,51,1.174,52,0.663,59,1.614,60,2.077,61,1.174,65,1.653,67,1.614,73,1.083,79,1.653,84,1.653,90,1.987,92,2.599,93,1.174,94,2.157,103,2.861,108,1.82,111,2.02,118,3.176,132,2.02,134,3.421,137,2.861,138,2.273,139,2.271,140,1.653,155,2.271,160,2.02,163,2.271,164,2.607,346,3.846,347,3.421,350,4.288,351,3.118,352,5.279,353,5.535,354,3.118,355,3.124,356,2.607,357,3.118,358,3.118,359,3.118,360,3.118,361,3.118,362,3.118]],["title/classes/SpanExporterService.html",[28,0.382,131,1.713]],["body/classes/SpanExporterService.html",[3,0.386,4,0.386,5,0.285,6,0.415,10,0.415,11,0.031,27,0.386,28,0.496,29,0.02,30,0.025,31,0.02,36,0.817,37,1.54,39,1.143,41,1.239,43,1.239,51,1.958,95,2.519,131,2.758,132,2.713,134,3.836,137,3.303,138,3,139,3.05,140,2.22,321,3.05,363,3.05,364,4.35,365,4.187,366,3.79,367,3.79]],["title/classes/TextMapPropagatorService.html",[19,1.32,28,0.382]],["body/classes/TextMapPropagatorService.html",[3,0.376,4,0.376,5,0.277,6,0.408,10,0.408,11,0.031,19,2.395,21,2.09,27,0.376,28,0.482,29,0.019,30,0.024,31,0.019,34,1.974,35,0.944,36,0.795,37,1.514,38,2.839,39,1.113,41,1.206,43,1.206,44,2.708,45,2.284,46,2.161,47,1.665,51,1.926,95,2.477,321,2.97,363,2.97,366,3.727,367,3.727,368,4.278,369,4.076]],["title/changelog.html",[370,1.579,371,1.579,372,2.263]],["body/changelog.html",[5,0.289,11,0.017,29,0.011,30,0.017,31,0.011,52,0.906,59,1.347,68,0.776,70,1.172,77,1.075,87,1.172,88,1.462,102,3.561,113,1.59,115,1.733,175,1.283,194,2.024,198,2.319,209,3.475,230,3.049,286,1.763,339,1.763,348,2.607,372,2.993,373,2.42,374,2.42,375,1.763,376,2.42,377,1.568,378,2.42,379,3.428,380,2.42,381,2.42,382,2.993,383,5.954,384,4.258,385,2.42,386,5.702,387,4.258,388,2.024,389,2.42,390,2.42,391,2.42,392,5.584,393,5.584,394,2.42,395,2.42,396,2.42,397,4.199,398,3.578,399,2.42,400,3.578,401,2.42,402,4.258,403,2.42,404,2.42,405,2.42,406,2.607,407,4.705,408,2.42,409,2.42,410,2.42,411,2.42,412,2.024,413,2.42,414,2.42,415,2.42,416,3.578,417,2.42,418,4.258,419,2.42,420,2.42,421,2.42,422,2.42,423,2.42,424,2.024,425,2.42,426,4.705,427,2.42,428,3.561,429,4.705,430,3.578,431,3.561,432,3.578,433,3.578,434,2.993,435,3.578,436,4.705,437,2.42,438,3.578,439,2.42,440,2.42,441,2.42,442,2.42,443,4.258,444,2.42,445,2.42,446,2.42,447,2.42,448,2.42,449,3.578,450,2.42,451,2.42,452,2.42,453,2.42,454,2.42,455,2.42,456,2.42,457,2.42,458,1.568,459,5.438,460,2.42,461,2.42,462,2.42,463,2.42,464,2.024,465,2.42,466,2.42,467,2.42,468,2.42,469,2.42,470,2.42,471,2.42,472,2.42,473,1.763,474,2.42,475,2.42,476,2.42,477,2.42,478,2.024,479,2.42,480,2.42,481,2.42,482,2.42,483,3.578,484,3.578,485,2.42,486,2.42,487,2.42,488,2.993,489,3.578,490,3.578,491,2.42,492,2.42,493,2.42,494,4.705,495,2.42,496,2.42,497,2.42,498,2.42,499,2.42,500,3.578,501,2.42,502,2.42]],["title/coverage.html",[503,3.675]],["body/coverage.html",[5,0.209,6,0.511,7,2.237,8,1.99,11,0.031,16,1.792,19,1.255,20,1.885,21,1.734,28,0.502,29,0.015,30,0.02,31,0.015,32,1.352,34,2.757,45,1.255,52,0.654,53,1.555,54,1.487,56,2.919,57,2.919,67,1.156,68,1.682,78,1.487,86,1.487,90,1.067,93,1.156,99,2.237,100,2.237,101,1.99,105,1.792,106,1.792,112,2.355,113,1.885,114,1.99,116,1.99,126,2.237,127,1.628,129,1.99,131,1.628,132,3.151,138,1.628,142,2.237,144,2.568,149,2.568,154,2.237,169,2.237,170,2.237,171,1.99,175,1.628,176,1.99,178,2.568,179,2.568,346,2.237,347,1.99,364,2.568,368,2.568,503,2.568,504,2.568,505,3.071,506,3.071,507,6.343,508,3.071,509,5.947,510,4.244,511,4.244,512,3.071,513,3.071,514,3.071,515,2.568,516,3.071,517,3.071,518,3.071,519,3.071,520,2.568]],["title/dependencies.html",[521,2.263,522,2.515]],["body/dependencies.html",[11,0.032,13,0.534,15,1.793,29,0.019,30,0.024,31,0.019,77,1.793,115,1.955,159,2.94,241,3.376,243,2.94,277,2.94,355,2.94,382,4.252,388,3.376,397,3.376,522,2.615,523,4.036,524,6.313,525,4.036,526,5.084,527,4.036,528,4.036,529,4.036,530,5.084,531,4.252,532,4.036,533,4.036,534,4.036,535,4.036,536,4.036,537,4.036,538,4.036,539,4.036,540,3.376,541,3.376,542,4.036,543,4.036,544,4.036,545,4.036]],["title/index.html",[36,0.528,370,1.579,371,1.579]],["body/index.html",[0,1.924,1,0.93,3,0.49,10,0.312,11,0.03,12,0.97,13,0.19,17,1.046,22,0.541,23,0.587,24,0.541,27,0.219,28,0.17,29,0.019,30,0.011,31,0.007,47,0.97,48,1.386,53,0.649,54,0.695,58,1.259,59,1.876,61,0.894,62,1.893,63,1.259,64,1.61,65,1.259,66,1.61,68,1.429,69,2.073,70,2.04,73,0.825,74,1.15,76,2.907,77,2.401,78,0.695,79,1.871,80,0.587,81,1.259,82,1.386,83,1.773,84,0.761,86,1.471,87,1.709,88,2.133,89,1.259,90,1.055,91,1.386,92,1.259,98,1.968,113,0.638,115,2.04,121,1.201,125,0.93,127,1.259,133,2.602,140,1.259,141,0.93,143,1.201,151,1.201,153,0.93,159,1.73,175,2.472,180,1.201,182,1.201,188,1.201,196,1.046,198,1.539,204,1.201,209,1.386,214,3.27,215,2.213,219,2.54,221,1.986,228,1.201,229,1.201,230,3.742,231,1.201,235,1.201,240,1.046,243,2.213,269,1.046,277,1.046,323,1.968,332,1.201,333,2.952,339,2.571,342,1.201,345,1.968,348,1.046,355,2.213,356,1.201,366,1.046,370,1.386,371,1.386,375,1.73,377,3.133,406,1.046,412,1.986,431,1.201,458,3.228,473,2.213,478,1.201,520,1.986,521,1.201,522,3.133,531,1.201,540,2.54,541,1.201,546,3.037,547,3.037,548,1.436,549,4.458,550,1.436,551,3.875,552,1.436,553,1.986,554,2.375,555,2.375,556,3.529,557,2.375,558,2.375,559,4.458,560,3.037,561,1.436,562,1.436,563,2.375,564,3.529,565,1.986,566,2.375,567,2.375,568,3.728,569,3.728,570,3.529,571,1.436,572,1.436,573,2.375,574,2.375,575,2.375,576,2.375,577,2.375,578,2.375,579,1.436,580,1.436,581,1.436,582,1.436,583,1.201,584,1.201,585,2.375,586,1.436,587,1.436,588,1.436,589,1.436,590,1.436,591,1.436,592,1.436,593,1.436,594,1.201,595,3.037,596,1.436,597,1.436,598,1.436,599,1.436,600,1.201,601,1.201,602,1.436,603,1.436,604,1.436,605,1.436,606,1.436,607,1.436,608,2.375,609,1.436,610,2.375,611,2.375,612,1.436,613,1.436,614,1.436,615,1.436,616,1.436,617,1.436,618,2.375,619,2.375,620,0.93,621,1.436,622,1.436,623,1.436,624,1.436,625,1.436,626,1.436,627,1.201,628,1.201,629,1.436,630,1.436,631,3.909,632,3.909,633,3.909,634,4.982,635,3.909,636,3.27,637,3.909,638,3.909,639,3.909,640,1.436,641,1.436,642,1.436,643,1.436,644,1.436,645,1.436,646,1.201,647,1.436,648,1.436,649,1.436,650,1.436,651,1.436,652,1.436,653,2.375,654,2.375,655,1.436,656,1.436,657,1.436,658,1.436,659,1.436,660,1.436,661,1.436]],["title/license.html",[370,1.579,371,1.579,662,2.263]],["body/license.html",[4,0.438,5,0.28,10,0.087,11,0.012,20,1.308,25,0.443,28,0.128,29,0.009,30,0.009,31,0.005,35,0.251,39,0.296,55,0.482,58,0.575,59,0.408,70,2.169,73,0.859,74,0.525,147,0.79,198,0.703,209,1.093,211,1.567,222,3.041,269,0.79,286,1.801,367,1.365,377,0.703,379,1.801,424,0.907,458,0.703,473,3.906,488,1.567,504,2.068,515,0.907,551,0.79,553,0.907,565,1.567,583,0.907,594,0.907,601,0.907,620,0.703,628,2.779,636,1.567,662,4.944,663,2.944,664,2.473,665,1.085,666,1.085,667,1.085,668,4.312,669,4.87,670,2.944,671,3.323,672,1.085,673,5.066,674,4.479,675,1.085,676,1.085,677,1.085,678,4.479,679,4.87,680,3.636,681,4.479,682,1.873,683,1.085,684,3.323,685,1.085,686,1.085,687,1.085,688,2.944,689,1.085,690,4.312,691,2.944,692,1.873,693,1.085,694,2.473,695,1.873,696,1.085,697,1.085,698,5.297,699,2.944,700,1.873,701,1.085,702,1.873,703,1.085,704,1.085,705,1.085,706,1.085,707,1.085,708,1.085,709,2.473,710,1.085,711,2.473,712,1.873,713,4.87,714,1.085,715,1.085,716,3.636,717,4.312,718,2.944,719,1.873,720,2.473,721,3.636,722,1.085,723,1.085,724,1.085,725,1.085,726,1.085,727,1.873,728,1.085,729,1.085,730,1.085,731,4.964,732,2.473,733,1.873,734,1.085,735,4.312,736,1.873,737,1.085,738,3.323,739,1.873,740,1.085,741,5.297,742,1.085,743,1.085,744,1.085,745,1.085,746,1.085,747,1.085,748,1.873,749,2.473,750,1.085,751,1.085,752,1.085,753,1.085,754,1.085,755,2.944,756,3.323,757,1.085,758,1.873,759,2.944,760,1.873,761,1.085,762,3.323,763,1.873,764,1.085,765,1.085,766,2.473,767,1.085,768,1.085,769,1.085,770,1.085,771,1.873,772,0.907,773,1.085,774,1.085,775,2.473,776,1.085,777,1.085,778,2.473,779,1.085,780,1.085,781,1.085,782,2.944,783,4.479,784,1.085,785,1.085,786,1.873,787,4.121,788,2.473,789,2.944,790,1.873,791,1.873,792,1.873,793,1.873,794,2.473,795,1.873,796,2.473,797,1.873,798,1.873,799,1.873,800,1.873,801,0.907,802,1.873,803,1.085,804,1.085,805,3.323,806,3.898,807,2.473,808,1.873,809,1.085,810,1.085,811,1.873,812,1.873,813,1.085,814,1.085,815,2.473,816,1.873,817,1.085,818,1.085,819,1.085,820,2.473,821,1.085,822,1.085,823,1.085,824,1.873,825,1.873,826,1.085,827,1.085,828,1.085,829,1.085,830,1.085,831,1.085,832,1.085,833,1.873,834,1.085,835,1.085,836,1.085,837,1.085,838,1.085,839,1.085,840,1.085,841,1.085,842,2.473,843,1.085,844,2.473,845,1.085,846,1.085,847,1.085,848,1.085,849,4.121,850,1.085,851,1.085,852,1.085,853,1.085,854,1.085,855,2.944,856,1.873,857,2.944,858,1.085,859,1.085,860,1.085,861,1.085,862,1.085,863,2.473,864,1.085,865,1.085,866,1.873,867,1.873,868,1.085,869,1.085,870,1.085,871,1.873,872,1.085,873,1.085,874,3.323,875,1.085,876,1.085,877,1.085,878,1.085,879,1.085,880,1.085,881,1.085,882,2.473,883,2.944,884,1.085,885,1.085,886,1.085,887,1.085,888,1.085,889,1.085,890,1.085,891,1.085,892,1.085,893,1.085,894,1.085,895,1.873,896,1.085,897,1.085,898,1.873,899,1.085,900,1.085,901,2.944,902,1.085,903,1.085,904,1.085,905,1.085,906,1.085,907,1.085,908,1.085,909,2.944,910,2.473,911,2.473,912,2.473,913,1.873,914,1.873,915,2.473,916,1.873,917,1.873,918,1.873,919,1.873,920,1.085,921,1.085,922,1.085,923,1.085,924,1.085,925,1.085,926,1.085,927,1.085,928,1.085,929,1.873,930,1.085,931,1.085,932,1.085,933,1.085,934,3.323,935,1.085,936,1.085,937,1.085,938,1.085,939,1.085,940,1.085,941,1.085,942,1.085,943,3.323,944,1.085,945,1.085,946,1.085,947,1.085,948,1.085,949,0.907,950,1.085,951,1.085,952,1.085,953,1.085,954,1.085,955,1.085,956,1.085,957,1.085,958,1.085,959,1.085,960,1.085,961,1.085,962,2.473,963,1.085,964,1.085,965,1.085,966,1.085,967,1.085,968,1.873,969,1.085,970,1.085,971,1.085,972,1.085,973,1.085,974,1.085,975,1.085,976,1.085,977,1.085,978,1.085,979,1.085,980,1.085,981,1.085,982,1.085,983,1.085,984,1.873,985,1.085,986,1.085,987,1.085,988,1.873,989,1.873,990,1.085,991,1.085,992,1.085,993,1.085,994,1.085,995,1.085,996,1.085,997,1.085,998,1.085,999,1.085,1000,1.085,1001,1.085,1002,1.085,1003,1.085,1004,1.085,1005,1.085,1006,1.085,1007,1.085,1008,1.085,1009,1.085,1010,1.085,1011,1.085,1012,1.085]],["title/modules.html",[2,1.526]],["body/modules.html",[1,2.932,2,1.572,11,0.026,29,0.021,30,0.026,31,0.021,98,2.932,125,2.932,141,2.932,153,2.932,168,3.297,323,2.932,345,2.932,620,4.179,1013,6.449,1014,6.449]],["title/overview.html",[1015,3.675]],["body/overview.html",[0,1.789,2,1.651,11,0.027,22,1.789,24,1.789,29,0.023,30,0.027,31,0.023,33,2.111,55,2.111,336,3.974,363,3.462,406,3.462,434,3.974,522,3.079,600,3.974,949,3.974,1015,3.974,1016,4.752,1017,5.617,1018,4.752,1019,4.752,1020,4.752]],["title/todo.html",[370,1.579,371,1.579,1021,2.263]],["body/todo.html",[11,0.03,29,0.019,30,0.024,31,0.019,52,0.845,59,2.187,76,2.668,77,2.235,88,1.623,113,1.764,115,2.813,133,2.937,175,2.105,195,3.321,196,3.666,209,3.673,230,2.573,375,2.893,377,2.573,379,3.666,428,3.321,458,2.573,464,3.321,551,4.024,568,3.321,569,3.321,584,3.321,620,3.261,627,5.012,646,3.321,731,3.321,772,3.321,801,3.321,1021,4.62,1022,3.971,1023,3.971,1024,5.524,1025,3.971,1026,3.971,1027,3.971,1028,3.971]],["title/miscellaneous/variables.html",[1029,2.263,1030,3.246]],["body/miscellaneous/variables.html",[6,0.381,11,0.029,29,0.023,30,0.027,31,0.023,36,0.93,52,1.015,56,2.529,57,2.985,80,1.949,81,2.529,93,2.255,94,1.949,95,2.31,97,2.784,1029,3.99,1030,3.99,1031,4.771]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":578,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.0",{"_index":388,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.10.1",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":397,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.11.0",{"_index":382,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":572,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":428,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["02",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":198,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":412,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.5",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":656,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":406,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":664,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":666,"title":{},"body":{"license.html":{}}}],["2020",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":478,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":589,"title":{},"body":{"index.html":{}}}],["5.2.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":515,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["563071d",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":434,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.6.0",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1020,"title":{},"body":{"overview.html":{}}}],["735b05d",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1019,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":424,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":541,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/node",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":887,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":965,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":962,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":658,"title":{},"body":{"index.html":{}}}],["act",{"_index":972,"title":{},"body":{"license.html":{}}}],["acting",{"_index":686,"title":{},"body":{"license.html":{}}}],["acts",{"_index":941,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":873,"title":{},"body":{"license.html":{}}}],["adding",{"_index":607,"title":{},"body":{"index.html":{}}}],["additional",{"_index":874,"title":{},"body":{"license.html":{}}}],["additions",{"_index":757,"title":{},"body":{"license.html":{}}}],["advised",{"_index":960,"title":{},"body":{"license.html":{}}}],["against",{"_index":825,"title":{},"body":{"license.html":{}}}],["agent",{"_index":629,"title":{},"body":{"index.html":{}}}],["agree",{"_index":975,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":912,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":892,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":830,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":643,"title":{},"body":{"index.html":{}}}],["alone",{"_index":821,"title":{},"body":{"license.html":{}}}],["along",{"_index":864,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":872,"title":{},"body":{"license.html":{}}}],["already",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":609,"title":{},"body":{"index.html":{}}}],["always",{"_index":197,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":660,"title":{},"body":{"index.html":{}}}],["amd",{"_index":635,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":845,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":852,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":858,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":969,"title":{},"body":{"license.html":{}}}],["angular",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":641,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":15,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":13,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":745,"title":{},"body":{"license.html":{}}}],["apache",{"_index":663,"title":{},"body":{"license.html":{}}}],["api",{"_index":162,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":571,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":564,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":596,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":587,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":622,"title":{},"body":{"index.html":{}}}],["appand",{"_index":613,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":595,"title":{},"body":{"index.html":{}}}],["appear",{"_index":869,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":739,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":910,"title":{},"body":{"license.html":{}}}],["application",{"_index":549,"title":{},"body":{"index.html":{}}}],["applies",{"_index":814,"title":{},"body":{"license.html":{}}}],["apply",{"_index":984,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":994,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":927,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1003,"title":{},"body":{"license.html":{}}}],["arising",{"_index":948,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":981,"title":{},"body":{"license.html":{}}}],["associated",{"_index":932,"title":{},"body":{"license.html":{}}}],["assume",{"_index":930,"title":{},"body":{"license.html":{}}}],["async",{"_index":581,"title":{},"body":{"index.html":{}}}],["attach",{"_index":985,"title":{},"body":{"license.html":{}}}],["attached",{"_index":737,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":855,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":682,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":732,"title":{},"body":{"license.html":{}}}],["available",{"_index":620,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":17,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3propagator",{"_index":42,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatormodule",{"_index":1,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":16,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b63afc1",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":638,"title":{},"body":{"index.html":{}}}],["base",{"_index":645,"title":{},"body":{"index.html":{}}}],["based",{"_index":601,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":914,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":762,"title":{},"body":{"license.html":{}}}],["below",{"_index":740,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":708,"title":{},"body":{"license.html":{}}}],["between",{"_index":577,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":754,"title":{},"body":{"license.html":{}}}],["body",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":986,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":579,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":600,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":989,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1014,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":531,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":605,"title":{},"body":{"index.html":{}}}],["canonicalcode",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["canonicalcode.internal",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":847,"title":{},"body":{"license.html":{}}}],["cause",{"_index":636,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":851,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":372,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":947,"title":{},"body":{"license.html":{}}}],["charge",{"_index":796,"title":{},"body":{"license.html":{}}}],["choose",{"_index":963,"title":{},"body":{"license.html":{}}}],["claim",{"_index":827,"title":{},"body":{"license.html":{}}}],["claims",{"_index":816,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["classes",{"_index":363,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"overview.html":{}}}],["code",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":356,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["collector/build/src/types",{"_index":357,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collector/issues/1385",{"_index":1027,"title":{},"body":{"todo.html":{}}}],["collectorexporter",{"_index":352,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":353,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":354,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":822,"title":{},"body":{"license.html":{}}}],["command",{"_index":611,"title":{},"body":{"index.html":{}}}],["comment",{"_index":995,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":957,"title":{},"body":{"license.html":{}}}],["commit",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":54,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":634,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":14,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["communication",{"_index":766,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":726,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1006,"title":{},"body":{"license.html":{}}}],["complies",{"_index":880,"title":{},"body":{"license.html":{}}}],["compose",{"_index":619,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":623,"title":{},"body":{"index.html":{}}}],["composite",{"_index":102,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":98,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":101,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":954,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":669,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":359,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":166,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":361,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":360,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":574,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":160,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["configure",{"_index":563,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":946,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":971,"title":{},"body":{"license.html":{}}}],["console",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":136,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":125,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":129,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":779,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["constitutes",{"_index":831,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":164,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":104,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":155,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["construed",{"_index":875,"title":{},"body":{"license.html":{}}}],["contained",{"_index":861,"title":{},"body":{"license.html":{}}}],["content",{"_index":907,"title":{},"body":{"license.html":{}}}],["contents",{"_index":553,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":181,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":700,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":585,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":756,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":820,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":882,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":783,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":832,"title":{},"body":{"license.html":{}}}],["control",{"_index":688,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":689,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":728,"title":{},"body":{"license.html":{}}}],["copies",{"_index":839,"title":{},"body":{"license.html":{}}}],["copy",{"_index":844,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":679,"title":{},"body":{"license.html":{}}}],["core",{"_index":590,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1025,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":828,"title":{},"body":{"license.html":{}}}],["cours",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":503,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":603,"title":{},"body":{"index.html":{}}}],["cross",{"_index":826,"title":{},"body":{"license.html":{}}}],["current",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":903,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":943,"title":{},"body":{"license.html":{}}}],["date",{"_index":836,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":22,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":659,"title":{},"body":{"index.html":{}}}],["default",{"_index":80,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":977,"title":{},"body":{"license.html":{}}}],["define",{"_index":145,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":39,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":183,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":191,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":367,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["definitions",{"_index":672,"title":{},"body":{"license.html":{}}}],["del",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":938,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":654,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":522,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":640,"title":{},"body":{"index.html":{}}}],["depends",{"_index":633,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":548,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":741,"title":{},"body":{"license.html":{}}}],["derived",{"_index":742,"title":{},"body":{"license.html":{}}}],["describing",{"_index":904,"title":{},"body":{"license.html":{}}}],["description",{"_index":35,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["designated",{"_index":781,"title":{},"body":{"license.html":{}}}],["determining",{"_index":926,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":625,"title":{},"body":{"index.html":{}}}],["different",{"_index":879,"title":{},"body":{"license.html":{}}}],["dir",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":694,"title":{},"body":{"license.html":{}}}],["direction",{"_index":696,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":908,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":776,"title":{},"body":{"license.html":{}}}],["display",{"_index":565,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":805,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":863,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":671,"title":{},"body":{"license.html":{}}}],["doc",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":618,"title":{},"body":{"index.html":{}}}],["docs",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":677,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":504,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1026,"title":{},"body":{"todo.html":{}}}],["don't",{"_index":993,"title":{},"body":{"license.html":{}}}],["done",{"_index":1028,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":789,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1001,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":743,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":746,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":763,"title":{},"body":{"license.html":{}}}],["en",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":988,"title":{},"body":{"license.html":{}}}],["end",{"_index":983,"title":{},"body":{"license.html":{}}}],["entities",{"_index":687,"title":{},"body":{"license.html":{}}}],["entity",{"_index":681,"title":{},"body":{"license.html":{}}}],["environment",{"_index":597,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":598,"title":{},"body":{"index.html":{}}}],["error",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":959,"title":{},"body":{"license.html":{}}}],["event",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.error",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":458,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["except",{"_index":807,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":778,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":795,"title":{},"body":{"license.html":{}}}],["executed",{"_index":893,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":933,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":710,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":884,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["exported",{"_index":650,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":133,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["exporter.interface",{"_index":139,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["exporter.module.ts",{"_index":128,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service",{"_index":130,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service.ts",{"_index":132,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":135,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":350,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:43",{"_index":351,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:8",{"_index":365,"title":{},"body":{"classes/SpanExporterService.html":{}}}],["exporters",{"_index":588,"title":{},"body":{"index.html":{}}}],["exports",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":917,"title":{},"body":{"license.html":{}}}],["f",{"_index":621,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":955,"title":{},"body":{"license.html":{}}}],["fake",{"_index":592,"title":{},"body":{"index.html":{}}}],["false",{"_index":566,"title":{},"body":{"index.html":{}}}],["features",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":964,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":987,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":703,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":837,"title":{},"body":{"license.html":{}}}],["files",{"_index":720,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":922,"title":{},"body":{"license.html":{}}}],["fix",{"_index":646,"title":{},"body":{"index.html":{},"todo.html":{}}}],["fixes",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":842,"title":{},"body":{"license.html":{}}}],["form",{"_index":713,"title":{},"body":{"license.html":{}}}],["format",{"_index":997,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":327,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":328,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":798,"title":{},"body":{"license.html":{}}}],["generally",{"_index":586,"title":{},"body":{"index.html":{}}}],["generated",{"_index":727,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":134,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["getpropagator",{"_index":38,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["getting",{"_index":370,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1023,"title":{},"body":{"todo.html":{}}}],["give",{"_index":147,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":555,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":952,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1011,"title":{},"body":{"license.html":{}}}],["grant",{"_index":788,"title":{},"body":{"license.html":{}}}],["granted",{"_index":712,"title":{},"body":{"license.html":{}}}],["granting",{"_index":683,"title":{},"body":{"license.html":{}}}],["grants",{"_index":791,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1013,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":939,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":979,"title":{},"body":{"license.html":{}}}],["header",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["here",{"_index":627,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":790,"title":{},"body":{"license.html":{}}}],["herein",{"_index":889,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":978,"title":{},"body":{"license.html":{}}}],["http",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":179,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:132",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:161",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:183",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:197",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:213",{"_index":193,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":189,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":626,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":615,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":667,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1008,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":332,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":333,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":639,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":568,"title":{},"body":{"index.html":{},"todo.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":552,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":152,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":143,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":141,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":105,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1002,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":991,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":138,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":701,"title":{},"body":{"license.html":{}}}],["iii",{"_index":707,"title":{},"body":{"license.html":{}}}],["implement",{"_index":602,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":151,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":51,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["implied",{"_index":918,"title":{},"body":{"license.html":{}}}],["import",{"_index":10,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["improving",{"_index":777,"title":{},"body":{"license.html":{}}}],["inability",{"_index":950,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":945,"title":{},"body":{"license.html":{}}}],["include",{"_index":749,"title":{},"body":{"license.html":{}}}],["included",{"_index":736,"title":{},"body":{"license.html":{}}}],["includes",{"_index":859,"title":{},"body":{"license.html":{}}}],["including",{"_index":717,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":760,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":786,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":980,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":976,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":967,"title":{},"body":{"license.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":734,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":695,"title":{},"body":{"license.html":{}}}],["individual",{"_index":709,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["information",{"_index":992,"title":{},"body":{"license.html":{}}}],["informational",{"_index":870,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":819,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":833,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":184,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":201,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(textmappropagatorservice",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":32,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":185,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":190,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":148,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":186,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":187,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":561,"title":{},"body":{"index.html":{}}}],["installation",{"_index":554,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":823,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":758,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":188,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":175,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":632,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":325,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":329,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":178,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":324,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":126,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":144,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":146,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":346,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":364,"title":{},"body":{"classes/SpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":142,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":154,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":169,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":149,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":150,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/text",{"_index":368,"title":{},"body":{"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptors",{"_index":177,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":53,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":45,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":799,"title":{},"body":{"license.html":{}}}],["issue",{"_index":772,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":196,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerconfiguration",{"_index":562,"title":{},"body":{"index.html":{}}}],["jaegerhttppropagator",{"_index":593,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":158,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":167,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":153,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":106,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":86,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":665,"title":{},"body":{"license.html":{}}}],["jest",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":540,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":570,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":546,"title":{},"body":{"index.html":{}}}],["key",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["kind",{"_index":916,"title":{},"body":{"license.html":{}}}],["language",{"_index":1010,"title":{},"body":{"license.html":{}}}],["law",{"_index":911,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":829,"title":{},"body":{"license.html":{}}}],["legal",{"_index":684,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1016,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":934,"title":{},"body":{"license.html":{}}}],["liable",{"_index":942,"title":{},"body":{"license.html":{}}}],["library",{"_index":547,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":817,"title":{},"body":{"license.html":{}}}],["license",{"_index":662,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":877,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1005,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":834,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":678,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":919,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1012,"title":{},"body":{"license.html":{}}}],["limited",{"_index":718,"title":{},"body":{"license.html":{}}}],["link",{"_index":753,"title":{},"body":{"license.html":{}}}],["list",{"_index":584,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":770,"title":{},"body":{"license.html":{}}}],["literal",{"_index":349,"title":{},"body":{"interfaces/OtelCollectorConfig.html":{}}}],["litigation",{"_index":824,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":951,"title":{},"body":{"license.html":{}}}],["losses",{"_index":958,"title":{},"body":{"license.html":{}}}],["made",{"_index":733,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":769,"title":{},"body":{"license.html":{}}}],["make",{"_index":810,"title":{},"body":{"license.html":{}}}],["making",{"_index":715,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":956,"title":{},"body":{"license.html":{}}}],["managed",{"_index":774,"title":{},"body":{"license.html":{}}}],["management",{"_index":697,"title":{},"body":{"license.html":{}}}],["manager",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":21,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":780,"title":{},"body":{"license.html":{}}}],["marks",{"_index":899,"title":{},"body":{"license.html":{}}}],["matching",{"_index":30,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":674,"title":{},"body":{"license.html":{}}}],["means",{"_index":692,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":723,"title":{},"body":{"license.html":{}}}],["media",{"_index":729,"title":{},"body":{"license.html":{}}}],["medium",{"_index":840,"title":{},"body":{"license.html":{}}}],["meet",{"_index":841,"title":{},"body":{"license.html":{}}}],["member",{"_index":651,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":921,"title":{},"body":{"license.html":{}}}],["merely",{"_index":752,"title":{},"body":{"license.html":{}}}],["merge",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":37,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["miscellaneous",{"_index":1029,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":716,"title":{},"body":{"license.html":{}}}],["modified",{"_index":846,"title":{},"body":{"license.html":{}}}],["modify",{"_index":871,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":876,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":330,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":551,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":898,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":648,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":818,"title":{},"body":{"license.html":{}}}],["need",{"_index":653,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":937,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":940,"title":{},"body":{"license.html":{}}}],["new",{"_index":52,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":12,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":649,"title":{},"body":{"index.html":{}}}],["non",{"_index":794,"title":{},"body":{"license.html":{}}}],["noop",{"_index":172,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":591,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":173,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":174,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":168,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":171,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":868,"title":{},"body":{"license.html":{}}}],["notable",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":888,"title":{},"body":{"license.html":{}}}],["notice",{"_index":735,"title":{},"body":{"license.html":{}}}],["notices",{"_index":849,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":886,"title":{},"body":{"license.html":{}}}],["npm",{"_index":560,"title":{},"body":{"index.html":{}}}],["number",{"_index":192,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["object",{"_index":721,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":968,"title":{},"body":{"license.html":{}}}],["observable",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1007,"title":{},"body":{"license.html":{}}}],["offer",{"_index":811,"title":{},"body":{"license.html":{}}}],["ok",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":594,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":614,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":47,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":644,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":48,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":355,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":159,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":140,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":90,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":176,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":180,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":323,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":599,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":557,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":637,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["options",{"_index":642,"title":{},"body":{"index.html":{}}}],["origin",{"_index":905,"title":{},"body":{"license.html":{}}}],["original",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":348,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":345,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":347,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":78,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":949,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":705,"title":{},"body":{"license.html":{}}}],["overide",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1015,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":680,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":702,"title":{},"body":{"license.html":{}}}],["package",{"_index":521,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1000,"title":{},"body":{"license.html":{}}}],["param",{"_index":163,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["parent",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":857,"title":{},"body":{"license.html":{}}}],["particular",{"_index":923,"title":{},"body":{"license.html":{}}}],["party",{"_index":867,"title":{},"body":{"license.html":{}}}],["patent",{"_index":806,"title":{},"body":{"license.html":{}}}],["percent",{"_index":704,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":575,"title":{},"body":{"index.html":{}}}],["perform",{"_index":803,"title":{},"body":{"license.html":{}}}],["permission",{"_index":896,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":711,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":792,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":856,"title":{},"body":{"license.html":{}}}],["places",{"_index":862,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":961,"title":{},"body":{"license.html":{}}}],["power",{"_index":693,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":714,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":801,"title":{},"body":{"license.html":{},"todo.html":{}}}],["printed",{"_index":999,"title":{},"body":{"license.html":{}}}],["private",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["probability",{"_index":194,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":900,"title":{},"body":{"license.html":{}}}],["production",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":464,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":375,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../opentelemetry",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":608,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":848,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":604,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["propagator.interface",{"_index":46,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":9,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":18,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:11",{"_index":369,"title":{},"body":{"classes/TextMapPropagatorService.html":{}}}],["propagator.service.ts:15",{"_index":156,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":40,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:28",{"_index":157,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator/b3",{"_index":8,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":100,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":170,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["properties",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"license.html":{}}}],["provided",{"_index":738,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":49,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":913,"title":{},"body":{"license.html":{}}}],["public",{"_index":161,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":802,"title":{},"body":{"license.html":{}}}],["publish",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":775,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":691,"title":{},"body":{"license.html":{}}}],["readable",{"_index":860,"title":{},"body":{"license.html":{}}}],["readme",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":982,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":902,"title":{},"body":{"license.html":{}}}],["received",{"_index":784,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":843,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":583,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":929,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":838,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":894,"title":{},"body":{"license.html":{}}}],["release",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":750,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":990,"title":{},"body":{"license.html":{}}}],["represent",{"_index":747,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":768,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":800,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":906,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":670,"title":{},"body":{"license.html":{}}}],["request",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":901,"title":{},"body":{"license.html":{}}}],["reset",{"_index":1018,"title":{},"body":{"overview.html":{}}}],["response",{"_index":606,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":974,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":925,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":722,"title":{},"body":{"license.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":853,"title":{},"body":{"license.html":{}}}],["return",{"_index":41,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["review",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":744,"title":{},"body":{"license.html":{}}}],["rights",{"_index":970,"title":{},"body":{"license.html":{}}}],["risks",{"_index":931,"title":{},"body":{"license.html":{}}}],["root",{"_index":50,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["royalty",{"_index":797,"title":{},"body":{"license.html":{}}}],["run",{"_index":556,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":998,"title":{},"body":{"license.html":{}}}],["sample",{"_index":200,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":199,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":195,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":573,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":809,"title":{},"body":{"license.html":{}}}],["sections",{"_index":675,"title":{},"body":{"license.html":{}}}],["see",{"_index":377,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":812,"title":{},"body":{"license.html":{}}}],["send",{"_index":567,"title":{},"body":{"index.html":{}}}],["sending",{"_index":630,"title":{},"body":{"index.html":{}}}],["sent",{"_index":767,"title":{},"body":{"license.html":{}}}],["separable",{"_index":751,"title":{},"body":{"license.html":{}}}],["separate",{"_index":891,"title":{},"body":{"license.html":{}}}],["service",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/text",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":673,"title":{},"body":{"license.html":{}}}],["shares",{"_index":706,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":72,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":331,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":719,"title":{},"body":{"license.html":{}}}],["sole",{"_index":973,"title":{},"body":{"license.html":{}}}],["solely",{"_index":924,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["span",{"_index":127,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":137,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["spanexporterservice",{"_index":131,"title":{"classes/SpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["special",{"_index":944,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1009,"title":{},"body":{"license.html":{}}}],["stack",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":610,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":612,"title":{},"body":{"index.html":{}}}],["started",{"_index":371,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":885,"title":{},"body":{"license.html":{}}}],["stated",{"_index":808,"title":{},"body":{"license.html":{}}}],["statement",{"_index":878,"title":{},"body":{"license.html":{}}}],["statements",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":326,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":850,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":953,"title":{},"body":{"license.html":{}}}],["string",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":488,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":804,"title":{},"body":{"license.html":{}}}],["submission",{"_index":881,"title":{},"body":{"license.html":{}}}],["submit",{"_index":761,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":759,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":785,"title":{},"body":{"license.html":{}}}],["such",{"_index":698,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":890,"title":{},"body":{"license.html":{}}}],["support",{"_index":966,"title":{},"body":{"license.html":{}}}],["sync",{"_index":582,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":996,"title":{},"body":{"license.html":{}}}],["systems",{"_index":771,"title":{},"body":{"license.html":{}}}],["table",{"_index":520,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1022,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":569,"title":{},"body":{"index.html":{},"todo.html":{}}}],["terminate",{"_index":835,"title":{},"body":{"license.html":{}}}],["terms",{"_index":668,"title":{},"body":{"license.html":{}}}],["test",{"_index":431,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":20,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":44,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["textmappropagatorservice",{"_index":19,"title":{"classes/TextMapPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["theory",{"_index":935,"title":{},"body":{"license.html":{}}}],["there's",{"_index":617,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":755,"title":{},"body":{"license.html":{}}}],["third",{"_index":866,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":122,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":165,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":123,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":124,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":358,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.textmappropagatorservice.getpropagator",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["those",{"_index":815,"title":{},"body":{"license.html":{}}}],["through",{"_index":676,"title":{},"body":{"license.html":{}}}],["throw",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":652,"title":{},"body":{"index.html":{}}}],["title",{"_index":920,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1021,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["tort",{"_index":936,"title":{},"body":{"license.html":{}}}],["trace",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":182,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":576,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":773,"title":{},"body":{"license.html":{}}}],["trade",{"_index":897,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":854,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":895,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":813,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":724,"title":{},"body":{"license.html":{}}}],["translation",{"_index":725,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":558,"title":{},"body":{"index.html":{}}}],["true",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":657,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":647,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":655,"title":{},"body":{"index.html":{}}}],["types",{"_index":730,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":661,"title":{},"body":{"index.html":{}}}],["typo",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["under",{"_index":690,"title":{},"body":{"license.html":{}}}],["union",{"_index":685,"title":{},"body":{"license.html":{}}}],["unless",{"_index":883,"title":{},"body":{"license.html":{}}}],["unused",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":624,"title":{},"body":{"index.html":{}}}],["update",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":26,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["used",{"_index":366,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["uses",{"_index":550,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":928,"title":{},"body":{"license.html":{}}}],["value",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1030,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":764,"title":{},"body":{"license.html":{}}}],["version",{"_index":379,"title":{},"body":{"changelog.html":{},"license.html":{},"todo.html":{}}}],["via",{"_index":580,"title":{},"body":{"index.html":{}}}],["void",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":616,"title":{},"body":{"index.html":{}}}],["warning",{"_index":559,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":915,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":909,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":865,"title":{},"body":{"license.html":{}}}],["whether",{"_index":699,"title":{},"body":{"license.html":{}}}],["whole",{"_index":748,"title":{},"body":{"license.html":{}}}],["within",{"_index":787,"title":{},"body":{"license.html":{}}}],["without",{"_index":628,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":731,"title":{},"body":{"license.html":{},"todo.html":{}}}],["works",{"_index":473,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":793,"title":{},"body":{"license.html":{}}}],["writing",{"_index":782,"title":{},"body":{"license.html":{}}}],["written",{"_index":765,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":631,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1004,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":1024,"title":{},"body":{"todo.html":{}}}],["zone.js",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1017,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:28\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, textMapPropagatorService: TextMapPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        textMapPropagatorService\n                                                  \n                                                        \n                                                                        TextMapPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:213\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:132\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:161\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:183\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:197\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, CanonicalCode } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { TextMapPropagatorService } from '../services/propagator/text-map-propagator.service';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param textMapPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(TextMapPropagatorService)\n    private textMapPropagatorService: TextMapPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.textMapPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttributes(\n              {\n                'http.status_code': event.status,\n                'http.status_text': event.statusText,\n              }\n            );\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttributes(\n              {\n                'http.status_text': event.statusText,\n                'http.status_code': event.status\n              }\n            );\n            span.recordException({\n              name: event.name,\n              message: event.message,\n              stack: event.error\n            });\n            span.setStatus( {\n              code: CanonicalCode.INTERNAL\n            });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBase,\n} from '@opentelemetry/exporter-collector/build/src/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpanExporterService.html":{"url":"classes/SpanExporterService.html","title":"class - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IExporter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:8\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\n\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used, just a definition for injection\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextMapPropagatorService.html":{"url":"classes/TextMapPropagatorService.html","title":"class - TextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                TextMapPropagatorService\n\n            \n\n\n            \n                Implements\n            \n            \n                            IPropagator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts:11\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     TextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TextMapPropagator } from '@opentelemetry/api';\nimport { IPropagator } from './propagator.interface';\n\n/**\n * TextMapPropagatorService\n */\nexport class TextMapPropagatorService implements IPropagator {\n  /**\n   * Not used, just a definition for injection\n   */\n  getPropagator(): TextMapPropagator {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            class\n            SpanExporterService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts\n            \n            class\n            TextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.11.0\n        \n            @opentelemetry/propagator-jaeger : ^0.10.0\n        \n            @opentelemetry/web : ^0.11.0\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 2 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n jaeger-propagator doesn't work with version 0.9.0  \n Add new version collector in example after this fix (https://github.com/open-telemetry/opentelemetry-collector/issues/1385)  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
