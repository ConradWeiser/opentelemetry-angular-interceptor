var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/B3PropagatorConfig.html",[0,0.688,1,1.273]],["body/interfaces/B3PropagatorConfig.html",[0,1.168,1,2.227,2,1.075,3,0.235,4,0.235,5,0.174,6,0.204,7,1.26,8,1.26,9,0.581,10,1.721,11,0.535,12,1.426,13,1.136,14,2.5,15,2.544,16,0.794,17,0.03,18,2.123,19,2.163,20,1.666,21,1.665,22,1.819,23,2.123,24,1.96,25,1.426,26,0.292,27,1.26,28,0.204,29,1.799,30,2.247,31,0.735,32,1.26,33,0.498,34,1.665,35,1.665,36,0.735,37,1.163,38,1.136,39,1.945,40,2.301,41,1.804,42,1.163,43,1.494,44,1.494,45,1.96,46,1.26,47,0.996,48,1.665,49,2.123,50,1.369,51,2.301,52,2.123,53,1.369,54,1.075,55,0.923,56,1.665,57,1.369,58,1.494,59,2.247,60,0.996,61,1.26,62,1.053,63,1.96,64,1.804,65,1.804,66,1.136,67,0.856,68,1.54,69,1.665,70,0.644,71,1.369,72,1.369,73,1.075,74,1.369,75,0.012,76,0.017,77,0.012]],["title/modules/B3PropagatorModule.html",[78,1.179,79,2.149]],["body/modules/B3PropagatorModule.html",[3,0.379,4,0.379,5,0.28,6,0.328,17,0.03,26,0.45,28,0.328,33,0.379,75,0.02,76,0.024,77,0.02,79,3.567,80,1.487,81,3.276,82,2.923,83,2.641,84,2.113,85,2.476,86,1.872,87,3.223,88,2.641,89,2.406,90,2.285,91,1.732,92,1.604,93,1.732,94,1.604,95,1.604,96,1.872,97,0.791]],["title/injectables/B3PropagatorService.html",[87,1.941,98,0.688]],["body/injectables/B3PropagatorService.html",[1,2.201,3,0.248,4,0.248,5,0.183,6,0.402,9,0.865,10,1.274,11,0.565,12,1.482,13,1.181,15,2.294,16,1.368,17,0.03,18,2.38,19,2.201,20,2.139,21,2.294,23,2.176,25,1.482,26,0.402,28,0.215,31,0.776,33,0.248,36,1.094,54,1.6,62,1.376,66,0.838,67,1.475,70,0.475,75,0.013,76,0.018,77,0.013,81,4.013,82,3.581,87,3.068,88,1.731,91,1.135,97,0.519,98,0.865,99,1.227,100,1.577,101,2.44,102,2.7,103,3.464,104,3.058,105,1.374,106,4.011,107,4.127,108,2.795,109,1.445,110,1.731,111,1.602,112,4.127,113,2.037,114,4.127,115,2.927,116,2.7,117,4.011,118,1.374,119,5.472,120,2.927,121,1.942,122,2.947,123,1.445,124,1.73,125,1.915,126,1.577,127,1.227,128,1.227,129,1.135,130,2.147,131,2.927,132,2.927,133,2.927,134,1.731,135,2.927,136,2.927,137,2.927]],["title/interfaces/CommonCollectorConfig.html",[0,0.688,34,1.377]],["body/interfaces/CommonCollectorConfig.html",[0,1.148,1,2.036,2,1.02,3,0.223,4,0.223,5,0.165,6,0.193,7,1.195,8,1.195,9,0.551,10,1.691,11,0.507,12,1.373,13,1.567,14,1.298,15,2.575,16,1.414,17,0.03,18,1.602,19,1.746,20,1.373,21,1.103,22,1.617,23,1.888,24,1.298,25,0.944,26,0.281,27,1.195,28,0.193,29,1.746,30,2.201,31,0.697,32,1.736,33,0.491,34,1.888,35,2.296,36,1.014,37,1.602,38,1.414,39,2.428,40,2.724,41,2.488,42,1.602,43,2.059,44,2.059,45,2.704,46,1.195,47,0.944,48,1.602,49,2.072,50,1.298,51,2.245,52,2.072,53,1.298,54,1.02,55,0.875,56,1.602,57,1.298,58,1.417,59,2.201,60,0.944,61,1.195,62,1.014,63,1.887,64,1.736,65,1.736,66,1.094,67,0.812,68,1.482,69,1.602,70,0.62,71,1.298,72,1.298,73,1.02,74,1.298,75,0.012,76,0.017,77,0.012]],["title/modules/CompositePropagatorModule.html",[78,1.179,138,2.149]],["body/modules/CompositePropagatorModule.html",[3,0.379,4,0.379,5,0.28,6,0.328,17,0.03,26,0.45,28,0.328,33,0.379,75,0.02,76,0.024,77,0.02,80,1.487,83,2.641,84,2.113,85,2.476,86,1.872,89,2.406,90,2.285,91,1.732,92,1.604,93,1.732,94,1.604,95,1.604,96,1.872,97,0.791,138,3.567,139,3.276,140,3.276,141,3.567,142,3.749]],["title/injectables/CompositePropagatorService.html",[98,0.688,141,2.149]],["body/injectables/CompositePropagatorService.html",[3,0.288,4,0.288,5,0.213,6,0.38,9,0.711,11,0.655,13,0.972,16,0.972,17,0.03,26,0.446,28,0.25,31,0.9,33,0.288,36,0.9,38,1.582,70,0.551,75,0.015,76,0.02,77,0.015,82,2.222,87,3.513,88,2.007,89,2.783,91,1.316,97,0.602,98,0.958,99,1.423,100,1.829,104,2.783,105,1.521,108,2.977,109,2.728,111,1.411,113,1.676,118,1.13,121,1.84,122,3.108,123,1.676,124,1.916,127,1.423,128,1.423,129,1.316,139,3.79,140,3.79,141,3.617,143,3.395,144,3.59,145,3.59,146,3.395,147,2.85,148,5.943,149,2.222,150,2.551,151,2.076,152,2.222,153,1.676,154,2.222,155,3.395,156,3.395,157,3.395,158,2.85,159,3.395,160,3.395,161,3.395]],["title/modules/ConsoleSpanExporterModule.html",[78,1.179,162,2.149]],["body/modules/ConsoleSpanExporterModule.html",[3,0.377,4,0.377,5,0.279,6,0.327,17,0.03,26,0.45,28,0.327,33,0.377,39,1.867,75,0.02,76,0.024,77,0.02,80,1.482,84,2.11,85,2.471,86,1.867,92,1.599,93,1.727,94,1.599,95,1.599,96,1.867,97,0.789,162,3.56,163,3.266,164,3.217,165,3.266,166,3.56,167,3.266,168,2.686,169,2.399]],["title/injectables/ConsoleSpanExporterService.html",[98,0.688,166,2.149]],["body/injectables/ConsoleSpanExporterService.html",[3,0.349,4,0.349,5,0.258,6,0.381,9,0.863,11,0.794,17,0.03,22,1.861,26,0.417,28,0.303,33,0.349,70,0.668,75,0.018,76,0.023,77,0.018,97,0.73,98,1.086,99,1.726,105,1.725,111,1.271,118,1.371,121,1.981,127,1.726,128,1.726,129,1.597,163,3.801,164,3.519,166,3.895,169,2.218,170,2.694,171,2.558,172,3.895,173,4.118,174,4.996,175,3.627,176,2.558,177,2.218]],["title/modules/HttpTraceContextPropagatorModule.html",[78,1.179,178,2.149]],["body/modules/HttpTraceContextPropagatorModule.html",[3,0.372,4,0.372,5,0.275,6,0.323,17,0.03,26,0.448,28,0.323,33,0.372,38,1.671,75,0.019,76,0.024,77,0.019,80,1.461,83,2.595,84,2.091,85,2.45,86,1.84,89,2.364,90,2.261,91,1.702,92,1.576,93,1.702,94,1.576,95,1.576,96,1.84,97,0.778,144,3.188,150,2.167,151,2.652,152,2.872,178,3.529,179,3.22]],["title/injectables/HttpTraceContextPropagatorService.html",[98,0.688,144,1.941]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.343,4,0.343,5,0.253,6,0.377,9,0.847,11,0.78,17,0.03,26,0.435,28,0.297,31,1.072,33,0.343,38,1.692,70,0.656,75,0.018,76,0.023,77,0.018,91,1.567,97,0.716,98,1.073,99,1.694,100,2.177,105,1.705,108,3.185,111,1.247,118,1.345,121,1.968,122,3.286,124,2.147,127,1.694,128,1.694,129,1.567,144,3.495,149,2.645,151,2.686,152,3.352,179,3.757,180,4.042,181,5.232]],["title/interfaces/IExporter.html",[0,0.688,176,1.621]],["body/interfaces/IExporter.html",[0,1.2,2,1.632,3,0.357,4,0.357,5,0.264,6,0.386,9,0.882,11,0.812,17,0.03,22,1.887,26,0.386,27,1.912,28,0.309,33,0.445,54,2.037,68,1.632,69,1.764,70,0.683,75,0.019,76,0.023,77,0.019,105,1.749,111,1.299,118,1.401,121,1.401,168,2.077,171,3.048,172,3.926,175,3.777,176,2.593,177,2.267,182,3.087,183,4.209,184,3.854,185,5.254,186,3.532]],["title/interfaces/IPropagator.html",[0,0.688,124,1.377]],["body/interfaces/IPropagator.html",[0,1.206,2,1.65,3,0.361,4,0.361,5,0.267,6,0.389,9,0.891,11,0.821,17,0.03,26,0.389,27,1.933,28,0.313,31,1.128,33,0.448,54,2.051,60,2.225,68,1.65,69,1.784,70,0.69,75,0.019,76,0.023,77,0.019,90,1.784,105,1.761,108,3.244,111,1.313,118,1.416,121,1.416,122,3.101,124,2.218,184,3.88,187,3.121,188,4.255,189,4.44,190,5.291,191,3.571]],["title/modules/JaegerHttpTracePropagatorModule.html",[78,1.179,192,2.149]],["body/modules/JaegerHttpTracePropagatorModule.html",[3,0.372,4,0.372,5,0.275,6,0.323,17,0.03,26,0.448,28,0.323,33,0.372,38,1.671,75,0.019,76,0.024,77,0.019,80,1.461,83,2.595,84,2.091,85,2.45,86,1.84,89,2.364,90,2.261,91,1.702,92,1.576,93,1.702,94,1.576,95,1.576,96,1.84,97,0.778,145,3.188,150,2.882,153,2.167,154,2.872,192,3.529,193,3.22]],["title/injectables/JaegerHttpTracePropagatorService.html",[98,0.688,145,1.941]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.28,4,0.28,5,0.207,6,0.402,9,0.939,11,0.637,12,1.61,13,0.944,15,1.88,16,1.283,17,0.03,20,1.61,26,0.433,28,0.243,31,0.875,33,0.28,36,0.875,38,1.755,51,2.037,61,2.313,62,1.563,66,0.944,67,1.686,70,0.727,75,0.015,76,0.02,77,0.015,91,1.279,97,0.585,98,0.939,99,1.383,100,1.777,104,2.743,105,1.492,108,2.943,109,2.514,110,1.951,111,1.572,113,1.629,118,1.098,121,1.902,122,3.077,123,1.629,124,1.88,125,2.159,126,1.777,127,1.383,128,1.383,129,1.279,130,2.42,134,1.951,145,3.23,147,2.77,150,3.028,153,1.629,154,3.575,193,4.007,194,4.484,195,5.713,196,3.763,197,2.77,198,2.77,199,3.3,200,3.3,201,3.3,202,3.3]],["title/interfaces/JaegerPropagatorConfig.html",[0,0.688,59,1.377]],["body/interfaces/JaegerPropagatorConfig.html",[0,1.175,1,2.092,2,1.093,3,0.239,4,0.239,5,0.177,6,0.207,7,1.281,8,1.281,9,0.591,10,1.731,11,0.544,12,1.443,13,1.15,14,1.392,15,2.553,16,0.807,17,0.03,18,1.684,19,1.815,20,1.681,21,1.182,22,1.681,23,1.963,24,1.392,25,1.012,26,0.295,27,1.281,28,0.207,29,1.815,30,2.262,31,0.748,32,1.281,33,0.5,34,1.684,35,1.684,36,0.748,37,1.182,38,1.15,39,1.963,40,2.318,41,1.825,42,1.182,43,1.519,44,1.519,45,1.983,46,1.281,47,1.012,48,1.684,49,2.139,50,1.392,51,2.45,52,2.139,53,1.392,54,1.093,55,0.938,56,1.684,57,1.392,58,1.519,59,2.419,60,1.443,61,2.318,62,1.065,63,1.983,64,1.825,65,1.825,66,1.15,67,0.87,68,1.558,69,1.684,70,0.652,71,1.392,72,1.392,73,1.093,74,1.392,75,0.012,76,0.018,77,0.012]],["title/modules/NoopTextMapPropagatorModule.html",[78,1.179,203,2.409]],["body/modules/NoopTextMapPropagatorModule.html",[3,0.372,4,0.372,5,0.275,6,0.323,17,0.03,26,0.448,28,0.323,33,0.372,75,0.019,76,0.024,77,0.019,80,1.461,83,2.595,84,2.091,85,2.45,86,1.84,89,2.364,90,2.261,91,1.702,92,1.576,93,1.702,94,1.576,95,1.576,96,1.84,97,0.778,150,2.167,203,3.955,204,3.22,205,3.82,206,3.22,207,3.955,208,3.529,209,4.39]],["title/injectables/NoopTextMapPropagatorService.html",[98,0.688,208,2.149]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.346,4,0.346,5,0.256,6,0.379,9,0.856,11,0.788,17,0.03,26,0.415,28,0.3,31,1.083,33,0.346,70,0.663,75,0.018,76,0.023,77,0.018,91,1.584,97,0.724,98,1.08,99,1.712,100,2.2,105,1.716,108,3.197,111,1.261,118,1.36,121,1.976,122,3.297,124,2.162,127,1.712,128,1.712,129,1.584,150,2.545,196,5.246,204,3.782,205,3.884,206,3.782,207,3.782,208,3.374,210,5.157,211,4.085]],["title/interfaces/OpenTelemetryConfig.html",[0,0.688,62,0.871]],["body/interfaces/OpenTelemetryConfig.html",[0,1.15,1,2.359,2,1.027,3,0.224,4,0.224,5,0.166,6,0.195,7,1.203,8,1.203,9,0.555,10,1.625,11,0.511,12,1.379,13,1.66,14,1.307,15,2.432,16,1.507,17,0.03,18,1.61,19,1.753,20,1.379,21,1.11,22,1.623,23,1.895,24,1.307,25,0.951,26,0.282,27,1.203,28,0.195,29,1.753,30,2.207,31,0.702,32,1.203,33,0.492,34,2.079,35,1.61,36,0.702,37,1.11,38,1.099,39,1.895,40,2.252,41,1.745,42,1.11,43,1.426,44,1.426,45,1.896,46,1.203,47,0.951,48,2.079,49,2.079,50,1.307,51,2.252,52,2.079,53,1.307,54,1.027,55,0.882,56,2.079,57,1.307,58,1.426,59,2.551,60,0.951,61,1.203,62,1.315,63,2.71,64,2.494,65,2.494,66,1.099,67,0.817,68,1.489,69,1.61,70,0.623,71,1.307,72,1.307,73,1.027,74,1.307,75,0.012,76,0.017,77,0.012]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[212,1.769,213,2.149]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.129,4,0.129,5,0.096,6,0.378,9,1.012,10,1.138,11,0.294,12,0.899,13,1.323,16,1.431,17,0.03,20,1.324,22,0.899,25,1.144,26,0.403,28,0.112,30,0.639,31,0.664,33,0.129,36,1.326,37,1.05,39,1.939,40,1.988,41,1.988,54,0.971,60,1.462,62,0.978,66,0.436,67,1.49,69,1.707,70,0.783,75,0.007,76,0.011,77,0.007,90,0.639,97,0.565,98,0.525,104,3.141,105,0.834,109,1.82,110,0.902,111,1.543,113,2.282,116,1.639,118,1.457,121,1.227,123,0.753,124,1.546,126,0.822,127,0.639,128,1.05,129,0.591,134,3.118,149,0.998,151,1.137,164,3.291,168,0.753,171,1.82,174,2.102,175,2.855,176,1.82,177,0.822,198,1.28,212,1.349,213,1.639,214,1.525,215,4.32,216,1.28,217,2.102,218,3.186,219,3.881,220,2.504,221,2.504,222,3.186,223,2.504,224,3.186,225,2.674,226,3.688,227,3.688,228,2.504,229,2.504,230,2.504,231,3.186,232,1.525,233,2.102,234,4.377,235,2.504,236,3.688,237,2.504,238,2.504,239,5.147,240,1.525,241,2.102,242,5.831,243,2.504,244,1.525,245,1.525,246,1.481,247,2.504,248,2.102,249,2.504,250,1.525,251,3.674,252,1.837,253,2.504,254,1.525,255,1.525,256,2.674,257,3.688,258,2.674,259,2.102,260,1.525,261,4.377,262,3.688,263,1.525,264,2.504,265,2.102,266,3.095,267,1.639,268,2.102,269,3.186,270,3.688,271,2.504,272,3.095,273,1.525,274,1.525,275,2.504,276,2.504,277,1.119,278,1.28,279,1.525,280,2.504,281,1.119,282,2.504,283,1.525,284,1.525,285,2.504,286,2.504,287,2.504,288,1.525,289,1.639,290,1.525,291,1.525,292,1.525,293,1.28,294,1.525,295,1.525,296,2.504,297,1.525,298,1.525,299,1.525,300,1.525,301,1.525,302,1.525,303,1.525,304,1.525,305,1.525,306,1.525,307,1.525,308,1.525,309,1.837,310,2.504,311,2.504,312,2.504,313,2.504,314,2.504,315,1.525,316,1.525,317,1.525,318,1.119,319,1.525,320,2.504,321,1.837,322,1.525,323,1.525,324,1.525,325,1.525,326,1.525,327,1.525,328,1.525,329,1.525,330,1.525,331,1.525,332,1.525,333,1.525,334,1.525,335,1.525,336,1.525,337,1.525,338,1.525,339,1.525,340,1.525,341,1.525,342,1.525,343,1.525,344,1.525,345,1.525,346,1.525,347,1.525,348,1.525,349,3.186,350,1.525,351,3.186,352,1.525,353,1.525,354,1.525,355,1.525,356,1.525,357,1.525,358,1.525,359,2.504,360,1.525,361,1.525,362,1.525]],["title/modules/OpenTelemetryInterceptorModule.html",[78,1.179,363,2.149]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.319,4,0.319,5,0.236,6,0.36,13,1.556,16,1.077,17,0.03,19,1.459,26,0.439,28,0.277,33,0.319,36,0.998,62,1.526,66,1.4,67,1.678,70,0.61,75,0.017,76,0.022,77,0.017,80,1.253,84,2.108,92,1.351,93,1.459,94,1.351,95,1.757,96,1.578,97,0.667,105,1.253,106,4.106,109,1.857,111,1.161,113,1.857,118,1.253,121,1.253,126,2.027,197,3.158,213,3.201,252,2.76,277,2.76,363,3.905,364,4.893,365,3.763,366,3.763,367,4.893,368,3.763,369,5.437,370,4.893,371,4.106,372,4.106,373,3.763,374,3.763,375,3.158,376,4.893,377,3.763,378,2.76,379,3.763,380,3.763,381,3.158,382,3.763]],["title/modules/OtelColExporterModule.html",[78,1.179,383,2.149]],["body/modules/OtelColExporterModule.html",[3,0.38,4,0.38,5,0.281,6,0.329,17,0.03,26,0.451,28,0.329,33,0.38,75,0.02,76,0.024,77,0.02,80,1.491,84,2.117,85,2.48,86,1.878,92,1.609,93,1.737,94,1.609,95,1.609,96,1.878,97,0.794,165,3.286,167,3.286,168,2.695,169,2.413,383,3.573,384,3.286,385,3.573,386,3.286]],["title/interfaces/OtelCollectorConfig.html",[0,0.688,48,1.377]],["body/interfaces/OtelCollectorConfig.html",[0,1.156,1,2.053,2,1.041,3,0.228,4,0.228,5,0.168,6,0.197,7,1.22,8,1.22,9,0.563,10,1.703,11,0.518,12,1.393,13,1.579,14,1.326,15,2.526,16,1.304,17,0.03,18,1.627,19,1.767,20,1.393,21,1.126,22,1.792,23,2.092,24,1.326,25,0.964,26,0.285,27,1.22,28,0.197,29,1.767,30,2.585,31,0.712,32,1.22,33,0.494,34,1.627,35,1.627,36,0.712,37,1.126,38,1.11,39,1.91,40,2.267,41,1.763,42,1.126,43,1.447,44,1.447,45,1.915,46,1.763,47,1.393,48,1.91,49,2.442,50,1.915,51,2.506,52,2.442,53,2.249,54,1.505,55,0.894,56,1.627,57,1.326,58,1.447,59,2.219,60,0.964,61,1.22,62,1.029,63,1.915,64,1.763,65,1.763,66,1.11,67,0.829,68,1.505,69,1.627,70,0.629,71,1.326,72,1.326,73,1.041,74,1.326,75,0.012,76,0.017,77,0.012]],["title/injectables/OtelcolExporterService.html",[98,0.688,385,2.149]],["body/injectables/OtelcolExporterService.html",[3,0.277,4,0.277,5,0.205,6,0.4,9,0.932,10,1.374,11,0.63,12,1.598,13,1.629,16,1.274,17,0.03,26,0.432,28,0.24,29,2.456,30,1.369,31,0.866,33,0.277,35,1.369,36,0.866,47,1.172,49,1.369,52,1.369,62,1.558,64,2.3,66,0.934,67,1.679,70,0.53,73,1.266,75,0.014,76,0.02,77,0.014,97,0.897,98,0.932,99,1.369,104,2.728,105,1.482,109,2.685,110,1.93,111,1.563,113,1.611,118,1.087,121,1.81,123,1.611,126,1.759,127,1.369,128,1.369,129,1.266,134,2.631,169,1.759,170,2.136,172,3.559,175,2.994,176,2.197,177,1.759,293,2.74,384,3.989,385,3.559,387,4.451,388,3.265,389,5.439,390,4.451,391,4.451,392,3.265,393,3.265,394,2.136,395,3.265,396,3.265,397,2.74,398,3.265,399,3.265,400,3.265,401,3.265]],["title/interfaces/ZipkinCollectorConfig.html",[0,0.688,56,1.377]],["body/interfaces/ZipkinCollectorConfig.html",[0,1.165,1,2.071,2,1.066,3,0.233,4,0.233,5,0.172,6,0.202,7,1.248,8,1.248,9,0.576,10,1.716,11,0.53,12,1.417,13,1.443,14,1.357,15,2.539,16,1.443,17,0.03,18,1.654,19,1.79,20,1.417,21,1.152,22,1.811,23,2.115,24,1.357,25,0.987,26,0.29,27,1.248,28,0.202,29,1.79,30,2.239,31,0.729,32,1.248,33,0.497,34,1.654,35,1.654,36,0.729,37,1.152,38,1.129,39,1.935,40,2.291,41,1.792,42,1.152,43,1.48,44,1.48,45,1.948,46,1.248,47,0.987,48,1.654,49,2.457,50,1.357,51,2.426,52,2.457,53,1.357,54,1.066,55,1.313,56,1.935,57,1.948,58,1.48,59,2.239,60,0.987,61,1.248,62,1.046,63,1.948,64,1.792,65,1.792,66,1.129,67,0.848,68,1.53,69,1.654,70,0.64,71,1.357,72,1.357,73,1.066,74,1.357,75,0.012,76,0.017,77,0.012,402,3.946]],["title/modules/ZipkinExporterModule.html",[78,1.179,403,2.149]],["body/modules/ZipkinExporterModule.html",[3,0.38,4,0.38,5,0.281,6,0.329,17,0.03,26,0.451,28,0.329,33,0.38,55,1.491,75,0.02,76,0.024,77,0.02,80,1.491,84,2.117,85,2.48,86,1.878,92,1.609,93,1.737,94,1.609,95,1.609,96,1.878,97,0.794,165,3.286,167,3.286,168,2.695,169,2.413,403,3.573,404,3.286,405,3.573]],["title/injectables/ZipkinExporterService.html",[98,0.688,405,2.149]],["body/injectables/ZipkinExporterService.html",[3,0.291,4,0.291,5,0.215,6,0.408,9,0.965,11,0.662,12,1.654,13,0.982,16,1.318,17,0.03,26,0.438,28,0.252,33,0.291,35,1.439,36,0.91,49,1.439,52,1.439,55,1.143,62,1.581,65,2.63,66,0.982,67,1.714,70,0.557,75,0.015,76,0.02,77,0.015,97,0.921,98,0.965,99,1.439,104,2.799,105,1.533,109,2.565,110,2.03,111,1.604,113,1.695,118,1.143,121,1.848,123,1.695,126,1.849,127,1.439,128,1.439,129,1.331,130,2.518,134,2.03,169,1.849,170,2.247,172,3.633,175,3.424,176,2.273,177,1.849,394,3.013,397,2.882,404,4.073,405,3.633,406,4.605,407,3.434,408,5.197,409,4.605,410,4.605,411,5.197,412,3.434,413,3.434,414,3.434,415,3.434,416,3.434]],["title/changelog.html",[417,1.625,418,1.625,419,2.307]],["body/changelog.html",[5,0.261,10,1.287,17,0.015,18,1.455,19,1.346,20,0.829,21,1.455,25,1.666,38,0.661,42,1.749,47,0.829,53,1.139,55,0.768,60,1.498,68,0.895,70,0.677,75,0.01,76,0.015,77,0.01,101,1.365,142,3.501,151,1.577,153,1.713,171,1.713,212,1.869,233,1.937,246,3.693,267,3.254,289,3.419,321,3.059,378,2.546,386,3.402,419,2.913,420,2.309,421,2.309,422,1.693,423,2.309,424,2.309,425,2.309,426,2.309,427,3.501,428,6.246,429,3.471,430,3.501,431,5.981,432,5.981,433,2.309,434,2.309,435,4.639,436,2.309,437,6.048,438,2.309,439,2.309,440,4.974,441,2.309,442,2.309,443,2.309,444,2.309,445,4.174,446,3.501,447,5.225,448,4.171,449,4.639,450,2.309,451,1.937,452,2.309,453,2.309,454,2.309,455,2.309,456,4.171,457,3.471,458,1.937,459,2.309,460,2.309,461,2.309,462,1.937,463,2.309,464,1.937,465,2.309,466,2.309,467,2.309,468,2.309,469,2.309,470,2.309,471,2.309,472,2.309,473,2.309,474,2.309,475,2.309,476,2.309,477,2.309,478,2.309,479,2.309,480,2.309,481,4.974,482,2.309,483,2.309,484,2.309,485,2.309,486,2.309,487,4.639,488,2.309,489,2.309,490,2.309,491,2.309,492,2.309,493,2.309,494,2.309,495,3.471,496,2.309,497,4.171,498,2.309,499,1.937,500,2.309,501,2.309,502,2.309,503,1.693,504,2.309,505,4.639,506,2.309,507,4.171,508,4.639,509,3.471,510,3.501,511,3.471,512,3.471,513,3.471,514,3.471,515,4.639,516,2.309,517,3.471,518,2.309,519,2.309,520,2.309,521,2.309,522,4.171,523,2.309,524,2.309,525,2.309,526,2.309,527,2.309,528,3.471,529,2.309,530,2.309,531,2.309,532,2.309,533,2.309,534,2.309,535,2.309,536,1.693,537,5.421,538,2.309,539,2.309,540,2.309,541,2.309,542,1.937,543,2.309,544,2.309,545,2.309,546,2.309,547,2.309,548,2.309,549,2.309,550,2.309,551,1.693,552,2.309,553,2.309,554,2.309,555,2.309,556,1.937,557,2.309,558,2.309,559,2.309,560,2.309,561,3.471,562,3.471,563,2.309,564,2.309,565,2.309,566,2.913,567,3.471,568,3.471,569,2.309,570,2.309,571,2.309,572,4.639,573,2.309,574,2.309,575,2.309,576,2.309,577,2.309,578,3.471,579,2.309,580,2.309]],["title/coverage.html",[581,3.751]],["body/coverage.html",[0,1.273,1,1.232,5,0.199,6,0.486,7,2.761,8,2.761,16,0.909,17,0.029,34,1.332,38,1.539,48,1.332,56,1.332,59,1.332,62,0.842,66,0.909,70,0.515,73,1.232,75,0.014,76,0.019,77,0.014,81,2.33,82,2.079,87,1.878,90,1.332,98,1.273,100,3.036,124,1.332,139,2.33,140,2.33,141,2.079,144,1.878,145,1.878,150,2.464,151,1.984,152,2.079,154,2.079,163,2.33,164,1.878,166,2.079,168,1.568,170,3.267,176,1.568,179,2.33,182,3.204,187,3.204,193,2.33,204,2.33,205,2.858,206,2.33,207,2.33,208,2.079,212,1.711,213,2.079,215,2.666,216,2.666,384,2.33,385,2.079,404,2.33,405,2.079,581,2.666,582,2.666,583,3.177,584,3.177,585,6.576,586,5.968,587,3.177,588,3.177,589,4.993,590,4.369,591,5.377,592,5.377,593,3.177,594,3.177,595,3.177,596,3.177,597,3.177,598,3.177,599,2.666]],["title/dependencies.html",[600,2.307,601,2.582]],["body/dependencies.html",[17,0.03,28,0.305,29,1.61,47,1.491,55,1.382,75,0.018,76,0.023,77,0.018,86,1.74,88,2.454,125,3.409,153,2.049,278,3.484,281,3.045,318,3.045,394,3.409,427,5.011,445,3.484,601,2.716,602,4.151,603,6.441,604,4.151,605,5.21,606,4.151,607,4.151,608,4.151,609,5.21,610,4.372,611,4.151,612,4.151,613,4.151,614,4.151,615,4.151,616,4.151,617,4.372,618,4.151,619,3.484,620,4.151,621,4.151,622,4.151,623,4.151,624,4.151,625,4.151,626,4.151]],["title/index.html",[11,0.53,417,1.625,418,1.625]],["body/index.html",[0,0.494,1,0.915,3,0.486,10,1.685,13,1.01,14,0.7,15,1.878,17,0.029,18,0.989,19,1.174,20,1.517,21,0.595,22,1.087,23,1.269,24,0.7,25,1.087,26,0.288,28,0.104,29,1.638,30,0.989,31,0.803,32,1.072,33,0.2,34,0.595,35,0.989,36,0.626,37,0.989,38,1.282,39,1.642,40,1.375,41,1.375,42,2.105,45,1.165,46,2.517,47,2.04,48,0.595,49,1.772,50,1.165,51,1.919,52,0.989,55,1.491,56,0.595,57,0.7,59,1.269,60,1.99,61,1.072,62,0.803,63,1.165,64,1.072,65,0.645,73,1.174,75,0.017,76,0.01,77,0.006,78,1.85,79,0.929,84,1.368,88,2.315,92,0.51,93,0.915,94,0.847,95,0.51,97,0.251,101,3.046,102,3.716,116,0.929,117,1.98,123,0.7,125,2.309,129,0.915,138,1.981,149,1.544,151,0.645,153,2.211,158,1.191,162,0.929,164,1.395,171,2.695,177,1.271,178,0.929,181,1.191,189,1.191,192,0.929,212,2.526,217,1.191,219,1.191,225,1.191,241,1.191,246,1.79,251,3.547,252,2.221,256,2.541,258,1.98,265,1.191,266,1.191,267,3.824,268,1.191,272,1.191,277,1.041,281,2.221,289,0.929,309,1.041,318,1.041,363,1.981,371,1.191,372,2.961,378,2.872,381,1.98,383,2.765,386,1.73,394,2.309,403,0.929,417,1.395,418,1.395,422,1.73,430,1.98,446,1.191,451,1.98,458,1.98,462,1.191,499,1.191,510,1.191,536,3.938,551,2.588,556,1.191,599,1.98,600,1.191,601,3.185,610,1.191,617,1.98,619,2.541,627,3.028,628,3.028,629,1.419,630,4.479,631,1.419,632,1.419,633,1.419,634,1.419,635,2.359,636,1.419,637,1.98,638,2.359,639,2.359,640,3.528,641,3.528,642,2.359,643,2.359,644,4.479,645,3.028,646,1.419,647,1.419,648,3.028,649,3.916,650,1.98,651,2.359,652,2.359,653,5.152,654,5.152,655,4.69,656,1.419,657,1.419,658,2.359,659,2.359,660,2.359,661,2.359,662,2.359,663,1.419,664,1.419,665,1.419,666,1.419,667,1.191,668,2.541,669,2.359,670,1.419,671,1.419,672,1.419,673,1.419,674,1.419,675,1.419,676,1.419,677,1.419,678,1.191,679,3.028,680,1.419,681,1.419,682,1.419,683,1.419,684,1.419,685,1.191,686,2.359,687,1.419,688,1.191,689,1.419,690,1.419,691,1.419,692,1.419,693,1.419,694,1.419,695,1.191,696,1.419,697,1.419,698,1.419,699,1.419,700,1.419,701,1.419,702,2.359,703,1.419,704,2.359,705,2.359,706,1.419,707,1.419,708,1.419,709,1.419,710,1.419,711,1.419,712,2.359,713,2.359,714,0.929,715,1.419,716,1.419,717,1.419,718,1.419,719,1.419,720,1.419,721,1.191,722,1.191,723,1.419,724,3.916,725,3.916,726,3.916,727,5.02,728,3.916,729,3.287,730,3.916,731,3.916,732,3.916,733,1.419,734,1.419,735,1.419,736,1.419,737,1.419,738,1.419,739,1.419,740,1.419,741,1.419,742,1.419,743,1.419,744,1.419,745,1.419,746,1.419,747,2.359,748,1.419,749,1.419,750,1.419,751,1.419,752,1.419,753,1.419,754,1.419]],["title/license.html",[417,1.625,418,1.625,755,2.307]],["body/license.html",[2,0.499,4,0.433,5,0.282,9,0.27,10,0.397,17,0.012,25,0.462,26,0.095,32,0.585,36,0.749,37,0.54,42,2.031,75,0.01,76,0.01,77,0.006,95,0.462,97,0.228,101,0.761,102,0.843,103,1.081,111,0.397,184,0.944,205,2.171,246,1.286,248,1.825,259,3.376,289,1.847,309,0.944,321,2.071,503,0.944,536,0.944,551,4.158,566,1.825,582,2.369,637,1.081,650,1.825,667,1.081,678,1.081,688,1.081,695,1.081,714,0.843,722,3.111,729,1.825,755,5.173,756,3.318,757,2.823,758,1.288,759,1.288,760,1.288,761,4.686,762,5.215,763,3.318,764,3.707,765,1.288,766,5.398,767,4.845,768,1.288,769,1.288,770,1.288,771,4.845,772,5.215,773,4.022,774,4.845,775,2.175,776,1.288,777,3.707,778,1.288,779,1.288,780,1.288,781,3.318,782,1.288,783,4.686,784,3.318,785,2.175,786,2.175,787,1.288,788,2.823,789,2.175,790,1.288,791,1.288,792,5.611,793,3.318,794,2.175,795,1.288,796,2.175,797,1.288,798,1.288,799,1.288,800,1.288,801,1.288,802,1.288,803,1.288,804,2.823,805,1.288,806,2.823,807,2.175,808,5.215,809,1.288,810,1.288,811,4.022,812,4.686,813,3.318,814,2.175,815,2.823,816,4.022,817,1.288,818,1.288,819,1.288,820,1.288,821,1.288,822,2.175,823,1.288,824,1.288,825,1.288,826,6.186,827,2.823,828,2.175,829,1.288,830,4.686,831,2.175,832,1.288,833,3.707,834,2.175,835,1.288,836,5.611,837,1.288,838,1.288,839,1.288,840,1.288,841,1.288,842,1.288,843,2.175,844,2.823,845,1.288,846,1.288,847,1.288,848,1.288,849,1.288,850,3.318,851,3.707,852,1.288,853,2.175,854,3.318,855,2.175,856,1.288,857,3.707,858,2.175,859,1.288,860,1.288,861,2.823,862,1.288,863,1.288,864,1.288,865,1.288,866,2.175,867,1.081,868,1.288,869,1.288,870,2.823,871,1.288,872,1.288,873,2.823,874,1.288,875,1.288,876,1.288,877,3.318,878,4.845,879,1.288,880,1.288,881,2.175,882,4.5,883,2.823,884,3.318,885,2.175,886,2.175,887,2.175,888,2.175,889,2.823,890,2.175,891,2.823,892,2.175,893,2.175,894,2.175,895,2.175,896,1.081,897,2.175,898,1.288,899,1.288,900,3.707,901,4.282,902,2.823,903,2.175,904,1.288,905,1.288,906,2.175,907,2.175,908,1.288,909,1.288,910,2.823,911,2.175,912,1.288,913,1.288,914,1.288,915,2.823,916,1.288,917,1.288,918,1.288,919,2.175,920,2.175,921,1.288,922,1.288,923,1.288,924,1.288,925,1.288,926,1.288,927,1.288,928,2.175,929,1.288,930,1.288,931,1.288,932,1.288,933,1.288,934,1.288,935,1.288,936,1.288,937,2.823,938,1.288,939,2.823,940,1.288,941,1.288,942,1.288,943,1.288,944,4.5,945,1.288,946,1.288,947,1.288,948,1.288,949,1.288,950,3.318,951,2.175,952,3.318,953,1.288,954,1.288,955,1.288,956,1.288,957,1.288,958,2.823,959,1.288,960,1.288,961,2.175,962,2.175,963,1.288,964,1.288,965,1.288,966,2.175,967,1.288,968,1.288,969,3.707,970,1.288,971,1.288,972,1.288,973,1.288,974,1.288,975,1.288,976,1.288,977,2.823,978,3.318,979,1.288,980,1.288,981,1.288,982,1.288,983,1.288,984,1.288,985,1.288,986,1.288,987,1.288,988,1.288,989,1.288,990,2.175,991,1.288,992,1.288,993,2.175,994,1.288,995,1.288,996,3.318,997,1.288,998,1.288,999,1.288,1000,1.288,1001,1.288,1002,1.288,1003,1.288,1004,3.318,1005,2.823,1006,2.823,1007,2.823,1008,2.175,1009,2.175,1010,2.823,1011,2.175,1012,2.175,1013,2.175,1014,2.175,1015,1.288,1016,1.288,1017,1.288,1018,1.288,1019,1.288,1020,1.288,1021,1.288,1022,1.288,1023,1.288,1024,2.175,1025,1.288,1026,1.288,1027,1.288,1028,1.288,1029,3.707,1030,1.288,1031,1.288,1032,1.288,1033,1.288,1034,1.288,1035,1.288,1036,1.288,1037,1.288,1038,3.707,1039,1.288,1040,1.288,1041,1.288,1042,1.288,1043,1.288,1044,1.081,1045,1.288,1046,1.288,1047,1.288,1048,1.288,1049,1.288,1050,1.288,1051,1.288,1052,1.288,1053,1.288,1054,1.288,1055,1.288,1056,1.288,1057,2.823,1058,1.288,1059,1.288,1060,1.288,1061,1.288,1062,1.288,1063,2.175,1064,1.288,1065,1.288,1066,1.288,1067,1.288,1068,1.288,1069,1.288,1070,1.288,1071,1.288,1072,1.288,1073,1.288,1074,1.288,1075,1.288,1076,1.288,1077,1.288,1078,1.288,1079,2.175,1080,1.288,1081,1.288,1082,1.288,1083,2.175,1084,2.175,1085,1.288,1086,1.288,1087,1.288,1088,1.288,1089,1.288,1090,1.288,1091,1.288,1092,1.288,1093,1.288,1094,1.288,1095,1.288,1096,1.288,1097,1.288,1098,1.288,1099,1.288,1100,1.288,1101,1.288,1102,1.288,1103,1.288,1104,1.288,1105,1.288]],["title/modules.html",[80,1.487]],["body/modules.html",[17,0.025,75,0.021,76,0.025,77,0.021,79,3.057,80,1.555,138,3.057,162,3.057,178,3.057,192,3.057,203,3.426,363,3.057,383,3.057,403,3.057,714,4.336,1106,6.626,1107,6.626]],["title/overview.html",[1108,3.751]],["body/overview.html",[2,1.923,17,0.026,75,0.022,76,0.026,77,0.022,78,1.781,80,1.651,92,1.781,94,1.781,99,2.079,375,4.162,464,4.162,503,3.637,601,3.245,685,4.162,1044,4.162,1108,4.162,1109,4.96,1110,5.803,1111,5.803]],["title/todo.html",[417,1.625,418,1.625,1112,2.307]],["body/todo.html",[10,1.818,17,0.028,46,2.48,47,1.609,55,1.961,75,0.02,76,0.024,77,0.02,101,2.648,102,3.854,116,3.573,151,2.035,153,2.908,171,2.695,212,2.413,246,3.78,267,2.931,422,3.286,542,3.76,668,3.76,714,3.573,721,5.147,867,3.76,896,3.76,1112,4.944,1113,4.48,1114,4.48,1115,4.48,1116,4.48]],["title/miscellaneous/variables.html",[1117,2.307,1118,3.312]],["body/miscellaneous/variables.html",[6,0.43,7,2,8,2.655,11,0.849,17,0.029,22,2.189,23,2.555,29,2.095,60,1.581,66,1.673,67,1.359,68,2.363,70,0.989,71,2.173,72,2.173,73,2.095,74,2.173,75,0.019,76,0.024,77,0.019,90,2.265,168,2.667,171,2.173,182,3.229,186,3.695,187,3.229,191,3.695,1117,3.695,1118,3.695,1119,5.403,1120,4.403,1121,4.403]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":117,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{}}}],["0.10.0",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":445,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.12.0",{"_index":635,"title":{},"body":{"index.html":{}}}],["0.13.0",{"_index":427,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":657,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":25,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":430,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.3",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["10.1.2",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":749,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":757,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":759,"title":{},"body":{"license.html":{}}}],["2020",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":446,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":556,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["4.1.9",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":673,"title":{},"body":{"index.html":{}}}],["5.3.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":799,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["735b05d",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1111,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":503,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":632,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":982,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1060,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1057,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":751,"title":{},"body":{"index.html":{}}}],["act",{"_index":1067,"title":{},"body":{"license.html":{}}}],["acting",{"_index":779,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1036,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":968,"title":{},"body":{"license.html":{}}}],["adding",{"_index":701,"title":{},"body":{"index.html":{}}}],["additional",{"_index":969,"title":{},"body":{"license.html":{}}}],["additions",{"_index":852,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1055,"title":{},"body":{"license.html":{}}}],["again",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":920,"title":{},"body":{"license.html":{}}}],["agent",{"_index":462,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1070,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1007,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":987,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":925,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":737,"title":{},"body":{"index.html":{}}}],["alone",{"_index":916,"title":{},"body":{"license.html":{}}}],["along",{"_index":959,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":967,"title":{},"body":{"license.html":{}}}],["already",{"_index":379,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":703,"title":{},"body":{"index.html":{}}}],["always",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":753,"title":{},"body":{"index.html":{}}}],["amd",{"_index":728,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":940,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":947,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":953,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1064,"title":{},"body":{"license.html":{}}}],["angular",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":735,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":86,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":840,"title":{},"body":{"license.html":{}}}],["apache",{"_index":756,"title":{},"body":{"license.html":{}}}],["api",{"_index":198,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":656,"title":{},"body":{"index.html":{}}}],["api.defaulttextmapsetter",{"_index":353,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":352,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":649,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":680,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":671,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":716,"title":{},"body":{"index.html":{}}}],["appand",{"_index":707,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":679,"title":{},"body":{"index.html":{}}}],["appear",{"_index":964,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":834,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1005,"title":{},"body":{"license.html":{}}}],["application",{"_index":630,"title":{},"body":{"index.html":{}}}],["applies",{"_index":909,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1079,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":381,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1088,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1022,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1096,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1043,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1076,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1027,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1025,"title":{},"body":{"license.html":{}}}],["async",{"_index":665,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1080,"title":{},"body":{"license.html":{}}}],["attached",{"_index":832,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":30,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["attribution",{"_index":950,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":775,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":827,"title":{},"body":{"license.html":{}}}],["available",{"_index":714,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b112065",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":88,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["b3configuration",{"_index":647,"title":{},"body":{"index.html":{}}}],["b3injectencoding",{"_index":119,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":136,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":135,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":21,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":137,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":1,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":79,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":87,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":133,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":731,"title":{},"body":{"index.html":{}}}],["base",{"_index":739,"title":{},"body":{"index.html":{}}}],["based",{"_index":695,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1009,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":43,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":361,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bca88a0",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":857,"title":{},"body":{"license.html":{}}}],["below",{"_index":835,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":803,"title":{},"body":{"license.html":{}}}],["between",{"_index":662,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":849,"title":{},"body":{"license.html":{}}}],["body",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1081,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":663,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":685,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1084,"title":{},"body":{"license.html":{}}}],["breaking",{"_index":633,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1107,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":610,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":699,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":351,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":355,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":942,"title":{},"body":{"license.html":{}}}],["cause",{"_index":729,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":634,"title":{},"body":{"index.html":{}}}],["changed",{"_index":946,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":419,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1042,"title":{},"body":{"license.html":{}}}],["charge",{"_index":891,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1058,"title":{},"body":{"license.html":{}}}],["claim",{"_index":922,"title":{},"body":{"license.html":{}}}],["claims",{"_index":911,"title":{},"body":{"license.html":{}}}],["class",{"_index":97,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":47,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":733,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":389,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":391,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":392,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":401,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes",{"_index":393,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes.collectorexporterconfigbase",{"_index":390,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":917,"title":{},"body":{"license.html":{}}}],["command",{"_index":705,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1089,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1052,"title":{},"body":{"license.html":{}}}],["commit",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":32,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":34,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":727,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":85,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["communication",{"_index":861,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":821,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1099,"title":{},"body":{"license.html":{}}}],["complies",{"_index":975,"title":{},"body":{"license.html":{}}}],["compose",{"_index":713,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":717,"title":{},"body":{"index.html":{}}}],["composite",{"_index":142,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":148,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":138,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":141,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1049,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":762,"title":{},"body":{"license.html":{}}}],["config",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":397,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":200,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":400,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":399,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":398,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":8,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":415,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":414,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configurable",{"_index":659,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":126,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":648,"title":{},"body":{"index.html":{}}}],["configured",{"_index":409,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consequential",{"_index":1041,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1066,"title":{},"body":{"license.html":{}}}],["console",{"_index":39,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":174,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":162,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":166,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":874,"title":{},"body":{"license.html":{}}}],["const",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":926,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":109,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":130,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":143,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":110,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":970,"title":{},"body":{"license.html":{}}}],["contained",{"_index":956,"title":{},"body":{"license.html":{}}}],["content",{"_index":1002,"title":{},"body":{"license.html":{}}}],["contents",{"_index":637,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":151,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":794,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":669,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":851,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":915,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":977,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":878,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":927,"title":{},"body":{"license.html":{}}}],["control",{"_index":781,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":782,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":823,"title":{},"body":{"license.html":{}}}],["copies",{"_index":934,"title":{},"body":{"license.html":{}}}],["copy",{"_index":939,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":772,"title":{},"body":{"license.html":{}}}],["core",{"_index":674,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1115,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":923,"title":{},"body":{"license.html":{}}}],["cours",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":581,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":697,"title":{},"body":{"index.html":{}}}],["cross",{"_index":921,"title":{},"body":{"license.html":{}}}],["current",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":998,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1038,"title":{},"body":{"license.html":{}}}],["date",{"_index":931,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":691,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":752,"title":{},"body":{"index.html":{}}}],["default",{"_index":22,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1072,"title":{},"body":{"license.html":{}}}],["define",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["defineb3encoding",{"_index":107,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":114,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defined",{"_index":111,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":785,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":765,"title":{},"body":{"license.html":{}}}],["del",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1033,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":451,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":601,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":734,"title":{},"body":{"index.html":{}}}],["depends",{"_index":726,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":629,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":836,"title":{},"body":{"license.html":{}}}],["derived",{"_index":837,"title":{},"body":{"license.html":{}}}],["describing",{"_index":999,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":876,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1021,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":719,"title":{},"body":{"index.html":{}}}],["different",{"_index":974,"title":{},"body":{"license.html":{}}}],["dir",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":788,"title":{},"body":{"license.html":{}}}],["direction",{"_index":790,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1003,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":871,"title":{},"body":{"license.html":{}}}],["display",{"_index":650,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":900,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":958,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":764,"title":{},"body":{"license.html":{}}}],["doc",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":712,"title":{},"body":{"index.html":{}}}],["docs",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":770,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":582,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":1087,"title":{},"body":{"license.html":{}}}],["done",{"_index":1116,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":884,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1094,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":838,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":841,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":858,"title":{},"body":{"license.html":{}}}],["en",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":1083,"title":{},"body":{"license.html":{}}}],["end",{"_index":1078,"title":{},"body":{"license.html":{}}}],["entities",{"_index":780,"title":{},"body":{"license.html":{}}}],["entity",{"_index":774,"title":{},"body":{"license.html":{}}}],["environment",{"_index":681,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":682,"title":{},"body":{"index.html":{}}}],["error",{"_index":378,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":1054,"title":{},"body":{"license.html":{}}}],["event",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":536,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":902,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":873,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":890,"title":{},"body":{"license.html":{}}}],["executed",{"_index":988,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1028,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":805,"title":{},"body":{"license.html":{}}}],["existing",{"_index":687,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":979,"title":{},"body":{"license.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":744,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":171,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":169,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":165,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":167,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":170,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:15",{"_index":406,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":173,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":387,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:33",{"_index":407,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:49",{"_index":388,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":411,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":672,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":375,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":1012,"title":{},"body":{"license.html":{}}}],["f",{"_index":715,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1050,"title":{},"body":{"license.html":{}}}],["fake",{"_index":676,"title":{},"body":{"index.html":{}}}],["false",{"_index":651,"title":{},"body":{"index.html":{}}}],["features",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1059,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":410,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1082,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":797,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":932,"title":{},"body":{"license.html":{}}}],["files",{"_index":815,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1017,"title":{},"body":{"license.html":{}}}],["fix",{"_index":740,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":937,"title":{},"body":{"license.html":{}}}],["form",{"_index":808,"title":{},"body":{"license.html":{}}}],["format",{"_index":1091,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":366,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":367,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":893,"title":{},"body":{"license.html":{}}}],["functions",{"_index":689,"title":{},"body":{"index.html":{}}}],["generally",{"_index":670,"title":{},"body":{"index.html":{}}}],["generated",{"_index":822,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":172,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":108,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["getting",{"_index":417,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":333,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1114,"title":{},"body":{"todo.html":{}}}],["give",{"_index":184,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":639,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1047,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1104,"title":{},"body":{"license.html":{}}}],["grant",{"_index":883,"title":{},"body":{"license.html":{}}}],["granted",{"_index":807,"title":{},"body":{"license.html":{}}}],["granting",{"_index":776,"title":{},"body":{"license.html":{}}}],["grants",{"_index":886,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1106,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1034,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1074,"title":{},"body":{"license.html":{}}}],["header",{"_index":20,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":721,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":885,"title":{},"body":{"license.html":{}}}],["herein",{"_index":984,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1073,"title":{},"body":{"license.html":{}}}],["http",{"_index":150,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":340,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":374,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:133",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:183",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:197",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:213",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":336,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":342,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":344,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":338,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":347,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":720,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":709,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":50,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":760,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1101,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":371,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":372,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":732,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":653,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":636,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":190,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":181,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":178,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":144,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1095,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1086,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":176,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":795,"title":{},"body":{"license.html":{}}}],["iii",{"_index":802,"title":{},"body":{"license.html":{}}}],["implement",{"_index":696,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":189,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":129,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1013,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":93,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":872,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1045,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1040,"title":{},"body":{"license.html":{}}}],["include",{"_index":844,"title":{},"body":{"license.html":{}}}],["included",{"_index":831,"title":{},"body":{"license.html":{}}}],["includes",{"_index":954,"title":{},"body":{"license.html":{}}}],["including",{"_index":812,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":855,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":881,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1075,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1071,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1062,"title":{},"body":{"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":829,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":789,"title":{},"body":{"license.html":{}}}],["individual",{"_index":804,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":103,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":965,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":914,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":928,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":123,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":155,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":156,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":157,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_exporter",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":395,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_propagator",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":98,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":99,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":132,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":27,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":186,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":191,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":185,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":646,"title":{},"body":{"index.html":{}}}],["installation",{"_index":638,"title":{},"body":{"index.html":{}}}],["institute",{"_index":918,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":853,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":212,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":725,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":365,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":368,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":373,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":7,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":364,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":163,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":182,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:12",{"_index":183,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":384,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":404,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":81,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":139,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":179,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":193,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":204,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":187,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:12",{"_index":188,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":124,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["irrevocable",{"_index":894,"title":{},"body":{"license.html":{}}}],["issue",{"_index":867,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":116,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":153,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":677,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":195,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":201,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":192,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":145,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":59,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":758,"title":{},"body":{"license.html":{}}}],["jest",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":619,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":655,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":627,"title":{},"body":{"index.html":{}}}],["key",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":1011,"title":{},"body":{"license.html":{}}}],["language",{"_index":1103,"title":{},"body":{"license.html":{}}}],["law",{"_index":1006,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":924,"title":{},"body":{"license.html":{}}}],["legal",{"_index":777,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1109,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":1029,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1037,"title":{},"body":{"license.html":{}}}],["library",{"_index":628,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":912,"title":{},"body":{"license.html":{}}}],["license",{"_index":755,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":972,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1098,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":929,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":771,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1014,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1105,"title":{},"body":{"license.html":{}}}],["limited",{"_index":813,"title":{},"body":{"license.html":{}}}],["link",{"_index":848,"title":{},"body":{"license.html":{}}}],["list",{"_index":668,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":865,"title":{},"body":{"license.html":{}}}],["literal",{"_index":402,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":919,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":380,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["logger",{"_index":29,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":692,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":693,"title":{},"body":{"index.html":{}}}],["logging",{"_index":458,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loss",{"_index":1046,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1053,"title":{},"body":{"license.html":{}}}],["made",{"_index":828,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":864,"title":{},"body":{"license.html":{}}}],["make",{"_index":905,"title":{},"body":{"license.html":{}}}],["making",{"_index":810,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1051,"title":{},"body":{"license.html":{}}}],["managed",{"_index":869,"title":{},"body":{"license.html":{}}}],["management",{"_index":791,"title":{},"body":{"license.html":{}}}],["manager",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":207,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":875,"title":{},"body":{"license.html":{}}}],["marks",{"_index":994,"title":{},"body":{"license.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":767,"title":{},"body":{"license.html":{}}}],["means",{"_index":786,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":818,"title":{},"body":{"license.html":{}}}],["media",{"_index":824,"title":{},"body":{"license.html":{}}}],["medium",{"_index":935,"title":{},"body":{"license.html":{}}}],["meet",{"_index":936,"title":{},"body":{"license.html":{}}}],["member",{"_index":745,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1016,"title":{},"body":{"license.html":{}}}],["merely",{"_index":847,"title":{},"body":{"license.html":{}}}],["merge",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":105,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1117,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":811,"title":{},"body":{"license.html":{}}}],["modified",{"_index":941,"title":{},"body":{"license.html":{}}}],["modify",{"_index":966,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":971,"title":{},"body":{"license.html":{}}}],["module",{"_index":78,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":369,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":102,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":19,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":14,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":36,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":993,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":742,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":913,"title":{},"body":{"license.html":{}}}],["need",{"_index":747,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1032,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1035,"title":{},"body":{"license.html":{}}}],["new",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":84,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":617,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":640,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":743,"title":{},"body":{"index.html":{}}}],["non",{"_index":889,"title":{},"body":{"license.html":{}}}],["noop",{"_index":209,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":675,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":210,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":196,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":203,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":208,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":963,"title":{},"body":{"license.html":{}}}],["notable",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":983,"title":{},"body":{"license.html":{}}}],["notice",{"_index":830,"title":{},"body":{"license.html":{}}}],["notices",{"_index":944,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":981,"title":{},"body":{"license.html":{}}}],["npm",{"_index":645,"title":{},"body":{"index.html":{}}}],["null",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["o",{"_index":24,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":816,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1063,"title":{},"body":{"license.html":{}}}],["observable",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1100,"title":{},"body":{"license.html":{}}}],["offer",{"_index":906,"title":{},"body":{"license.html":{}}}],["ok",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":678,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":708,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":46,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":31,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":738,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":149,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":394,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":125,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":177,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":62,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":213,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":363,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":684,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":642,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":499,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["optimization",{"_index":730,"title":{},"body":{"index.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":736,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1000,"title":{},"body":{"license.html":{}}}],["original",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":386,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_exporter",{"_index":168,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_logger",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":90,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":383,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":385,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":48,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":1044,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":800,"title":{},"body":{"license.html":{}}}],["overide",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1108,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":773,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":796,"title":{},"body":{"license.html":{}}}],["package",{"_index":600,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1093,"title":{},"body":{"license.html":{}}}],["param",{"_index":134,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":376,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parser",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":952,"title":{},"body":{"license.html":{}}}],["partial",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1018,"title":{},"body":{"license.html":{}}}],["party",{"_index":962,"title":{},"body":{"license.html":{}}}],["patent",{"_index":901,"title":{},"body":{"license.html":{}}}],["peerdependencies",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["percent",{"_index":798,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":660,"title":{},"body":{"index.html":{}}}],["perform",{"_index":898,"title":{},"body":{"license.html":{}}}],["permission",{"_index":991,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":806,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":887,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":951,"title":{},"body":{"license.html":{}}}],["places",{"_index":957,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1056,"title":{},"body":{"license.html":{}}}],["power",{"_index":787,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":809,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":896,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1092,"title":{},"body":{"license.html":{}}}],["private",{"_index":104,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":45,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":995,"title":{},"body":{"license.html":{}}}],["production",{"_index":41,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":542,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":422,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":702,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":943,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":698,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":91,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":83,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":89,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":100,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:14",{"_index":146,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":211,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":180,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":194,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:21",{"_index":112,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:31",{"_index":147,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:34",{"_index":115,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:45",{"_index":120,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/b3",{"_index":82,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":140,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":152,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":154,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":206,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":158,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{}}}],["provide",{"_index":95,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":833,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":127,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1008,"title":{},"body":{"license.html":{}}}],["public",{"_index":197,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":897,"title":{},"body":{"license.html":{}}}],["publish",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":870,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":784,"title":{},"body":{"license.html":{}}}],["readable",{"_index":955,"title":{},"body":{"license.html":{}}}],["readme",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1077,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":997,"title":{},"body":{"license.html":{}}}],["received",{"_index":879,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":938,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":667,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1024,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":933,"title":{},"body":{"license.html":{}}}],["redo",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":989,"title":{},"body":{"license.html":{}}}],["release",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":845,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1085,"title":{},"body":{"license.html":{}}}],["represent",{"_index":842,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":863,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":895,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1001,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":763,"title":{},"body":{"license.html":{}}}],["request",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":357,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":356,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":354,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":337,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":335,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":339,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":996,"title":{},"body":{"license.html":{}}}],["reset",{"_index":464,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["response",{"_index":700,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1069,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1020,"title":{},"body":{"license.html":{}}}],["result",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":817,"title":{},"body":{"license.html":{}}}],["results",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":948,"title":{},"body":{"license.html":{}}}],["return",{"_index":121,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["returns",{"_index":118,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":839,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1065,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1026,"title":{},"body":{"license.html":{}}}],["root",{"_index":128,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":892,"title":{},"body":{"license.html":{}}}],["run",{"_index":641,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":688,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":658,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":904,"title":{},"body":{"license.html":{}}}],["sections",{"_index":768,"title":{},"body":{"license.html":{}}}],["see",{"_index":101,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":907,"title":{},"body":{"license.html":{}}}],["send",{"_index":652,"title":{},"body":{"index.html":{}}}],["sending",{"_index":723,"title":{},"body":{"index.html":{}}}],["sent",{"_index":862,"title":{},"body":{"license.html":{}}}],["separable",{"_index":846,"title":{},"body":{"license.html":{}}}],["separate",{"_index":986,"title":{},"body":{"license.html":{}}}],["service",{"_index":37,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":35,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/propagator.interface",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":358,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":766,"title":{},"body":{"license.html":{}}}],["shares",{"_index":801,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":44,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":360,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":362,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":18,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["skipself",{"_index":370,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":814,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1068,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1019,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":164,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":175,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["special",{"_index":1039,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1102,"title":{},"body":{"license.html":{}}}],["stack",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":704,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":706,"title":{},"body":{"index.html":{}}}],["started",{"_index":418,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":334,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":980,"title":{},"body":{"license.html":{}}}],["stated",{"_index":903,"title":{},"body":{"license.html":{}}}],["statement",{"_index":973,"title":{},"body":{"license.html":{}}}],["statements",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":106,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":945,"title":{},"body":{"license.html":{}}}],["statuscode",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["statuscode.error",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["statuscode.ok",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stoppage",{"_index":1048,"title":{},"body":{"license.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":566,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":899,"title":{},"body":{"license.html":{}}}],["submission",{"_index":976,"title":{},"body":{"license.html":{}}}],["submit",{"_index":856,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":854,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":880,"title":{},"body":{"license.html":{}}}],["such",{"_index":792,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":985,"title":{},"body":{"license.html":{}}}],["support",{"_index":1061,"title":{},"body":{"license.html":{}}}],["sync",{"_index":666,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1090,"title":{},"body":{"license.html":{}}}],["systems",{"_index":866,"title":{},"body":{"license.html":{}}}],["table",{"_index":599,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1113,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":654,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":930,"title":{},"body":{"license.html":{}}}],["terms",{"_index":761,"title":{},"body":{"license.html":{}}}],["test",{"_index":510,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":205,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":122,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["theory",{"_index":1030,"title":{},"body":{"license.html":{}}}],["there's",{"_index":711,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":850,"title":{},"body":{"license.html":{}}}],["third",{"_index":961,"title":{},"body":{"license.html":{}}}],["this.b3propagatorconfig",{"_index":131,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":159,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":350,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":349,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":199,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.exporterservice.getexporter",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":160,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":161,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":396,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.propagatorservice.getpropagator",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":359,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":413,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":910,"title":{},"body":{"license.html":{}}}],["through",{"_index":769,"title":{},"body":{"license.html":{}}}],["throw",{"_index":377,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":746,"title":{},"body":{"index.html":{}}}],["title",{"_index":1015,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1112,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":686,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1031,"title":{},"body":{"license.html":{}}}],["trace",{"_index":38,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":661,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":868,"title":{},"body":{"license.html":{}}}],["trade",{"_index":992,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":949,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":990,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":908,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":819,"title":{},"body":{"license.html":{}}}],["translation",{"_index":820,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":643,"title":{},"body":{"index.html":{}}}],["true",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":750,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":741,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":748,"title":{},"body":{"index.html":{}}}],["types",{"_index":825,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":754,"title":{},"body":{"index.html":{}}}],["typo",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":783,"title":{},"body":{"license.html":{}}}],["union",{"_index":778,"title":{},"body":{"license.html":{}}}],["unless",{"_index":978,"title":{},"body":{"license.html":{}}}],["unused",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":718,"title":{},"body":{"index.html":{}}}],["update",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":49,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":332,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":331,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":341,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":345,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":343,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":346,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":42,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":96,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["used",{"_index":683,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":694,"title":{},"body":{"index.html":{}}}],["useless",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":631,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":382,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":1023,"title":{},"body":{"license.html":{}}}],["value",{"_index":23,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1118,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":859,"title":{},"body":{"license.html":{}}}],["version",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["version.json",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":664,"title":{},"body":{"index.html":{}}}],["void",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["wait",{"_index":202,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["want",{"_index":710,"title":{},"body":{"index.html":{}}}],["warn",{"_index":690,"title":{},"body":{"index.html":{}}}],["warning",{"_index":644,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1010,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1004,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":960,"title":{},"body":{"license.html":{}}}],["whether",{"_index":793,"title":{},"body":{"license.html":{}}}],["whole",{"_index":843,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":348,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":882,"title":{},"body":{"license.html":{}}}],["without",{"_index":722,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":826,"title":{},"body":{"license.html":{}}}],["works",{"_index":551,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":888,"title":{},"body":{"license.html":{}}}],["writing",{"_index":877,"title":{},"body":{"license.html":{}}}],["written",{"_index":860,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":724,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1097,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":55,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["zipkin/build/src/types",{"_index":412,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkincollectorconfig",{"_index":56,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":408,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":416,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":403,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":405,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone.js",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1110,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        multiHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            defineB3Encoding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:34\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:45\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            b3PropagatorConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         B3PropagatorConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                        custom Header\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator, NoopTextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n    //return new JaegerHttpTracePropagator(this.customHeader); Wait\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        b3PropagatorConfig\n                                \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:213\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:133\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:183\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:197\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, StatusCode, setActiveSpan } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.exporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: StatusCode.OK\n          });\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: StatusCode.ERROR\n          });\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultTextMapSetter,\n      this.contextManager.active()\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig > 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     Attributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Attributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger (Optional)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:49\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     collectorTypes.CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n  OTELCOL_LOGGER\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter,\n  collectorTypes,\n} from '@opentelemetry/exporter-collector';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: collectorTypes.CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   * @param logger Logger (Optional)\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig,\n    @Optional() @Inject(OTELCOL_LOGGER) logger: Logger\n  ) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      logger,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:33\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zipkinConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExporterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport { OpenTelemetryConfig, OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter } from '@opentelemetry/exporter-zipkin';\nimport { ExporterConfig } from '@opentelemetry/exporter-zipkin/build/src/types';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.1.2\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ^10.1.2\n        \n            @angular/compiler : ^10.1.2\n        \n            @angular/core : ^10.1.2\n        \n            @angular/forms : ^10.1.2\n        \n            @angular/material : ^10.2.1\n        \n            @angular/platform-browser : ^10.1.2\n        \n            @angular/platform-browser-dynamic : ^10.1.2\n        \n            @angular/router : ^10.1.2\n        \n            @opentelemetry/exporter-collector : ^0.13.0\n        \n            @opentelemetry/exporter-zipkin : ^0.13.0\n        \n            @opentelemetry/propagator-b3 : ^0.13.0\n        \n            @opentelemetry/propagator-jaeger : ^0.11.0\n        \n            @opentelemetry/web : ^0.13.0\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.3.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.1.9\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nBreaking Change!!! version 0.12.0 OtelCol exporter works only with Opentelemtry-collector >= 0.12.0 (see example)\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/exporter-zipkin @opentelemetry/propagator-jaeger @opentelemetry/propagator-b3Configuration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-propagator-b3)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 3 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the Logger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]\nYou can see an example in the example-app.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n\nIn Progress\nDone ✓\n\n Add more configuration for OpenTelemetry-collector : See here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.logger')\n                        \n                    \n\n                \n                    \n                        Logger : injection for a logger compatible \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_EXPORTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.exporter')\n                        \n                    \n\n                \n                    \n                        injection for a Exporter \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_PROPAGATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.propagator')\n                        \n                    \n\n                \n                    \n                        injection for a propagator \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
