var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/B3PropagatorModule.html",[0,1.216,1,2.094]],["body/modules/B3PropagatorModule.html",[1,3.403,2,1.477,3,0.392,4,0.392,5,0.289,6,0.339,7,3.097,8,2.755,9,2.482,10,0.475,11,0.032,12,2.145,13,0.562,14,2.543,15,1.889,16,3.065,17,3.097,18,2.543,19,2.145,20,1.889,21,1.737,22,1.601,23,1.737,24,1.601,25,1.601,26,1.889,27,0.392,28,0.503,29,0.02,30,0.025,31,0.02]],["title/injectables/B3PropagatorService.html",[16,1.886,32,0.749]],["body/injectables/B3PropagatorService.html",[3,0.361,4,0.361,5,0.267,6,0.399,7,3.636,8,3.234,10,0.462,11,0.032,13,0.519,16,3.374,27,0.361,28,0.464,29,0.019,30,0.024,31,0.019,32,1.156,33,1.741,34,1.899,35,0.834,36,0.764,37,1.477,38,2.799,39,1.07,40,3.279,41,1.711,42,6.102,43,1.16,44,2.891,45,2.039,46,2.078,47,1.07,48,2.288,49,1.741,50,1.741,51,1.362,52,0.908]],["title/interfaces/CommonCollectorConfig.html",[53,0.882,54,1.565]],["body/interfaces/CommonCollectorConfig.html",[3,0.253,4,0.253,5,0.187,6,0.22,10,0.314,11,0.032,13,0.364,27,0.507,29,0.013,30,0.019,31,0.013,35,0.585,36,0.536,47,0.751,52,0.91,53,1.364,54,2.218,55,1.221,56,1.458,57,1.458,58,2.082,59,1.881,60,1.902,61,2.069,62,2.801,63,2.913,64,2.913,65,2.913,66,3.166,67,1.735,68,1.602,69,2.801,70,1.744,71,2.545,72,2.545,73,1.162,74,1.744,75,1.782,76,2.035,77,1.458,78,1.221,79,1.902,80,2.082,81,1.123,82,1.458,83,1.605,84,2.428,85,2.082,86,2.292,87,2.218,88,1.332,89,2.559,90,1.221,91,1.221,92,1.458,93,1.364,94,2.292,95,2.082,96,1.478,97,1.123,98,1.902,99,2.292,100,1.605,101,1.605,102,1.221,103,1.605]],["title/modules/CompositePropagatorModule.html",[0,1.216,104,2.094]],["body/modules/CompositePropagatorModule.html",[2,1.477,3,0.392,4,0.392,5,0.289,6,0.339,9,2.482,10,0.475,11,0.032,12,2.145,13,0.562,14,2.543,15,1.889,18,2.543,19,2.145,20,1.889,21,1.737,22,1.601,23,1.737,24,1.601,25,1.601,26,1.889,27,0.392,28,0.503,29,0.02,30,0.025,31,0.02,104,3.403,105,3.097,106,3.097,107,3.403,108,3.556]],["title/injectables/CompositePropagatorService.html",[32,0.749,107,2.094]],["body/injectables/CompositePropagatorService.html",[3,0.291,4,0.291,5,0.215,6,0.394,8,2.049,10,0.47,11,0.032,13,0.418,16,3.353,17,2.304,18,2.391,27,0.291,28,0.374,29,0.015,30,0.021,31,0.015,32,1.003,33,1.405,34,1.531,35,0.673,36,0.617,37,1.282,38,2.572,39,1.182,41,1.572,43,0.936,44,2.694,45,1.769,46,1.676,47,0.863,48,1.846,49,1.405,50,1.405,51,1.098,52,0.733,61,1.19,67,1.098,68,1.703,73,0.936,105,3.597,106,3.597,107,3.441,109,3.1,110,3.162,111,3.433,112,3.433,113,2.644,114,1.846,115,3.162,116,5.744,117,1.846,118,2.391,119,1.923,120,2.049,121,1.531,122,2.049,123,3.162,124,3.2,125,3.162,126,3.162,127,2.644,128,3.162,129,3.162,130,3.162]],["title/modules/ConsoleSpanExporterModule.html",[0,1.216,131,2.094]],["body/modules/ConsoleSpanExporterModule.html",[2,1.477,3,0.392,4,0.392,5,0.289,6,0.339,10,0.475,11,0.032,12,2.145,13,0.562,14,2.543,15,1.889,22,1.601,23,1.737,24,1.601,25,1.601,26,1.889,27,0.392,28,0.503,29,0.02,30,0.025,31,0.02,62,2.059,131,3.403,132,3.097,133,2.76,134,3.556,135,3.403,136,3.826,137,2.784]],["title/injectables/ConsoleSpanExporterService.html",[32,0.749,135,2.094]],["body/injectables/ConsoleSpanExporterService.html",[3,0.36,4,0.36,5,0.266,6,0.398,10,0.438,11,0.032,13,0.517,27,0.36,28,0.463,29,0.019,30,0.024,31,0.019,32,1.154,33,1.736,35,0.832,36,0.762,37,1.474,39,1.067,41,1.709,43,1.157,49,1.736,50,1.736,51,1.358,52,0.905,81,2.035,132,3.629,133,2.796,135,3.741,138,2.533,139,2.641,140,3.741,141,3.908,142,4.829,143,3.481,144,2.641,145,2.847,146,2.072]],["title/modules/HttpTraceContextPropagatorModule.html",[0,1.216,147,2.094]],["body/modules/HttpTraceContextPropagatorModule.html",[2,1.448,3,0.384,4,0.384,5,0.284,6,0.333,9,2.434,10,0.472,11,0.032,12,2.12,13,0.552,14,2.513,15,1.852,18,2.513,19,2.12,20,1.852,21,1.704,22,1.57,23,1.704,24,1.57,25,1.57,26,1.852,27,0.384,28,0.494,29,0.02,30,0.025,31,0.02,68,1.811,111,3.029,118,2.02,119,2.509,120,2.702,147,3.362,148,3.038]],["title/injectables/HttpTraceContextPropagatorService.html",[32,0.749,111,1.886]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.353,4,0.353,5,0.26,6,0.393,10,0.458,11,0.032,13,0.506,27,0.353,28,0.453,29,0.018,30,0.023,31,0.018,32,1.139,33,1.701,34,1.854,35,0.815,36,0.747,37,1.455,38,2.775,39,1.045,40,3.202,41,1.696,43,1.133,44,2.87,45,2.008,46,2.03,47,1.045,48,2.235,49,1.701,50,1.701,51,1.33,52,0.887,68,1.837,111,3.344,119,2.545,120,3.185,148,3.581,149,5.072]],["title/interfaces/IExporter.html",[53,0.882,144,1.713]],["body/interfaces/IExporter.html",[3,0.387,4,0.387,5,0.285,6,0.416,10,0.335,11,0.031,27,0.387,29,0.02,30,0.025,31,0.02,35,0.893,36,0.818,37,1.542,39,1.146,41,1.242,43,1.242,53,1.547,55,1.864,81,2.128,88,2.523,139,3.141,140,3.839,143,3.674,144,2.762,146,2.225,150,3.51,151,4.197,152,3.795,153,5.209]],["title/interfaces/IPropagator.html",[45,1.32,53,0.882]],["body/interfaces/IPropagator.html",[3,0.392,4,0.392,5,0.289,6,0.419,10,0.339,11,0.031,27,0.392,29,0.02,30,0.025,31,0.02,35,0.905,36,0.829,37,1.554,38,2.882,39,1.161,41,1.258,43,1.258,44,2.76,45,2.145,47,1.161,53,1.556,55,1.889,88,2.543,91,2.643,152,3.826,154,3.556,155,4.252,156,4.392,157,5.251]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.216,158,2.094]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.448,3,0.384,4,0.384,5,0.284,6,0.333,9,2.434,10,0.472,11,0.032,12,2.12,13,0.552,14,2.513,15,1.852,18,2.513,19,2.12,20,1.852,21,1.704,22,1.57,23,1.704,24,1.57,25,1.57,26,1.852,27,0.384,28,0.494,29,0.02,30,0.025,31,0.02,68,1.811,112,3.029,118,2.736,121,2.02,122,2.702,158,3.362,159,3.038]],["title/injectables/JaegerHttpTracePropagatorService.html",[32,0.749,112,1.886]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.286,4,0.286,5,0.211,6,0.421,10,0.456,11,0.032,13,0.41,27,0.286,28,0.367,29,0.015,30,0.02,31,0.015,32,0.99,33,1.378,34,1.502,35,0.909,36,0.605,37,1.265,38,2.551,39,1.335,41,1.559,43,0.918,44,2.676,45,1.746,46,1.645,47,0.847,49,1.378,50,1.378,51,1.077,52,0.719,60,2.07,61,1.168,67,1.484,68,1.911,69,2.07,73,0.918,84,2.266,90,1.898,92,2.592,93,1.984,96,1.168,97,2.152,109,2.853,112,3.075,114,1.811,117,1.811,118,2.887,121,1.502,122,3.414,124,3.168,159,3.838,160,2.26,161,4.273,162,3.102,163,5.525,164,2.26,165,2.01,166,2.594,167,2.594,168,2.26,169,2.594,170,3.102,171,3.102,172,3.102]],["title/interfaces/JaegerPropagatorConfig.html",[53,0.882,89,1.565]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.276,4,0.276,5,0.204,6,0.239,10,0.333,11,0.032,13,0.396,27,0.521,29,0.014,30,0.02,31,0.014,35,0.637,36,0.584,47,0.818,52,0.966,53,1.417,54,2.02,55,1.331,56,1.588,57,1.588,58,1.588,59,1.954,60,2.02,61,1.57,62,2.324,63,2.211,64,2.211,65,2.211,66,2.751,67,1.04,68,1.337,69,2.736,70,1.331,71,1.941,72,1.941,73,0.887,74,1.331,75,1.941,76,2.132,77,1.588,78,1.331,79,2.02,80,2.211,81,1.224,82,1.588,83,1.748,84,2.751,85,2.211,86,2.435,87,2.324,88,1.451,89,2.807,90,1.853,91,1.853,92,2.751,93,1.449,94,2.435,95,2.211,96,1.57,97,1.224,98,2.02,99,2.435,100,1.748,101,1.748,102,1.331,103,1.748]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.216,173,2.354]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.448,3,0.384,4,0.384,5,0.284,6,0.333,9,2.434,10,0.472,11,0.032,12,2.12,13,0.552,14,2.513,15,1.852,18,2.513,19,2.12,20,2.626,21,2.308,22,1.57,23,1.704,24,1.57,25,1.57,26,1.852,27,0.384,28,0.494,29,0.02,30,0.025,31,0.02,118,2.02,173,3.78,174,3.038,175,3.038,176,3.362,177,4.17]],["title/injectables/NoopTextMapPropagatorService.html",[32,0.749,176,2.094]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.357,4,0.357,5,0.263,6,0.396,10,0.436,11,0.031,13,0.512,20,2.556,21,2.024,27,0.357,28,0.458,29,0.018,30,0.024,31,0.018,32,1.147,33,1.721,34,1.876,35,0.824,36,0.755,37,1.466,38,2.787,39,1.058,41,1.703,43,1.146,44,2.88,45,2.024,46,2.054,47,1.058,49,1.721,50,1.721,51,1.346,52,0.897,113,3.24,118,2.399,174,3.608,175,3.608,176,3.209,178,4.953,179,6.083]],["title/interfaces/OpenTelemetryConfig.html",[53,0.882,93,1.122]],["body/interfaces/OpenTelemetryConfig.html",[3,0.267,4,0.267,5,0.197,6,0.231,10,0.325,11,0.032,13,0.383,27,0.515,29,0.014,30,0.019,31,0.014,35,0.616,36,0.565,47,0.791,52,0.944,53,1.396,54,2.476,55,1.286,56,1.535,57,1.535,58,1.535,59,1.774,60,1.973,61,1.925,62,2.282,63,2.16,64,2.16,65,2.16,66,2.711,67,1.637,68,1.306,69,2.476,70,1.286,71,1.877,72,1.877,73,0.857,74,1.286,75,1.877,76,2.093,77,1.535,78,1.286,79,2.476,80,2.16,81,1.183,82,1.535,83,1.69,84,2.498,85,2.16,86,2.378,87,2.282,88,1.403,89,2.957,90,1.286,91,1.286,92,1.535,93,1.776,94,3.262,95,2.963,96,1.534,97,1.183,98,1.973,99,2.378,100,1.69,101,1.69,102,1.286,103,1.69]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[180,1.565,181,2.094]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.122,4,0.122,5,0.09,6,0.387,10,0.415,11,0.032,13,0.175,18,0.641,19,1.842,21,0.541,27,0.122,28,0.339,29,0.006,30,0.011,31,0.006,32,0.514,35,0.959,36,0.258,37,0.657,39,1.28,41,0.993,43,1.197,47,0.606,48,0.773,49,0.588,50,0.588,51,0.46,52,1.044,59,1.263,60,1.075,61,1.618,62,2.081,63,0.702,64,2.144,66,2.144,67,1.628,73,1.433,74,0.986,81,0.907,87,0.641,88,1.075,90,1.491,91,1.66,93,1.166,96,0.499,97,1.842,99,2.361,109,1.959,114,2.508,117,0.773,119,0.986,124,3.61,133,2.794,136,0.965,137,2.39,139,1.779,142,1.857,143,2.631,146,0.702,160,0.965,165,0.858,167,1.108,168,3.709,180,1.389,181,1.439,182,1.324,183,3.526,184,0.965,185,1.857,186,2.867,187,3.594,188,2.22,189,2.22,190,2.867,191,2.22,192,2.867,193,2.398,194,2.22,195,2.22,196,2.22,197,2.867,198,1.324,199,1.857,200,4.045,201,1.618,202,2.22,203,1.858,204,3.356,205,2.22,206,2.22,207,4.841,208,1.324,209,1.857,210,5.678,211,2.22,212,1.324,213,1.324,214,1.296,215,2.22,216,1.857,217,2.22,218,1.324,219,3.383,220,1.618,221,2.22,222,1.324,223,1.324,224,2.398,225,3.356,226,2.398,227,1.857,228,1.324,229,4.045,230,3.356,231,1.324,232,2.22,233,1.857,234,2.806,235,1.673,236,1.857,237,2.867,238,3.356,239,2.22,240,2.806,241,1.324,242,1.324,243,2.22,244,2.22,245,0.965,246,1.108,247,1.324,248,0.965,249,2.22,250,1.324,251,2.22,252,1.324,253,2.22,254,2.22,255,1.324,256,1.324,257,1.324,258,1.618,259,1.324,260,0.965,261,0.965,262,1.324,263,1.324,264,1.324,265,2.22,266,1.324,267,1.324,268,1.324,269,1.324,270,1.324,271,1.324,272,1.324,273,1.324,274,1.324,275,1.324,276,1.324,277,1.324,278,1.618,279,2.22,280,2.22,281,2.22,282,2.22,283,2.22,284,1.324,285,1.324,286,1.324,287,0.965,288,1.324,289,1.324,290,1.324,291,1.324,292,1.324,293,1.324,294,1.324,295,0.965,296,1.324,297,1.324,298,1.324,299,0.965,300,1.324,301,1.324,302,1.324,303,1.324,304,1.324,305,1.324,306,1.324,307,1.324,308,1.324,309,1.324,310,1.324,311,1.324,312,1.324,313,1.324,314,1.324,315,1.324,316,1.324,317,1.324,318,1.324,319,1.324,320,2.867,321,1.324,322,2.867,323,1.324,324,1.324,325,1.324,326,1.324,327,1.324,328,1.324,329,1.324,330,2.22,331,1.324,332,1.324,333,1.324,334,1.324]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.216,335,2.094]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.229,3,0.326,4,0.326,5,0.241,6,0.373,10,0.461,11,0.032,12,2.136,13,0.468,22,1.332,23,1.446,24,1.332,25,1.758,26,1.572,27,0.326,28,0.419,29,0.017,30,0.022,31,0.017,37,1.047,39,0.966,41,1.047,43,1.047,52,0.82,61,1.968,67,1.229,73,1.047,93,1.931,96,1.758,97,2.136,109,2.065,114,2.065,165,2.293,166,2.959,181,3.026,220,2.578,245,2.578,335,3.745,336,4.67,337,3.538,338,4.67,339,3.538,340,4.67,341,3.538,342,5.227,343,4.67,344,3.906,345,3.906,346,3.538,347,3.538,348,2.959,349,4.67,350,3.538,351,2.578,352,3.538,353,3.538,354,2.959,355,3.538,356,3.538]],["title/modules/OtelColExporterModule.html",[0,1.216,357,2.094]],["body/modules/OtelColExporterModule.html",[2,1.486,3,0.394,4,0.394,5,0.291,6,0.342,10,0.476,11,0.032,12,2.154,13,0.566,14,2.553,15,1.901,22,1.611,23,1.748,24,1.611,25,1.611,26,1.901,27,0.394,28,0.506,29,0.02,30,0.025,31,0.02,133,2.072,134,3.579,136,3.841,137,2.795,357,3.416,358,3.118,359,3.416,360,3.118]],["title/interfaces/OtelCollectorConfig.html",[53,0.882,79,1.565]],["body/interfaces/OtelCollectorConfig.html",[3,0.26,4,0.26,5,0.192,6,0.225,10,0.319,11,0.032,13,0.373,27,0.511,29,0.013,30,0.019,31,0.013,35,0.6,36,0.55,47,0.77,52,0.926,53,1.38,54,1.937,55,1.253,56,1.496,57,1.496,58,1.496,59,1.903,60,1.937,61,2.086,62,2.25,63,2.12,64,2.12,65,2.12,66,2.68,67,1.614,68,1.282,69,2.684,70,1.253,71,1.828,72,1.828,73,0.835,74,1.253,75,1.828,76,2.064,77,2.12,78,1.776,79,2.25,80,2.938,81,1.634,82,2.12,83,2.334,84,2.829,85,2.938,86,3.235,87,2.82,88,1.937,89,2.584,90,1.253,91,1.253,92,1.496,93,1.389,94,2.334,95,2.12,96,1.506,97,1.153,98,1.937,99,2.334,100,1.647,101,1.647,102,1.253,103,1.647]],["title/injectables/OtelcolExporterService.html",[32,0.749,359,2.094]],["body/injectables/OtelcolExporterService.html",[3,0.274,4,0.274,5,0.202,6,0.413,10,0.471,11,0.032,13,0.394,27,0.274,28,0.566,29,0.014,30,0.02,31,0.014,32,0.962,33,1.322,35,0.883,36,0.58,37,1.229,39,1.306,41,1.531,43,0.881,47,0.812,49,1.322,50,1.322,51,1.033,52,0.689,59,1.563,60,2.01,61,2.049,65,1.577,67,1.442,73,0.881,76,2.726,80,1.577,85,1.577,87,1.441,93,1.958,95,2.535,96,1.12,97,2.224,102,1.322,109,2.791,114,1.736,117,1.736,124,3.098,138,1.928,140,3.353,143,2.791,144,2.201,145,2.167,146,1.577,160,2.167,165,2.69,168,3.024,169,2.488,358,3.769,359,3.353,361,4.151,362,2.975,363,5.174,364,5.442,365,2.975,366,3.024,367,2.488,368,2.975,369,2.975,370,2.975,371,2.975,372,2.975,373,2.975,374,2.975,375,2.975]],["title/classes/SpanExporterService.html",[28,0.382,137,1.713]],["body/classes/SpanExporterService.html",[3,0.374,4,0.374,5,0.276,6,0.407,10,0.407,11,0.031,27,0.374,28,0.48,29,0.019,30,0.024,31,0.019,35,0.863,36,0.791,37,1.509,39,1.107,41,1.2,43,1.2,51,1.771,70,2.264,74,2.264,98,2.834,133,2.469,137,2.703,138,2.627,139,2.703,140,3.791,143,3.255,144,2.956,145,2.953,146,2.149,376,2.953,377,4.263,378,4.054,379,3.714,380,3.714,381,3.39]],["title/classes/TextMapPropagatorService.html",[19,1.32,28,0.382]],["body/classes/TextMapPropagatorService.html",[3,0.381,4,0.381,5,0.281,6,0.412,10,0.412,11,0.031,19,2.407,21,2.107,27,0.381,28,0.489,29,0.02,30,0.024,31,0.02,34,2,35,0.879,36,0.805,37,1.527,38,2.853,39,1.128,41,1.223,43,1.223,44,2.724,45,2.298,46,2.19,47,1.128,51,1.792,98,2.498,376,3.009,379,3.758,380,3.758,381,3.455,382,4.314,383,4.131]],["title/changelog.html",[384,1.579,385,1.579,386,2.263]],["body/changelog.html",[5,0.281,11,0.016,29,0.011,30,0.016,31,0.011,52,0.958,59,1.557,68,0.739,70,1.837,78,1.024,86,1.345,90,1.024,91,1.533,108,3.459,119,1.533,121,1.671,180,1.671,199,1.927,203,2.68,214,3.511,235,2.681,258,3.761,299,3.013,351,1.679,360,3.346,386,2.886,387,2.304,388,2.304,389,1.679,390,2.304,391,1.493,392,2.304,393,2.304,394,2.304,395,3.841,396,3.013,397,6.015,398,4.918,399,3.45,400,5.819,401,1.927,402,2.304,403,2.304,404,2.304,405,1.927,406,2.304,407,5.628,408,5.628,409,1.927,410,2.304,411,2.304,412,4.136,413,2.304,414,2.304,415,2.304,416,2.304,417,2.304,418,2.304,419,2.304,420,4.136,421,1.927,422,2.304,423,2.304,424,2.304,425,2.304,426,2.304,427,2.304,428,4.113,429,3.45,430,2.304,431,3.45,432,2.304,433,4.136,434,2.304,435,2.304,436,2.304,437,4.593,438,2.304,439,2.304,440,2.304,441,2.304,442,1.927,443,2.304,444,2.304,445,2.304,446,3.45,447,2.304,448,4.136,449,2.304,450,2.304,451,2.304,452,2.304,453,2.304,454,1.927,455,2.304,456,4.593,457,2.304,458,4.136,459,4.593,460,3.45,461,3.459,462,3.45,463,3.45,464,2.886,465,3.45,466,4.593,467,2.304,468,3.45,469,2.304,470,2.304,471,2.304,472,2.304,473,4.136,474,2.304,475,2.304,476,2.304,477,2.304,478,2.304,479,3.45,480,2.304,481,2.304,482,2.304,483,2.304,484,2.304,485,2.304,486,2.304,487,1.679,488,5.352,489,2.304,490,2.304,491,2.304,492,2.304,493,1.927,494,2.304,495,2.304,496,2.304,497,2.304,498,2.304,499,2.304,500,2.304,501,2.304,502,1.679,503,2.304,504,2.304,505,2.304,506,2.304,507,1.927,508,2.304,509,2.304,510,2.304,511,2.304,512,3.45,513,3.45,514,2.304,515,2.304,516,2.304,517,2.886,518,3.45,519,3.45,520,2.304,521,2.304,522,2.304,523,4.593,524,2.304,525,2.304,526,2.304,527,2.304,528,2.304,529,3.45,530,2.304,531,2.304]],["title/coverage.html",[532,3.675]],["body/coverage.html",[5,0.206,6,0.514,7,2.208,8,1.964,11,0.031,16,1.769,19,1.238,20,1.868,21,1.718,28,0.498,29,0.014,30,0.02,31,0.014,32,1.347,34,2.746,45,1.238,52,0.702,53,1.548,54,1.468,56,3.006,57,3.006,67,1.053,68,1.672,73,0.897,79,1.468,89,1.468,93,1.053,96,1.141,102,1.346,105,2.208,106,2.208,107,1.964,111,1.769,112,1.769,118,2.338,119,1.868,120,1.964,122,1.964,132,2.208,133,1.468,135,1.964,137,1.606,138,3.129,144,1.606,148,2.208,150,2.534,154,2.534,159,2.208,174,2.208,175,2.208,176,1.964,180,1.468,181,1.964,183,3.063,184,3.063,358,2.208,359,1.964,377,2.534,382,2.534,532,2.534,533,2.534,534,3.03,535,3.03,536,6.437,537,3.03,538,6.019,539,5.215,540,4.829,541,4.829,542,3.03,543,3.03,544,3.03,545,2.534]],["title/dependencies.html",[546,2.263,547,2.515]],["body/dependencies.html",[11,0.032,13,0.535,15,1.795,29,0.019,30,0.024,31,0.019,76,1.795,78,1.795,121,1.957,164,2.944,246,3.38,248,2.944,287,2.944,366,2.944,395,4.255,421,3.38,428,3.38,547,2.619,548,4.041,549,6.314,550,4.041,551,5.088,552,4.041,553,4.041,554,4.041,555,5.088,556,4.255,557,4.041,558,4.041,559,4.041,560,4.041,561,4.041,562,4.041,563,4.255,564,4.041,565,3.38,566,4.041,567,4.041,568,4.041,569,4.041,570,4.041,571,4.041]],["title/index.html",[36,0.528,384,1.579,385,1.579]],["body/index.html",[0,1.896,1,0.891,3,0.5,10,0.305,11,0.031,12,1.403,13,0.182,17,1.001,22,0.517,23,0.936,24,0.862,25,0.517,27,0.211,28,0.163,29,0.018,30,0.011,31,0.007,47,0.804,48,1.337,51,0.796,53,0.625,54,0.666,58,1.214,59,1.847,61,1.293,62,1.848,63,1.214,64,1.561,65,1.214,66,1.561,68,1.401,69,1.848,70,2.179,73,0.678,74,1.017,76,1.831,77,2.874,78,2.408,79,0.666,80,1.821,81,0.562,82,1.214,83,1.337,84,2.023,85,0.729,87,1.109,89,1.426,90,1.526,91,2.288,92,1.214,93,1.023,94,1.337,95,1.214,102,1.308,104,1.908,117,0.802,119,0.611,121,1.996,127,1.149,131,0.891,133,1.109,139,2.428,146,1.214,147,0.891,149,1.149,156,1.149,158,0.891,164,1.669,180,2.218,185,1.149,187,1.149,193,1.149,201,1.001,203,1.484,209,1.149,214,1.719,219,3.447,220,2.145,224,2.463,226,1.916,233,1.149,234,1.149,235,3.34,236,1.149,240,1.149,245,1.001,248,2.145,260,2.145,261,2.145,278,1.001,287,1.001,335,1.908,344,1.149,345,2.873,351,2.78,354,1.916,357,2.671,360,1.001,366,2.145,367,1.149,379,1.001,384,1.337,385,1.337,389,1.669,391,3.179,396,1.001,401,1.916,405,1.149,442,1.916,461,1.149,487,3.753,502,2.145,507,1.149,545,1.916,546,1.149,547,3.081,556,1.149,563,1.916,565,2.463,572,1.374,573,4.371,574,1.374,575,1.374,576,3.891,577,1.374,578,1.916,579,2.29,580,2.29,581,3.435,582,3.435,583,2.29,584,2.29,585,4.371,586,2.944,587,1.374,588,1.374,589,2.944,590,3.816,591,1.916,592,2.29,593,2.29,594,4.579,595,4.579,596,3.816,597,1.374,598,1.374,599,2.29,600,2.29,601,2.29,602,2.29,603,2.29,604,2.29,605,1.374,606,1.374,607,1.374,608,1.374,609,1.149,610,1.916,611,2.29,612,1.374,613,1.374,614,1.374,615,1.374,616,1.374,617,1.374,618,1.374,619,1.374,620,1.149,621,2.944,622,1.374,623,1.374,624,1.374,625,1.374,626,1.149,627,2.29,628,1.374,629,1.149,630,1.374,631,1.374,632,1.374,633,1.374,634,1.374,635,1.374,636,1.149,637,1.374,638,1.374,639,1.374,640,1.374,641,1.374,642,1.374,643,2.29,644,1.374,645,2.29,646,2.29,647,1.374,648,1.374,649,1.374,650,1.374,651,1.374,652,1.374,653,2.29,654,2.29,655,0.891,656,1.374,657,1.374,658,1.374,659,1.374,660,1.374,661,1.374,662,1.149,663,1.149,664,1.374,665,3.816,666,3.816,667,3.816,668,4.906,669,3.816,670,3.192,671,3.816,672,3.816,673,3.816,674,1.374,675,1.374,676,1.374,677,1.374,678,1.374,679,1.374,680,1.374,681,1.374,682,1.374,683,1.374,684,1.374,685,1.374,686,1.374,687,2.29,688,2.29,689,1.374,690,1.374,691,1.374,692,1.374,693,1.374,694,1.374,695,1.374]],["title/license.html",[384,1.579,385,1.579,696,2.263]],["body/license.html",[4,0.446,5,0.286,10,0.091,11,0.012,20,1.349,25,0.428,28,0.135,29,0.009,30,0.009,31,0.005,35,0.242,39,0.31,55,0.505,58,0.603,59,0.428,70,2.028,73,0.758,74,0.505,152,0.828,203,0.737,214,1.139,216,1.631,227,3.121,258,1.866,278,0.828,299,1.866,380,1.421,391,0.737,454,0.951,487,0.828,502,3.953,517,1.631,533,2.143,576,0.828,578,0.951,591,1.631,609,0.951,620,0.951,629,0.951,636,0.951,655,0.737,663,2.86,670,1.631,696,4.981,697,3.038,698,2.562,699,1.137,700,1.137,701,1.137,702,4.401,703,4.948,704,3.038,705,3.419,706,1.137,707,5.139,708,4.565,709,1.137,710,1.137,711,1.137,712,4.565,713,4.948,714,3.731,715,4.565,716,1.951,717,1.137,718,3.419,719,1.137,720,1.137,721,1.137,722,3.038,723,1.137,724,4.401,725,3.038,726,1.951,727,1.137,728,2.562,729,1.951,730,1.137,731,1.137,732,5.364,733,3.038,734,1.951,735,1.137,736,1.951,737,1.137,738,1.137,739,1.137,740,1.137,741,1.137,742,1.137,743,1.137,744,2.562,745,1.137,746,2.562,747,1.951,748,4.948,749,1.137,750,1.137,751,3.731,752,4.401,753,3.038,754,1.951,755,2.562,756,3.731,757,1.137,758,1.137,759,1.137,760,1.137,761,1.137,762,1.951,763,1.137,764,1.137,765,1.137,766,5.98,767,2.562,768,1.951,769,1.137,770,4.401,771,1.951,772,1.137,773,3.419,774,1.951,775,1.137,776,5.364,777,1.137,778,1.137,779,1.137,780,1.137,781,1.137,782,1.137,783,1.951,784,2.562,785,1.137,786,1.137,787,1.137,788,1.137,789,1.137,790,3.038,791,3.419,792,1.137,793,1.951,794,3.038,795,1.951,796,1.137,797,3.419,798,1.951,799,1.137,800,1.137,801,2.562,802,1.137,803,1.137,804,1.137,805,1.137,806,1.951,807,0.951,808,1.137,809,1.137,810,2.562,811,1.137,812,1.137,813,2.562,814,1.137,815,1.137,816,1.137,817,3.038,818,4.565,819,1.137,820,1.137,821,1.951,822,4.212,823,2.562,824,3.038,825,1.951,826,1.951,827,1.951,828,1.951,829,2.562,830,1.951,831,2.562,832,1.951,833,1.951,834,1.951,835,1.951,836,0.951,837,1.951,838,1.137,839,1.137,840,3.419,841,3.992,842,2.562,843,1.951,844,1.137,845,1.137,846,1.951,847,1.951,848,1.137,849,1.137,850,2.562,851,1.951,852,1.137,853,1.137,854,1.137,855,2.562,856,1.137,857,1.137,858,1.137,859,1.951,860,1.951,861,1.137,862,1.137,863,1.137,864,1.137,865,1.137,866,1.137,867,1.137,868,1.951,869,1.137,870,1.137,871,1.137,872,1.137,873,1.137,874,1.137,875,1.137,876,1.137,877,2.562,878,1.137,879,2.562,880,1.137,881,1.137,882,1.137,883,1.137,884,4.212,885,1.137,886,1.137,887,1.137,888,1.137,889,1.137,890,3.038,891,1.951,892,3.038,893,1.137,894,1.137,895,1.137,896,1.137,897,1.137,898,2.562,899,1.137,900,1.137,901,1.951,902,1.951,903,1.137,904,1.137,905,1.137,906,1.951,907,1.137,908,1.137,909,3.419,910,1.137,911,1.137,912,1.137,913,1.137,914,1.137,915,1.137,916,1.137,917,2.562,918,3.038,919,1.137,920,1.137,921,1.137,922,1.137,923,1.137,924,1.137,925,1.137,926,1.137,927,1.137,928,1.137,929,1.137,930,1.951,931,1.137,932,1.137,933,1.951,934,1.137,935,1.137,936,3.038,937,1.137,938,1.137,939,1.137,940,1.137,941,1.137,942,1.137,943,1.137,944,3.038,945,2.562,946,2.562,947,2.562,948,1.951,949,1.951,950,2.562,951,1.951,952,1.951,953,1.951,954,1.951,955,1.137,956,1.137,957,1.137,958,1.137,959,1.137,960,1.137,961,1.137,962,1.137,963,1.137,964,1.951,965,1.137,966,1.137,967,1.137,968,1.137,969,3.419,970,1.137,971,1.137,972,1.137,973,1.137,974,1.137,975,1.137,976,1.137,977,1.137,978,3.419,979,1.137,980,1.137,981,1.137,982,1.137,983,1.137,984,0.951,985,1.137,986,1.137,987,1.137,988,1.137,989,1.137,990,1.137,991,1.137,992,1.137,993,1.137,994,1.137,995,1.137,996,1.137,997,2.562,998,1.137,999,1.137,1000,1.137,1001,1.137,1002,1.137,1003,1.951,1004,1.137,1005,1.137,1006,1.137,1007,1.137,1008,1.137,1009,1.137,1010,1.137,1011,1.137,1012,1.137,1013,1.137,1014,1.137,1015,1.137,1016,1.137,1017,1.137,1018,1.137,1019,1.951,1020,1.137,1021,1.137,1022,1.137,1023,1.951,1024,1.951,1025,1.137,1026,1.137,1027,1.137,1028,1.137,1029,1.137,1030,1.137,1031,1.137,1032,1.137,1033,1.137,1034,1.137,1035,1.137,1036,1.137,1037,1.137,1038,1.137,1039,1.137,1040,1.137,1041,1.137,1042,1.137,1043,1.137,1044,1.137,1045,1.137,1046,1.137]],["title/modules.html",[2,1.526]],["body/modules.html",[1,2.957,2,1.585,11,0.026,29,0.022,30,0.026,31,0.022,104,2.957,131,2.957,147,2.957,158,2.957,173,3.324,335,2.957,357,2.957,655,4.185,1047,6.459,1048,6.459]],["title/overview.html",[1049,3.675]],["body/overview.html",[0,1.8,2,1.66,11,0.027,22,1.8,24,1.8,29,0.023,30,0.027,31,0.023,33,2.123,55,2.123,348,3.997,376,3.482,396,3.482,409,3.997,464,3.997,547,3.097,626,3.997,984,3.997,1049,3.997,1050,4.78,1051,5.636,1052,4.78,1053,4.78]],["title/todo.html",[295,1.971,384,1.579,385,1.579]],["body/todo.html",[11,0.03,29,0.02,30,0.025,31,0.02,59,2.155,77,2.801,78,1.907,119,1.907,121,2.772,139,2.801,180,2.079,201,3.849,214,3.644,235,2.506,295,4.169,389,3.128,391,2.782,493,3.591,576,4.169,610,3.591,655,3.423,662,4.994,807,3.591,836,3.591,1054,4.293,1055,4.293,1056,5.723,1057,4.293,1058,4.293]],["title/miscellaneous/variables.html",[1059,2.263,1060,3.246]],["body/miscellaneous/variables.html",[6,0.422,11,0.03,29,0.02,30,0.025,31,0.02,36,0.837,52,1.224,56,2.276,57,3.034,67,1.491,69,2.079,73,1.694,76,2.347,81,2.338,82,3.034,96,2.155,97,1.754,98,2.559,100,2.506,101,2.506,102,2.347,103,2.506,180,2.079,183,3.128,184,3.849,235,2.506,260,3.128,261,3.128,1059,3.591,1060,3.591,1061,5.723]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":604,"title":{},"body":{"index.html":{}}}],["0.10.0",{"_index":421,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.10.1",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":428,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.11.0",{"_index":395,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":598,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":442,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.3",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["10.0.5",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":690,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":396,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":698,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":700,"title":{},"body":{"license.html":{}}}],["2020",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":507,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["4.1.9",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":615,"title":{},"body":{"index.html":{}}}],["5.3.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":739,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":464,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.6.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1053,"title":{},"body":{"overview.html":{}}}],["735b05d",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["7a5b07e",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1052,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":454,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":575,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":922,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1000,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":997,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":692,"title":{},"body":{"index.html":{}}}],["act",{"_index":1007,"title":{},"body":{"license.html":{}}}],["acting",{"_index":720,"title":{},"body":{"license.html":{}}}],["acts",{"_index":976,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":908,"title":{},"body":{"license.html":{}}}],["adding",{"_index":642,"title":{},"body":{"index.html":{}}}],["additional",{"_index":909,"title":{},"body":{"license.html":{}}}],["additions",{"_index":792,"title":{},"body":{"license.html":{}}}],["advised",{"_index":995,"title":{},"body":{"license.html":{}}}],["again",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":860,"title":{},"body":{"license.html":{}}}],["agent",{"_index":405,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1010,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":947,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":927,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":865,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":677,"title":{},"body":{"index.html":{}}}],["alone",{"_index":856,"title":{},"body":{"license.html":{}}}],["along",{"_index":899,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":907,"title":{},"body":{"license.html":{}}}],["already",{"_index":352,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":644,"title":{},"body":{"index.html":{}}}],["always",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":694,"title":{},"body":{"index.html":{}}}],["amd",{"_index":669,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":880,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":887,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":893,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1004,"title":{},"body":{"license.html":{}}}],["angular",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["angular.json",{"_index":675,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":15,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":13,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":780,"title":{},"body":{"license.html":{}}}],["apache",{"_index":697,"title":{},"body":{"license.html":{}}}],["api",{"_index":167,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":597,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":590,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":622,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":613,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":657,"title":{},"body":{"index.html":{}}}],["appand",{"_index":648,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":621,"title":{},"body":{"index.html":{}}}],["appear",{"_index":904,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":774,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":945,"title":{},"body":{"license.html":{}}}],["application",{"_index":573,"title":{},"body":{"index.html":{}}}],["applies",{"_index":849,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1019,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":354,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1029,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":962,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1037,"title":{},"body":{"license.html":{}}}],["arising",{"_index":983,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1016,"title":{},"body":{"license.html":{}}}],["associated",{"_index":967,"title":{},"body":{"license.html":{}}}],["assume",{"_index":965,"title":{},"body":{"license.html":{}}}],["async",{"_index":607,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1020,"title":{},"body":{"license.html":{}}}],["attached",{"_index":772,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["attribution",{"_index":890,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":716,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":767,"title":{},"body":{"license.html":{}}}],["available",{"_index":655,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":17,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3propagator",{"_index":42,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatormodule",{"_index":1,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":16,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b63afc1",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":672,"title":{},"body":{"index.html":{}}}],["base",{"_index":679,"title":{},"body":{"index.html":{}}}],["based",{"_index":636,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":949,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":332,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":797,"title":{},"body":{"license.html":{}}}],["below",{"_index":775,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":743,"title":{},"body":{"license.html":{}}}],["between",{"_index":603,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":789,"title":{},"body":{"license.html":{}}}],["body",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1021,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":605,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":626,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1024,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1048,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":556,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":640,"title":{},"body":{"index.html":{}}}],["canonicalcode",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["canonicalcode.internal",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":882,"title":{},"body":{"license.html":{}}}],["cause",{"_index":670,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["changed",{"_index":886,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":386,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":982,"title":{},"body":{"license.html":{}}}],["charge",{"_index":831,"title":{},"body":{"license.html":{}}}],["choose",{"_index":998,"title":{},"body":{"license.html":{}}}],["claim",{"_index":862,"title":{},"body":{"license.html":{}}}],["claims",{"_index":851,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["classes",{"_index":376,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"overview.html":{}}}],["code",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":78,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":367,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["collector/build/src/types",{"_index":368,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporter",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":375,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":857,"title":{},"body":{"license.html":{}}}],["command",{"_index":646,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1030,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":992,"title":{},"body":{"license.html":{}}}],["commit",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":54,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":668,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":14,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["communication",{"_index":801,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":101,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":761,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1040,"title":{},"body":{"license.html":{}}}],["complies",{"_index":915,"title":{},"body":{"license.html":{}}}],["compose",{"_index":654,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":658,"title":{},"body":{"index.html":{}}}],["composite",{"_index":108,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":104,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":107,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":989,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":703,"title":{},"body":{"license.html":{}}}],["config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":371,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":171,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":374,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":373,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":372,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":600,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":165,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["configure",{"_index":589,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":981,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1006,"title":{},"body":{"license.html":{}}}],["console",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":142,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":131,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":135,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":814,"title":{},"body":{"license.html":{}}}],["const",{"_index":99,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["constitutes",{"_index":866,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":169,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":160,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["construed",{"_index":910,"title":{},"body":{"license.html":{}}}],["contained",{"_index":896,"title":{},"body":{"license.html":{}}}],["content",{"_index":942,"title":{},"body":{"license.html":{}}}],["contents",{"_index":578,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":186,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":734,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":611,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":791,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":855,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":917,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":818,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":867,"title":{},"body":{"license.html":{}}}],["control",{"_index":722,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":723,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":763,"title":{},"body":{"license.html":{}}}],["copies",{"_index":874,"title":{},"body":{"license.html":{}}}],["copy",{"_index":879,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":713,"title":{},"body":{"license.html":{}}}],["core",{"_index":616,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1057,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":863,"title":{},"body":{"license.html":{}}}],["cours",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":532,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":638,"title":{},"body":{"index.html":{}}}],["cross",{"_index":861,"title":{},"body":{"license.html":{}}}],["current",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":938,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":978,"title":{},"body":{"license.html":{}}}],["date",{"_index":871,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":632,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":22,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":693,"title":{},"body":{"index.html":{}}}],["default",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1012,"title":{},"body":{"license.html":{}}}],["define",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["defined",{"_index":39,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":188,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":196,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":380,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["definitions",{"_index":706,"title":{},"body":{"license.html":{}}}],["del",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":973,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":688,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":547,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":674,"title":{},"body":{"index.html":{}}}],["depends",{"_index":667,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":572,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":776,"title":{},"body":{"license.html":{}}}],["derived",{"_index":777,"title":{},"body":{"license.html":{}}}],["describing",{"_index":939,"title":{},"body":{"license.html":{}}}],["description",{"_index":35,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["designated",{"_index":816,"title":{},"body":{"license.html":{}}}],["determining",{"_index":961,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":660,"title":{},"body":{"index.html":{}}}],["different",{"_index":914,"title":{},"body":{"license.html":{}}}],["dir",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":728,"title":{},"body":{"license.html":{}}}],["direction",{"_index":730,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":943,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":811,"title":{},"body":{"license.html":{}}}],["display",{"_index":591,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":840,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":898,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":705,"title":{},"body":{"license.html":{}}}],["doc",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":653,"title":{},"body":{"index.html":{}}}],["docs",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":711,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":533,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":1028,"title":{},"body":{"license.html":{}}}],["done",{"_index":1058,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":824,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1035,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":778,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":781,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":798,"title":{},"body":{"license.html":{}}}],["en",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":1023,"title":{},"body":{"license.html":{}}}],["end",{"_index":1018,"title":{},"body":{"license.html":{}}}],["entities",{"_index":721,"title":{},"body":{"license.html":{}}}],["entity",{"_index":715,"title":{},"body":{"license.html":{}}}],["environment",{"_index":623,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":624,"title":{},"body":{"index.html":{}}}],["error",{"_index":351,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":994,"title":{},"body":{"license.html":{}}}],["event",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":487,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":842,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":813,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":830,"title":{},"body":{"license.html":{}}}],["executed",{"_index":928,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":968,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":745,"title":{},"body":{"license.html":{}}}],["existing",{"_index":628,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":919,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["exported",{"_index":684,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":139,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/SpanExporterService.html":{},"index.html":{},"todo.html":{}}}],["exporter.interface",{"_index":145,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["exporter.module.ts",{"_index":134,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service",{"_index":136,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service.ts",{"_index":138,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:11",{"_index":378,"title":{},"body":{"classes/SpanExporterService.html":{}}}],["exporter.service.ts:17",{"_index":141,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:27",{"_index":361,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:48",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporters",{"_index":614,"title":{},"body":{"index.html":{}}}],["exports",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":952,"title":{},"body":{"license.html":{}}}],["f",{"_index":656,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":990,"title":{},"body":{"license.html":{}}}],["fake",{"_index":618,"title":{},"body":{"index.html":{}}}],["false",{"_index":592,"title":{},"body":{"index.html":{}}}],["features",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":999,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":1022,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":737,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":872,"title":{},"body":{"license.html":{}}}],["files",{"_index":755,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":957,"title":{},"body":{"license.html":{}}}],["fix",{"_index":680,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":877,"title":{},"body":{"license.html":{}}}],["form",{"_index":748,"title":{},"body":{"license.html":{}}}],["format",{"_index":1032,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":833,"title":{},"body":{"license.html":{}}}],["functions",{"_index":630,"title":{},"body":{"index.html":{}}}],["generally",{"_index":612,"title":{},"body":{"index.html":{}}}],["generated",{"_index":762,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":140,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["getpropagator",{"_index":38,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["getting",{"_index":384,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1055,"title":{},"body":{"todo.html":{}}}],["give",{"_index":152,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":580,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":987,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1045,"title":{},"body":{"license.html":{}}}],["grant",{"_index":823,"title":{},"body":{"license.html":{}}}],["granted",{"_index":747,"title":{},"body":{"license.html":{}}}],["granting",{"_index":717,"title":{},"body":{"license.html":{}}}],["grants",{"_index":826,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1047,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":974,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1014,"title":{},"body":{"license.html":{}}}],["header",{"_index":90,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["here",{"_index":662,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":825,"title":{},"body":{"license.html":{}}}],["herein",{"_index":924,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1013,"title":{},"body":{"license.html":{}}}],["http",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":184,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http.interceptor.ts:136",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:166",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:188",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:202",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:218",{"_index":198,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:50",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:54",{"_index":194,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:88",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":661,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":650,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":701,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1042,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":673,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":594,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":577,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":157,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":149,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":147,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":111,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1036,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1026,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":144,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":735,"title":{},"body":{"license.html":{}}}],["iii",{"_index":742,"title":{},"body":{"license.html":{}}}],["implement",{"_index":637,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":156,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":51,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["implied",{"_index":953,"title":{},"body":{"license.html":{}}}],["import",{"_index":10,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["improving",{"_index":812,"title":{},"body":{"license.html":{}}}],["inability",{"_index":985,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":980,"title":{},"body":{"license.html":{}}}],["include",{"_index":784,"title":{},"body":{"license.html":{}}}],["included",{"_index":771,"title":{},"body":{"license.html":{}}}],["includes",{"_index":894,"title":{},"body":{"license.html":{}}}],["including",{"_index":752,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":795,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":821,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1015,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1011,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1002,"title":{},"body":{"license.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":769,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":729,"title":{},"body":{"license.html":{}}}],["individual",{"_index":744,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["information",{"_index":1027,"title":{},"body":{"license.html":{}}}],["informational",{"_index":905,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":854,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":868,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":189,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":123,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":125,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":126,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":369,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["inject(spanexporterservice",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(textmappropagatorservice",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":32,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":190,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":195,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":98,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":100,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":103,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":153,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":191,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":192,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":587,"title":{},"body":{"index.html":{}}}],["installation",{"_index":579,"title":{},"body":{"index.html":{}}}],["institute",{"_index":858,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":793,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":193,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":180,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["interceptor.js",{"_index":666,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":183,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":132,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":150,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":151,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":358,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":377,"title":{},"body":{"classes/SpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":105,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":148,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":159,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":174,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":154,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":155,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/text",{"_index":382,"title":{},"body":{"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptors",{"_index":182,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":53,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":45,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":834,"title":{},"body":{"license.html":{}}}],["issue",{"_index":807,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":201,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerconfiguration",{"_index":588,"title":{},"body":{"index.html":{}}}],["jaegerhttppropagator",{"_index":619,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":163,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":172,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":158,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":112,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":89,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":699,"title":{},"body":{"license.html":{}}}],["jest",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":565,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":596,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":951,"title":{},"body":{"license.html":{}}}],["language",{"_index":1044,"title":{},"body":{"license.html":{}}}],["law",{"_index":946,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":864,"title":{},"body":{"license.html":{}}}],["legal",{"_index":718,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1050,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":969,"title":{},"body":{"license.html":{}}}],["liable",{"_index":977,"title":{},"body":{"license.html":{}}}],["library",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["licensable",{"_index":852,"title":{},"body":{"license.html":{}}}],["license",{"_index":696,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":912,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1039,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":869,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":712,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":954,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1046,"title":{},"body":{"license.html":{}}}],["limited",{"_index":753,"title":{},"body":{"license.html":{}}}],["link",{"_index":788,"title":{},"body":{"license.html":{}}}],["list",{"_index":610,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":805,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":859,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":353,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["logger",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":633,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":634,"title":{},"body":{"index.html":{}}}],["logging",{"_index":401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loss",{"_index":986,"title":{},"body":{"license.html":{}}}],["losses",{"_index":993,"title":{},"body":{"license.html":{}}}],["made",{"_index":768,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":804,"title":{},"body":{"license.html":{}}}],["make",{"_index":845,"title":{},"body":{"license.html":{}}}],["making",{"_index":750,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":991,"title":{},"body":{"license.html":{}}}],["managed",{"_index":809,"title":{},"body":{"license.html":{}}}],["management",{"_index":731,"title":{},"body":{"license.html":{}}}],["manager",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":21,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":815,"title":{},"body":{"license.html":{}}}],["marks",{"_index":934,"title":{},"body":{"license.html":{}}}],["matching",{"_index":30,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":708,"title":{},"body":{"license.html":{}}}],["means",{"_index":726,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":758,"title":{},"body":{"license.html":{}}}],["media",{"_index":764,"title":{},"body":{"license.html":{}}}],["medium",{"_index":875,"title":{},"body":{"license.html":{}}}],["meet",{"_index":876,"title":{},"body":{"license.html":{}}}],["member",{"_index":685,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":956,"title":{},"body":{"license.html":{}}}],["merely",{"_index":787,"title":{},"body":{"license.html":{}}}],["merge",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":37,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["miscellaneous",{"_index":1059,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":751,"title":{},"body":{"license.html":{}}}],["modified",{"_index":881,"title":{},"body":{"license.html":{}}}],["modify",{"_index":906,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":911,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":576,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":356,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":933,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":682,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":853,"title":{},"body":{"license.html":{}}}],["need",{"_index":687,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":972,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":975,"title":{},"body":{"license.html":{}}}],["new",{"_index":52,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":12,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":563,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":581,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":683,"title":{},"body":{"index.html":{}}}],["non",{"_index":829,"title":{},"body":{"license.html":{}}}],["noop",{"_index":177,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":617,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":178,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":179,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":173,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":176,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":903,"title":{},"body":{"license.html":{}}}],["notable",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":923,"title":{},"body":{"license.html":{}}}],["notice",{"_index":770,"title":{},"body":{"license.html":{}}}],["notices",{"_index":884,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":921,"title":{},"body":{"license.html":{}}}],["npm",{"_index":586,"title":{},"body":{"index.html":{}}}],["null",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":197,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["object",{"_index":756,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1003,"title":{},"body":{"license.html":{}}}],["observable",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1041,"title":{},"body":{"license.html":{}}}],["offer",{"_index":846,"title":{},"body":{"license.html":{}}}],["ok",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":620,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":649,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":47,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":678,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":48,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":164,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":146,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":93,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":181,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":185,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":335,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":625,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":583,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":671,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["options",{"_index":676,"title":{},"body":{"index.html":{}}}],["origin",{"_index":940,"title":{},"body":{"license.html":{}}}],["original",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":360,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_logger",{"_index":102,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":357,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":359,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":79,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":984,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":740,"title":{},"body":{"license.html":{}}}],["overide",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1049,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":714,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":736,"title":{},"body":{"license.html":{}}}],["package",{"_index":546,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1034,"title":{},"body":{"license.html":{}}}],["param",{"_index":168,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["parameters",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["parent",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":334,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":892,"title":{},"body":{"license.html":{}}}],["partial",{"_index":86,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":958,"title":{},"body":{"license.html":{}}}],["party",{"_index":902,"title":{},"body":{"license.html":{}}}],["patent",{"_index":841,"title":{},"body":{"license.html":{}}}],["percent",{"_index":738,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":601,"title":{},"body":{"index.html":{}}}],["perform",{"_index":838,"title":{},"body":{"license.html":{}}}],["permission",{"_index":931,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":746,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":827,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":891,"title":{},"body":{"license.html":{}}}],["places",{"_index":897,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":996,"title":{},"body":{"license.html":{}}}],["power",{"_index":727,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":749,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":836,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1033,"title":{},"body":{"license.html":{}}}],["private",{"_index":124,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["probability",{"_index":199,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":935,"title":{},"body":{"license.html":{}}}],["production",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":493,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":389,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../opentelemetry",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":643,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":883,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":639,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["propagator.interface",{"_index":46,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":9,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":18,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:11",{"_index":383,"title":{},"body":{"classes/TextMapPropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":40,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":161,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:31",{"_index":162,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator/b3",{"_index":8,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":106,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":122,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":175,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":127,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["properties",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":773,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":49,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":948,"title":{},"body":{"license.html":{}}}],["public",{"_index":166,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":837,"title":{},"body":{"license.html":{}}}],["publish",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":810,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":725,"title":{},"body":{"license.html":{}}}],["readable",{"_index":895,"title":{},"body":{"license.html":{}}}],["readme",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1017,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":937,"title":{},"body":{"license.html":{}}}],["received",{"_index":819,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":878,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":609,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":964,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":873,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":929,"title":{},"body":{"license.html":{}}}],["release",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":785,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1025,"title":{},"body":{"license.html":{}}}],["represent",{"_index":782,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":803,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":835,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":941,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":704,"title":{},"body":{"license.html":{}}}],["request",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":936,"title":{},"body":{"license.html":{}}}],["reset",{"_index":409,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["response",{"_index":641,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1009,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":960,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":757,"title":{},"body":{"license.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":888,"title":{},"body":{"license.html":{}}}],["return",{"_index":41,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["review",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":779,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1005,"title":{},"body":{"license.html":{}}}],["risks",{"_index":966,"title":{},"body":{"license.html":{}}}],["root",{"_index":50,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["royalty",{"_index":832,"title":{},"body":{"license.html":{}}}],["run",{"_index":582,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":629,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":200,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":599,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":844,"title":{},"body":{"license.html":{}}}],["sections",{"_index":709,"title":{},"body":{"license.html":{}}}],["see",{"_index":391,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":847,"title":{},"body":{"license.html":{}}}],["send",{"_index":593,"title":{},"body":{"index.html":{}}}],["sending",{"_index":664,"title":{},"body":{"index.html":{}}}],["sent",{"_index":802,"title":{},"body":{"license.html":{}}}],["separable",{"_index":786,"title":{},"body":{"license.html":{}}}],["separate",{"_index":926,"title":{},"body":{"license.html":{}}}],["service",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/text",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":707,"title":{},"body":{"license.html":{}}}],["shares",{"_index":741,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":72,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":331,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":333,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":754,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1008,"title":{},"body":{"license.html":{}}}],["solely",{"_index":959,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["span",{"_index":133,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"classes/SpanExporterService.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":143,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["spanexporterservice",{"_index":137,"title":{"classes/SpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["spec",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":979,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1043,"title":{},"body":{"license.html":{}}}],["stack",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":645,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":647,"title":{},"body":{"index.html":{}}}],["started",{"_index":385,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":920,"title":{},"body":{"license.html":{}}}],["stated",{"_index":843,"title":{},"body":{"license.html":{}}}],["statement",{"_index":913,"title":{},"body":{"license.html":{}}}],["statements",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":885,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":988,"title":{},"body":{"license.html":{}}}],["string",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":517,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":839,"title":{},"body":{"license.html":{}}}],["submission",{"_index":916,"title":{},"body":{"license.html":{}}}],["submit",{"_index":796,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":794,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":820,"title":{},"body":{"license.html":{}}}],["such",{"_index":732,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":925,"title":{},"body":{"license.html":{}}}],["support",{"_index":1001,"title":{},"body":{"license.html":{}}}],["sync",{"_index":608,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1031,"title":{},"body":{"license.html":{}}}],["systems",{"_index":806,"title":{},"body":{"license.html":{}}}],["table",{"_index":545,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1054,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":595,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":870,"title":{},"body":{"license.html":{}}}],["terms",{"_index":702,"title":{},"body":{"license.html":{}}}],["test",{"_index":461,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":20,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":44,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["textmappropagatorservice",{"_index":19,"title":{"classes/TextMapPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["theory",{"_index":970,"title":{},"body":{"license.html":{}}}],["there's",{"_index":652,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":790,"title":{},"body":{"license.html":{}}}],["third",{"_index":901,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":128,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":170,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":129,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":130,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":370,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.textmappropagatorservice.getpropagator",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["those",{"_index":850,"title":{},"body":{"license.html":{}}}],["through",{"_index":710,"title":{},"body":{"license.html":{}}}],["throw",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":686,"title":{},"body":{"index.html":{}}}],["title",{"_index":955,"title":{},"body":{"license.html":{}}}],["todo",{"_index":295,"title":{"todo.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["token",{"_index":627,"title":{},"body":{"index.html":{}}}],["tort",{"_index":971,"title":{},"body":{"license.html":{}}}],["trace",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":187,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":602,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":808,"title":{},"body":{"license.html":{}}}],["trade",{"_index":932,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":889,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":930,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":848,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":759,"title":{},"body":{"license.html":{}}}],["translation",{"_index":760,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":584,"title":{},"body":{"index.html":{}}}],["true",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":691,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":681,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type/node",{"_index":689,"title":{},"body":{"index.html":{}}}],["types",{"_index":765,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":695,"title":{},"body":{"index.html":{}}}],["typo",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":381,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["under",{"_index":724,"title":{},"body":{"license.html":{}}}],["union",{"_index":719,"title":{},"body":{"license.html":{}}}],["unless",{"_index":918,"title":{},"body":{"license.html":{}}}],["unused",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":659,"title":{},"body":{"index.html":{}}}],["update",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":80,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":26,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["used",{"_index":379,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["useexisting",{"_index":635,"title":{},"body":{"index.html":{}}}],["user",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":574,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":355,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":963,"title":{},"body":{"license.html":{}}}],["value",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1060,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":799,"title":{},"body":{"license.html":{}}}],["version",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["version.json",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":606,"title":{},"body":{"index.html":{}}}],["void",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":651,"title":{},"body":{"index.html":{}}}],["warn",{"_index":631,"title":{},"body":{"index.html":{}}}],["warning",{"_index":585,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":950,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":944,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":900,"title":{},"body":{"license.html":{}}}],["whether",{"_index":733,"title":{},"body":{"license.html":{}}}],["whole",{"_index":783,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":822,"title":{},"body":{"license.html":{}}}],["without",{"_index":663,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":766,"title":{},"body":{"license.html":{}}}],["works",{"_index":502,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":828,"title":{},"body":{"license.html":{}}}],["writing",{"_index":817,"title":{},"body":{"license.html":{}}}],["written",{"_index":800,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":665,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1038,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":1056,"title":{},"body":{"todo.html":{}}}],["zone.js",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1051,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                        custom Header\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, textMapPropagatorService: TextMapPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        textMapPropagatorService\n                                                  \n                                                        \n                                                                        TextMapPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:218\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:136\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:166\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:188\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:202\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:88\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, CanonicalCode } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { TextMapPropagatorService } from '../services/propagator/text-map-propagator.service';\nimport { version } from '../../version.json';\n/**\n * Library name\n */\nconst NAME = '@jufab/opentelemetry-angular-interceptor';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param textMapPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(TextMapPropagatorService)\n    private textMapPropagatorService: TextMapPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.textMapPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          // TODO : To change after new spec...\n          span.setStatus({\n            code: CanonicalCode.INTERNAL\n          });\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer(NAME, version)\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:27\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger (Optional)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:48\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:27\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBase,\n} from '@opentelemetry/exporter-collector/build/src/types';\nimport { Logger } from '@opentelemetry/api';\nimport { OTELCOL_LOGGER } from '../../../configuration/opentelemetry-config';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   * @param logger Logger (Optional)\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig, @Optional() @Inject(OTELCOL_LOGGER) logger: Logger) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      logger\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpanExporterService.html":{"url":"classes/SpanExporterService.html","title":"class - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                Span Exporter Service use in injection\n\n            \n\n\n            \n                Implements\n            \n            \n                            IExporter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:11\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\n\n/**\n * Span Exporter Service use in injection\n */\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used, just a definition for injection\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextMapPropagatorService.html":{"url":"classes/TextMapPropagatorService.html","title":"class - TextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                TextMapPropagatorService\n\n            \n\n\n            \n                Implements\n            \n            \n                            IPropagator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts:11\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     TextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TextMapPropagator } from '@opentelemetry/api';\nimport { IPropagator } from './propagator.interface';\n\n/**\n * TextMapPropagatorService\n */\nexport class TextMapPropagatorService implements IPropagator {\n  /**\n   * Not used, just a definition for injection\n   */\n  getPropagator(): TextMapPropagator {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            variable\n            NAME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            class\n            SpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts\n            \n            class\n            TextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.11.0\n        \n            @opentelemetry/propagator-jaeger : ^0.10.0\n        \n            @opentelemetry/web : ^0.11.0\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.3.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.1.9\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 2 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the Logger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]\nYou can see an example in the example-app.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n\nIn Progress\nDone ✓\n\n Add more configuration for OpenTelemetry-collector : See here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NAME   (projects/.../opentelemetry-http.interceptor.ts)\n                        \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            NAME\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '@jufab/opentelemetry-angular-interceptor'\n                        \n                    \n\n                \n                    \n                        Library name\n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.logger')\n                        \n                    \n\n                \n                    \n                        Logger : injection for a logger compatible \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
