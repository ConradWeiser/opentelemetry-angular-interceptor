var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/B3PropagatorConfig.html",[0,0.688,1,1.273]],["body/interfaces/B3PropagatorConfig.html",[0,1.164,1,2.22,2,1.064,3,0.233,4,0.233,5,0.172,6,0.202,7,1.246,8,1.246,9,0.575,10,1.715,11,0.529,12,1.415,13,1.128,14,2.488,15,2.538,16,0.785,17,0.03,18,2.113,19,2.155,20,1.656,21,1.652,22,1.81,23,1.954,24,1.945,25,1.415,26,0.29,27,1.246,28,0.202,29,1.246,30,2.122,31,1.945,32,0.785,33,1.246,34,0.496,35,1.652,36,1.652,37,0.727,38,1.15,39,1.128,40,1.933,41,2.289,42,1.79,43,1.15,44,1.478,45,1.478,46,1.945,47,1.652,48,1.064,49,1.354,50,0.985,51,1.478,52,1.354,53,1.652,54,1.354,55,0.985,56,1.652,57,2.113,58,1.354,59,2.289,60,2.113,61,1.354,62,1.933,63,1.064,64,0.913,65,1.652,66,1.354,67,1.478,68,2.238,69,0.985,70,1.246,71,1.045,72,1.945,73,1.79,74,1.79,75,1.128,76,0.847,77,1.528,78,1.652,79,0.639,80,1.354,81,1.528,82,1.354,83,1.064,84,1.354,85,0.012,86,0.017,87,0.012]],["title/modules/B3PropagatorModule.html",[88,1.179,89,2.149]],["body/modules/B3PropagatorModule.html",[3,0.38,4,0.38,5,0.281,6,0.33,17,0.03,26,0.451,28,0.33,34,0.38,85,0.02,86,0.024,87,0.02,89,3.577,90,1.494,91,3.292,92,2.937,93,2.653,94,2.12,95,2.483,96,1.882,97,3.232,98,2.653,99,2.418,100,2.292,101,1.74,102,1.612,103,1.74,104,1.612,105,1.612,106,1.882,107,0.795]],["title/injectables/B3PropagatorService.html",[97,1.941,108,0.688]],["body/injectables/B3PropagatorService.html",[1,2.211,3,0.251,4,0.251,5,0.186,6,0.404,9,0.872,10,1.285,11,0.572,12,1.496,13,1.192,15,2.305,16,1.377,17,0.03,18,2.39,19,2.211,20,2.146,21,2.305,23,2.024,25,1.496,26,0.404,28,0.218,32,0.849,34,0.251,37,1.104,63,1.615,71,1.384,75,0.849,76,1.486,79,0.481,85,0.013,86,0.018,87,0.013,91,4.033,92,3.598,97,3.086,98,1.753,101,1.15,107,0.525,108,0.872,109,1.243,110,1.597,111,2.462,112,2.725,113,3.495,114,3.071,115,1.386,116,4.04,117,4.165,118,2.812,119,1.464,120,1.753,121,1.611,122,4.165,123,2.056,124,4.165,125,2.966,126,2.725,127,4.04,128,1.386,129,5.499,130,2.966,131,1.949,132,2.962,133,1.464,134,1.746,135,1.941,136,1.597,137,1.243,138,1.243,139,1.15,140,2.175,141,2.966,142,2.966,143,2.966,144,1.753,145,2.966,146,2.966,147,2.966]],["title/interfaces/CommonCollectorConfig.html",[0,0.688,35,1.377]],["body/interfaces/CommonCollectorConfig.html",[0,1.128,1,1.995,2,0.971,3,0.212,4,0.212,5,0.157,6,0.184,7,1.137,8,1.137,9,0.524,10,1.661,11,0.483,12,1.324,13,1.696,14,1.236,15,2.55,16,1.54,17,0.03,18,1.546,19,1.697,20,1.324,21,1.049,22,1.571,23,1.697,24,1.236,25,0.899,26,0.271,27,1.137,28,0.184,29,1.137,30,1.986,31,2.383,32,0.716,33,1.675,34,0.484,35,1.835,36,2.257,37,0.978,38,1.546,39,1.381,40,2.394,41,2.763,42,2.445,43,1.546,44,1.986,45,1.986,46,2.657,47,2.024,48,1.429,49,1.82,50,1.324,51,1.348,52,1.82,53,1.835,54,2.383,55,0.899,56,1.546,57,2.024,58,1.236,59,2.193,60,2.024,61,1.236,62,1.835,63,0.971,64,0.833,65,1.546,66,1.236,67,1.348,68,2.157,69,0.899,70,1.137,71,0.978,72,1.82,73,1.675,74,1.675,75,1.055,76,0.773,77,1.429,78,1.546,79,0.598,80,1.236,81,1.429,82,1.236,83,0.971,84,1.236,85,0.011,86,0.016,87,0.011,148,3.21]],["title/modules/CompositePropagatorModule.html",[88,1.179,149,2.149]],["body/modules/CompositePropagatorModule.html",[3,0.38,4,0.38,5,0.281,6,0.33,17,0.03,26,0.451,28,0.33,34,0.38,85,0.02,86,0.024,87,0.02,90,1.494,93,2.653,94,2.12,95,2.483,96,1.882,99,2.418,100,2.292,101,1.74,102,1.612,103,1.74,104,1.612,105,1.612,106,1.882,107,0.795,149,3.577,150,3.292,151,3.292,152,3.577,153,3.767]],["title/injectables/CompositePropagatorService.html",[108,0.688,152,2.149]],["body/injectables/CompositePropagatorService.html",[3,0.291,4,0.291,5,0.215,6,0.382,9,0.719,11,0.662,13,0.982,16,0.982,17,0.03,26,0.448,28,0.252,32,0.982,34,0.291,37,0.91,39,1.589,79,0.557,85,0.015,86,0.02,87,0.015,92,2.245,97,3.524,98,2.029,99,2.798,101,1.33,107,0.608,108,0.964,109,1.438,110,1.848,114,2.798,115,1.532,118,2.99,119,2.74,121,1.421,123,1.694,128,1.142,131,1.848,132,3.119,133,1.694,134,1.93,137,1.438,138,1.438,139,1.33,150,3.81,151,3.81,152,3.633,154,3.431,155,3.6,156,3.6,157,3.431,158,2.88,159,5.961,160,2.245,161,2.564,162,2.272,163,2.245,164,1.694,165,2.245,166,3.431,167,3.431,168,3.431,169,2.88,170,3.431,171,3.431,172,3.431]],["title/modules/ConsoleSpanExporterModule.html",[88,1.179,173,2.149]],["body/modules/ConsoleSpanExporterModule.html",[3,0.379,4,0.379,5,0.28,6,0.329,17,0.03,26,0.451,28,0.329,34,0.379,40,1.876,50,1.96,85,0.02,86,0.024,87,0.02,90,1.49,94,2.116,95,2.479,96,1.876,102,1.607,103,1.735,104,1.607,105,1.607,106,1.876,107,0.793,173,3.571,174,3.282,175,3.282,176,3.571,177,3.282,178,2.694,179,2.411]],["title/injectables/ConsoleSpanExporterService.html",[108,0.688,176,2.149]],["body/injectables/ConsoleSpanExporterService.html",[3,0.351,4,0.351,5,0.26,6,0.383,9,0.868,11,0.8,17,0.03,22,1.869,26,0.418,28,0.305,34,0.351,50,2.143,79,0.672,85,0.018,86,0.023,87,0.018,107,0.735,108,1.09,109,1.738,115,1.732,121,1.279,128,1.38,131,1.986,137,1.738,138,1.738,139,1.607,174,3.817,176,3.905,179,2.233,180,2.713,181,2.569,182,3.905,183,4.146,184,5.008,185,3.634,186,2.569,187,2.233]],["title/modules/HttpTraceContextPropagatorModule.html",[88,1.179,188,2.149]],["body/modules/HttpTraceContextPropagatorModule.html",[3,0.374,4,0.374,5,0.277,6,0.324,17,0.03,26,0.448,28,0.324,34,0.374,39,1.674,85,0.019,86,0.024,87,0.019,90,1.469,93,2.609,94,2.098,95,2.458,96,1.85,99,2.377,100,2.268,101,1.711,102,1.585,103,1.711,104,1.585,105,1.585,106,1.85,107,0.782,155,3.199,161,2.178,162,2.888,163,2.887,188,3.54,189,3.236]],["title/injectables/HttpTraceContextPropagatorService.html",[108,0.688,155,1.941]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.345,4,0.345,5,0.255,6,0.378,9,0.853,11,0.785,17,0.03,26,0.436,28,0.299,32,1.165,34,0.345,39,1.696,79,0.66,85,0.018,86,0.023,87,0.018,101,1.578,107,0.721,108,1.078,109,1.706,110,2.192,115,1.713,118,3.193,121,1.256,128,1.355,131,1.973,132,3.293,134,2.157,137,1.706,138,1.706,139,1.578,155,3.505,160,2.663,162,2.926,163,3.367,189,3.774,190,4.071,191,5.241]],["title/interfaces/IExporter.html",[0,0.688,186,1.621]],["body/interfaces/IExporter.html",[0,1.203,2,1.642,3,0.359,4,0.359,5,0.265,6,0.388,9,0.887,11,0.817,17,0.03,22,1.894,26,0.388,27,1.923,28,0.311,34,0.447,63,2.045,77,1.642,78,1.775,79,0.687,85,0.019,86,0.023,87,0.019,115,1.756,121,1.307,128,1.41,131,1.41,178,2.09,181,3.053,182,3.934,185,3.782,186,2.604,187,2.281,192,3.106,193,4.235,194,3.868,195,5.275,196,3.554]],["title/interfaces/IPropagator.html",[0,0.688,134,1.377]],["body/interfaces/IPropagator.html",[0,1.209,2,1.66,3,0.363,4,0.363,5,0.268,6,0.39,9,0.897,11,0.826,17,0.03,26,0.39,27,1.944,28,0.315,32,1.225,34,0.45,63,2.059,69,2.228,77,1.66,78,1.795,79,0.694,85,0.019,86,0.023,87,0.019,100,1.795,115,1.768,118,3.251,121,1.321,128,1.425,131,1.425,132,3.109,134,2.226,194,3.895,197,3.14,198,4.281,199,4.457,200,5.31,201,3.593]],["title/modules/JaegerHttpTracePropagatorModule.html",[88,1.179,202,2.149]],["body/modules/JaegerHttpTracePropagatorModule.html",[3,0.374,4,0.374,5,0.277,6,0.324,17,0.03,26,0.448,28,0.324,34,0.374,39,1.674,85,0.019,86,0.024,87,0.019,90,1.469,93,2.609,94,2.098,95,2.458,96,1.85,99,2.377,100,2.268,101,1.711,102,1.585,103,1.711,104,1.585,105,1.585,106,1.85,107,0.782,156,3.199,161,2.888,164,2.178,165,2.887,202,3.54,203,3.236]],["title/injectables/JaegerHttpTracePropagatorService.html",[108,0.688,156,1.941]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.286,4,0.286,5,0.211,6,0.405,9,0.953,11,0.651,12,1.634,13,0.965,15,1.907,16,1.302,17,0.03,20,1.634,26,0.436,28,0.248,32,0.965,34,0.286,37,0.894,39,1.764,59,2.067,70,2.339,71,1.573,75,0.965,76,1.701,79,0.547,85,0.015,86,0.02,87,0.015,101,1.308,107,0.598,108,0.953,109,1.414,110,1.817,114,2.774,115,1.515,118,2.969,119,2.542,120,1.994,121,1.589,123,1.665,128,1.123,131,1.835,132,3.1,133,1.665,134,1.907,135,2.207,136,1.817,137,1.414,138,1.414,139,1.308,140,2.473,144,1.994,156,3.259,158,2.831,161,3.043,164,1.665,165,3.607,203,4.043,204,4.55,205,5.756,206,2.831,207,2.831,208,3.373,209,3.373,210,3.373]],["title/interfaces/JaegerPropagatorConfig.html",[0,0.688,68,1.377]],["body/interfaces/JaegerPropagatorConfig.html",[0,1.17,1,2.082,2,1.081,3,0.236,4,0.236,5,0.175,6,0.205,7,1.266,8,1.266,9,0.584,10,1.724,11,0.538,12,1.431,13,1.14,14,1.376,15,2.547,16,0.798,17,0.03,18,1.671,19,1.804,20,1.671,21,1.168,22,1.671,23,1.804,24,1.376,25,1.001,26,0.293,27,1.266,28,0.205,29,1.266,30,2.147,31,1.967,32,0.798,33,1.266,34,0.499,35,1.671,36,1.671,37,0.739,38,1.168,39,1.14,40,1.95,41,2.306,42,1.81,43,1.168,44,1.501,45,1.501,46,1.967,47,1.671,48,1.081,49,1.376,50,1.001,51,1.501,52,1.376,53,1.671,54,1.376,55,1.001,56,1.671,57,2.128,58,1.376,59,2.44,60,2.128,61,1.376,62,1.95,63,1.081,64,0.928,65,1.671,66,1.376,67,1.501,68,2.411,69,1.431,70,2.306,71,1.057,72,1.967,73,1.81,74,1.81,75,1.14,76,0.86,77,1.545,78,1.671,79,0.646,80,1.376,81,1.545,82,1.376,83,1.081,84,1.376,85,0.012,86,0.018,87,0.012]],["title/modules/NoopTextMapPropagatorModule.html",[88,1.179,211,2.409]],["body/modules/NoopTextMapPropagatorModule.html",[3,0.374,4,0.374,5,0.277,6,0.324,17,0.03,26,0.448,28,0.324,34,0.374,85,0.019,86,0.024,87,0.019,90,1.469,93,2.609,94,2.098,95,2.458,96,1.85,99,2.377,100,2.268,101,1.711,102,1.585,103,1.711,104,1.585,105,1.585,106,1.85,107,0.782,161,2.178,211,3.968,212,3.236,213,3.829,214,3.236,215,3.968,216,3.54,217,4.413]],["title/injectables/NoopTextMapPropagatorService.html",[108,0.688,216,2.149]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.349,4,0.349,5,0.258,6,0.381,9,0.862,11,0.793,17,0.03,26,0.417,28,0.302,32,1.177,34,0.349,79,0.667,85,0.018,86,0.023,87,0.018,101,1.595,107,0.729,108,1.085,109,1.724,110,2.215,115,1.724,118,3.205,121,1.269,128,1.369,131,1.981,132,3.303,134,2.171,137,1.724,138,1.724,139,1.595,161,2.556,212,3.798,213,3.894,214,3.798,215,3.798,216,3.389,218,5.179,219,4.113,220,6.261]],["title/interfaces/OpenTelemetryConfig.html",[0,0.688,71,0.871]],["body/interfaces/OpenTelemetryConfig.html",[0,1.147,1,2.355,2,1.018,3,0.222,4,0.222,5,0.164,6,0.193,7,1.192,8,1.192,9,0.55,10,1.619,11,0.506,12,1.37,13,1.656,14,1.295,15,2.426,16,1.501,17,0.03,18,1.6,19,1.744,20,1.37,21,1.1,22,1.615,23,1.744,24,1.295,25,0.942,26,0.281,27,1.192,28,0.193,29,1.192,30,2.056,31,1.884,32,0.751,33,1.192,34,0.491,35,2.07,36,1.6,37,0.696,38,1.1,39,1.092,40,1.885,41,2.243,42,1.733,43,1.1,44,1.414,45,1.414,46,1.884,47,1.6,48,1.018,49,1.295,50,0.942,51,1.414,52,1.295,53,1.6,54,1.295,55,0.942,56,2.07,57,2.07,58,1.295,59,2.243,60,2.07,61,1.295,62,1.885,63,1.018,64,0.874,65,2.07,66,1.295,67,1.414,68,2.546,69,0.942,70,1.192,71,1.309,72,2.702,73,2.486,74,2.486,75,1.092,76,0.81,77,1.48,78,1.6,79,0.619,80,1.295,81,1.48,82,1.295,83,1.018,84,1.295,85,0.012,86,0.017,87,0.012]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[221,1.769,222,2.149]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.126,4,0.126,5,0.093,6,0.385,9,1.002,10,1.121,11,0.287,12,0.881,13,1.418,16,1.418,17,0.03,20,1.304,22,1.124,23,0.577,25,1.124,26,0.407,28,0.109,29,1.65,32,0.702,34,0.126,37,1.314,38,1.029,40,1.918,41,1.965,42,1.965,47,1.029,48,1.214,50,1.986,62,0.624,63,0.951,69,1.443,71,0.963,75,0.426,76,1.529,78,1.685,79,0.775,81,1.214,83,0.577,85,0.007,86,0.011,87,0.007,100,0.624,107,0.555,108,0.514,114,3.152,115,0.817,119,1.793,120,0.88,121,1.575,123,2.258,126,1.606,128,1.44,131,1.209,133,0.734,134,1.523,136,1.322,137,0.624,138,1.029,139,0.577,144,3.093,148,2.296,160,0.974,162,1.211,178,0.734,181,1.793,184,2.059,185,2.826,186,1.793,187,0.801,207,1.249,221,1.322,222,1.606,223,1.488,224,4.391,225,1.249,226,2.059,227,3.633,228,3.839,229,2.454,230,2.454,231,3.131,232,2.454,233,3.131,234,2.628,235,3.633,236,3.633,237,2.454,238,2.454,239,2.454,240,3.131,241,1.488,242,2.059,243,4.325,244,2.454,245,3.633,246,2.454,247,2.454,248,5.104,249,1.488,250,2.059,251,5.8,252,2.454,253,1.488,254,1.488,255,1.451,256,2.454,257,2.059,258,2.454,259,1.488,260,3.63,261,1.8,262,2.454,263,1.488,264,1.488,265,2.628,266,3.633,267,2.628,268,1.8,269,1.488,270,4.325,271,3.633,272,1.488,273,2.454,274,2.059,275,3.049,276,1.606,277,2.059,278,3.131,279,3.633,280,1.488,281,2.454,282,2.059,283,3.049,284,1.488,285,1.488,286,2.454,287,2.454,288,1.091,289,1.249,290,1.488,291,1.091,292,2.454,293,1.488,294,1.488,295,2.454,296,2.454,297,2.454,298,1.488,299,1.8,300,1.488,301,1.488,302,1.488,303,1.249,304,1.488,305,1.488,306,1.488,307,2.454,308,1.488,309,1.488,310,1.488,311,1.488,312,1.488,313,2.454,314,1.488,315,1.488,316,2.454,317,1.488,318,1.488,319,1.488,320,1.488,321,1.488,322,1.488,323,1.488,324,1.488,325,1.8,326,2.454,327,2.454,328,2.454,329,2.454,330,2.454,331,1.488,332,1.488,333,1.488,334,1.488,335,2.454,336,1.8,337,1.488,338,1.488,339,1.488,340,1.488,341,1.488,342,1.488,343,1.488,344,1.488,345,1.488,346,1.488,347,1.488,348,1.488,349,1.488,350,1.488,351,1.488,352,1.488,353,1.488,354,1.488,355,1.488,356,1.488,357,1.488,358,1.488,359,1.488,360,1.488,361,1.488,362,1.488,363,1.488,364,1.488,365,3.131,366,1.488,367,1.488,368,3.131,369,1.488,370,1.488,371,1.488,372,1.488,373,1.488,374,1.488,375,1.488,376,2.454,377,1.488,378,1.488,379,1.488]],["title/modules/OpenTelemetryInterceptorModule.html",[88,1.179,380,2.149]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.322,4,0.322,5,0.238,6,0.362,13,1.562,16,1.086,17,0.03,19,1.472,26,0.44,28,0.279,34,0.322,37,1.006,71,1.532,75,1.408,76,1.685,79,0.616,85,0.017,86,0.022,87,0.017,90,1.263,94,2.117,102,1.363,103,1.472,104,1.363,105,1.767,106,1.591,107,0.673,115,1.263,116,4.129,119,1.873,121,1.171,123,1.873,128,1.263,131,1.263,136,2.044,206,3.186,222,3.219,261,2.784,288,2.784,380,3.915,381,4.92,382,3.796,383,3.796,384,4.92,385,3.796,386,5.459,387,4.92,388,4.129,389,4.129,390,3.796,391,3.796,392,3.186,393,4.92,394,3.796,395,2.784,396,3.796,397,3.796,398,3.186,399,3.796]],["title/modules/OtelColExporterModule.html",[88,1.179,400,2.149]],["body/modules/OtelColExporterModule.html",[3,0.381,4,0.381,5,0.282,6,0.331,17,0.03,26,0.452,28,0.331,34,0.381,85,0.02,86,0.024,87,0.02,90,1.498,94,2.123,95,2.487,96,1.887,102,1.616,103,1.745,104,1.616,105,1.616,106,1.887,107,0.798,175,3.301,177,3.301,178,2.703,179,2.424,400,3.583,401,3.301,402,3.583,403,3.301]],["title/interfaces/OtelCollectorConfig.html",[0,0.688,56,1.377]],["body/interfaces/OtelCollectorConfig.html",[0,1.152,1,2.045,2,1.031,3,0.225,4,0.225,5,0.167,6,0.196,7,1.208,8,1.208,9,0.557,10,1.697,11,0.513,12,1.384,13,1.574,14,1.313,15,2.52,16,1.297,17,0.03,18,1.616,19,1.757,20,1.384,21,1.115,22,1.784,23,1.926,24,1.313,25,0.955,26,0.283,27,1.208,28,0.196,29,1.208,30,2.676,31,1.902,32,0.761,33,1.208,34,0.492,35,1.616,36,1.616,37,0.705,38,1.115,39,1.103,40,1.9,41,2.257,42,1.75,43,1.115,44,1.433,45,1.433,46,1.902,47,1.616,48,1.031,49,1.313,50,0.955,51,1.433,52,1.313,53,1.9,54,1.313,55,1.384,56,1.9,57,2.435,58,1.902,59,2.498,60,2.435,61,2.237,62,2.435,63,1.494,64,0.885,65,1.616,66,1.313,67,1.433,68,2.211,69,0.955,70,1.208,71,1.022,72,1.902,73,1.75,74,1.75,75,1.103,76,0.821,77,1.494,78,1.616,79,0.625,80,1.313,81,1.494,82,1.313,83,1.031,84,1.313,85,0.012,86,0.017,87,0.012]],["title/injectables/OtelcolExporterService.html",[108,0.688,402,2.149]],["body/injectables/OtelcolExporterService.html",[3,0.293,4,0.293,5,0.217,6,0.41,9,0.97,10,1.429,11,0.668,12,1.663,13,1.325,16,1.325,17,0.03,26,0.427,28,0.254,34,0.293,36,1.451,37,0.918,55,1.243,57,1.451,60,1.451,62,1.451,71,1.585,73,2.37,75,0.991,76,1.719,79,0.561,85,0.015,86,0.02,87,0.015,107,0.925,108,0.97,109,1.451,114,2.81,115,1.541,119,2.75,120,2.046,121,1.61,123,1.709,128,1.152,131,1.854,133,1.709,136,1.864,137,1.451,138,1.451,139,1.342,144,2.046,179,1.864,180,2.265,182,3.645,185,3.085,186,2.286,187,1.864,303,2.905,401,4.086,402,3.645,404,4.631,405,3.462,406,5.571,407,4.631,408,4.631,409,3.462,410,3.462,411,2.265,412,3.462,413,2.905,414,3.462,415,3.462,416,3.462,417,3.462]],["title/interfaces/ZipkinCollectorConfig.html",[0,0.688,65,1.377]],["body/interfaces/ZipkinCollectorConfig.html",[0,1.161,1,2.063,2,1.054,3,0.23,4,0.23,5,0.17,6,0.2,7,1.235,8,1.235,9,0.57,10,1.71,11,0.525,12,1.406,13,1.437,14,1.342,15,2.533,16,1.437,17,0.03,18,1.642,19,1.779,20,1.406,21,1.14,22,1.803,23,1.946,24,1.342,25,0.977,26,0.288,27,1.235,28,0.2,29,1.235,30,2.109,31,1.933,32,0.778,33,1.235,34,0.495,35,1.642,36,1.642,37,0.721,38,1.14,39,1.121,40,1.924,41,2.28,42,1.779,43,1.14,44,1.465,45,1.465,46,1.933,47,1.642,48,1.054,49,1.342,50,0.977,51,1.465,52,1.342,53,1.642,54,1.342,55,0.977,56,1.642,57,2.45,58,1.342,59,2.416,60,2.45,61,1.342,62,1.924,63,1.054,64,1.303,65,1.924,66,1.933,67,1.465,68,2.23,69,0.977,70,1.235,71,1.038,72,1.933,73,1.779,74,1.779,75,1.121,76,0.839,77,1.518,78,1.642,79,0.635,80,1.342,81,1.518,82,1.342,83,1.054,84,1.342,85,0.012,86,0.017,87,0.012,418,3.916]],["title/modules/ZipkinExporterModule.html",[88,1.179,419,2.149]],["body/modules/ZipkinExporterModule.html",[3,0.381,4,0.381,5,0.282,6,0.331,17,0.03,26,0.452,28,0.331,34,0.381,64,1.498,85,0.02,86,0.024,87,0.02,90,1.498,94,2.123,95,2.487,96,1.887,102,1.616,103,1.745,104,1.616,105,1.616,106,1.887,107,0.798,175,3.301,177,3.301,178,2.703,179,2.424,419,3.583,420,3.301,421,3.583]],["title/injectables/ZipkinExporterService.html",[108,0.688,421,2.149]],["body/injectables/ZipkinExporterService.html",[3,0.294,4,0.294,5,0.217,6,0.41,9,0.971,11,0.669,12,1.665,13,0.993,16,1.327,17,0.03,26,0.44,28,0.255,34,0.294,36,1.454,37,0.92,57,1.454,60,1.454,64,1.155,71,1.586,74,2.64,75,0.993,76,1.721,79,0.563,85,0.015,86,0.02,87,0.015,107,0.926,108,0.971,109,1.454,114,2.814,115,1.544,119,2.578,120,2.051,121,1.612,123,1.712,128,1.155,131,1.856,133,1.712,136,1.869,137,1.454,138,1.454,139,1.345,140,2.544,144,2.051,179,1.869,180,2.27,182,3.649,185,3.436,186,2.289,187,1.869,411,3.034,413,2.912,420,4.09,421,3.649,422,4.637,423,3.469,424,5.224,425,4.637,426,4.637,427,5.224,428,3.469,429,3.469,430,3.469,431,3.469,432,3.469]],["title/changelog.html",[433,1.625,434,1.625,435,2.307]],["body/changelog.html",[5,0.251,10,1.236,17,0.015,18,1.383,19,1.28,20,0.776,21,1.383,25,1.61,39,0.618,43,1.679,47,0.905,48,0.837,53,1.383,55,0.776,61,1.066,64,0.719,69,1.438,77,0.837,79,0.65,85,0.01,86,0.015,87,0.01,111,1.277,153,3.361,162,1.629,164,1.629,181,1.629,221,1.778,242,1.813,255,3.676,276,3.332,299,3.886,336,2.937,395,3.288,403,3.288,435,2.77,436,2.16,437,2.16,438,1.584,439,2.16,440,2.16,441,2.16,442,2.16,443,2.77,444,4.484,445,2.16,446,3.763,447,6.134,448,5.6,449,2.16,450,6.028,451,6.028,452,1.584,453,2.16,454,2.16,455,2.16,456,4.484,457,3.3,458,3.3,459,2.16,460,2.16,461,3.3,462,2.42,463,2.16,464,2.16,465,2.16,466,4.484,467,2.77,468,6.219,469,4.005,470,2.16,471,1.813,472,2.16,473,2.16,474,2.16,475,2.16,476,4.005,477,2.16,478,2.16,479,4.484,480,2.16,481,2.16,482,2.16,483,2.16,484,2.16,485,2.16,486,2.16,487,4.83,488,3.361,489,5.093,490,4.005,491,4.484,492,2.16,493,1.813,494,2.16,495,2.16,496,2.16,497,4.005,498,3.3,499,1.813,500,2.16,501,2.16,502,2.16,503,1.813,504,2.16,505,1.813,506,2.16,507,2.16,508,2.16,509,2.16,510,2.16,511,2.16,512,2.16,513,2.16,514,2.16,515,2.16,516,2.16,517,2.16,518,2.16,519,2.16,520,2.16,521,2.16,522,4.83,523,2.16,524,2.16,525,2.16,526,2.16,527,4.484,528,2.16,529,2.16,530,2.16,531,2.16,532,2.16,533,2.16,534,2.16,535,3.3,536,2.16,537,2.16,538,2.16,539,2.16,540,2.16,541,2.16,542,1.584,543,2.16,544,4.484,545,2.16,546,4.005,547,4.484,548,3.3,549,3.361,550,3.3,551,3.3,552,3.3,553,3.3,554,4.484,555,2.16,556,3.3,557,2.16,558,2.16,559,2.16,560,2.16,561,4.005,562,2.16,563,2.16,564,2.16,565,2.16,566,2.16,567,3.3,568,2.16,569,2.16,570,2.16,571,2.16,572,2.16,573,2.16,574,2.16,575,1.584,576,5.298,577,2.16,578,2.16,579,2.16,580,2.16,581,1.813,582,2.16,583,2.16,584,2.16,585,2.16,586,2.16,587,2.16,588,2.16,589,2.16,590,1.584,591,2.16,592,2.16,593,2.16,594,2.16,595,1.813,596,2.16,597,2.16,598,2.16,599,2.16,600,3.3,601,3.3,602,2.16,603,2.16,604,2.16,605,2.77,606,3.3,607,3.3,608,2.16,609,2.16,610,2.16,611,4.484,612,2.16,613,2.16,614,2.16,615,2.16,616,3.3,617,2.16,618,2.16]],["title/coverage.html",[619,3.751]],["body/coverage.html",[0,1.277,1,1.246,5,0.201,6,0.487,7,2.769,8,2.769,16,0.92,17,0.029,35,1.347,39,1.546,50,1.154,56,1.347,65,1.347,68,1.347,71,0.852,75,0.92,79,0.521,83,1.246,85,0.014,86,0.019,87,0.014,91,2.357,92,2.103,97,1.9,100,1.347,108,1.277,110,3.049,134,1.347,150,2.357,151,2.357,152,2.103,155,1.9,156,1.9,161,2.48,162,2.174,163,2.103,165,2.103,174,2.357,176,2.103,178,1.586,180,3.287,186,1.586,189,2.357,192,3.23,197,3.23,203,2.357,212,2.357,213,2.882,214,2.357,215,2.357,216,2.103,221,1.731,222,2.103,224,2.698,225,2.698,401,2.357,402,2.103,420,2.357,421,2.103,619,2.698,620,2.698,621,3.214,622,3.214,623,6.584,624,5.987,625,3.214,626,3.214,627,5.024,628,4.404,629,5.404,630,5.404,631,3.214,632,3.214,633,3.214,634,3.214,635,3.214,636,3.214,637,2.698]],["title/dependencies.html",[452,2.016,638,2.582]],["body/dependencies.html",[17,0.03,28,0.31,48,1.633,55,1.513,64,1.402,81,1.633,85,0.019,86,0.023,87,0.019,96,1.766,98,2.49,135,3.44,164,2.079,289,3.535,291,3.089,411,3.44,443,5.037,462,3.089,467,3.535,638,2.756,639,4.212,640,6.559,641,4.212,642,4.212,643,4.212,644,4.212,645,5.257,646,4.412,647,4.212,648,4.212,649,4.212,650,4.212,651,4.412,652,4.212,653,4.212,654,4.212,655,4.212,656,4.212,657,4.212,658,4.212,659,4.212]],["title/index.html",[11,0.53,433,1.625,434,1.625]],["body/index.html",[0,0.494,1,0.914,3,0.486,10,1.732,13,1.009,14,0.7,15,1.877,17,0.029,18,0.989,19,1.173,20,1.517,21,0.595,22,1.087,23,1.173,24,0.7,25,1.087,26,0.288,28,0.104,29,0.644,31,1.164,32,1.009,33,1.602,34,0.2,35,0.595,36,0.989,37,0.625,38,0.989,39,1.281,40,1.641,41,1.778,42,1.375,43,2.104,46,1.164,47,1.269,48,1.173,49,0.7,50,0.847,52,1.164,53,2.381,54,1.164,55,2.016,56,0.595,57,1.771,58,1.164,59,1.919,60,0.989,62,0.989,64,1.49,65,0.595,66,0.7,68,1.269,69,1.989,70,1.071,71,0.803,72,1.164,73,1.071,74,0.644,81,1.518,83,1.173,85,0.017,86,0.01,87,0.006,88,1.85,89,0.928,94,1.367,98,2.314,102,0.509,103,0.914,104,0.847,105,0.509,107,0.251,111,2.967,112,3.716,126,0.928,127,1.979,133,0.7,135,2.308,139,0.914,148,1.729,149,1.98,160,1.543,162,0.7,164,2.21,169,1.19,173,0.928,181,2.65,187,1.27,188,0.928,191,1.19,199,1.19,202,0.928,221,2.525,226,1.19,228,1.19,234,1.19,250,1.19,255,2.314,260,3.546,261,3.098,265,2.54,267,1.979,268,1.729,274,1.19,275,1.19,276,3.823,277,1.19,282,1.979,283,1.19,288,1.04,291,2.22,325,1.04,380,1.98,388,1.19,389,2.96,395,2.871,398,1.979,400,2.764,403,1.04,411,2.308,419,0.928,433,1.394,434,1.394,438,1.729,446,1.979,452,1.04,462,2.22,471,1.979,488,1.19,493,1.979,499,1.979,503,1.19,549,1.19,575,3.863,590,2.22,595,1.19,637,1.979,638,3.184,646,1.19,651,1.979,660,3.027,661,3.027,662,1.418,663,4.478,664,1.418,665,1.418,666,1.418,667,1.979,668,2.358,669,2.358,670,3.915,671,3.527,672,2.358,673,4.478,674,3.027,675,1.418,676,1.418,677,3.027,678,3.915,679,1.979,680,2.358,681,5.151,682,5.151,683,4.689,684,1.418,685,1.979,686,1.418,687,2.358,688,2.358,689,2.358,690,3.027,691,1.418,692,2.358,693,1.418,694,1.418,695,1.418,696,1.418,697,1.19,698,3.027,699,2.358,700,1.418,701,1.418,702,1.418,703,1.418,704,1.418,705,1.418,706,1.418,707,1.418,708,1.19,709,3.027,710,1.418,711,1.418,712,1.418,713,1.418,714,1.418,715,1.19,716,2.358,717,1.418,718,1.979,719,1.418,720,1.418,721,1.418,722,1.418,723,1.418,724,1.418,725,1.19,726,1.418,727,1.418,728,1.19,729,1.418,730,1.418,731,1.418,732,1.418,733,1.418,734,2.358,735,1.418,736,2.358,737,2.358,738,1.418,739,1.418,740,1.418,741,1.418,742,1.418,743,1.418,744,2.358,745,2.358,746,0.928,747,1.418,748,1.418,749,1.418,750,1.418,751,1.418,752,1.418,753,1.19,754,1.19,755,1.418,756,3.915,757,3.915,758,3.915,759,5.019,760,3.915,761,3.286,762,3.915,763,3.915,764,3.915,765,1.418,766,1.418,767,1.418,768,1.418,769,1.418,770,1.418,771,1.418,772,1.418,773,1.418,774,1.418,775,1.418,776,1.418,777,1.418,778,1.418,779,2.358,780,1.418,781,1.418,782,1.418,783,1.418,784,1.418,785,1.418,786,1.418]],["title/license.html",[433,1.625,434,1.625,787,2.307]],["body/license.html",[2,0.51,4,0.436,5,0.285,9,0.276,10,0.406,17,0.013,25,0.473,26,0.097,33,0.598,37,0.761,38,0.552,43,2.048,85,0.01,86,0.01,87,0.006,105,0.473,107,0.233,111,0.778,112,0.861,113,1.105,121,0.406,194,0.965,213,2.202,255,1.31,257,1.859,268,2.984,299,2.104,325,0.965,336,2.104,542,0.965,575,0.965,590,4.179,605,1.859,620,2.408,667,1.105,679,1.859,685,1.105,697,1.105,708,1.105,718,1.105,725,1.105,728,1.105,746,0.861,754,3.151,761,1.859,787,5.19,788,3.365,789,2.869,790,1.316,791,1.316,792,1.316,793,4.727,794,5.25,795,3.365,796,3.754,797,1.316,798,5.431,799,4.885,800,1.316,801,1.316,802,1.316,803,4.885,804,5.25,805,4.068,806,4.885,807,2.215,808,1.316,809,3.754,810,1.316,811,1.316,812,1.316,813,3.365,814,1.316,815,4.727,816,3.365,817,2.215,818,2.215,819,1.316,820,2.869,821,2.215,822,1.316,823,1.316,824,5.641,825,3.365,826,2.215,827,1.316,828,2.215,829,1.316,830,1.316,831,1.316,832,1.316,833,1.316,834,1.316,835,1.316,836,2.869,837,1.316,838,2.869,839,2.215,840,5.25,841,1.316,842,1.316,843,4.068,844,4.727,845,3.365,846,2.215,847,2.869,848,4.068,849,1.316,850,1.316,851,1.316,852,1.316,853,1.316,854,2.215,855,1.316,856,1.316,857,1.316,858,6.205,859,2.869,860,2.215,861,1.316,862,4.727,863,2.215,864,1.316,865,3.754,866,2.215,867,1.316,868,5.641,869,1.316,870,1.316,871,1.316,872,1.316,873,1.316,874,1.316,875,2.215,876,2.869,877,1.316,878,1.316,879,1.316,880,1.316,881,1.316,882,3.365,883,3.754,884,1.316,885,2.215,886,3.365,887,2.215,888,1.316,889,3.754,890,2.215,891,1.316,892,1.316,893,2.869,894,1.316,895,1.316,896,1.316,897,1.316,898,2.215,899,1.316,900,1.316,901,1.316,902,2.869,903,1.316,904,1.316,905,2.869,906,1.316,907,1.316,908,1.316,909,3.365,910,4.885,911,1.316,912,1.316,913,2.215,914,4.543,915,2.869,916,3.365,917,2.215,918,2.215,919,2.215,920,2.215,921,2.869,922,2.215,923,2.869,924,2.215,925,2.215,926,2.215,927,2.215,928,1.105,929,2.215,930,1.316,931,1.316,932,3.754,933,4.327,934,2.869,935,2.215,936,1.316,937,1.316,938,2.215,939,2.215,940,1.316,941,1.316,942,2.869,943,2.215,944,1.316,945,1.316,946,1.316,947,2.869,948,1.316,949,1.316,950,1.316,951,2.215,952,2.215,953,1.316,954,1.316,955,1.316,956,1.316,957,1.316,958,1.316,959,1.316,960,2.215,961,1.316,962,1.316,963,1.316,964,1.316,965,1.316,966,1.316,967,1.316,968,1.316,969,2.869,970,1.316,971,2.869,972,1.316,973,1.316,974,1.316,975,1.316,976,4.543,977,1.316,978,1.316,979,1.316,980,1.316,981,1.316,982,3.365,983,2.215,984,3.365,985,1.316,986,1.316,987,1.316,988,1.316,989,1.316,990,2.869,991,1.316,992,1.316,993,2.215,994,2.215,995,1.316,996,1.316,997,1.316,998,2.215,999,1.316,1000,1.316,1001,3.754,1002,1.316,1003,1.316,1004,1.316,1005,1.316,1006,1.316,1007,1.316,1008,1.316,1009,2.869,1010,3.365,1011,1.316,1012,1.316,1013,1.316,1014,1.316,1015,1.316,1016,1.316,1017,1.316,1018,1.316,1019,1.316,1020,1.316,1021,2.215,1022,1.316,1023,1.316,1024,2.215,1025,1.316,1026,1.316,1027,3.365,1028,1.316,1029,1.316,1030,1.316,1031,1.316,1032,1.316,1033,1.316,1034,1.316,1035,3.365,1036,2.869,1037,2.869,1038,2.869,1039,2.215,1040,2.215,1041,2.869,1042,2.215,1043,2.215,1044,2.215,1045,2.215,1046,1.316,1047,1.316,1048,1.316,1049,1.316,1050,1.316,1051,1.316,1052,1.316,1053,1.316,1054,1.316,1055,2.215,1056,1.316,1057,1.316,1058,1.316,1059,1.316,1060,3.754,1061,1.316,1062,1.316,1063,1.316,1064,1.316,1065,1.316,1066,1.316,1067,1.316,1068,1.316,1069,3.754,1070,1.316,1071,1.316,1072,1.316,1073,1.316,1074,1.316,1075,1.105,1076,1.316,1077,1.316,1078,1.316,1079,1.316,1080,1.316,1081,1.316,1082,1.316,1083,1.316,1084,1.316,1085,1.316,1086,1.316,1087,1.316,1088,2.869,1089,1.316,1090,1.316,1091,1.316,1092,1.316,1093,1.316,1094,2.215,1095,1.316,1096,1.316,1097,1.316,1098,1.316,1099,1.316,1100,1.316,1101,1.316,1102,1.316,1103,1.316,1104,1.316,1105,1.316,1106,1.316,1107,1.316,1108,1.316,1109,1.316,1110,2.215,1111,1.316,1112,1.316,1113,1.316,1114,2.215,1115,2.215,1116,1.316,1117,1.316,1118,1.316,1119,1.316,1120,1.316,1121,1.316,1122,1.316,1123,1.316,1124,1.316,1125,1.316,1126,1.316,1127,1.316,1128,1.316,1129,1.316,1130,1.316,1131,1.316,1132,1.316,1133,1.316,1134,1.316,1135,1.316]],["title/modules.html",[90,1.487]],["body/modules.html",[17,0.025,85,0.021,86,0.025,87,0.021,89,3.068,90,1.561,149,3.068,173,3.068,188,3.068,202,3.068,211,3.439,380,3.068,400,3.068,419,3.068,746,4.338,1136,6.63,1137,6.63]],["title/overview.html",[1138,3.751]],["body/overview.html",[2,1.927,17,0.026,85,0.022,86,0.026,87,0.022,88,1.785,90,1.654,102,1.785,104,1.785,109,2.084,392,4.172,505,4.172,542,3.645,638,3.252,715,4.172,1075,4.172,1138,4.172,1139,4.971,1140,5.81,1141,5.81]],["title/todo.html",[433,1.625,434,1.625,1142,2.307]],["body/todo.html",[10,1.836,17,0.028,53,2.32,55,1.645,64,1.98,85,0.02,86,0.024,87,0.02,111,2.708,112,3.892,126,3.621,164,2.936,181,2.732,221,2.467,255,3.739,276,2.997,438,3.359,581,3.844,746,3.621,753,5.185,928,3.844,1142,4.645,1143,4.58,1144,4.58,1145,4.58]],["title/miscellaneous/variables.html",[1146,2.307,1147,3.312]],["body/miscellaneous/variables.html",[6,0.431,7,2.01,8,2.661,11,0.854,17,0.029,22,2.193,23,2.367,69,1.589,75,1.677,76,1.366,77,2.367,79,0.99,80,2.184,81,2.101,82,2.184,83,2.101,84,2.184,85,0.019,86,0.024,87,0.019,100,2.272,178,2.675,181,2.184,192,3.246,196,3.714,197,3.246,201,3.714,1146,3.714,1147,3.714,1148,5.42,1149,4.425,1150,4.425]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":127,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{}}}],["0.10.0",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":467,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.15.0",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":443,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":686,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":25,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":446,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.3",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["10.2",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["10.2.4",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":781,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":789,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":791,"title":{},"body":{"license.html":{}}}],["2020",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":488,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":595,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["332baf7",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["4.1.9",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":703,"title":{},"body":{"index.html":{}}}],["50",{"_index":831,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":634,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":551,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1141,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":542,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":665,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":582,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1014,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1091,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1088,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":783,"title":{},"body":{"index.html":{}}}],["act",{"_index":1098,"title":{},"body":{"license.html":{}}}],["acting",{"_index":811,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1067,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":1000,"title":{},"body":{"license.html":{}}}],["adding",{"_index":733,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1001,"title":{},"body":{"license.html":{}}}],["additions",{"_index":884,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1086,"title":{},"body":{"license.html":{}}}],["again",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":952,"title":{},"body":{"license.html":{}}}],["agent",{"_index":503,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1101,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1038,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1018,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":957,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":769,"title":{},"body":{"index.html":{}}}],["alone",{"_index":948,"title":{},"body":{"license.html":{}}}],["along",{"_index":991,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":999,"title":{},"body":{"license.html":{}}}],["already",{"_index":396,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":735,"title":{},"body":{"index.html":{}}}],["always",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":785,"title":{},"body":{"index.html":{}}}],["amd",{"_index":760,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":972,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":979,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":985,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1095,"title":{},"body":{"license.html":{}}}],["angular",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":767,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":96,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":872,"title":{},"body":{"license.html":{}}}],["apache",{"_index":788,"title":{},"body":{"license.html":{}}}],["api",{"_index":207,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":684,"title":{},"body":{"index.html":{}}}],["api.defaulttextmapsetter",{"_index":370,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":369,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.setspan",{"_index":367,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":678,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":710,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":701,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":748,"title":{},"body":{"index.html":{}}}],["appand",{"_index":739,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":709,"title":{},"body":{"index.html":{}}}],["appear",{"_index":996,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":866,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1036,"title":{},"body":{"license.html":{}}}],["application",{"_index":663,"title":{},"body":{"index.html":{}}}],["applies",{"_index":941,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1110,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":398,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1118,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1053,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1126,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1074,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1107,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1058,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1056,"title":{},"body":{"license.html":{}}}],["async",{"_index":695,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1111,"title":{},"body":{"license.html":{}}}],["attached",{"_index":864,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["attribution",{"_index":982,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":807,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":859,"title":{},"body":{"license.html":{}}}],["available",{"_index":746,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b112065",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":98,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["b3configuration",{"_index":676,"title":{},"body":{"index.html":{}}}],["b3injectencoding",{"_index":129,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":146,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":145,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":21,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":147,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":1,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":89,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":97,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":143,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":588,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1144,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":763,"title":{},"body":{"index.html":{}}}],["base",{"_index":771,"title":{},"body":{"index.html":{}}}],["based",{"_index":728,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1040,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":44,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":378,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bca88a0",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":889,"title":{},"body":{"license.html":{}}}],["below",{"_index":867,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":835,"title":{},"body":{"license.html":{}}}],["between",{"_index":690,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":881,"title":{},"body":{"license.html":{}}}],["body",{"_index":48,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1112,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":41,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":693,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":715,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1115,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1137,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":646,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":732,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":368,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":372,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":974,"title":{},"body":{"license.html":{}}}],["cause",{"_index":761,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":978,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":435,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1073,"title":{},"body":{"license.html":{}}}],["charge",{"_index":923,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1089,"title":{},"body":{"license.html":{}}}],["claim",{"_index":954,"title":{},"body":{"license.html":{}}}],["claims",{"_index":943,"title":{},"body":{"license.html":{}}}],["class",{"_index":107,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":336,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":55,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":765,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":406,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":408,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":409,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":417,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes",{"_index":410,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes.collectorexporterconfigbase",{"_index":407,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":949,"title":{},"body":{"license.html":{}}}],["command",{"_index":737,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1119,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1083,"title":{},"body":{"license.html":{}}}],["commit",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":33,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":35,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":759,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":95,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["communication",{"_index":893,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":853,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1129,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1007,"title":{},"body":{"license.html":{}}}],["compose",{"_index":745,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":749,"title":{},"body":{"index.html":{}}}],["composite",{"_index":153,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":159,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":149,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":152,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1080,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":794,"title":{},"body":{"license.html":{}}}],["config",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.servicename",{"_index":413,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":209,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":416,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":415,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":414,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":8,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":431,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":430,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configurable",{"_index":471,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":136,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":677,"title":{},"body":{"index.html":{}}}],["configured",{"_index":425,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consequential",{"_index":1072,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1097,"title":{},"body":{"license.html":{}}}],["console",{"_index":40,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":184,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":173,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":176,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":906,"title":{},"body":{"license.html":{}}}],["const",{"_index":78,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":958,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":119,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":140,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":154,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":120,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":1002,"title":{},"body":{"license.html":{}}}],["contained",{"_index":988,"title":{},"body":{"license.html":{}}}],["content",{"_index":1033,"title":{},"body":{"license.html":{}}}],["contents",{"_index":667,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":162,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":826,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":699,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":883,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":947,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1009,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":910,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":959,"title":{},"body":{"license.html":{}}}],["control",{"_index":813,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":814,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":855,"title":{},"body":{"license.html":{}}}],["copies",{"_index":966,"title":{},"body":{"license.html":{}}}],["copy",{"_index":971,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":804,"title":{},"body":{"license.html":{}}}],["core",{"_index":704,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":955,"title":{},"body":{"license.html":{}}}],["cours",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":619,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":730,"title":{},"body":{"index.html":{}}}],["cross",{"_index":953,"title":{},"body":{"license.html":{}}}],["current",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":59,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":1029,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1069,"title":{},"body":{"license.html":{}}}],["date",{"_index":963,"title":{},"body":{"license.html":{}}}],["dcde5bb",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":721,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":102,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":784,"title":{},"body":{"index.html":{}}}],["default",{"_index":22,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1103,"title":{},"body":{"license.html":{}}}],["define",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["defineb3encoding",{"_index":117,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":124,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defined",{"_index":121,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":817,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":797,"title":{},"body":{"license.html":{}}}],["del",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1064,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":493,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":638,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":766,"title":{},"body":{"index.html":{}}}],["depends",{"_index":758,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":662,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":868,"title":{},"body":{"license.html":{}}}],["derived",{"_index":869,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1030,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":908,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1052,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":751,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":29,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":31,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["different",{"_index":1006,"title":{},"body":{"license.html":{}}}],["dir",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":820,"title":{},"body":{"license.html":{}}}],["direction",{"_index":822,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1034,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":903,"title":{},"body":{"license.html":{}}}],["display",{"_index":679,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":932,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":990,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":796,"title":{},"body":{"license.html":{}}}],["doc",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":744,"title":{},"body":{"index.html":{}}}],["docs",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":802,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":620,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":725,"title":{},"body":{"index.html":{},"license.html":{}}}],["done",{"_index":1145,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":916,"title":{},"body":{"license.html":{}}}],["ead3251",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1124,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":870,"title":{},"body":{"license.html":{}}}],["efa9083",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":873,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":890,"title":{},"body":{"license.html":{}}}],["en",{"_index":583,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":1114,"title":{},"body":{"license.html":{}}}],["end",{"_index":1109,"title":{},"body":{"license.html":{}}}],["entities",{"_index":812,"title":{},"body":{"license.html":{}}}],["entity",{"_index":806,"title":{},"body":{"license.html":{}}}],["enum",{"_index":692,"title":{},"body":{"index.html":{}}}],["environment",{"_index":711,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":712,"title":{},"body":{"index.html":{}}}],["error",{"_index":395,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":1085,"title":{},"body":{"license.html":{}}}],["event",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":331,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":343,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":341,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":339,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":575,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":934,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":905,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":922,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1019,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1059,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":837,"title":{},"body":{"license.html":{}}}],["existing",{"_index":717,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":1011,"title":{},"body":{"license.html":{}}}],["export",{"_index":34,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":776,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":181,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":179,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":175,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":177,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":180,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:15",{"_index":422,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":183,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:23",{"_index":404,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:33",{"_index":423,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:44",{"_index":405,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":427,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":702,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":392,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":1043,"title":{},"body":{"license.html":{}}}],["f",{"_index":747,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1081,"title":{},"body":{"license.html":{}}}],["fake",{"_index":706,"title":{},"body":{"index.html":{}}}],["false",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1090,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":426,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1113,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":829,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":964,"title":{},"body":{"license.html":{}}}],["files",{"_index":847,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1048,"title":{},"body":{"license.html":{}}}],["fix",{"_index":772,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":969,"title":{},"body":{"license.html":{}}}],["forget",{"_index":726,"title":{},"body":{"index.html":{}}}],["form",{"_index":840,"title":{},"body":{"license.html":{}}}],["format",{"_index":1121,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":383,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":384,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":925,"title":{},"body":{"license.html":{}}}],["functions",{"_index":719,"title":{},"body":{"index.html":{}}}],["generally",{"_index":700,"title":{},"body":{"index.html":{}}}],["generated",{"_index":854,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":182,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":118,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["getting",{"_index":433,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":349,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["give",{"_index":194,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":669,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1078,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1134,"title":{},"body":{"license.html":{}}}],["grant",{"_index":915,"title":{},"body":{"license.html":{}}}],["granted",{"_index":839,"title":{},"body":{"license.html":{}}}],["granting",{"_index":808,"title":{},"body":{"license.html":{}}}],["grants",{"_index":918,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1136,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1065,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1105,"title":{},"body":{"license.html":{}}}],["header",{"_index":20,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":753,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":917,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1015,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1104,"title":{},"body":{"license.html":{}}}],["http",{"_index":161,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":356,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":391,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:145",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:174",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:195",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:209",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:225",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:46",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:50",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:54",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:94",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":352,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":358,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":360,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":354,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":363,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":752,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":741,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":792,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1131,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":388,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":389,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":764,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":681,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":666,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":200,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":191,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":188,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":155,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1125,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1117,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":186,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":827,"title":{},"body":{"license.html":{}}}],["iii",{"_index":834,"title":{},"body":{"license.html":{}}}],["implement",{"_index":729,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":199,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":139,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1044,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":103,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":904,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1076,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1071,"title":{},"body":{"license.html":{}}}],["include",{"_index":876,"title":{},"body":{"license.html":{}}}],["included",{"_index":863,"title":{},"body":{"license.html":{}}}],["includes",{"_index":986,"title":{},"body":{"license.html":{}}}],["including",{"_index":844,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":887,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":913,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1106,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1102,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1093,"title":{},"body":{"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":861,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":821,"title":{},"body":{"license.html":{}}}],["individual",{"_index":836,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":113,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":997,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":946,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":960,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":133,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":166,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":167,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":168,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_exporter",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_propagator",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":108,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":109,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":142,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":27,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":196,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":201,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":195,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":675,"title":{},"body":{"index.html":{}}}],["installation",{"_index":668,"title":{},"body":{"index.html":{}}}],["institute",{"_index":950,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":885,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":221,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":757,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":382,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":385,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":390,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":7,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":381,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":174,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":192,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:12",{"_index":193,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":401,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":420,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":91,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":150,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":189,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":203,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":212,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":197,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:12",{"_index":198,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":134,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["irrevocable",{"_index":926,"title":{},"body":{"license.html":{}}}],["issue",{"_index":899,"title":{},"body":{"license.html":{}}}],["it's",{"_index":126,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":164,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":707,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":205,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":210,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":202,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":156,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":68,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":790,"title":{},"body":{"license.html":{}}}],["jest",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":462,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":683,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":334,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":606,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":660,"title":{},"body":{"index.html":{}}}],["key",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":1042,"title":{},"body":{"license.html":{}}}],["language",{"_index":1133,"title":{},"body":{"license.html":{}}}],["law",{"_index":1037,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":956,"title":{},"body":{"license.html":{}}}],["legal",{"_index":809,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1139,"title":{},"body":{"overview.html":{}}}],["level",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1060,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1068,"title":{},"body":{"license.html":{}}}],["library",{"_index":661,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":944,"title":{},"body":{"license.html":{}}}],["license",{"_index":787,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":1004,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1128,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":961,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":803,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1045,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1135,"title":{},"body":{"license.html":{}}}],["limited",{"_index":845,"title":{},"body":{"license.html":{}}}],["link",{"_index":880,"title":{},"body":{"license.html":{}}}],["list",{"_index":698,"title":{},"body":{"index.html":{}}}],["lists",{"_index":897,"title":{},"body":{"license.html":{}}}],["literal",{"_index":418,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":951,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":397,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["lock",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":47,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":148,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["logbody?:boolean",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["logger",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":722,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":723,"title":{},"body":{"index.html":{}}}],["logging",{"_index":499,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":691,"title":{},"body":{"index.html":{}}}],["loss",{"_index":1077,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1084,"title":{},"body":{"license.html":{}}}],["made",{"_index":860,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":896,"title":{},"body":{"license.html":{}}}],["make",{"_index":937,"title":{},"body":{"license.html":{}}}],["making",{"_index":842,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1082,"title":{},"body":{"license.html":{}}}],["managed",{"_index":901,"title":{},"body":{"license.html":{}}}],["management",{"_index":823,"title":{},"body":{"license.html":{}}}],["manager",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":215,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":907,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1025,"title":{},"body":{"license.html":{}}}],["matching",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":799,"title":{},"body":{"license.html":{}}}],["means",{"_index":818,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":850,"title":{},"body":{"license.html":{}}}],["media",{"_index":856,"title":{},"body":{"license.html":{}}}],["medium",{"_index":967,"title":{},"body":{"license.html":{}}}],["meet",{"_index":968,"title":{},"body":{"license.html":{}}}],["member",{"_index":777,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1047,"title":{},"body":{"license.html":{}}}],["merely",{"_index":879,"title":{},"body":{"license.html":{}}}],["merge",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":340,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":115,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1146,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":843,"title":{},"body":{"license.html":{}}}],["modified",{"_index":973,"title":{},"body":{"license.html":{}}}],["modify",{"_index":998,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1003,"title":{},"body":{"license.html":{}}}],["module",{"_index":88,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":90,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":386,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":112,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":19,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":14,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":37,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":1024,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":774,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":945,"title":{},"body":{"license.html":{}}}],["need",{"_index":779,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1063,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1066,"title":{},"body":{"license.html":{}}}],["new",{"_index":79,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":94,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":651,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":670,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":775,"title":{},"body":{"index.html":{}}}],["non",{"_index":921,"title":{},"body":{"license.html":{}}}],["noop",{"_index":217,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":705,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":218,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":220,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":211,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":216,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":995,"title":{},"body":{"license.html":{}}}],["notable",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":685,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":862,"title":{},"body":{"license.html":{}}}],["notices",{"_index":976,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1013,"title":{},"body":{"license.html":{}}}],["npm",{"_index":674,"title":{},"body":{"index.html":{}}}],["null",{"_index":332,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["o",{"_index":24,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":848,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1094,"title":{},"body":{"license.html":{}}}],["observable",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1130,"title":{},"body":{"license.html":{}}}],["offer",{"_index":938,"title":{},"body":{"license.html":{}}}],["ok",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":708,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":740,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":32,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":770,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":160,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":411,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":135,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":187,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":71,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":222,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":380,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":714,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":762,"title":{},"body":{"index.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":768,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1031,"title":{},"body":{"license.html":{}}}],["original",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":403,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_exporter",{"_index":178,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_logger",{"_index":83,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":100,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":400,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":402,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":56,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":1075,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":832,"title":{},"body":{"license.html":{}}}],["overide",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1138,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":805,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":828,"title":{},"body":{"license.html":{}}}],["package",{"_index":452,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1123,"title":{},"body":{"license.html":{}}}],["param",{"_index":144,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":123,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":393,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parser",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":984,"title":{},"body":{"license.html":{}}}],["partial",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1049,"title":{},"body":{"license.html":{}}}],["party",{"_index":994,"title":{},"body":{"license.html":{}}}],["patent",{"_index":933,"title":{},"body":{"license.html":{}}}],["peerdependencies",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["percent",{"_index":830,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":688,"title":{},"body":{"index.html":{}}}],["perform",{"_index":930,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1022,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":838,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":919,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":983,"title":{},"body":{"license.html":{}}}],["places",{"_index":989,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1087,"title":{},"body":{"license.html":{}}}],["power",{"_index":819,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":841,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":928,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1122,"title":{},"body":{"license.html":{}}}],["private",{"_index":114,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":46,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1026,"title":{},"body":{"license.html":{}}}],["production",{"_index":42,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":581,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":438,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":734,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":975,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":731,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":101,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":93,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":99,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":110,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:14",{"_index":157,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":219,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":190,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":204,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:21",{"_index":122,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:31",{"_index":158,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:34",{"_index":125,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:45",{"_index":130,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/b3",{"_index":92,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":151,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":163,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":165,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":214,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":169,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{}}}],["provide",{"_index":105,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":865,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":137,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":104,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1039,"title":{},"body":{"license.html":{}}}],["public",{"_index":206,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":929,"title":{},"body":{"license.html":{}}}],["publish",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":902,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":816,"title":{},"body":{"license.html":{}}}],["readable",{"_index":987,"title":{},"body":{"license.html":{}}}],["readme",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1108,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1028,"title":{},"body":{"license.html":{}}}],["received",{"_index":911,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":970,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":697,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1055,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":965,"title":{},"body":{"license.html":{}}}],["redo",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1020,"title":{},"body":{"license.html":{}}}],["release",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":877,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1116,"title":{},"body":{"license.html":{}}}],["represent",{"_index":874,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":895,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":927,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1032,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":795,"title":{},"body":{"license.html":{}}}],["request",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":374,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":373,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":371,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":353,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":351,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":355,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":1027,"title":{},"body":{"license.html":{}}}],["reset",{"_index":505,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["response",{"_index":49,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["responsibility",{"_index":1100,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1051,"title":{},"body":{"license.html":{}}}],["result",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":849,"title":{},"body":{"license.html":{}}}],["results",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":980,"title":{},"body":{"license.html":{}}}],["return",{"_index":131,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["returns",{"_index":128,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":871,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1096,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1057,"title":{},"body":{"license.html":{}}}],["root",{"_index":138,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":924,"title":{},"body":{"license.html":{}}}],["run",{"_index":671,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":718,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":687,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":936,"title":{},"body":{"license.html":{}}}],["sections",{"_index":800,"title":{},"body":{"license.html":{}}}],["see",{"_index":111,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":939,"title":{},"body":{"license.html":{}}}],["send",{"_index":680,"title":{},"body":{"index.html":{}}}],["sending",{"_index":755,"title":{},"body":{"index.html":{}}}],["sent",{"_index":894,"title":{},"body":{"license.html":{}}}],["separable",{"_index":878,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1017,"title":{},"body":{"license.html":{}}}],["service",{"_index":38,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":36,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/propagator.interface",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":727,"title":{},"body":{"index.html":{}}}],["setheaders",{"_index":375,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":798,"title":{},"body":{"license.html":{}}}],["shares",{"_index":833,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":45,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":377,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":379,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":18,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["skipself",{"_index":387,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":846,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1099,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1050,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":50,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":333,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":345,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":338,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":335,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanattributes",{"_index":30,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["spanexporter",{"_index":185,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spanstatuscode",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":344,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.ok",{"_index":337,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1070,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1132,"title":{},"body":{"license.html":{}}}],["stack",{"_index":342,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":736,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":738,"title":{},"body":{"index.html":{}}}],["started",{"_index":434,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":350,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1012,"title":{},"body":{"license.html":{}}}],["stated",{"_index":935,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1005,"title":{},"body":{"license.html":{}}}],["statements",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":116,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":977,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":1079,"title":{},"body":{"license.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":605,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":931,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1008,"title":{},"body":{"license.html":{}}}],["submit",{"_index":888,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":886,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":912,"title":{},"body":{"license.html":{}}}],["such",{"_index":824,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1016,"title":{},"body":{"license.html":{}}}],["support",{"_index":1092,"title":{},"body":{"license.html":{}}}],["sync",{"_index":696,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1120,"title":{},"body":{"license.html":{}}}],["systems",{"_index":898,"title":{},"body":{"license.html":{}}}],["table",{"_index":637,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1143,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":682,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":962,"title":{},"body":{"license.html":{}}}],["terms",{"_index":793,"title":{},"body":{"license.html":{}}}],["test",{"_index":549,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":213,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":132,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["theory",{"_index":1061,"title":{},"body":{"license.html":{}}}],["there's",{"_index":743,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":882,"title":{},"body":{"license.html":{}}}],["third",{"_index":993,"title":{},"body":{"license.html":{}}}],["this.b3propagatorconfig",{"_index":141,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":170,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":366,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":365,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":346,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":208,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.exporterservice.getexporter",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":171,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":172,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.logbody",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":412,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.propagatorservice.getpropagator",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":376,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":429,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":942,"title":{},"body":{"license.html":{}}}],["through",{"_index":801,"title":{},"body":{"license.html":{}}}],["throw",{"_index":394,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":778,"title":{},"body":{"index.html":{}}}],["title",{"_index":1046,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1142,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":716,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1062,"title":{},"body":{"license.html":{}}}],["trace",{"_index":39,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":689,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":900,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1023,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":981,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1021,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":940,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":851,"title":{},"body":{"license.html":{}}}],["translation",{"_index":852,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":672,"title":{},"body":{"index.html":{}}}],["true",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":782,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":773,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":780,"title":{},"body":{"index.html":{}}}],["types",{"_index":857,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":786,"title":{},"body":{"index.html":{}}}],["typo",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":815,"title":{},"body":{"license.html":{}}}],["union",{"_index":810,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1010,"title":{},"body":{"license.html":{}}}],["unused",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":750,"title":{},"body":{"index.html":{}}}],["update",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":348,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":347,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":357,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":361,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":359,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":362,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":43,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":106,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["used",{"_index":713,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":724,"title":{},"body":{"index.html":{}}}],["useless",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":664,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":399,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":1054,"title":{},"body":{"license.html":{}}}],["value",{"_index":23,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1147,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":891,"title":{},"body":{"license.html":{}}}],["version",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["version.json",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":694,"title":{},"body":{"index.html":{}}}],["void",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":742,"title":{},"body":{"index.html":{}}}],["warn",{"_index":720,"title":{},"body":{"index.html":{}}}],["warning",{"_index":673,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1041,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1035,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":992,"title":{},"body":{"license.html":{}}}],["whether",{"_index":825,"title":{},"body":{"license.html":{}}}],["whole",{"_index":875,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":364,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":914,"title":{},"body":{"license.html":{}}}],["without",{"_index":754,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":858,"title":{},"body":{"license.html":{}}}],["works",{"_index":590,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":920,"title":{},"body":{"license.html":{}}}],["writing",{"_index":909,"title":{},"body":{"license.html":{}}}],["written",{"_index":892,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":756,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1127,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["zipkin/build/src/types",{"_index":428,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkincollectorconfig",{"_index":65,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":424,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":432,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":419,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":421,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone.js",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1140,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        multiHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel} from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?:boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            defineB3Encoding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:34\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:45\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            b3PropagatorConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         B3PropagatorConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        logBody\n                                \n                                \n                                            Optional\n                                        logLevel\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel} from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?:boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                        custom Header\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel} from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?:boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        b3PropagatorConfig\n                                \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel} from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?:boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:225\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:145\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:174\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:195\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:209\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:94\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logBody\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                            \n                        \n\n                \n                    \n                        Log or not body\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:46\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, SpanStatusCode, DiagLogger } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTELCOL_LOGGER } from '../configuration/opentelemetry-config';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTELCOL_LOGGER)\n    private logger: DiagLogger\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.exporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.OK\n          });\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = api.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig > 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     SpanAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpanAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel} from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?:boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:44\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     collectorTypes.CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter,\n  collectorTypes,\n} from '@opentelemetry/exporter-collector';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: collectorTypes.CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel} from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?:boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:33\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zipkinConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExporterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport { OpenTelemetryConfig, OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter } from '@opentelemetry/exporter-zipkin';\nimport { ExporterConfig } from '@opentelemetry/exporter-zipkin/build/src/types';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.4\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.2.4\n        \n            @angular/compiler : ^10.2.4\n        \n            @angular/core : ^10.2.4\n        \n            @angular/forms : ^10.2.4\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.2.4\n        \n            @angular/platform-browser-dynamic : ^10.2.4\n        \n            @angular/router : ^10.2.4\n        \n            @opentelemetry/exporter-collector : ^0.18.0\n        \n            @opentelemetry/exporter-zipkin : ^0.18.0\n        \n            @opentelemetry/propagator-b3 : ^0.18.0\n        \n            @opentelemetry/propagator-jaeger : ^0.14.0\n        \n            @opentelemetry/web : ^0.18.0\n        \n            body-parser : ^1.19.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.1.9\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/exporter-zipkin @opentelemetry/propagator-jaeger @opentelemetry/propagator-b3Configuration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-propagator-b3)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 3 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the example-app.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add more configuration for OpenTelemetry-collector : See here  \n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare baggage here  \n\nIn Progress\nDone ✓\n\n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.logger')\n                        \n                    \n\n                \n                    \n                        Logger : injection for a logger compatible \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_EXPORTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.exporter')\n                        \n                    \n\n                \n                    \n                        injection for a Exporter \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_PROPAGATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.propagator')\n                        \n                    \n\n                \n                    \n                        injection for a propagator \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
