var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AwsXrayPropagatorModule.html",[0,1.293,1,2.343]],["body/modules/AwsXrayPropagatorModule.html",[1,3.988,2,1.515,3,0.312,4,0.312,5,0.232,6,0.232,7,3.675,8,3.904,9,3.31,10,2.776,11,0.364,12,0.025,13,2.201,14,0.312,15,2.681,16,1.948,17,2.347,18,1.827,19,3.637,20,3.019,21,2.568,22,1.827,23,1.948,24,1.827,25,1.715,26,1.948,27,0.312,28,0.792,29,0.02,30,0.02]],["title/injectables/AwsXrayPropagatorService.html",[19,2.136,31,0.689]],["body/injectables/AwsXrayPropagatorService.html",[3,0.29,4,0.29,5,0.216,6,0.268,7,4.237,8,4.064,9,3.817,11,0.355,12,0.025,14,0.29,18,1.7,19,3.953,20,2.809,27,0.29,28,0.737,29,0.019,30,0.019,31,1.123,32,1.813,33,2.39,34,0.791,35,0.737,36,1.543,37,3.364,38,1.17,39,3.874,40,1.753,41,6.728,42,1.245,43,3.458,44,2.246,45,1.099,46,3.08,47,1.813,48,1.813,49,1.596,50,0.685]],["title/interfaces/B3PropagatorConfig.html",[51,0.56,52,1.293]],["body/interfaces/B3PropagatorConfig.html",[3,0.173,4,0.173,5,0.129,6,0.129,11,0.261,12,0.025,14,0.173,27,0.417,29,0.014,30,0.014,34,0.473,35,0.441,45,0.657,50,0.708,51,0.987,52,2.221,53,0.954,54,1.157,55,1.157,56,1.775,57,1.311,58,1.067,59,2.357,60,2.331,61,0.578,62,2.063,63,2.151,64,1.651,65,1.585,66,1.604,67,1.707,68,1.811,69,1.233,70,1.157,71,1.157,72,1.942,73,1.811,74,0.954,75,1.328,76,1.238,77,1.157,78,1.585,79,1.811,80,0.542,81,1.016,82,0.792,83,1.758,84,2.593,85,1.585,86,1.084,87,1.328,88,1.328,89,1.811,90,1.585,91,1.016,92,1.084,93,1.288,94,1.157,95,1.238,96,1.585,97,1.238,98,1.016,99,1.935,100,1.811,101,1.458,102,1.328,103,1.811,104,1.238,105,1.693,106,1.238,107,1.328,108,1.935,109,1.811,110,1.238,111,2.142,112,1.238,113,1.238,114,1.238,115,1.693,116,1.238,117,1.238,118,1.238,119,1.157,120,1.238,121,1.238,122,1.238,123,1.238,124,1.084,125,1.157,126,1.238,127,1.238,128,1.157,129,1.238,130,1.157,131,1.084,132,1.585,133,2.063,134,1.328,135,1.933,136,2.063,137,1.238,138,1.651,139,0.896,140,1.238,141,1.238,142,1.238,143,1.157,144,1.016,145,1.585,146,1.238,147,1.328,148,2.195,149,0.896,150,1.157,151,0.961,152,1.811,153,1.693,154,1.693,155,1.238,156,0.745,157,1.487,158,1.758,159,0.7,160,1.238,161,1.487,162,1.238,163,1.016,164,1.238,165,1.016,166,1.238]],["title/modules/B3PropagatorModule.html",[0,1.293,167,2.343]],["body/modules/B3PropagatorModule.html",[2,1.525,3,0.314,4,0.314,5,0.234,6,0.234,10,2.796,11,0.365,12,0.025,13,2.21,14,0.314,15,2.693,16,1.962,17,2.357,18,1.84,21,2.586,22,1.84,23,1.962,24,1.84,25,1.727,26,1.962,27,0.314,28,0.797,29,0.02,30,0.02,167,4.005,168,3.701,169,3.333,170,3.653,171,3.333]],["title/injectables/B3PropagatorService.html",[31,0.689,170,2.136]],["body/injectables/B3PropagatorService.html",[3,0.214,4,0.214,5,0.159,6,0.283,11,0.331,12,0.025,14,0.214,18,1.254,27,0.214,28,0.543,29,0.016,30,0.016,31,0.92,32,1.337,33,1.763,34,0.918,35,0.543,36,1.264,37,2.989,38,1.464,40,1.73,42,1.264,43,3.135,44,1.84,45,0.811,46,2.272,47,1.337,48,1.337,49,1.177,50,0.505,52,2.405,56,1.345,57,1.522,58,1.047,60,2.093,61,1.123,62,2.457,63,2.305,64,2.258,65,2.378,67,1.876,69,1.431,80,0.92,139,1.522,151,1.49,156,1.558,159,0.863,168,4.485,169,4.04,170,3.514,171,2.272,172,2.852,173,3.127,174,3.933,175,3.24,176,3.97,177,4.634,178,2.247,179,1.905,180,4.634,181,1.84,182,4.634,183,3.366,184,2.852,185,4.498,186,5.987,187,3.366,188,1.638,189,1.638,190,2.255,191,2.272,192,3.366,193,3.366,194,3.366,195,3.366,196,3.366,197,3.366]],["title/interfaces/BatchSpanProcessorConfig.html",[51,0.56,108,1.293]],["body/interfaces/BatchSpanProcessorConfig.html",[3,0.165,4,0.165,5,0.123,6,0.123,11,0.254,12,0.025,14,0.165,27,0.42,29,0.013,30,0.013,34,0.45,35,0.419,45,0.626,50,0.688,51,0.974,52,2.017,53,0.908,54,1.101,55,1.101,56,1.75,57,1.265,58,1.392,59,1.178,60,2.388,61,1.075,62,1.529,63,1.708,64,1.346,65,1.031,66,1.416,67,1.507,68,1.178,69,0.802,70,1.101,71,1.101,72,1.873,73,1.746,74,0.908,75,1.264,76,1.178,77,1.101,78,1.529,79,1.746,80,0.516,81,0.967,82,0.764,83,1.708,84,2.557,85,1.529,86,1.031,87,1.264,88,1.264,89,1.746,90,1.529,91,0.967,92,1.031,93,1.252,94,1.101,95,1.178,96,1.529,97,1.178,98,0.967,99,1.889,100,1.746,101,1.416,102,1.264,103,1.746,104,1.178,105,1.632,106,1.178,107,1.873,108,2.017,109,2.301,110,1.746,111,2.574,112,1.746,113,1.746,114,1.746,115,2.406,116,1.746,117,1.746,118,1.746,119,2.151,120,1.746,121,1.746,122,1.746,123,1.746,124,1.529,125,2.151,126,1.746,127,1.746,128,1.632,129,1.746,130,2.151,131,1.031,132,1.529,133,2.014,134,1.264,135,1.894,136,2.014,137,1.178,138,1.604,139,0.853,140,1.178,141,1.178,142,1.178,143,1.101,144,0.967,145,1.529,146,1.178,147,1.264,148,2.151,149,0.853,150,1.101,151,0.927,152,1.746,153,1.632,154,1.632,155,1.178,156,0.709,157,1.434,158,1.708,159,0.666,160,1.178,161,1.434,162,1.178,163,0.967,164,1.178,165,0.967,166,1.178]],["title/interfaces/CommonCollectorConfig.html",[51,0.56,78,1.379]],["body/interfaces/CommonCollectorConfig.html",[3,0.162,4,0.162,5,0.12,6,0.12,11,0.251,12,0.025,14,0.162,27,0.412,29,0.013,30,0.013,34,0.441,35,0.411,45,0.613,50,0.68,51,0.968,52,2.001,53,0.891,54,1.08,55,1.08,56,1.74,57,1.246,58,1.431,59,1.156,60,2.336,61,1.194,62,1.507,63,1.689,64,1.327,65,1.011,66,1.4,67,1.49,68,1.156,69,0.786,70,1.08,71,1.08,72,1.846,73,2.279,74,0.891,75,1.239,76,1.156,77,1.609,78,1.801,79,2.555,80,0.753,81,1.413,82,0.997,83,2.233,84,2.815,85,2.237,86,1.507,87,1.846,88,1.846,89,2.555,90,1.995,91,1.413,92,1.507,93,1.371,94,2.13,95,1.721,96,1.801,97,2.279,98,0.949,99,1.871,100,1.721,101,1.4,102,1.239,103,1.721,104,1.156,105,1.609,106,1.156,107,1.239,108,1.871,109,1.721,110,1.156,111,2.057,112,1.156,113,1.156,114,1.156,115,1.609,116,1.156,117,1.156,118,1.156,119,1.08,120,1.156,121,1.156,122,1.156,123,1.156,124,1.011,125,1.08,126,1.156,127,1.156,128,1.08,129,1.156,130,1.08,131,1.011,132,1.507,133,1.995,134,1.239,135,1.879,136,1.995,137,1.156,138,1.585,139,0.837,140,1.156,141,1.156,142,1.156,143,1.08,144,0.949,145,1.507,146,1.156,147,1.239,148,2.133,149,0.837,150,1.08,151,0.914,152,1.721,153,1.609,154,1.609,155,1.156,156,0.695,157,1.413,158,1.689,159,0.653,160,1.156,161,1.413,162,1.156,163,0.949,164,1.156,165,0.949,166,1.156]],["title/modules/CompositePropagatorModule.html",[0,1.293,198,2.343]],["body/modules/CompositePropagatorModule.html",[2,1.525,3,0.314,4,0.314,5,0.234,6,0.234,10,2.796,11,0.365,12,0.025,13,2.21,14,0.314,15,2.693,16,1.962,17,2.357,18,1.84,21,2.586,22,1.84,23,1.962,24,1.84,25,1.727,26,1.962,27,0.314,28,0.797,29,0.02,30,0.02,198,4.005,199,3.701,200,3.701,201,4.005,202,3.701]],["title/injectables/CompositePropagatorService.html",[31,0.689,201,2.343]],["body/injectables/CompositePropagatorService.html",[3,0.242,4,0.242,5,0.18,6,0.267,8,3.098,9,2.567,11,0.367,12,0.025,14,0.242,18,1.417,19,4.026,20,2.342,21,3.143,27,0.242,28,0.614,29,0.017,30,0.017,31,0.999,32,1.511,33,1.992,34,0.659,35,0.614,36,1.373,37,3.143,38,1.291,40,1.638,42,1.038,43,3.269,44,1.999,45,0.916,47,1.511,48,1.511,49,1.33,50,0.571,58,0.86,61,0.806,80,0.755,82,1.191,169,2.567,170,3.947,171,2.567,175,3.143,178,2.545,181,1.511,188,1.851,199,4.226,200,4.226,201,4.05,203,3.805,204,4.026,205,4.026,206,3.805,207,3.805,208,6.414,209,2.342,210,3.229,211,2.636,212,2.567,213,2.153,214,1.999,215,2.567,216,3.805,217,3.805,218,3.805,219,3.805,220,3.229,221,3.805,222,3.805,223,3.805,224,3.805]],["title/modules/ConsoleSpanExporterModule.html",[0,1.293,225,2.343]],["body/modules/ConsoleSpanExporterModule.html",[2,1.522,3,0.313,4,0.313,5,0.233,6,0.233,11,0.365,12,0.025,13,2.207,14,0.313,15,2.689,16,1.957,22,1.835,23,1.957,24,1.835,25,1.723,26,1.957,27,0.313,28,0.796,29,0.02,30,0.02,83,1.835,93,1.617,225,3.999,226,3.692,227,3.692,228,3.999,229,3.692,230,2.884,231,2.789]],["title/injectables/ConsoleSpanExporterService.html",[31,0.689,228,2.343]],["body/injectables/ConsoleSpanExporterService.html",[3,0.292,4,0.292,5,0.217,6,0.269,11,0.341,12,0.024,14,0.292,27,0.292,28,0.742,29,0.019,30,0.019,31,1.127,32,1.824,34,0.796,35,0.742,36,1.55,38,1.178,40,1.757,42,1.254,47,1.824,48,1.824,49,1.606,50,0.689,66,1.753,82,0.912,93,1.757,226,4.254,228,4.345,231,2.6,232,3.1,233,2.763,234,4.345,235,4.594,236,4.824,237,4.464,238,2.763,239,2.406,240,2.406]],["title/interfaces/CustomSpan.html",[51,0.56,74,1.214]],["body/interfaces/CustomSpan.html",[3,0.272,4,0.272,5,0.202,6,0.257,11,0.3,12,0.024,27,0.272,29,0.018,30,0.018,34,0.941,35,0.69,36,1.482,38,1.097,42,1.167,45,1.03,49,1.899,51,1.046,53,1.495,58,0.967,61,0.906,74,1.899,80,0.849,92,2.492,93,1.927,101,2.044,138,2.194,181,1.698,190,2.903,241,4.608,242,3.63,243,4.608,244,4.068,245,4.608,246,4.235,247,4.959,248,4.959,249,4.701,250,4.276,251,4.608,252,4.608,253,2.886]],["title/interfaces/IExporter.html",[51,0.56,238,1.689]],["body/interfaces/IExporter.html",[3,0.297,4,0.297,5,0.221,6,0.272,11,0.318,12,0.024,14,0.297,27,0.365,29,0.019,30,0.019,34,0.81,35,0.755,36,1.566,38,1.199,40,1.276,42,1.276,50,0.702,51,1.003,53,1.635,66,1.773,70,1.983,82,0.928,139,1.886,157,1.742,158,1.742,230,2.275,233,3.235,234,4.372,237,4.626,238,2.793,239,2.448,240,2.448,254,3.503,255,4.676,256,4.301,257,5.74,258,3.969]],["title/interfaces/IPropagator.html",[44,1.379,51,0.56]],["body/interfaces/IPropagator.html",[3,0.301,4,0.301,5,0.224,6,0.274,11,0.32,12,0.024,14,0.301,17,1.882,27,0.368,29,0.02,30,0.02,34,0.821,35,0.765,36,1.579,37,3.408,38,1.215,40,1.293,42,1.293,43,3.272,44,2.299,45,1.141,50,0.711,51,1.009,53,1.657,70,2.01,139,1.902,149,2.193,157,1.765,158,1.765,256,4.336,259,3.55,260,4.739,261,4.913,262,5.788,263,4.022]],["title/interfaces/InstrumentationConfig.html",[51,0.56,99,1.293]],["body/interfaces/InstrumentationConfig.html",[3,0.169,4,0.169,5,0.126,6,0.126,11,0.258,12,0.025,14,0.169,27,0.415,29,0.013,30,0.013,34,0.462,35,0.43,45,0.642,50,0.699,51,0.981,52,2.039,53,0.932,54,1.131,55,1.131,56,1.764,57,1.289,58,1.338,59,1.21,60,2.285,61,0.987,62,1.559,63,1.735,64,1.372,65,1.059,66,1.438,67,1.53,68,1.21,69,0.823,70,1.131,71,1.131,72,1.91,73,1.781,74,0.932,75,1.297,76,1.21,77,1.131,78,1.559,79,1.781,80,0.529,81,0.993,82,0.779,83,1.735,84,2.795,85,1.559,86,1.059,87,1.297,88,1.297,89,1.781,90,1.559,91,0.993,92,1.059,93,1.271,94,1.131,95,1.21,96,1.559,97,1.21,98,1.462,99,2.039,100,2.598,101,1.768,102,1.91,103,2.598,104,1.781,105,2.429,106,1.781,107,1.297,108,1.913,109,1.781,110,1.21,111,2.113,112,1.21,113,1.21,114,1.21,115,1.664,116,1.21,117,1.21,118,1.21,119,1.131,120,1.21,121,1.21,122,1.21,123,1.21,124,1.059,125,1.131,126,1.21,127,1.21,128,1.131,129,1.21,130,1.131,131,1.059,132,1.559,133,2.04,134,1.297,135,1.915,136,2.04,137,1.21,138,1.629,139,0.876,140,1.21,141,1.21,142,1.21,143,1.131,144,0.993,145,1.559,146,1.21,147,1.297,148,2.175,149,0.876,150,1.131,151,0.945,152,1.781,153,1.664,154,1.664,155,1.21,156,0.728,157,1.462,158,1.735,159,0.684,160,1.21,161,1.462,162,1.21,163,0.993,164,1.21,165,0.993,166,1.21]],["title/injectables/InstrumentationService.html",[31,0.689,264,2.136]],["body/injectables/InstrumentationService.html",[3,0.138,4,0.138,5,0.102,6,0.288,11,0.354,12,0.025,14,0.138,17,0.86,27,0.138,28,0.349,29,0.011,30,0.011,31,0.665,32,0.86,34,0.711,35,0.349,36,0.915,38,1.533,40,0.915,42,1.505,44,1.835,45,0.521,47,0.86,48,1.331,50,0.878,56,0.973,57,1.101,58,1.195,60,1.748,61,1.208,66,1.267,67,1.518,69,1.267,80,1.05,81,1.249,82,0.665,83,2.054,84,2.339,85,2.1,93,1.261,98,1.969,99,1.969,101,1.035,104,1.521,105,0.918,106,1.521,139,1.101,149,0.711,151,1.113,156,1.555,159,0.555,175,3.57,178,1.74,179,1.225,181,2.1,184,2.063,188,1.053,189,1.053,190,2.847,191,1.461,209,1.332,214,0.86,230,1.053,233,2.249,236,2.512,238,2.773,239,1.756,240,1.133,246,1.461,264,2.844,265,1.837,266,1.756,267,4.488,268,4.999,269,5.288,270,3.352,271,2.846,272,2.846,273,2.769,274,4.621,275,2.846,276,3.483,277,3.922,278,3.922,279,3.352,280,3.352,281,2.164,282,3.352,283,2.846,284,3.462,285,2.846,286,2.164,287,2.846,288,4.383,289,4.488,290,2.846,291,2.164,292,2.512,293,4.488,294,2.846,295,3.922,296,2.846,297,2.164,298,3.922,299,3.352,300,2.164,301,3.962,302,2.262,303,2.262,304,2.164,305,2.164,306,3.074,307,2.512,308,3.074,309,2.262,310,4.103,311,2.164,312,4.103,313,3.462,314,2.164,315,1.837,316,1.837,317,1.622,318,1.837,319,2.846,320,1.837,321,1.837,322,2.846,323,1.837,324,1.622,325,1.622,326,3.483,327,1.622,328,3.352,329,3.922,330,1.461,331,1.622,332,3.352,333,1.837,334,1.461,335,2.164,336,2.164,337,1.837,338,1.837,339,3.352,340,2.164,341,1.837,342,1.837,343,1.837,344,2.164,345,2.164,346,2.164,347,2.164,348,2.164,349,1.837,350,1.837,351,2.164,352,3.352,353,3.352,354,1.837,355,2.164,356,2.164,357,2.164,358,4.103,359,2.164,360,2.164,361,2.164]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.293,362,2.343]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.504,3,0.309,4,0.309,5,0.23,6,0.23,10,2.757,11,0.363,12,0.024,13,2.192,14,0.309,15,2.67,16,1.934,17,2.337,18,1.814,21,2.55,22,1.814,23,1.934,24,1.814,25,1.703,26,1.934,27,0.309,28,0.786,29,0.02,30,0.02,82,1.255,205,3.622,213,2.757,214,2.512,215,3.287,362,3.971,363,3.649]],["title/injectables/JaegerHttpTracePropagatorService.html",[31,0.689,205,2.136]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.246,4,0.246,5,0.183,6,0.286,11,0.356,12,0.025,14,0.246,18,1.441,27,0.246,28,0.624,29,0.017,30,0.017,31,1.01,32,1.536,33,2.025,34,0.882,35,0.624,36,1.388,37,3.163,38,1.458,40,1.648,42,1.055,43,3.286,44,2.021,45,0.931,46,2.61,47,1.536,48,1.536,49,1.352,50,0.58,57,1.672,58,0.874,60,1.779,61,1.078,64,1.779,80,0.768,82,1.323,135,1.779,150,2.411,151,1.552,156,1.648,159,0.992,175,2.977,178,2.411,179,2.189,181,1.536,188,1.882,189,1.882,190,1.882,191,2.61,205,3.718,213,2.189,214,2.647,215,4.077,273,2.61,363,4.526,364,4.319,365,3.867,366,5.327,367,2.61,368,3.867,369,3.867,370,3.867]],["title/interfaces/JaegerPropagatorConfig.html",[51,0.56,148,1.379]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.175,4,0.175,5,0.131,6,0.131,11,0.263,12,0.025,14,0.175,27,0.418,29,0.014,30,0.014,34,0.478,35,0.446,45,0.665,50,0.713,51,0.991,52,2.068,53,0.965,54,1.171,55,1.171,56,1.781,57,1.323,58,1.074,59,1.253,60,2.336,61,0.585,62,1.599,63,1.77,64,1.662,65,1.096,66,1.468,67,1.561,68,1.253,69,0.853,70,1.171,71,1.171,72,1.959,73,1.827,74,0.965,75,1.343,76,1.253,77,1.171,78,1.599,79,1.827,80,0.548,81,1.028,82,0.799,83,1.77,84,2.602,85,1.599,86,1.096,87,1.343,88,1.343,89,1.827,90,1.599,91,1.028,92,1.096,93,1.297,94,1.171,95,1.253,96,1.599,97,1.253,98,1.028,99,1.945,100,1.827,101,1.468,102,1.343,103,1.827,104,1.253,105,1.707,106,1.253,107,1.343,108,1.945,109,1.827,110,1.253,111,2.156,112,1.253,113,1.253,114,1.253,115,1.707,116,1.253,117,1.253,118,1.253,119,1.171,120,1.253,121,1.253,122,1.253,123,1.253,124,1.096,125,1.171,126,1.253,127,1.253,128,1.171,129,1.253,130,1.171,131,1.096,132,1.599,133,2.074,134,1.343,135,2.027,136,2.074,137,1.253,138,1.662,139,0.907,140,1.253,141,1.253,142,1.253,143,1.171,144,1.028,145,1.599,146,1.253,147,1.343,148,2.377,149,1.323,150,2.215,151,0.97,152,1.827,153,1.707,154,1.707,155,1.253,156,0.753,157,1.5,158,1.77,159,0.708,160,1.253,161,1.5,162,1.253,163,1.028,164,1.253,165,1.028,166,1.253]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.293,371,2.601]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.504,3,0.309,4,0.309,5,0.23,6,0.23,10,2.757,11,0.363,12,0.024,13,2.192,14,0.309,15,2.67,16,1.934,17,2.337,18,1.814,21,2.55,22,1.814,23,1.934,24,1.814,25,1.703,26,1.934,27,0.309,28,0.786,29,0.02,30,0.02,214,1.934,371,4.409,372,3.649,373,4.268,374,3.649,375,4.409,376,3.971,377,4.87]],["title/injectables/NoopTextMapPropagatorService.html",[31,0.689,376,2.343]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.289,4,0.289,5,0.215,6,0.267,11,0.355,12,0.024,14,0.289,18,1.693,27,0.289,28,0.734,29,0.019,30,0.019,31,1.12,32,1.805,33,2.38,34,0.788,35,0.734,36,1.539,37,3.359,38,1.165,39,3.857,40,1.75,42,1.24,43,3.453,44,2.24,45,1.095,47,1.805,48,1.805,49,1.589,50,0.682,214,2.24,372,4.226,373,4.328,374,4.226,375,4.226,376,3.806,378,5.64,379,6.721,380,4.544]],["title/interfaces/OpenTelemetryConfig.html",[51,0.56,151,0.836]],["body/interfaces/OpenTelemetryConfig.html",[3,0.164,4,0.164,5,0.122,6,0.122,11,0.252,12,0.025,14,0.164,27,0.412,29,0.013,30,0.013,34,0.446,35,0.416,45,0.62,50,0.685,51,0.971,52,2.363,53,0.9,54,1.092,55,1.092,56,1.7,57,1.257,58,1.467,59,1.168,60,2.27,61,1.241,62,1.519,63,1.7,64,1.338,65,1.023,66,1.409,67,1.499,68,1.168,69,0.795,70,1.092,71,1.092,72,1.861,73,1.735,74,0.9,75,1.253,76,1.168,77,1.092,78,2.006,79,1.735,80,0.511,81,0.959,82,0.759,83,1.7,84,2.551,85,1.519,86,1.023,87,1.253,88,1.253,89,1.735,90,1.519,91,0.959,92,1.023,93,1.245,94,1.092,95,1.168,96,1.519,97,1.168,98,0.959,99,2.329,100,1.735,101,1.409,102,1.253,103,1.735,104,1.168,105,1.622,106,1.168,107,1.253,108,2.329,109,1.735,110,1.168,111,2.07,112,1.168,113,1.168,114,1.168,115,1.622,116,1.168,117,1.168,118,1.168,119,1.092,120,1.168,121,1.168,122,1.168,123,1.168,124,1.023,125,1.092,126,1.168,127,1.168,128,1.092,129,1.168,130,1.092,131,1.023,132,2.006,133,2.006,134,1.253,135,1.887,136,2.006,137,1.168,138,1.596,139,0.846,140,1.168,141,1.168,142,1.168,143,1.092,144,0.959,145,2.006,146,1.168,147,1.253,148,2.52,149,0.846,150,1.092,151,1.217,152,2.566,153,2.398,154,2.398,155,1.168,156,0.703,157,1.425,158,1.7,159,0.66,160,1.168,161,1.425,162,1.168,163,0.959,164,1.168,165,0.959,166,1.168]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[381,1.965,382,2.343]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.101,4,0.101,5,0.075,6,0.279,11,0.342,12,0.025,14,0.101,16,0.632,17,0.632,27,0.101,28,0.54,29,0.009,30,0.009,31,0.521,34,0.799,35,0.257,36,0.716,38,1.487,40,1.259,42,1.441,44,1.54,45,0.632,47,0.632,48,1.042,49,0.557,50,0.816,51,0.423,56,1.126,57,0.862,58,1.229,60,1.169,61,1.119,64,1.356,66,1.033,67,0.862,69,1.033,71,1.644,74,1.949,76,0.722,80,1.048,81,0.977,82,0.521,83,0.977,85,1.042,90,1.042,91,1.246,92,1.54,93,1.714,94,1.418,101,1.197,115,0.675,119,0.675,125,0.675,130,0.675,135,0.917,138,1.356,139,1.274,149,1.409,151,0.934,156,1.331,158,1.718,159,0.408,161,1.718,163,0.593,165,0.593,175,3.442,178,1.644,179,0.901,181,1.937,184,1.614,188,0.775,189,1.276,190,2.713,209,0.98,211,1.374,214,0.632,230,0.775,233,1.276,236,1.965,238,1.887,239,1.374,240,0.834,243,3.291,244,2.905,246,4.326,247,4.265,248,3.213,249,3.213,253,1.075,267,3.64,271,2.226,272,2.226,275,3.291,276,3.291,277,3.291,278,3.291,284,1.965,285,1.352,287,1.352,288,3.456,289,2.226,290,2.226,292,1.965,293,3.916,294,2.226,295,3.291,296,2.226,301,2.905,302,3.292,303,1.77,306,2.506,307,1.965,308,2.506,309,1.77,313,2.905,319,2.226,320,1.352,321,1.352,322,2.226,323,1.352,324,1.193,325,1.193,326,2.839,327,1.193,334,1.075,337,1.352,338,1.352,341,1.352,342,1.352,343,1.352,349,2.226,350,1.352,354,1.352,367,1.075,381,1.485,382,1.77,383,1.592,384,5,385,1.352,386,2.226,387,3.878,388,2.623,389,3.344,390,2.839,391,2.623,392,5.097,393,2.623,394,2.623,395,2.623,396,2.226,397,2.623,398,1.592,399,1.592,400,1.592,401,3.291,402,2.623,403,2.623,404,2.226,405,2.623,406,1.592,407,2.226,408,2.623,409,1.592,410,1.592,411,2.623,412,2.226,413,1.592,414,1.592,415,1.592,416,3.916,417,3.878,418,1.592,419,2.623,420,1.965,421,1.614,422,3.344,423,1.592,424,1.592,425,1.352,426,3.878,427,1.592,428,2.623,429,2.226,430,1.592,431,1.592,432,1.352,433,1.592,434,3.878,435,1.592,436,2.623,437,2.623,438,1.592,439,1.965,440,1.592,441,1.592,442,1.592,443,1.352,444,1.592,445,1.592,446,2.623,447,1.592,448,1.592,449,1.592,450,1.592,451,2.623,452,1.592,453,1.592,454,1.592,455,2.623,456,1.352,457,1.592,458,1.193,459,1.193,460,1.592,461,1.592,462,1.592,463,1.592,464,1.592,465,2.905,466,2.623,467,2.623,468,2.623,469,1.592,470,2.623,471,1.592,472,1.592,473,2.623,474,1.965,475,1.592,476,2.623,477,1.592,478,1.592,479,1.592,480,1.592,481,1.592,482,1.592,483,1.592,484,1.592,485,1.592,486,1.592,487,1.592,488,1.592,489,1.592,490,1.592,491,1.592,492,2.623,493,1.592,494,1.592,495,1.592,496,1.592,497,1.592,498,1.592,499,1.592,500,1.592,501,1.592,502,1.592,503,1.592,504,1.592,505,1.592,506,1.592,507,1.352,508,1.592,509,3.344,510,1.352,511,1.592,512,1.592,513,0.98,514,1.592,515,1.592,516,1.592,517,1.592,518,3.344,519,1.592,520,1.592,521,1.592,522,1.592,523,1.592,524,1.592,525,1.592,526,1.592,527,2.623,528,1.592,529,1.592,530,1.592,531,1.592,532,1.592,533,1.592,534,1.592,535,1.592,536,1.592]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.293,537,2.343]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.326,3,0.273,4,0.273,5,0.203,6,0.258,11,0.359,12,0.025,13,2.226,14,0.273,22,1.599,23,1.705,24,1.599,25,1.903,26,1.705,27,0.273,28,0.693,29,0.018,30,0.018,36,1.172,38,1.101,40,1.172,42,1.172,50,0.644,58,1.351,61,0.91,63,1.599,80,0.852,124,1.705,151,1.514,156,1.631,159,1.396,176,4.078,178,1.821,181,1.705,189,2.089,253,2.898,273,2.898,303,2.898,382,3.673,513,2.643,537,4.376,538,5.443,539,4.294,540,3.645,541,4.62,542,4.294,543,5.073,544,4.62,545,4.62,546,4.62,547,4.294,548,4.294,549,4.62,550,3.645,551,3.645,552,3.645,553,3.217,554,3.645]],["title/modules/OtelColExporterModule.html",[0,1.293,555,2.343]],["body/modules/OtelColExporterModule.html",[2,1.529,3,0.315,4,0.315,5,0.234,6,0.234,11,0.365,12,0.025,13,2.214,14,0.315,15,2.696,16,1.966,22,1.844,23,1.966,24,1.844,25,1.731,26,1.966,27,0.315,28,0.799,29,0.02,30,0.02,227,3.709,229,3.709,230,2.892,231,2.802,555,4.011,556,3.709,557,4.011,558,3.709]],["title/interfaces/OtelCollectorConfig.html",[51,0.56,132,1.379]],["body/interfaces/OtelCollectorConfig.html",[3,0.167,4,0.167,5,0.124,6,0.124,11,0.255,12,0.025,14,0.167,27,0.414,29,0.013,30,0.013,34,0.455,35,0.424,45,0.632,50,0.692,51,0.976,52,2.026,53,0.917,54,1.112,55,1.112,56,1.755,57,1.274,58,1.42,59,1.19,60,2.346,61,1.08,62,1.54,63,1.718,64,1.356,65,1.042,66,1.574,67,1.674,68,1.19,69,0.81,70,1.112,71,1.112,72,2.48,73,1.759,74,0.917,75,1.276,76,1.19,77,1.112,78,1.54,79,1.759,80,0.521,81,0.977,82,0.77,83,1.718,84,2.564,85,1.54,86,1.042,87,1.276,88,1.276,89,1.759,90,1.54,91,0.977,92,1.042,93,1.259,94,1.112,95,1.19,96,1.832,97,1.19,98,0.977,99,1.898,100,1.759,101,1.425,102,1.276,103,1.759,104,1.19,105,1.644,106,1.19,107,1.276,108,1.898,109,1.759,110,1.19,111,2.093,112,1.19,113,1.19,114,1.19,115,1.644,116,1.19,117,1.19,118,1.19,119,1.112,120,1.19,121,1.19,122,1.19,123,1.19,124,1.042,125,1.112,126,1.19,127,1.19,128,1.112,129,1.19,130,1.112,131,1.54,132,1.832,133,2.402,134,1.887,135,2.06,136,2.402,137,2.093,138,2.115,139,1.274,140,1.759,141,1.759,142,1.759,143,2.161,144,0.977,145,1.54,146,1.19,147,1.276,148,2.16,149,0.862,150,1.112,151,0.934,152,1.759,153,1.644,154,1.644,155,1.19,156,0.716,157,1.444,158,1.718,159,0.673,160,1.19,161,1.444,162,1.19,163,0.977,164,1.19,165,0.977,166,1.19]],["title/components/OtelWebTracerComponent.html",[266,1.818,559,2.136]],["body/components/OtelWebTracerComponent.html",[3,0.256,4,0.256,5,0.191,6,0.274,11,0.289,12,0.025,14,0.256,27,0.256,28,0.651,29,0.018,30,0.018,34,0.906,35,0.651,36,1.426,38,1.34,42,1.1,49,1.828,58,0.911,61,0.854,80,1.151,98,2.161,178,2.46,181,1.601,190,1.961,264,4.182,266,3.474,284,3.916,298,4.437,302,3.527,334,3.527,396,3.421,416,3.421,421,2.481,510,3.421,559,3.778,560,5.227,561,4.031,562,4.924,563,4.346,564,3.421,565,5.398,566,5.801,567,4.031,568,6.138,569,6.138,570,4.031,571,4.031,572,4.031,573,3.421,574,4.031,575,4.031,576,4.031,577,4.031,578,4.031,579,4.031,580,4.031,581,5.227,582,5.227,583,4.031,584,6.138,585,4.031,586,4.031,587,4.031]],["title/modules/OtelWebTracerModule.html",[0,1.293,588,2.136]],["body/modules/OtelWebTracerModule.html",[2,1.279,3,0.263,4,0.263,5,0.196,6,0.252,11,0.355,12,0.025,13,2.189,14,0.263,22,1.981,24,1.543,25,1.448,27,0.263,28,0.669,29,0.018,30,0.018,36,1.13,38,1.062,40,1.13,42,1.13,50,0.622,58,1.328,61,0.878,80,0.822,124,2.113,151,1.494,156,1.604,159,1.364,176,3.985,178,1.756,181,1.645,189,2.015,264,3.274,273,2.795,513,2.549,540,3.515,541,4.515,543,4.988,544,4.515,549,4.515,550,3.515,551,3.515,552,3.515,553,3.103,554,3.515,559,4.291,563,3.103,573,3.515,588,4.238,589,3.011,590,3.515,591,3.515,592,3.515,593,4.515,594,3.103,595,3.103,596,5.319,597,4.142,598,4.142,599,4.142,600,4.142]],["title/injectables/OtelcolExporterService.html",[31,0.689,557,2.343]],["body/injectables/OtelcolExporterService.html",[3,0.247,4,0.247,5,0.184,6,0.286,11,0.357,12,0.025,14,0.247,27,0.247,28,0.92,29,0.017,30,0.017,31,1.014,32,1.544,34,0.885,35,0.628,36,1.393,38,1.462,40,1.652,42,1.061,47,1.544,48,1.544,49,1.36,50,0.584,56,1.482,57,1.678,58,1.154,61,1.082,80,0.772,82,0.772,133,1.544,136,1.544,138,1.36,143,1.649,151,1.554,153,2.418,156,1.652,159,0.997,175,2.985,178,2.567,179,2.201,181,1.544,188,1.892,189,1.892,190,1.892,214,1.544,231,2.201,232,2.624,234,4.085,237,3.847,238,2.485,239,2.036,240,2.036,443,3.301,556,4.536,557,4.085,601,5.106,602,3.889,603,6.054,604,5.701,605,5.106,606,3.889,607,3.826,608,3.826,609,3.889,610,3.889,611,3.889,612,3.889,613,3.889,614,3.889,615,3.889]],["title/modules/W3CTraceContextPropagatorModule.html",[0,1.293,616,2.343]],["body/modules/W3CTraceContextPropagatorModule.html",[2,1.504,3,0.309,4,0.309,5,0.23,6,0.23,10,2.757,11,0.363,12,0.024,13,2.192,14,0.309,15,2.67,16,1.934,17,2.337,18,1.814,21,2.55,22,1.814,23,1.934,24,1.814,25,1.703,26,1.934,27,0.309,28,0.786,29,0.02,30,0.02,82,1.255,204,3.622,210,4.134,211,3.312,212,3.287,616,3.971,617,3.649]],["title/injectables/W3CTraceContextPropagatorService.html",[31,0.689,204,2.136]],["body/injectables/W3CTraceContextPropagatorService.html",[3,0.289,4,0.289,5,0.215,6,0.267,11,0.355,12,0.024,14,0.289,18,1.693,27,0.289,28,0.734,29,0.019,30,0.019,31,1.12,32,1.805,33,2.38,34,0.788,35,0.734,36,1.539,37,3.359,38,1.165,40,1.75,42,1.24,43,3.453,44,2.24,45,1.095,47,1.805,48,1.805,49,1.589,50,0.682,82,1.273,204,4.238,209,2.797,211,3.359,212,3.806,364,3.857,617,4.226,618,5.64]],["title/interfaces/ZipkinCollectorConfig.html",[51,0.56,145,1.379]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.172,4,0.172,5,0.128,6,0.128,11,0.26,12,0.025,14,0.172,27,0.416,29,0.013,30,0.013,34,0.47,35,0.438,45,0.653,50,0.706,51,0.986,52,2.053,53,0.948,54,1.15,55,1.15,56,1.772,57,1.305,58,1.246,59,1.23,60,2.329,61,1.098,62,1.578,63,1.752,64,1.389,65,1.077,66,1.599,67,1.701,68,1.23,69,0.837,70,1.15,71,1.15,72,1.933,73,1.803,74,0.948,75,1.319,76,1.23,77,1.15,78,1.578,79,1.803,80,0.538,81,1.01,82,0.789,83,1.752,84,2.589,85,1.578,86,1.077,87,1.319,88,1.319,89,1.803,90,1.578,91,1.01,92,1.077,93,1.283,94,1.15,95,1.23,96,1.578,97,1.23,98,1.01,99,1.929,100,1.803,101,1.452,102,1.319,103,1.803,104,1.23,105,1.685,106,1.23,107,1.319,108,1.929,109,1.803,110,1.23,111,2.134,112,1.23,113,1.23,114,1.23,115,1.685,116,1.23,117,1.23,118,1.23,119,1.15,120,1.23,121,1.23,122,1.23,123,1.23,124,1.077,125,1.15,126,1.23,127,1.23,128,1.15,129,1.23,130,1.15,131,1.077,132,1.578,133,2.424,134,1.319,135,2.014,136,2.424,137,1.23,138,1.644,139,0.891,140,1.23,141,1.23,142,1.23,143,1.15,144,1.48,145,1.868,146,1.803,147,1.319,148,2.189,149,0.891,150,1.15,151,0.957,152,1.803,153,1.685,154,1.685,155,1.23,156,0.74,157,1.48,158,1.752,159,0.695,160,1.23,161,1.48,162,1.23,163,1.01,164,1.23,165,1.01,166,1.23,619,3.973]],["title/modules/ZipkinExporterModule.html",[0,1.293,620,2.343]],["body/modules/ZipkinExporterModule.html",[2,1.529,3,0.315,4,0.315,5,0.234,6,0.234,11,0.365,12,0.025,13,2.214,14,0.315,15,2.696,16,1.966,22,1.844,23,1.966,24,1.844,25,1.731,26,1.966,27,0.315,28,0.799,29,0.02,30,0.02,144,1.844,227,3.709,229,3.709,230,2.892,231,2.802,620,4.011,621,3.709,622,4.011]],["title/injectables/ZipkinExporterService.html",[31,0.689,622,2.343]],["body/injectables/ZipkinExporterService.html",[3,0.252,4,0.252,5,0.187,6,0.288,11,0.35,12,0.025,14,0.252,27,0.252,28,0.929,29,0.017,30,0.017,31,1.026,32,1.574,34,0.896,35,0.64,36,1.411,38,1.475,40,1.664,42,1.081,47,1.574,48,1.574,49,1.386,50,0.595,57,1.698,58,0.896,61,1.096,80,0.786,82,0.786,133,1.574,136,1.574,144,1.476,151,1.562,154,2.802,156,1.664,159,1.016,175,3.013,178,2.44,179,2.243,181,1.574,188,1.928,189,1.928,190,1.928,191,2.674,231,2.243,232,2.674,234,4.115,237,4.268,238,2.515,239,2.075,240,2.075,607,2.969,621,4.569,622,4.115,623,5.169,624,3.962,625,5.753,626,5.169,627,5.169,628,5.753,629,3.962,630,3.962,631,3.962,632,3.962]],["title/changelog.html",[633,1.786,634,1.786,635,2.463]],["body/changelog.html",[5,0.19,12,0.011,20,1.292,29,0.011,30,0.011,40,0.573,50,0.682,56,1.168,62,1.3,63,1.22,64,0.734,65,1.3,66,0.648,67,0.69,69,1.684,80,0.65,82,0.417,86,1.805,90,0.834,91,0.782,93,1.098,96,1.3,98,1.22,101,2.076,108,1.22,128,0.89,131,1.598,135,0.734,137,0.953,138,0.734,144,0.782,149,1.494,157,0.782,172,1.292,202,3.016,211,2.108,213,1.853,214,1.3,233,1.593,266,1.099,288,1.573,292,1.573,317,1.573,330,1.417,331,1.573,366,1.782,367,1.417,381,1.853,404,1.782,420,1.573,421,3.214,439,4.343,458,1.573,459,1.573,474,3.016,513,3.214,558,3.406,589,1.188,594,1.573,608,1.573,635,3.416,636,2.099,637,2.099,638,1.573,639,2.099,640,2.099,641,2.099,642,2.099,643,2.099,644,6.467,645,3.416,646,5.642,647,4.025,648,3.859,649,3.913,650,2.099,651,6.631,652,6.631,653,4.929,654,2.099,655,2.099,656,4.433,657,2.099,658,4.025,659,3.274,660,2.099,661,2.099,662,2.453,663,2.099,664,5.222,665,3.274,666,6.595,667,6.039,668,2.099,669,2.099,670,2.099,671,2.099,672,4.025,673,4.929,674,2.099,675,5.454,676,2.099,677,2.099,678,3.274,679,2.099,680,2.099,681,4.025,682,2.099,683,5.454,684,4.025,685,2.099,686,2.099,687,2.099,688,2.099,689,2.099,690,2.099,691,2.099,692,2.099,693,2.099,694,2.099,695,2.099,696,3.274,697,1.782,698,2.099,699,2.099,700,4.546,701,4.546,702,2.099,703,2.099,704,4.546,705,2.099,706,2.099,707,3.274,708,1.782,709,1.573,710,2.099,711,3.274,712,2.099,713,2.099,714,2.099,715,2.099,716,1.573,717,1.782,718,2.099,719,4.025,720,2.099,721,2.099,722,2.099,723,2.099,724,2.099,725,2.099,726,2.099,727,2.099,728,2.099,729,3.274,730,4.025,731,2.099,732,4.025,733,2.099,734,2.099,735,2.099,736,2.099,737,2.099,738,4.546,739,3.274,740,2.099,741,2.099,742,3.274,743,2.453,744,2.099,745,2.099,746,4.546,747,3.274,748,6.514,749,4.025,750,2.099,751,1.782,752,2.099,753,2.099,754,2.099,755,2.099,756,4.025,757,2.099,758,4.546,759,2.099,760,2.099,761,2.099,762,2.099,763,2.099,764,2.099,765,2.099,766,4.929,767,3.416,768,4.025,769,2.099,770,1.782,771,2.099,772,2.099,773,2.099,774,3.274,775,1.782,776,2.099,777,2.099,778,2.099,779,1.782,780,2.099,781,2.099,782,2.099,783,2.099,784,2.099,785,2.099,786,2.099,787,2.099,788,2.099,789,2.099,790,2.099,791,2.099,792,2.099,793,2.099,794,2.099,795,2.099,796,4.929,797,2.099,798,2.099,799,2.099,800,2.099,801,2.099,802,2.099,803,2.099,804,2.099,805,2.099,806,2.099,807,2.099,808,3.274,809,2.099,810,2.099,811,2.099,812,2.099,813,1.782,814,2.099,815,2.099,816,4.025,817,3.274,818,3.274,819,2.779,820,3.274,821,4.546,822,2.099,823,3.274,824,2.099,825,2.099,826,2.099,827,2.099,828,2.099,829,2.099,830,2.099,831,2.099,832,2.099,833,2.099,834,2.099,835,2.099,836,2.099,837,2.099,838,1.573,839,5.454,840,2.099,841,1.782,842,2.099,843,2.099,844,1.782,845,2.099,846,2.099,847,2.099,848,2.099,849,2.099,850,2.099,851,2.099,852,2.099,853,1.573,854,2.099,855,2.099,856,2.099,857,2.099,858,1.782,859,2.099,860,2.099,861,2.099,862,2.099,863,3.274,864,3.274,865,2.099,866,2.099,867,2.099,868,2.779,869,3.274,870,3.274,871,2.099,872,2.099,873,2.099,874,4.546,875,2.099,876,2.099,877,2.099,878,2.099,879,3.274,880,2.099,881,2.099]],["title/coverage.html",[882,4.017]],["body/coverage.html",[5,0.16,6,0.337,7,2.526,8,2.855,9,2.275,12,0.024,17,1.339,19,2.075,29,0.016,30,0.016,31,1.317,33,3.242,44,1.339,50,0.506,51,1.082,52,1.256,54,2.841,55,2.841,61,0.715,74,1.179,78,1.339,82,1.134,93,0.92,99,1.256,108,1.256,132,1.339,145,1.339,148,1.339,151,0.812,159,0.865,163,1.256,165,1.256,168,2.526,169,2.275,170,2.075,199,2.526,200,2.526,201,2.275,204,2.075,205,2.075,211,2.429,212,2.275,214,2.106,215,2.275,226,2.526,228,2.275,230,1.641,232,3.579,238,1.641,241,2.862,242,2.862,254,3.476,259,3.476,264,2.075,265,2.862,266,1.766,363,2.526,372,2.526,373,3.131,374,2.526,375,2.526,376,2.275,381,1.908,382,2.275,384,2.862,385,2.862,556,2.526,557,2.275,559,2.075,562,2.862,563,2.526,564,2.862,617,2.526,621,2.526,622,2.275,709,2.526,882,2.862,883,3.372,884,3.372,885,7.127,886,5.304,887,6.556,888,5.304,889,3.372,890,5.713,891,3.372,892,5.99,893,5.99,894,3.372,895,3.372,896,3.372,897,2.862]],["title/dependencies.html",[589,2.362,662,2.174]],["body/dependencies.html",[12,0.024,14,0.311,16,1.943,29,0.02,30,0.02,91,1.823,161,1.823,432,4.153,589,2.77,697,4.153,743,3.666,898,4.893,899,7.066,900,4.893,901,4.893,902,4.893,903,4.893,904,5.901,905,4.422,906,4.893,907,4.893,908,4.893,909,5.009,910,4.893,911,4.893,912,4.893,913,4.893,914,4.893,915,4.893,916,4.893,917,4.893]],["title/index.html",[35,0.468,633,1.786,634,1.786]],["body/index.html",[0,2.329,1,0.822,2,0.85,3,0.368,6,0.058,8,0.75,11,0.222,12,0.024,13,1.496,14,0.077,20,1.288,22,0.78,23,1.093,24,1.217,25,0.732,26,0.484,27,0.301,28,0.527,29,0.007,30,0.007,40,0.332,45,0.968,46,2.483,49,0.962,51,0.338,52,0.78,56,1.752,58,0.972,59,0.553,60,1.824,61,0.258,62,0.831,63,1.025,64,1.503,65,0.484,66,0.85,67,0.904,68,0.553,69,0.85,71,0.517,73,1.249,74,0.962,77,1.385,78,0.484,79,1.249,80,0.546,81,1.025,82,1.135,83,1.601,84,1.823,85,1.707,86,2.164,89,1.249,90,1.297,91,1.025,92,1.461,93,1.386,94,0.888,95,0.95,96,2.327,97,1.249,98,2.266,99,1.025,100,1.249,101,1.52,103,1.249,105,1.56,108,1.025,109,1.482,110,0.95,111,1.822,112,0.95,113,0.95,114,0.95,115,1.385,116,0.95,117,0.95,118,0.95,119,0.888,120,0.95,121,1.669,122,1.669,123,0.95,124,0.831,125,0.888,126,0.95,127,2.059,128,0.888,129,0.95,130,0.888,131,2.12,132,0.484,133,1.802,135,1.405,136,0.831,138,1.286,139,0.688,140,0.553,141,0.553,142,0.553,143,0.517,144,1.69,145,0.484,146,0.553,148,1.093,149,1.878,150,0.888,151,0.787,152,1.669,153,1.167,154,0.517,158,0.454,161,1.37,163,1.025,165,0.78,167,0.822,171,2.711,172,3.21,173,3.858,184,0.75,185,1.777,188,1.019,198,2.483,202,0.913,209,1.694,211,0.638,213,2.433,214,1.955,220,1.034,225,0.822,233,2.782,239,1.096,240,0.638,244,0.913,245,1.777,246,2.901,247,1.568,248,1.568,249,1.568,251,1.777,252,1.777,253,0.822,261,1.034,266,2.251,283,2.336,301,3.01,302,0.822,303,3.602,306,3.01,307,0.913,308,2.062,309,1.413,313,0.913,315,1.777,316,1.777,317,1.568,318,1.777,324,0.913,325,0.913,327,0.913,329,4.31,330,1.857,331,2.062,333,2.336,334,1.413,362,0.822,367,0.822,381,3.517,386,1.034,390,1.034,401,2.773,407,1.034,420,1.568,421,3.713,425,1.777,429,3.123,456,1.034,459,2.062,465,0.913,513,2.264,537,2.204,545,1.034,546,2.773,553,2.062,555,3.063,558,1.568,565,2.773,588,2.264,589,2.685,607,2.756,608,2.756,616,0.822,620,0.822,633,1.288,634,1.288,638,1.568,648,1.034,649,1.568,656,1.034,662,0.913,716,1.568,717,1.034,743,1.568,751,1.777,767,1.777,770,1.777,775,1.777,779,1.034,819,1.034,838,4.339,841,1.034,853,2.062,858,1.034,897,1.777,905,0.913,909,1.777,918,2.752,919,3.266,920,1.218,921,4.922,922,1.218,923,1.218,924,1.218,925,1.777,926,1.777,927,2.093,928,2.093,929,2.093,930,3.679,931,2.773,932,2.093,933,4.299,934,1.218,935,1.218,936,2.093,937,1.218,938,1.218,939,1.218,940,1.218,941,1.218,942,3.679,943,1.218,944,1.218,945,3.679,946,2.336,947,3.266,948,1.777,949,1.218,950,2.093,951,2.093,952,2.752,953,1.218,954,2.752,955,1.218,956,1.218,957,1.218,958,1.218,959,2.752,960,2.093,961,1.218,962,1.218,963,1.218,964,1.218,965,1.218,966,1.218,967,1.218,968,1.218,969,1.218,970,1.218,971,1.034,972,1.034,973,2.752,974,4.922,975,5.078,976,3.266,977,4.017,978,1.218,979,4.017,980,1.218,981,3.679,982,2.093,983,1.218,984,1.218,985,1.218,986,1.218,987,1.218,988,1.218,989,1.218,990,1.218,991,1.218,992,1.218,993,1.034,994,1.218,995,1.218,996,3.679,997,1.218,998,1.218,999,1.218,1000,1.218,1001,2.093,1002,1.218,1003,1.218,1004,1.218,1005,2.773,1006,1.218,1007,1.218,1008,1.218,1009,1.218,1010,1.218,1011,1.218,1012,1.218,1013,2.093,1014,1.218,1015,1.218,1016,1.218,1017,1.218,1018,1.218,1019,1.218,1020,1.218,1021,1.218,1022,1.413,1023,2.752,1024,2.093,1025,1.218,1026,1.218,1027,1.218,1028,1.034,1029,1.218,1030,1.218,1031,1.218,1032,1.218,1033,1.218,1034,1.218,1035,2.752,1036,2.752,1037,2.093,1038,2.093,1039,2.093,1040,2.093,1041,1.218,1042,1.218,1043,2.093,1044,2.093,1045,1.218,1046,1.218,1047,1.218,1048,1.218,1049,1.218,1050,1.218,1051,1.034,1052,1.034,1053,1.218,1054,3.679,1055,3.679,1056,3.679,1057,2.093,1058,4.922,1059,3.679,1060,3.123,1061,3.679,1062,3.679,1063,3.679,1064,2.093,1065,1.218,1066,1.218,1067,1.218,1068,1.218,1069,1.218,1070,1.218,1071,1.218,1072,1.218,1073,1.218,1074,1.218,1075,1.218,1076,1.218,1077,1.218,1078,1.218,1079,1.218,1080,1.218,1081,1.218,1082,1.218]],["title/license.html",[633,1.786,634,1.786,1083,2.463]],["body/license.html",[4,0.366,5,0.245,11,0.092,12,0.012,25,0.579,28,0.267,29,0.009,30,0.009,34,0.287,38,0.424,53,0.579,56,0.48,69,0.511,77,0.702,80,0.682,81,0.616,86,2.188,101,0.836,172,1.019,173,1.117,174,1.405,256,1.24,309,3.171,330,1.117,373,2.678,412,2.298,439,2.574,458,2.974,465,1.24,474,2.574,507,2.298,595,1.24,708,1.405,709,2.574,716,1.24,813,1.405,838,1.24,853,4.705,868,2.298,925,1.405,926,1.405,931,1.405,946,2.298,948,1.405,971,1.405,972,1.405,993,1.405,1005,1.405,1022,1.117,1028,1.405,1052,3.715,1060,2.298,1083,5.722,1084,3.969,1085,3.435,1086,1.655,1087,1.655,1088,1.655,1089,5.356,1090,5.86,1091,3.969,1092,4.377,1093,1.655,1094,6.03,1095,5.51,1096,1.655,1097,1.655,1098,5.51,1099,5.86,1100,4.699,1101,5.51,1102,2.707,1103,1.655,1104,4.377,1105,1.655,1106,1.655,1107,1.655,1108,3.969,1109,1.655,1110,5.356,1111,3.969,1112,2.707,1113,2.707,1114,1.655,1115,3.435,1116,2.707,1117,1.655,1118,1.655,1119,6.226,1120,3.969,1121,2.707,1122,1.655,1123,2.707,1124,1.655,1125,1.655,1126,1.655,1127,1.655,1128,1.655,1129,1.655,1130,1.655,1131,3.435,1132,1.655,1133,3.435,1134,2.707,1135,5.86,1136,1.655,1137,1.655,1138,4.699,1139,5.356,1140,3.969,1141,2.707,1142,3.435,1143,4.699,1144,1.655,1145,1.655,1146,1.655,1147,1.655,1148,1.655,1149,2.707,1150,1.655,1151,1.655,1152,1.655,1153,6.741,1154,3.435,1155,2.707,1156,1.655,1157,5.356,1158,2.707,1159,1.655,1160,4.377,1161,2.707,1162,1.655,1163,6.226,1164,1.655,1165,1.655,1166,1.655,1167,1.655,1168,1.655,1169,1.655,1170,2.707,1171,3.435,1172,1.655,1173,1.655,1174,1.655,1175,1.655,1176,3.969,1177,4.377,1178,1.655,1179,2.707,1180,3.969,1181,2.707,1182,1.655,1183,4.377,1184,2.707,1185,1.655,1186,1.655,1187,3.435,1188,1.655,1189,1.655,1190,1.655,1191,1.655,1192,2.707,1193,1.655,1194,1.655,1195,1.655,1196,3.435,1197,1.655,1198,1.655,1199,3.435,1200,1.655,1201,1.655,1202,1.655,1203,3.969,1204,5.51,1205,1.655,1206,1.655,1207,2.707,1208,5.175,1209,3.435,1210,2.707,1211,2.707,1212,2.707,1213,2.707,1214,3.435,1215,2.707,1216,3.435,1217,2.707,1218,2.707,1219,2.707,1220,2.707,1221,1.405,1222,2.707,1223,1.655,1224,1.655,1225,4.377,1226,4.96,1227,3.435,1228,2.707,1229,1.655,1230,1.655,1231,2.707,1232,2.707,1233,1.655,1234,3.435,1235,2.707,1236,1.655,1237,1.655,1238,1.655,1239,3.435,1240,1.655,1241,1.655,1242,1.655,1243,2.707,1244,2.707,1245,1.655,1246,1.655,1247,1.655,1248,1.655,1249,1.655,1250,1.655,1251,1.655,1252,2.707,1253,1.655,1254,1.655,1255,1.655,1256,1.655,1257,1.655,1258,1.655,1259,1.655,1260,1.655,1261,3.435,1262,1.655,1263,3.435,1264,1.655,1265,1.655,1266,1.655,1267,1.655,1268,5.175,1269,1.655,1270,1.655,1271,1.655,1272,1.655,1273,1.655,1274,3.969,1275,2.707,1276,3.969,1277,1.655,1278,1.655,1279,1.655,1280,1.655,1281,1.655,1282,3.435,1283,1.655,1284,1.655,1285,2.707,1286,2.707,1287,1.655,1288,1.655,1289,1.655,1290,2.707,1291,1.655,1292,1.655,1293,4.377,1294,1.655,1295,1.655,1296,1.655,1297,1.655,1298,1.655,1299,1.655,1300,3.435,1301,3.969,1302,1.655,1303,1.655,1304,1.655,1305,1.655,1306,1.655,1307,1.655,1308,1.655,1309,1.655,1310,1.655,1311,1.655,1312,2.707,1313,1.655,1314,1.655,1315,2.707,1316,1.655,1317,1.655,1318,3.969,1319,1.655,1320,1.655,1321,1.655,1322,1.655,1323,1.655,1324,1.655,1325,3.969,1326,3.435,1327,3.435,1328,3.435,1329,2.707,1330,2.707,1331,3.435,1332,2.707,1333,2.707,1334,2.707,1335,1.655,1336,1.655,1337,1.655,1338,1.655,1339,1.655,1340,1.655,1341,1.655,1342,1.655,1343,1.655,1344,2.707,1345,1.655,1346,1.655,1347,1.655,1348,1.655,1349,4.377,1350,1.655,1351,1.655,1352,1.655,1353,1.655,1354,1.655,1355,1.655,1356,1.655,1357,1.655,1358,4.377,1359,1.655,1360,1.655,1361,1.655,1362,1.655,1363,1.655,1364,1.655,1365,1.655,1366,1.655,1367,1.655,1368,1.655,1369,1.655,1370,1.655,1371,1.655,1372,1.655,1373,1.655,1374,1.655,1375,1.655,1376,3.435,1377,1.655,1378,1.655,1379,1.655,1380,1.405,1381,1.655,1382,2.707,1383,1.655,1384,1.655,1385,1.655,1386,1.655,1387,1.655,1388,1.655,1389,1.655,1390,1.655,1391,1.655,1392,1.655,1393,1.655,1394,1.655,1395,1.655,1396,1.655,1397,1.655,1398,2.707,1399,1.655,1400,1.655,1401,1.655,1402,2.707,1403,2.707,1404,1.655,1405,1.655,1406,1.655,1407,1.655,1408,1.655,1409,1.655,1410,1.655,1411,1.655,1412,1.655,1413,1.655,1414,1.655,1415,1.655,1416,1.655,1417,1.655,1418,1.655,1419,1.655,1420,1.655,1421,1.655,1422,1.655,1423,1.655]],["title/modules.html",[2,1.461]],["body/modules.html",[1,3.381,2,1.547,12,0.02,29,0.02,30,0.02,167,3.381,198,3.381,225,3.381,362,3.381,371,3.753,537,3.381,555,3.381,588,3.083,616,3.381,620,3.381,905,3.753,1022,4.785,1380,4.252,1424,7.09,1425,7.12,1426,5.01]],["title/overview.html",[1427,4.017]],["body/overview.html",[2,1.6,12,0.023,29,0.021,30,0.021,32,2.058,53,1.812,69,1.6,266,2.714,559,4.308,588,4.209,589,3.457,590,4.399,591,4.399,592,4.399,593,5.184,594,3.883,595,3.883,645,5.184,649,3.883,1427,4.399]],["title/todo.html",[633,1.786,634,1.786,1428,2.463]],["body/todo.html",[12,0.023,29,0.021,30,0.021,56,1.77,96,2.422,101,2.003,131,2.053,172,3.182,173,4.115,184,3.182,213,3.671,233,2.516,381,2.926,421,3.182,638,3.873,844,4.388,1022,3.489,1051,5.506,1221,4.388,1428,5.176,1429,5.17,1430,5.17,1431,5.17]],["title/miscellaneous/variables.html",[1432,2.463,1433,3.543]],["body/miscellaneous/variables.html",[6,0.296,12,0.024,17,2.302,29,0.02,30,0.02,35,0.767,50,1.002,54,2.014,55,2.762,66,2.062,67,2.194,93,1.582,135,1.661,149,1.56,155,2.155,156,1.296,157,2.426,159,1.486,160,2.155,161,2.159,162,2.155,163,2.159,164,2.155,165,2.159,166,2.155,230,2.82,233,2.311,254,3.558,258,4.031,259,3.558,263,4.031,1432,4.031,1433,4.031,1434,6.255,1435,4.75,1436,4.75]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":185,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{}}}],["0.10.0",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":917,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["0.21.0",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["0.24.0",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":949,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":964,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["1.19.0",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":649,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["10.0.3",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["10.2",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["10.2.4",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":645,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11/11",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":1077,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["14/14",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["1c7c0c0",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["1f22380",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":648,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":1085,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1087,"title":{},"body":{"license.html":{}}}],["2020",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":955,"title":{},"body":{"index.html":{}}}],["21",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["23e35d1",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":858,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":958,"title":{},"body":{"index.html":{}}}],["332baf7",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["3ae307e",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["40f33cc",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["412d2fd",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["41c8947",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["4318",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["4fcec62",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["5.0.3",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1126,"title":{},"body":{"license.html":{}}}],["5000",{"_index":957,"title":{},"body":{"index.html":{}}}],["51",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":956,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["5a7c375",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":819,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.6.3",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":965,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["80d2ada",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":813,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":923,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["_currentcontext",{"_index":515,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["a1746bf",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["a6307f2",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1305,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1379,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1376,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1079,"title":{},"body":{"index.html":{}}}],["act",{"_index":1386,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1106,"title":{},"body":{"license.html":{}}}],["action",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":979,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1356,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":587,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ad03334",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":101,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":245,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1292,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1030,"title":{},"body":{"index.html":{}}}],["addinstrumentationplugin",{"_index":270,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["addinstrumentationplugin(instrumentationconfig",{"_index":280,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["additional",{"_index":1293,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1178,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1374,"title":{},"body":{"license.html":{}}}],["again",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1244,"title":{},"body":{"license.html":{}}}],["agent",{"_index":779,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1389,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1328,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1309,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1249,"title":{},"body":{"license.html":{}}}],["allow",{"_index":514,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["allowedcommonjsdependencies",{"_index":1069,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1240,"title":{},"body":{"license.html":{}}}],["along",{"_index":1283,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1291,"title":{},"body":{"license.html":{}}}],["already",{"_index":551,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":1033,"title":{},"body":{"index.html":{}}}],["always",{"_index":294,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1081,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1059,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1383,"title":{},"body":{"license.html":{}}}],["angular",{"_index":421,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":1067,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":16,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":253,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":14,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":903,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1167,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1084,"title":{},"body":{"license.html":{}}}],["api",{"_index":367,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":520,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":519,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.spankind.client",{"_index":508,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.trace.setspan",{"_index":517,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["apis",{"_index":397,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":936,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":997,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":1011,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":986,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":996,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1288,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1161,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1326,"title":{},"body":{"license.html":{}}}],["application",{"_index":921,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1034,"title":{},"body":{"index.html":{}}}],["applies",{"_index":972,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1398,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":553,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1406,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1342,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1414,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1363,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1395,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1347,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1345,"title":{},"body":{"license.html":{}}}],["async",{"_index":969,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1399,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1159,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":138,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["attribution",{"_index":1274,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1102,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1154,"title":{},"body":{"license.html":{}}}],["available",{"_index":1022,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["aws",{"_index":20,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"changelog.html":{},"index.html":{}}}],["awsxraypropagator",{"_index":41,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["awsxraypropagatormodule",{"_index":1,"title":{"modules/AwsXrayPropagatorModule.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["awsxraypropagatorservice",{"_index":19,"title":{"injectables/AwsXrayPropagatorService.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b",{"_index":1264,"title":{},"body":{"license.html":{}}}],["b112065",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":171,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3e15af",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["b3injectencoding",{"_index":186,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":196,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":195,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":197,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":52,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":167,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":170,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":194,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["bad",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1430,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":1062,"title":{},"body":{"index.html":{}}}],["base",{"_index":240,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["based",{"_index":1028,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1330,"title":{},"body":{"license.html":{}}}],["batch",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":107,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":355,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":533,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":108,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":128,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1183,"title":{},"body":{"license.html":{}}}],["below",{"_index":1162,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1130,"title":{},"body":{"license.html":{}}}],["between",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1175,"title":{},"body":{"license.html":{}}}],["body",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1400,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":967,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1001,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1403,"title":{},"body":{"license.html":{}}}],["branch",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1425,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":905,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bufferconfig",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1271,"title":{},"body":{"license.html":{}}}],["c2b4209",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["calls",{"_index":395,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["cancelled",{"_index":129,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":518,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":522,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1266,"title":{},"body":{"license.html":{}}}],["catch",{"_index":937,"title":{},"body":{"index.html":{}}}],["cause",{"_index":1060,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1270,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":635,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1362,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1216,"title":{},"body":{"license.html":{}}}],["choices",{"_index":984,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1377,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1246,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1235,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["client",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["cluster_otelwebtracermodule",{"_index":590,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_declarations",{"_index":592,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_exports",{"_index":591,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["code",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":131,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":1065,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":1046,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":603,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":605,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1241,"title":{},"body":{"license.html":{}}}],["command",{"_index":1036,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1407,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1371,"title":{},"body":{"license.html":{}}}],["commit",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":78,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":152,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":1058,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":15,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["commons",{"_index":929,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1187,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":162,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1148,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1417,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1298,"title":{},"body":{"license.html":{}}}],["component",{"_index":266,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/otel",{"_index":599,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["component_template",{"_index":585,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["components",{"_index":560,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["compose",{"_index":1044,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":1047,"title":{},"body":{"index.html":{}}}],["composite",{"_index":202,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":208,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":198,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":201,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1368,"title":{},"body":{"license.html":{}}}],["concurencylimit",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["concurrencylimit",{"_index":143,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["conditions",{"_index":1090,"title":{},"body":{"license.html":{}}}],["config",{"_index":156,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":369,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":613,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":612,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":611,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":55,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":631,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":630,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configurable",{"_index":751,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/directive",{"_index":1012,"title":{},"body":{"index.html":{}}}],["configuration/opentelemetry",{"_index":189,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":945,"title":{},"body":{"index.html":{}}}],["configured",{"_index":626,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1361,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":411,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1385,"title":{},"body":{"license.html":{}}}],["console",{"_index":83,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":236,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":225,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":228,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1200,"title":{},"body":{"license.html":{}}}],["const",{"_index":158,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["constitutes",{"_index":1250,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":178,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(otlp_config",{"_index":191,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":203,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":179,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(instrumentationservice",{"_index":570,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructor(private",{"_index":578,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["construed",{"_index":1294,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1280,"title":{},"body":{"license.html":{}}}],["content",{"_index":926,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":925,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":211,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":267,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1121,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1177,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1239,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1300,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1204,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1251,"title":{},"body":{"license.html":{}}}],["control",{"_index":1108,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1109,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":325,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["conversions",{"_index":1150,"title":{},"body":{"license.html":{}}}],["convert",{"_index":287,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":271,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":285,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1258,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1263,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1099,"title":{},"body":{"license.html":{}}}],["core",{"_index":988,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1247,"title":{},"body":{"license.html":{}}}],["cours",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":882,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1029,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1245,"title":{},"body":{"license.html":{}}}],["current",{"_index":401,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":135,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["custom_span",{"_index":165,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1320,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":150,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customspan",{"_index":74,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":1024,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1277,"title":{},"body":{"license.html":{}}}],["d2ecbb8",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1358,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":512,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["date",{"_index":1255,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1017,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":22,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["declare",{"_index":1002,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1080,"title":{},"body":{"index.html":{}}}],["default",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1391,"title":{},"body":{"license.html":{}}}],["define",{"_index":139,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["defineb3encoding",{"_index":177,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":182,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":272,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":290,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1112,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1093,"title":{},"body":{"license.html":{}}}],["del",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1353,"title":{},"body":{"license.html":{}}}],["dep",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["dependence",{"_index":770,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":589,"title":{"dependencies.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":1066,"title":{},"body":{"index.html":{}}}],["depends",{"_index":1056,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":920,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":1163,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1164,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1321,"title":{},"body":{"license.html":{}}}],["description",{"_index":34,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1202,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1341,"title":{},"body":{"license.html":{}}}],["devconfiguration",{"_index":944,"title":{},"body":{"index.html":{}}}],["dgo",{"_index":1049,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel.all",{"_index":966,"title":{},"body":{"index.html":{}}}],["different",{"_index":1297,"title":{},"body":{"license.html":{}}}],["dir",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1115,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1117,"title":{},"body":{"license.html":{}}}],["directive",{"_index":583,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["directives",{"_index":586,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disable",{"_index":574,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disclaimer",{"_index":1324,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1197,"title":{},"body":{"license.html":{}}}],["display",{"_index":946,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1225,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1282,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1092,"title":{},"body":{"license.html":{}}}],["doc",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1043,"title":{},"body":{"index.html":{}}}],["docs",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":330,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":709,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["documentload",{"_index":103,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["documentloadinstrumentation",{"_index":104,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["dom",{"_index":396,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["don't",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1431,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":251,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":697,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e2e",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["ead3251",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1412,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1165,"title":{},"body":{"license.html":{}}}],["ee08e85",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["efa9083",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1168,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1184,"title":{},"body":{"license.html":{}}}],["element",{"_index":582,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["en",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":282,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["encapsulates",{"_index":394,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["enclosed",{"_index":1402,"title":{},"body":{"license.html":{}}}],["end",{"_index":1397,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1107,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1101,"title":{},"body":{"license.html":{}}}],["enum",{"_index":954,"title":{},"body":{"index.html":{}}}],["environment",{"_index":960,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":998,"title":{},"body":{"index.html":{}}}],["equal",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":513,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"changelog.html":{},"index.html":{}}}],["eslint",{"_index":510,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["eslint/component",{"_index":576,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["even",{"_index":1373,"title":{},"body":{"license.html":{}}}],["event",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":1038,"title":{},"body":{"index.html":{}}}],["except",{"_index":1227,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1199,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1215,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1310,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1348,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1132,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1014,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":1302,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":1073,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":233,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":231,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":227,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":229,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":232,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":623,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:18",{"_index":235,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:21",{"_index":601,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:36",{"_index":624,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:44",{"_index":602,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":335,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporterconfig",{"_index":628,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":987,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":277,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exporttimeoutmillis",{"_index":130,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["express",{"_index":1332,"title":{},"body":{"license.html":{}}}],["external",{"_index":938,"title":{},"body":{"index.html":{}}}],["f",{"_index":1045,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1369,"title":{},"body":{"license.html":{}}}],["fake",{"_index":990,"title":{},"body":{"index.html":{}}}],["false",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1378,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":105,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["fetch:(boolean",{"_index":980,"title":{},"body":{"index.html":{}}}],["fetchinstrumentation",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["ff373c0",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":627,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1401,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1124,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1256,"title":{},"body":{"license.html":{}}}],["files",{"_index":1142,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1337,"title":{},"body":{"license.html":{}}}],["fix",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1261,"title":{},"body":{"license.html":{}}}],["forget",{"_index":717,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1135,"title":{},"body":{"license.html":{}}}],["format",{"_index":1409,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":540,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":541,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1218,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1015,"title":{},"body":{"index.html":{}}}],["generally",{"_index":985,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1149,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":234,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":37,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["getting",{"_index":633,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":387,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":256,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":928,"title":{},"body":{"index.html":{}}}],["going",{"_index":1008,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1366,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1422,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1209,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1134,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1103,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1211,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1424,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1354,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1393,"title":{},"body":{"license.html":{}}}],["header",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":136,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":1051,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1210,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1306,"title":{},"body":{"license.html":{}}}],["hhttps://github.com/open",{"_index":978,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1392,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":403,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["html",{"_index":581,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["http",{"_index":214,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["http.interceptor",{"_index":548,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":385,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:108",{"_index":418,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:159",{"_index":400,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:168",{"_index":406,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:200",{"_index":410,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:220",{"_index":413,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:232",{"_index":414,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:252",{"_index":399,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:269",{"_index":398,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:281",{"_index":424,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:50",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:54",{"_index":427,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:58",{"_index":393,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http/build/src/types",{"_index":609,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["http://localhost:16686",{"_index":1050,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1040,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/api",{"_index":963,"title":{},"body":{"index.html":{}}}],["http://localhost:4318/v1/trace",{"_index":134,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["http://localhost:4318/v1/traces",{"_index":959,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":146,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1088,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1419,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":545,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":939,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":546,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":249,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":417,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":244,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":247,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":248,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":1063,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":974,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":924,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":262,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["id",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1413,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1405,"title":{},"body":{"license.html":{}}}],["ienvironment",{"_index":961,"title":{},"body":{"index.html":{}}}],["iexporter",{"_index":238,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["if(instrumentationconfig?.documentload",{"_index":359,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["if(instrumentationconfig?.fetch",{"_index":360,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["if(instrumentationconfig?.xmlhttprequest",{"_index":357,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["ii",{"_index":1122,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1129,"title":{},"body":{"license.html":{}}}],["implement",{"_index":1023,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":261,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":49,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1333,"title":{},"body":{"license.html":{}}}],["import",{"_index":11,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1198,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1364,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1360,"title":{},"body":{"license.html":{}}}],["include",{"_index":1171,"title":{},"body":{"license.html":{}}}],["included",{"_index":1158,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1278,"title":{},"body":{"license.html":{}}}],["including",{"_index":1139,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1181,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1207,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1394,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1390,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1381,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1156,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1116,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1131,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":174,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1289,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1238,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1252,"title":{},"body":{"license.html":{}}}],["init",{"_index":298,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["initialise",{"_index":407,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":274,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":388,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":405,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":188,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(awsxraypropagatorservice",{"_index":219,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(b3propagatorservice",{"_index":216,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(custom_span",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":218,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(otelcol_exporter",{"_index":337,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_propagator",{"_index":338,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otlp_config",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otlp_logger",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(w3ctracecontextpropagatorservice",{"_index":217,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["injectable",{"_index":31,"title":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":32,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":389,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":409,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":243,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":193,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":157,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":160,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":166,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":258,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":164,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":263,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":257,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":275,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":299,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":276,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["installation",{"_index":927,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1242,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationconfig",{"_index":99,"title":{"interfaces/InstrumentationConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["instrumentationoption",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationoptions",{"_index":268,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentations",{"_index":351,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":264,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["integration",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":1179,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":390,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":415,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":408,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":252,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":381,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":1055,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":539,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":542,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":547,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/component/otel",{"_index":562,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":241,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":384,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":538,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":596,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":226,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":254,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:13",{"_index":255,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":556,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":621,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":265,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:109",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:125",{"_index":281,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:144",{"_index":286,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:154",{"_index":291,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:35",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:40",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:45",{"_index":279,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:72",{"_index":297,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:94",{"_index":300,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/aws",{"_index":7,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":168,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":199,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":363,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":372,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":259,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:13",{"_index":260,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/w3c",{"_index":617,"title":{},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/public",{"_index":1003,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":383,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":51,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":44,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":1219,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1193,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["issue#41",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["issue#80",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":184,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":213,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":992,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":362,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":205,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":366,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{}}}],["jaegerpropagator(this.customheader",{"_index":370,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerpropagatorconfig",{"_index":148,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1086,"title":{},"body":{"license.html":{}}}],["jest",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":743,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/main/experimental/packages/opentelemetry",{"_index":976,"title":{},"body":{"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":977,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":918,"title":{},"body":{"index.html":{}}}],["key",{"_index":147,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":507,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["language",{"_index":1421,"title":{},"body":{"license.html":{}}}],["last",{"_index":983,"title":{},"body":{"index.html":{}}}],["law",{"_index":1327,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1248,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1104,"title":{},"body":{"license.html":{}}}],["legend",{"_index":580,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["level",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1349,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1357,"title":{},"body":{"license.html":{}}}],["library",{"_index":919,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1236,"title":{},"body":{"license.html":{}}}],["license",{"_index":1083,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1416,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1253,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1098,"title":{},"body":{"license.html":{}}}],["limit",{"_index":140,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["limitation",{"_index":1334,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1423,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1140,"title":{},"body":{"license.html":{}}}],["line",{"_index":575,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["link",{"_index":708,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":973,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1191,"title":{},"body":{"license.html":{}}}],["literal",{"_index":619,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1243,"title":{},"body":{"license.html":{}}}],["load",{"_index":331,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["loaded",{"_index":552,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["lock",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":161,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":1018,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":1019,"title":{},"body":{"index.html":{}}}],["logging",{"_index":775,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":953,"title":{},"body":{"index.html":{}}}],["long",{"_index":126,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1365,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1372,"title":{},"body":{"license.html":{}}}],["made",{"_index":1155,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1190,"title":{},"body":{"license.html":{}}}],["main",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1230,"title":{},"body":{"license.html":{}}}],["making",{"_index":1137,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1370,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1195,"title":{},"body":{"license.html":{}}}],["management",{"_index":1118,"title":{},"body":{"license.html":{}}}],["manager",{"_index":428,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":375,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1201,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1316,"title":{},"body":{"license.html":{}}}],["matching",{"_index":30,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxexportbatchsize",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1095,"title":{},"body":{"license.html":{}}}],["means",{"_index":1113,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1145,"title":{},"body":{"license.html":{}}}],["media",{"_index":1151,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1259,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1260,"title":{},"body":{"license.html":{}}}],["member",{"_index":1074,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1336,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1174,"title":{},"body":{"license.html":{}}}],["merge",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["metadata",{"_index":567,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["method",{"_index":420,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1432,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["modifications",{"_index":1138,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1265,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1290,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1295,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":543,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":173,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":59,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["named",{"_index":1010,"title":{},"body":{"index.html":{}}}],["names",{"_index":1315,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1071,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1237,"title":{},"body":{"license.html":{}}}],["need",{"_index":981,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1352,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1355,"title":{},"body":{"license.html":{}}}],["new",{"_index":50,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":416,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["next.handle(tracedreq).pipe",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":13,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngoninit",{"_index":569,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ngx",{"_index":909,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":930,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1072,"title":{},"body":{"index.html":{}}}],["non",{"_index":1214,"title":{},"body":{"license.html":{}}}],["noop",{"_index":377,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":989,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":378,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":379,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":371,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":376,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1287,"title":{},"body":{"license.html":{}}}],["notable",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":948,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1157,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1268,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1304,"title":{},"body":{"license.html":{}}}],["npm",{"_index":942,"title":{},"body":{"index.html":{}}}],["null",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":288,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["number(config.otelcolconfig?.concurrencylimit",{"_index":614,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(value",{"_index":361,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["o",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1143,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1382,"title":{},"body":{"license.html":{}}}],["observable",{"_index":422,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1418,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1231,"title":{},"body":{"license.html":{}}}],["offers",{"_index":934,"title":{},"body":{"index.html":{}}}],["ok",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":993,"title":{},"body":{"index.html":{},"license.html":{}}}],["oninit",{"_index":566,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["open",{"_index":1039,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":45,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/api/build/src/propagation/nooptextmappropagator",{"_index":380,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["opentelemetry/context",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":209,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":607,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":329,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":46,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["opentelemetry/resources",{"_index":327,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/sdk",{"_index":239,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/semantic",{"_index":324,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":1064,"title":{},"body":{"index.html":{}}}],["opentelemetry/web",{"_index":1057,"title":{},"body":{"index.html":{}}}],["opentelemetryconfig",{"_index":151,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":382,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":155,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":386,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":537,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":1000,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":1061,"title":{},"body":{"index.html":{}}}],["option",{"_index":1021,"title":{},"body":{"index.html":{}}}],["optional",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":1068,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1322,"title":{},"body":{"license.html":{}}}],["original",{"_index":412,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otel",{"_index":565,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["otelcol",{"_index":558,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_exporter",{"_index":230,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":17,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":153,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":555,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":557,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":132,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracercomponent",{"_index":559,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"overview.html":{}}}],["otelwebtracermodule",{"_index":588,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":1004,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":608,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{}}}],["otlp_config",{"_index":159,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otlp_logger",{"_index":163,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otlpexporterconfigbase",{"_index":604,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter",{"_index":606,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter(this.otelcolconfig",{"_index":615,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["out",{"_index":595,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1127,"title":{},"body":{"license.html":{}}}],["overide",{"_index":419,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1427,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1100,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1123,"title":{},"body":{"license.html":{}}}],["package",{"_index":662,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1411,"title":{},"body":{"license.html":{}}}],["param",{"_index":190,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":181,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":322,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":549,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["parser",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1276,"title":{},"body":{"license.html":{}}}],["partial",{"_index":137,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1338,"title":{},"body":{"license.html":{}}}],["party",{"_index":1286,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1226,"title":{},"body":{"license.html":{}}}],["peer",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["peerdependencies",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":141,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["percent",{"_index":1125,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":951,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1223,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1313,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1133,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1212,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1275,"title":{},"body":{"license.html":{}}}],["places",{"_index":1281,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":392,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":283,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["plugins",{"_index":941,"title":{},"body":{"index.html":{}}}],["port",{"_index":404,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["possibilities",{"_index":935,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1375,"title":{},"body":{"license.html":{}}}],["power",{"_index":1114,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1136,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1221,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1410,"title":{},"body":{"license.html":{}}}],["private",{"_index":175,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":292,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1317,"title":{},"body":{"license.html":{}}}],["production",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":844,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":638,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":1032,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":1031,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1267,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":982,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":149,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":18,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.module.ts",{"_index":10,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service",{"_index":21,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":33,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:15",{"_index":206,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":39,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":364,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":180,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":365,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":207,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:43",{"_index":183,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:55",{"_index":187,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/aws",{"_index":9,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/b3",{"_index":169,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":200,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":215,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":374,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":336,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagator/w3c",{"_index":212,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":220,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":278,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{}}}],["protocol",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":1160,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":47,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["provides",{"_index":1329,"title":{},"body":{"license.html":{}}}],["public",{"_index":273,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1222,"title":{},"body":{"license.html":{}}}],["publish",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1196,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1111,"title":{},"body":{"license.html":{}}}],["queue",{"_index":110,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ray",{"_index":995,"title":{},"body":{"index.html":{}}}],["reached",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1279,"title":{},"body":{"license.html":{}}}],["readme",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1396,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1319,"title":{},"body":{"license.html":{}}}],["received",{"_index":1205,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1262,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":971,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1344,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1257,"title":{},"body":{"license.html":{}}}],["redo",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1311,"title":{},"body":{"license.html":{}}}],["registerinstrumentations",{"_index":328,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1172,"title":{},"body":{"license.html":{}}}],["rename",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1404,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1169,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1189,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1220,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1323,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1091,"title":{},"body":{"license.html":{}}}],["request",{"_index":246,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":524,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":523,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":521,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":1026,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requests",{"_index":142,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["required",{"_index":1318,"title":{},"body":{"license.html":{}}}],["reset",{"_index":594,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"overview.html":{}}}],["resource",{"_index":326,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["resource.default().merge",{"_index":341,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["response",{"_index":92,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":1027,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1388,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1340,"title":{},"body":{"license.html":{}}}],["restart",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":931,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1144,"title":{},"body":{"license.html":{}}}],["results",{"_index":29,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1272,"title":{},"body":{"license.html":{}}}],["return",{"_index":40,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1166,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1384,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1346,"title":{},"body":{"license.html":{}}}],["root",{"_index":48,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1217,"title":{},"body":{"license.html":{}}}],["run",{"_index":127,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1005,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":296,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":295,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":293,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":950,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":841,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["save",{"_index":943,"title":{},"body":{"index.html":{}}}],["scheduleddelaymillis",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":402,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1229,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1096,"title":{},"body":{"license.html":{}}}],["see",{"_index":172,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["selector",{"_index":568,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["sell",{"_index":1232,"title":{},"body":{"license.html":{}}}],["semanticattributes",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_host",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_method",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_scheme",{"_index":501,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_status_code",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_target",{"_index":502,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_url",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_user_agent",{"_index":505,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes",{"_index":323,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes.service_name",{"_index":342,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["send",{"_index":947,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1053,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1188,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1173,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1308,"title":{},"body":{"license.html":{}}}],["service",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":79,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":573,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":425,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":391,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":423,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":525,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1094,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1128,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":356,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":354,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":534,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":111,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":544,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1141,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1387,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1339,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":242,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:16",{"_index":250,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.kind",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["span.recordexception",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":1025,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanattributes",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["spanexporter",{"_index":237,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spans",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.unset",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1359,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1420,"title":{},"body":{"license.html":{}}}],["stack",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":426,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1035,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":1037,"title":{},"body":{"index.html":{}}}],["started",{"_index":634,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1303,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1228,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1296,"title":{},"body":{"license.html":{}}}],["statements",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":176,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1269,"title":{},"body":{"license.html":{}}}],["status.code",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1367,"title":{},"body":{"license.html":{}}}],["string",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":868,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1224,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1299,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1182,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1180,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1206,"title":{},"body":{"license.html":{}}}],["such",{"_index":1119,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1307,"title":{},"body":{"license.html":{}}}],["support",{"_index":1380,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":1426,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":970,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1408,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1192,"title":{},"body":{"license.html":{}}}],["table",{"_index":897,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1429,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":975,"title":{},"body":{"index.html":{}}}],["template",{"_index":577,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["terminate",{"_index":1254,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1089,"title":{},"body":{"license.html":{}}}],["test",{"_index":656,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":373,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":43,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["theory",{"_index":1350,"title":{},"body":{"license.html":{}}}],["there's",{"_index":1042,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1176,"title":{},"body":{"license.html":{}}}],["third",{"_index":1285,"title":{},"body":{"license.html":{}}}],["this.addinstrumentationplugin(this.config.instrumentationconfig",{"_index":347,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.awsxraypropagatorservice.getpropagator",{"_index":224,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.b3propagatorconfig",{"_index":192,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":221,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":526,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":532,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.servicename",{"_index":343,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":349,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":516,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":509,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":530,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":528,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":531,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":529,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":368,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":535,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":536,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(this.config.commonconfig.probabilitysampler",{"_index":340,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice",{"_index":346,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.initspan(request",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":344,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode(this.config.commonconfig.production",{"_index":345,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions",{"_index":352,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions.push(new",{"_index":358,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationservice.initinstrumentation",{"_index":579,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":223,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.logbody",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":610,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":350,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":527,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":339,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor",{"_index":353,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":348,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.w3ctracecontextpropagatorservice.getpropagator",{"_index":222,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.zipkinconfig",{"_index":629,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1234,"title":{},"body":{"license.html":{}}}],["three",{"_index":940,"title":{},"body":{"index.html":{}}}],["through",{"_index":1097,"title":{},"body":{"license.html":{}}}],["throw",{"_index":550,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["time",{"_index":1006,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":1075,"title":{},"body":{"index.html":{}}}],["title",{"_index":1335,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1428,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":1013,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1351,"title":{},"body":{"license.html":{}}}],["touppercase",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["trace",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["tracerprovider",{"_index":269,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":952,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1194,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1314,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1273,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1312,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1233,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1146,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1147,"title":{},"body":{"license.html":{}}}],["tree",{"_index":561,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["trouble",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":932,"title":{},"body":{"index.html":{}}}],["true",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":1078,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":1070,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":1009,"title":{},"body":{"index.html":{}}}],["two",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":1076,"title":{},"body":{"index.html":{}}}],["types",{"_index":1152,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1082,"title":{},"body":{"index.html":{}}}],["typo",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":289,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["under",{"_index":1110,"title":{},"body":{"license.html":{}}}],["underscore",{"_index":511,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["union",{"_index":1105,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1301,"title":{},"body":{"license.html":{}}}],["unset",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1048,"title":{},"body":{"index.html":{}}}],["update",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":133,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":503,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":504,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urltest",{"_index":962,"title":{},"body":{"index.html":{}}}],["use",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":26,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":999,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":1020,"title":{},"body":{"index.html":{}}}],["useless",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":922,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":554,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["using",{"_index":1343,"title":{},"body":{"license.html":{}}}],["value",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":584,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["variable",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1433,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1185,"title":{},"body":{"license.html":{}}}],["version",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["version.json",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":968,"title":{},"body":{"index.html":{}}}],["void",{"_index":284,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["w3c",{"_index":210,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["w3ctracecontext",{"_index":991,"title":{},"body":{"index.html":{}}}],["w3ctracecontextpropagator",{"_index":618,"title":{},"body":{"injectables/W3CTraceContextPropagatorService.html":{}}}],["w3ctracecontextpropagatormodule",{"_index":616,"title":{"modules/W3CTraceContextPropagatorModule.html":{}},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["w3ctracecontextpropagatorservice",{"_index":204,"title":{"injectables/W3CTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["want",{"_index":1041,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1016,"title":{},"body":{"index.html":{}}}],["warning",{"_index":933,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1331,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1325,"title":{},"body":{"license.html":{}}}],["web",{"_index":334,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["webtracer.component",{"_index":600,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.component.ts",{"_index":564,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["webtracer.component.ts:13",{"_index":571,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.component.ts:25",{"_index":572,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.module.ts",{"_index":597,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.module.ts:24",{"_index":598,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer/otel",{"_index":563,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["webtracerprovider",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1284,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1120,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1170,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":506,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1208,"title":{},"body":{"license.html":{}}}],["without",{"_index":1052,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1153,"title":{},"body":{"license.html":{}}}],["works",{"_index":853,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1213,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1203,"title":{},"body":{"license.html":{}}}],["written",{"_index":1186,"title":{},"body":{"license.html":{}}}],["x",{"_index":994,"title":{},"body":{"index.html":{}}}],["xml",{"_index":333,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["xmlhttprequest",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":332,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["xmlhttrequestinstrumentation",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["xray",{"_index":8,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["xsrf",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":1054,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1007,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1415,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":144,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":145,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":154,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":625,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":632,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":620,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":622,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["zone.js",{"_index":916,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":593,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AwsXrayPropagatorModule.html":{"url":"modules/AwsXrayPropagatorModule.html","title":"module - AwsXrayPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsXrayPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\nimport { AwsXrayPropagatorService } from './aws-xray-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: AwsXrayPropagatorService }\n  ]\n})\nexport class AwsXrayPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsXrayPropagatorService.html":{"url":"injectables/AwsXrayPropagatorService.html","title":"injectable - AwsXrayPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AwsXrayPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AwsXrayPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an AwsXrayPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as AwsXrayPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { AWSXRayPropagator } from '@opentelemetry/propagator-aws-xray';\n/**\n * AwsXrayPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AwsXrayPropagatorService implements IPropagator {\n  /**\n   * Return an AwsXrayPropagator\n   *\n   * @return TextMapPropagator as AwsXrayPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new AWSXRayPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            multiHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        defineB3Encoding\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:43\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:55\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        b3PropagatorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         B3PropagatorConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                        \n                    \n\n            \n                \n                    B3PropagatorConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OTLP_CONFIG,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTLP_CONFIG) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   *\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   *\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exportTimeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxExportBatchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxQueueSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scheduledDelayMillis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            console\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            probabilitySampler\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, w3cTraceContextPropagatorService: W3CTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService, awsXrayPropagatorService: AwsXrayPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w3cTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        W3CTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsXrayPropagatorService\n                                                  \n                                                        \n                                                                        AwsXrayPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { W3CTraceContextPropagatorService } from '../w3c-trace-context-propagator/w3c-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\nimport { AwsXrayPropagatorService } from '../aws-xray-propagator/aws-xray-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(W3CTraceContextPropagatorService)\n    private w3cTraceContextPropagatorService: W3CTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService,\n    @Inject(AwsXrayPropagatorService)\n    private awsXrayPropagatorService: AwsXrayPropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   *\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.w3cTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n        this.awsXrayPropagatorService.getPropagator()\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:16\n                \n            \n\n\n            \n                \n                    To add Attributes in a Span during interception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpRequest\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpResponse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Span } from '@opentelemetry/api';\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   *\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getExporter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getPropagator\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   *\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InstrumentationConfig.html":{"url":"interfaces/InstrumentationConfig.html","title":"interface - InstrumentationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InstrumentationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Instrumentation Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            documentLoad\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            xmlHttpRequest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        documentLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        documentLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    documentLoad : to add DocumentLoadInstrumentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    fetch : to add FetchInstrumentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmlHttpRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmlHttpRequest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    xmlHttpRequest : to add XmlHttRequestInstrumentation\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                instrumentationOptions\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addInstrumentationPlugin\n                            \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addInstrumentationPlugin\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInstrumentationPlugin(instrumentationConfig: InstrumentationConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:125\n                \n            \n\n\n            \n                \n                    Enable plugin instrumentation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instrumentationConfig\n                                    \n                                                InstrumentationConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:144\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:154\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initInstrumentation\n                        \n                    \n                \n            \n            \n                \n                    \n                    initInstrumentation()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:72\n                \n            \n\n\n            \n                \n                    Init instrumentation on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:94\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:109\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ZoneContextManager()\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:40\n                        \n                    \n\n            \n                \n                    contextManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        instrumentationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstrumentationOption[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:45\n                        \n                    \n\n            \n                \n                    instrumentationOptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tracerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:35\n                        \n                    \n\n            \n                \n                    tracerProvider\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { Sampler } from '@opentelemetry/api';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationOption, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { DocumentLoadInstrumentation } from '@opentelemetry/instrumentation-document-load';\nimport { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor, BatchSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { OTLP_CONFIG, OpenTelemetryConfig, InstrumentationConfig } from '../../configuration/opentelemetry-config';\nimport { OTELCOL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\n\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider: WebTracerProvider;\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * instrumentationOptions\n   */\n  private instrumentationOptions: InstrumentationOption[];\n\n  /**\n   * Constructor\n   *\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OTLP_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator) {\n      this.tracerProvider = new WebTracerProvider({\n        sampler: this.defineProbabilitySampler(this.convertStringToNumber(this.config.commonConfig.probabilitySampler)),\n        resource: Resource.default().merge(\n          new Resource({\n            [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n          })\n        ),\n      });\n    }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.insertSpanProcessorProductionMode(this.config.commonConfig.production, this.exporterService);\n    this.addInstrumentationPlugin(this.config.instrumentationConfig);\n\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator()\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentationOptions,\n      tracerProvider: this.tracerProvider,\n    });\n\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   *\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracerProvider.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   *\n   * @param boolean production\n   * @param IExporter exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ) {\n    this.tracerProvider.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(exporter.getExporter())\n        : new SimpleSpanProcessor(exporter.getExporter())\n    );\n  }\n\n  /**\n   * Enable plugin instrumentation\n   *\n   * @param instrumentationConfig\n   */\n   private addInstrumentationPlugin(instrumentationConfig: InstrumentationConfig) {\n    this.instrumentationOptions = [];\n    if(instrumentationConfig?.xmlHttpRequest) {\n      this.instrumentationOptions.push(new XMLHttpRequestInstrumentation());\n    }\n    if(instrumentationConfig?.documentLoad) {\n      this.instrumentationOptions.push(new DocumentLoadInstrumentation());\n    }\n    if(instrumentationConfig?.fetch) {\n      this.instrumentationOptions.push(new FetchInstrumentation());\n    }\n  }\n\n  /**\n   * convert String to Number (or undefined)\n   *\n   * @param value\n   * @returns number or undefined\n   */\n  private convertStringToNumber(value: string): number {\n    return value !== undefined ? Number(value) : undefined;\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an JaegerPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerPropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                        \n                    \n\n            \n                \n                    custom Header\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\nimport { OTLP_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTLP_CONFIG) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerPropagator\n   *\n   * @return TextMapPropagator as JaegerPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerPropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { NoopTextMapPropagator } from '@opentelemetry/api/build/src/propagation/NoopTextMapPropagator';\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   *\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b3PropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSpanProcessorConfig\n                                        \n                                \n                                \n                                        \n                                            commonConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instrumentationConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jaegerPropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otelcolConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipkinConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instrumentationConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instrumentationConfig:         InstrumentationConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InstrumentationConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    instrumentationConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:58\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator injected\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define logger\n\n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customSpan interface to add attributes\n\n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                encapsulates all calls to DOM APIs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:269\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:252\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:159\n                \n            \n\n\n            \n                \n                    Get current scheme, hostname and port\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:168\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        injectContextAndHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:200\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:220\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:232\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:108\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCustomSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCustomSpan(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:281\n                \n            \n\n\n            \n                \n                    Set custom attributes in span with a CustomSpan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        Span\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StackContextManager\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                        \n                    \n\n            \n                \n                    context manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:58\n                        \n                    \n\n            \n                \n                    Log or not body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                        \n                    \n\n            \n                \n                    tracer\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, SpanStatusCode, DiagLogger } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/sdk-trace-web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  BufferConfig\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes, SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OTLP_CONFIG,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTLP_LOGGER, CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   *\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator injected\n   * @param logger define logger\n   * @param customSpan a customSpan interface to add attributes\n   * @param platformLocation encapsulates all calls to DOM APIs\n   */\n  constructor(\n    @Inject(OTLP_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTLP_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n      resource: Resource.default().merge(\n        new Resource({\n          [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n        })\n      ),\n    });\n    this.insertSpanProcessorProductionMode();\n    this.insertConsoleSpanExporter();\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   *\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager.disable(); //FIX - reinit contextManager for each http call\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.UNSET\n          });\n          this.setCustomSpan(span, request, event);\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n          this.setCustomSpan(span, request, event);\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   *\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        `${urlRequest.protocol.replace(':', '').toUpperCase()} ${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            [SemanticAttributes.HTTP_METHOD]: request.method,\n            [SemanticAttributes.HTTP_URL]: request.urlWithParams,\n            [SemanticAttributes.HTTP_HOST]: urlRequest.host,\n            [SemanticAttributes.HTTP_SCHEME]: urlRequest.protocol.replace(':', ''),\n            [SemanticAttributes.HTTP_TARGET]: urlRequest.pathname + urlRequest.search,\n            [SemanticAttributes.HTTP_USER_AGENT]: window.navigator.userAgent\n          },\n          kind: api.SpanKind.CLIENT,\n        },\n        this.contextManager.active()\n      );\n    /*eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_currentContext\"] }]*/\n    this.contextManager._currentContext = api.trace.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   *\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    };\n    this.tracer.addSpanProcessor(\n      this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter())\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n    return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OTLP_CONFIG,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OTLP_CONFIG, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attributes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            concurrencyLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     SpanAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpanAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        concurrencyLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concurrencyLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An optional limit on pending requests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:4318/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OtelWebTracerComponent.html":{"url":"components/OtelWebTracerComponent.html","title":"component - OtelWebTracerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OtelWebTracerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Otel Web Tracer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                otel-instrumentation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentationService: InstrumentationService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentationService\n                                                  \n                                                        \n                                                                        InstrumentationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                InstrumentationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:25\n                \n            \n\n\n            \n                \n                    Init Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InstrumentationService } from '../../services/instrumentation/instrumentation.service';\n\n\n/**\n * Otel Web Tracer Component\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'otel-instrumentation',\n  template: '',\n})\nexport class OtelWebTracerComponent implements OnInit {\n\n  /**\n   * Constructor\n   *\n   * @param instrumentationService InstrumentationService\n   */\n  constructor(private instrumentationService: InstrumentationService) { }\n\n  /**\n   * Init Component\n   */\n  ngOnInit(): void {\n   this.instrumentationService.initInstrumentation();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OtelWebTracerComponent', 'selector': 'otel-instrumentation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OtelWebTracerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OTLP_CONFIG,\n} from './configuration/opentelemetry-config';\nimport { OtelWebTracerComponent } from './component/otel-webtracer/otel-webtracer.component';\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\n@NgModule({\n  declarations: [OtelWebTracerComponent],\n  exports: [OtelWebTracerComponent]\n})\nexport class OtelWebTracerModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        { provide: OTLP_CONFIG, useValue: config },\n        InstrumentationService\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:44\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        otelcolConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OTLPExporterConfigBase\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                        \n                    \n\n            \n                \n                    CollectorExporterConfigBase\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport {\n  OpenTelemetryConfig,\n  OTLP_CONFIG\n} from '../../../configuration/opentelemetry-config';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-otlp-http';\nimport { OTLPExporterConfigBase } from '@opentelemetry/exporter-otlp-http/build/src/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: OTLPExporterConfigBase;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OTLP_CONFIG) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      concurrencyLimit: Number(config.otelcolConfig?.concurrencyLimit),\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   *\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new OTLPTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/W3CTraceContextPropagatorModule.html":{"url":"modules/W3CTraceContextPropagatorModule.html","title":"module - W3CTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    W3CTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { W3CTraceContextPropagatorService } from './w3c-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: W3CTraceContextPropagatorService }\n  ]\n})\nexport class W3CTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/W3CTraceContextPropagatorService.html":{"url":"injectables/W3CTraceContextPropagatorService.html","title":"injectable - W3CTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  W3CTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                W3CTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts:18\n                \n            \n\n\n            \n                \n                    Return an W3CTraceContextPropagatorService\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as W3CTraceContextPropagatorService\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n/**\n * W3CTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class W3CTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an W3CTraceContextPropagatorService\n   *\n   * @return TextMapPropagator as W3CTraceContextPropagatorService\n   */\n  getPropagator(): TextMapPropagator {\n    return new W3CTraceContextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTLP_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTLP_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        zipkinConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExporterConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                        \n                    \n\n            \n                \n                    zipkinConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { OpenTelemetryConfig, OTLP_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTLP_CONFIG) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n1.0.0 (2021-11-09)\n0.25.0-2 (2021-10-24)\nBug Fixes\n\nreview aws propagator integration (4fcec62)\ntest (3ae307e)\n\n0.25.0-1 (2021-10-01)\nBug Fixes\n\nissue#80: old reference package (ee08e85), closes issue#80\n\n0.25.0 (2021-09-17)\nFeatures\n\nupdate collector and add new default http port collector (4318) (5a7c375)\n\nBug Fixes\n\nadd test for instrumentation (23e35d1)\npeer dependencies version number (41c8947)\nreturn to 0.24.0 in document-load to release (1f22380)\n\n0.24.0-1 (2021-08-04)\nBug Fixes\n\nbad version on peerDependencies (c2b4209)\n\n0.24.0 (2021-08-01)\n0.23.0 (2021-07-08)\n0.22.0 (2021-06-17)\nBug Fixes\n\nreadme (a6307f2)\n\n0.21.0 (2021-06-11)\n0.20.0 (2021-06-07)\nFeatures\n\nadd concurencyLimit (40f33cc)\n\nBug Fixes\n\nspan.kind to client value and status.code to unset (#51) (b3e15af)\nissue#41: add custom dynamic span attributes (1c7c0c0), closes issue#41\n\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n            \n            component\n            OtelWebTracerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            InstrumentationConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTLP_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTLP_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n            \n            injectable\n            AwsXrayPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n            \n            injectable\n            W3CTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.4\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.2.4\n        \n            @angular/compiler : ^10.2.4\n        \n            @angular/core : ^10.2.4\n        \n            @angular/forms : ^10.2.4\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.2.4\n        \n            @angular/platform-browser-dynamic : ^10.2.4\n        \n            @angular/router : ^10.2.4\n        \n            body-parser : ^1.19.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^5.0.3\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nInstrumentation Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\n\n\nComponent otel-instrumentation\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with three web plugins : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n\n\n\nInstallation\nWith npm :\nnpm i @jufab/opentelemetry-angular-interceptor && npm i @opentelemetry/api @opentelemetry/sdk-trace-web @opentelemetry/sdk-trace-base @opentelemetry/core @opentelemetry/semantic-conventions @opentelemetry/resources @opentelemetry/exporter-otlp-http @opentelemetry/exporter-zipkin @opentelemetry/propagator-b3 @opentelemetry/propagator-jaeger @opentelemetry/context-zone-peer-dep @opentelemetry/instrumentation @opentelemetry/instrumentation-document-load @opentelemetry/instrumentation-fetch @opentelemetry/instrumentation-xml-http-request @opentelemetry/propagator-aws-xray --save-devConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n  instrumentationConfig?: InstrumentationConfig;\n}Example global Configuration\nFrom the interceptor-example\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nexport const environment: IEnvironment = {\n  production: false,\n  urlTest: 'http://localhost:4200/api',\n  openTelemetryConfig: {\n    commonConfig: {\n      console: true, // Display trace on console\n      production: false, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: DiagLogLevel.ALL //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', // URL of opentelemetry collector\n    },\n    instrumentationConfig: {\n      xmlHttpRequest: true,\n      fetch: true,\n      documentLoad: true,\n    }\n  }\n};\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:4318/v1/traces)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nconcurrencyLimit (string) : An optional limit on pending requests (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : hhttps://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nInstrumentation Configuration\nthis configuration is only for the instrumentation Mode\n\nxmlHttpRequest: (boolean) Activate XmlHttpRequest plugin\nfetch:(boolean) Activate fetch plugin\ndocumentLoad: (boolean) Activate documentLoad plugin\n\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 3 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 6 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nW3CTraceContextPropagatorModule : Use W3CTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nAwsXrayPropagatorModule : Use AWS X-Ray propagator\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation\n...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nComponent otel-instrumentation\nA component named otel-instrumentation must be add in your application.\nIn instrumentation-example, this component is in app.component.html like this :\n...\n\n...there is no configuration/directive need : all is in OtelWebTracerModule\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTLP_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTLP_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTLP_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n\nspan : Current span, you can set or get attributes\nrequest : Current request in interceptor\nresponse : Current response in interceptor\n\nImplement CustomSpan class like : \nclass CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with CUSTOM_SPAN :\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]\nYou can see an example in the interceptor-example.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nnpm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nnpm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AwsXrayPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        W3CTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n \nAdd more configuration for OpenTelemetry-collector : See here  \n\n \nJaeger  \n\n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here\n\n\n \nPrepare baggage here\n\n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                        \n                            OTLP_CONFIG   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTLP_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CUSTOM_SPAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.custom-span')\n                    \n                \n\n            \n                \n                    custom span\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTLP_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('opentelemetry.config')\n                    \n                \n\n            \n                \n                    OpenTelemetryInjectConfig : Config injection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTLP_LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.logger')\n                    \n                \n\n            \n                \n                    Logger : injection for a logger compatible\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTELCOL_EXPORTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.exporter')\n                    \n                \n\n            \n                \n                    injection for a Exporter\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTELCOL_PROPAGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.propagator')\n                    \n                \n\n            \n                \n                    injection for a propagator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
