var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/B3PropagatorModule.html",[0,1.156,1,2.035]],["body/modules/B3PropagatorModule.html",[1,3.329,2,1.414,3,0.426,4,0.426,5,0.314,6,0.369,7,3.057,8,2.71,9,2.433,10,0.512,11,0.034,12,2.061,13,0.369,14,2.462,15,1.831,16,2.989,17,3.057,18,2.202,19,2.061,20,1.539,21,1.539,22,1.678,23,1.539,24,1.539,25,1.831,26,0.426,27,0.757,28,0.022,29,0.027,30,0.022]],["title/injectables/B3PropagatorService.html",[16,1.827,31,0.687]],["body/injectables/B3PropagatorService.html",[3,0.392,4,0.392,5,0.288,6,0.43,7,3.562,8,3.157,10,0.496,11,0.034,13,0.339,16,3.274,20,1.414,26,0.392,27,0.695,28,0.02,29,0.025,30,0.02,31,1.066,32,1.682,33,2.023,34,0.92,35,0.84,36,1.647,37,2.963,38,1.193,39,3.235,40,1.902,41,5.999,42,1.299,43,3.058,44,1.955,45,1.095,46,2.234,47,1.682,48,1.682,49,1.541,50,0.695]],["title/interfaces/CommonCollectorConfig.html",[51,0.821,52,1.505]],["body/interfaces/CommonCollectorConfig.html",[3,0.277,4,0.277,5,0.204,6,0.24,10,0.341,11,0.034,13,0.24,26,0.547,28,0.014,29,0.02,30,0.014,34,0.651,35,0.595,45,0.775,50,0.699,51,1.278,52,2.152,53,1.19,54,1.431,55,1.431,56,2.033,57,1.799,58,1.85,59,1.974,60,2.702,61,2.824,62,2.824,63,2.824,64,3.063,65,1.799,66,1.518,67,2.969,68,1.85,69,2.502,70,2.502,71,1.305,72,1.85,73,1.431,74,1.966,75,1.431,76,1.09,77,1.85,78,2.033,79,1.09,80,1.431,81,1.581,82,2.364,83,2.033,84,2.246,85,2.152,86,1.303,87,2.474,88,1.19,89,1.09,90,1.431,91,1.305,92,2.246,93,2.033,94,1.421,95,1.09,96,1.691,97,1.85,98,1.581,99,1.581,100,1.19,101,1.581]],["title/modules/CompositePropagatorModule.html",[0,1.156,102,2.035]],["body/modules/CompositePropagatorModule.html",[2,1.414,3,0.426,4,0.426,5,0.314,6,0.369,9,2.433,10,0.512,11,0.034,12,2.061,13,0.369,14,2.462,15,1.831,18,2.202,19,2.061,20,1.539,21,1.539,22,1.678,23,1.539,24,1.539,25,1.831,26,0.426,27,0.757,28,0.022,29,0.027,30,0.022,102,3.329,103,3.057,104,3.057,105,3.329,106,3.522]],["title/injectables/CompositePropagatorService.html",[31,0.687,105,2.035]],["body/injectables/CompositePropagatorService.html",[3,0.318,4,0.318,5,0.234,6,0.426,8,2.019,10,0.505,11,0.034,13,0.275,16,3.257,17,2.278,18,2.543,20,1.147,26,0.318,27,0.564,28,0.016,29,0.022,30,0.016,31,0.929,32,1.365,33,1.641,34,0.746,35,0.682,36,1.435,37,2.73,38,1.318,40,1.753,42,1.053,43,2.857,44,1.703,45,0.888,46,1.813,47,1.365,48,1.365,49,1.25,50,0.564,59,1.147,65,1.147,66,1.61,71,1.053,103,3.53,104,3.53,105,3.36,107,3.016,108,3.15,109,3.333,110,3.333,111,3.15,112,1.813,113,2.624,114,5.66,115,1.813,116,2.314,117,1.859,118,2.019,119,1.493,120,2.019,121,3.15,122,3.129,123,3.15,124,3.15,125,2.624,126,3.15,127,3.15,128,3.15]],["title/modules/ConsoleSpanExporterModule.html",[0,1.156,129,2.035]],["body/modules/ConsoleSpanExporterModule.html",[2,1.409,3,0.425,4,0.425,5,0.313,6,0.368,10,0.511,11,0.034,12,2.057,13,0.368,14,2.458,15,1.826,21,1.535,22,1.672,23,1.535,24,1.535,25,1.826,26,0.425,27,0.755,28,0.022,29,0.027,30,0.022,60,1.998,129,3.323,130,3.047,131,2.983,132,3.511,133,3.323,134,3.511,135,2.7,136,2.701]],["title/injectables/ConsoleSpanExporterService.html",[31,0.687,133,2.035]],["body/injectables/ConsoleSpanExporterService.html",[3,0.391,4,0.391,5,0.287,6,0.429,10,0.471,11,0.034,13,0.338,26,0.391,27,0.693,28,0.02,29,0.025,30,0.02,31,1.064,32,1.677,34,0.917,35,0.838,36,1.644,38,1.189,40,1.9,42,1.295,47,1.677,48,1.677,49,1.537,50,0.693,79,1.951,130,3.555,131,3.27,133,3.643,136,2.482,137,2.8,138,2.331,139,4.109,140,3.872,141,4.734,142,3.76,143,2.561,144,2.228]],["title/modules/HttpTraceContextPropagatorModule.html",[0,1.156,145,2.035]],["body/modules/HttpTraceContextPropagatorModule.html",[2,1.387,3,0.419,4,0.419,5,0.308,6,0.362,9,2.387,10,0.508,11,0.034,12,2.037,13,0.362,14,2.434,15,1.797,18,2.161,19,2.037,20,1.511,21,1.511,22,1.646,23,1.511,24,1.511,25,1.797,26,0.419,27,0.743,28,0.021,29,0.026,30,0.021,66,1.712,109,2.954,116,1.967,117,2.415,118,2.659,145,3.291,146,3]],["title/injectables/HttpTraceContextPropagatorService.html",[31,0.687,109,1.827]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.383,4,0.383,5,0.282,6,0.424,10,0.492,11,0.034,13,0.331,20,1.382,26,0.383,27,0.679,28,0.02,29,0.025,30,0.02,31,1.051,32,1.644,33,1.977,34,0.899,35,0.821,36,1.623,37,2.938,38,1.166,39,3.161,40,1.886,42,1.269,43,3.037,44,1.926,45,1.07,46,2.184,47,1.644,48,1.644,49,1.506,50,0.679,66,1.733,109,3.246,117,2.444,118,3.111,146,3.51,147,4.968]],["title/interfaces/IExporter.html",[51,0.821,143,1.654]],["body/interfaces/IExporter.html",[3,0.4,4,0.4,5,0.294,6,0.435,10,0.435,11,0.033,13,0.346,26,0.503,28,0.02,29,0.026,30,0.02,34,0.939,35,0.858,36,1.669,38,1.218,40,1.326,42,1.326,50,0.71,51,1.413,53,1.717,73,2.065,79,1.98,86,2.366,96,1.717,97,1.879,135,2.065,138,2.801,139,4.145,142,3.924,143,2.599,144,2.281,148,2.866,149,3.964,150,3.608,151,4.99,152,3.302]],["title/interfaces/IPropagator.html",[44,1.26,51,0.821]],["body/interfaces/IPropagator.html",[3,0.405,4,0.405,5,0.298,6,0.439,10,0.439,11,0.033,13,0.35,19,1.592,26,0.507,28,0.021,29,0.026,30,0.021,34,0.95,35,0.868,36,1.681,37,2.998,38,1.232,40,1.341,42,1.341,43,2.86,44,1.995,45,1.131,50,0.718,51,1.42,53,1.738,73,2.089,86,2.383,89,2.353,96,1.738,97,1.902,150,3.636,153,2.901,154,4.012,155,4.188,156,5.027,157,3.342]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.156,158,2.035]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.387,3,0.419,4,0.419,5,0.308,6,0.362,9,2.387,10,0.508,11,0.034,12,2.037,13,0.362,14,2.434,15,1.797,18,2.161,19,2.037,20,1.511,21,1.511,22,1.646,23,1.511,24,1.511,25,1.797,26,0.419,27,0.743,28,0.021,29,0.026,30,0.021,66,1.712,110,2.954,116,2.643,119,1.967,120,2.659,158,3.291,159,3]],["title/injectables/JaegerHttpTracePropagatorService.html",[31,0.687,110,1.827]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.312,4,0.312,5,0.229,6,0.454,10,0.491,11,0.034,13,0.27,20,1.126,26,0.312,27,0.554,28,0.016,29,0.022,30,0.016,31,0.917,32,1.339,33,1.61,34,1.004,35,0.669,36,1.417,37,2.709,38,1.485,40,1.739,42,1.034,43,2.838,44,1.682,45,0.872,47,1.339,48,1.339,49,1.227,50,0.554,58,2.009,59,1.126,65,1.543,66,1.803,67,2.207,71,1.034,82,2.207,88,1.836,90,2.518,91,1.882,94,1.126,95,2.064,107,2.782,110,2.993,112,1.779,113,2.576,115,1.779,116,2.782,119,1.466,120,3.334,122,3.099,159,3.761,160,2.236,161,4.237,162,5.449,163,2.236,164,1.982,165,2.576,166,2.576,167,2.236,168,3.092,169,3.092,170,3.092,171,3.092]],["title/interfaces/JaegerPropagatorConfig.html",[51,0.821,87,1.505]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.301,4,0.301,5,0.222,6,0.261,10,0.361,11,0.034,13,0.261,26,0.562,28,0.015,29,0.021,30,0.015,34,0.708,35,0.647,45,0.843,50,0.741,51,1.326,52,1.962,53,1.294,54,1.556,55,1.556,56,1.556,57,1.867,58,1.962,59,1.507,60,2.251,61,2.156,62,2.156,63,2.156,64,2.67,65,1.088,66,1.271,67,2.901,68,1.416,69,1.915,70,1.915,71,0.999,72,1.416,73,1.556,74,2.057,75,1.556,76,1.186,77,1.962,78,2.156,79,1.186,80,1.556,81,1.719,82,2.67,83,2.156,84,2.382,85,2.251,86,1.416,87,2.707,88,1.793,89,1.642,90,2.67,91,1.384,92,2.382,93,2.156,94,1.507,95,1.186,96,1.793,97,1.962,98,1.719,99,1.719,100,1.294,101,1.719]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.156,172,2.296]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.387,3,0.419,4,0.419,5,0.308,6,0.362,9,2.387,10,0.508,11,0.034,12,2.037,13,0.362,14,2.434,15,1.797,18,2.161,19,2.037,20,1.511,21,1.511,22,1.646,23,1.511,24,1.511,25,1.797,26,0.419,27,0.743,28,0.021,29,0.026,30,0.021,116,1.967,172,3.712,173,3,174,3.574,175,3,176,3.712,177,3.291,178,4.149]],["title/injectables/NoopTextMapPropagatorService.html",[31,0.687,177,2.035]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.387,4,0.387,5,0.285,6,0.427,10,0.47,11,0.033,13,0.335,20,1.398,26,0.387,27,0.687,28,0.02,29,0.025,30,0.02,31,1.058,32,1.663,33,1.999,34,0.909,35,0.831,36,1.635,37,2.95,38,1.179,40,1.894,42,1.284,43,3.047,44,1.94,45,1.083,47,1.663,48,1.663,49,1.523,50,0.687,116,2.318,173,3.536,174,3.631,175,3.536,176,3.536,177,3.134,179,4.889,180,3.838,181,5.981]],["title/interfaces/OpenTelemetryConfig.html",[51,0.821,91,1.062]],["body/interfaces/OpenTelemetryConfig.html",[3,0.292,4,0.292,5,0.214,6,0.252,10,0.353,11,0.034,13,0.252,26,0.556,28,0.015,29,0.021,30,0.015,34,0.685,35,0.626,45,0.815,50,0.724,51,1.307,52,2.396,53,1.252,54,1.506,55,1.506,56,1.506,57,1.699,58,1.918,59,1.84,60,2.212,61,2.107,62,2.107,63,2.107,64,2.632,65,1.699,66,1.242,67,2.632,68,1.37,69,1.853,70,1.853,71,0.967,72,1.37,73,1.506,74,2.021,75,1.506,76,1.147,77,2.396,78,2.107,79,1.147,80,1.506,81,1.663,82,2.43,83,2.107,84,2.328,85,2.212,86,1.37,87,2.848,88,1.252,89,1.147,90,1.506,91,1.69,92,3.172,93,2.871,94,1.473,95,1.147,96,1.752,97,1.918,98,1.663,99,1.663,100,1.252,101,1.663]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[182,1.654,183,2.035]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.136,4,0.136,5,0.1,6,0.42,10,0.45,11,0.034,13,0.118,19,0.537,26,0.136,27,0.518,28,0.007,29,0.012,30,0.007,31,0.488,34,1.065,35,0.293,36,0.753,38,1.434,40,1.129,42,1.354,44,1.34,45,0.635,46,0.778,47,0.586,48,0.586,49,0.537,50,0.805,57,1.229,58,1.068,59,1.563,60,2.035,61,0.705,62,2.109,64,2.109,65,1.7,71,1.561,72,1.068,79,0.894,85,0.641,86,1.068,88,1.462,89,1.488,91,1.129,94,0.493,95,1.785,97,1.778,107,1.943,112,2.47,115,0.778,117,0.976,122,3.535,131,3.281,135,0.705,138,1.6,141,1.877,142,2.883,143,1.758,144,0.778,160,0.978,164,0.867,166,1.127,167,3.657,182,1.173,183,1.444,184,1.353,185,4.013,186,1.127,187,1.877,188,2.895,189,3.577,190,2.253,191,2.253,192,2.895,193,2.253,194,2.895,195,2.412,196,3.376,197,3.376,198,2.253,199,2.253,200,2.253,201,2.895,202,1.353,203,1.877,204,4.049,205,1.629,206,2.253,207,1.856,208,3.376,209,2.253,210,2.253,211,4.817,212,1.353,213,1.877,214,5.616,215,2.253,216,1.353,217,1.353,218,1.296,219,2.253,220,1.877,221,2.253,222,1.353,223,3.373,224,1.629,225,2.253,226,1.353,227,1.353,228,2.412,229,3.376,230,2.412,231,1.877,232,1.353,233,4.049,234,3.376,235,1.353,236,2.253,237,1.877,238,2.812,239,1.444,240,1.877,241,2.895,242,3.376,243,2.253,244,2.812,245,1.353,246,1.353,247,2.253,248,2.253,249,0.978,250,1.127,251,1.353,252,0.978,253,2.253,254,1.353,255,2.253,256,1.353,257,2.253,258,2.253,259,1.353,260,1.629,261,1.353,262,1.353,263,1.353,264,1.127,265,1.353,266,1.353,267,2.253,268,1.353,269,1.353,270,1.353,271,1.353,272,1.353,273,1.353,274,1.353,275,1.353,276,1.353,277,1.353,278,1.353,279,1.353,280,1.629,281,2.253,282,2.253,283,2.253,284,2.253,285,2.253,286,1.353,287,1.353,288,1.353,289,0.978,290,1.353,291,1.353,292,1.353,293,1.353,294,1.353,295,1.353,296,1.353,297,0.978,298,1.353,299,1.353,300,1.353,301,0.978,302,1.353,303,1.353,304,1.353,305,1.353,306,1.353,307,1.353,308,1.353,309,1.353,310,1.353,311,1.353,312,1.353,313,1.353,314,1.353,315,1.353,316,1.353,317,1.353,318,1.353,319,1.353,320,1.353,321,1.353,322,2.895,323,1.353,324,2.895,325,1.353,326,1.353,327,1.353,328,1.353,329,1.353,330,1.353,331,1.353,332,2.253,333,1.353,334,1.353,335,1.353,336,1.353]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.156,337,2.035]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.175,3,0.355,4,0.355,5,0.261,6,0.403,10,0.497,11,0.034,12,2.047,13,0.307,21,1.28,22,1.395,23,1.28,24,1.682,25,1.523,26,0.355,27,0.629,28,0.018,29,0.024,30,0.018,36,1.175,38,1.08,40,1.175,42,1.175,50,0.629,59,1.878,65,1.28,71,1.175,91,1.832,94,1.682,95,2.047,107,2.023,112,2.023,164,2.253,165,2.928,183,2.961,224,2.542,249,2.542,337,3.648,338,4.619,339,3.515,340,4.619,341,3.515,342,4.619,343,3.515,344,5.159,345,4.619,346,3.848,347,3.848,348,3.515,349,3.515,350,2.928,351,4.619,352,3.515,353,2.542,354,3.515,355,3.515,356,2.928,357,3.515,358,3.515]],["title/modules/OtelColExporterModule.html",[0,1.156,359,2.035]],["body/modules/OtelColExporterModule.html",[2,1.418,3,0.428,4,0.428,5,0.315,6,0.37,10,0.512,11,0.034,12,2.065,13,0.37,14,2.467,15,1.837,21,1.544,22,1.683,23,1.544,24,1.544,25,1.837,26,0.428,27,0.759,28,0.022,29,0.027,30,0.022,132,3.533,134,3.533,135,2.71,136,2.718,359,3.336,360,3.067,361,3.336,362,3.067]],["title/interfaces/OtelCollectorConfig.html",[51,0.821,77,1.505]],["body/interfaces/OtelCollectorConfig.html",[3,0.284,4,0.284,5,0.209,6,0.246,10,0.347,11,0.034,13,0.246,26,0.551,28,0.014,29,0.02,30,0.014,34,0.667,35,0.61,45,0.795,50,0.711,51,1.292,52,1.883,53,1.221,54,1.467,55,1.467,56,1.467,57,1.82,58,1.883,59,1.991,60,2.181,61,2.069,62,2.069,63,2.069,64,2.603,65,1.676,66,1.22,67,2.847,68,1.336,69,1.806,70,1.806,71,0.942,72,1.336,73,1.467,74,1.993,75,2.069,76,1.576,77,2.181,78,2.847,79,1.576,80,2.069,81,2.286,82,2.744,83,2.847,84,3.146,85,2.719,86,1.883,87,2.498,88,1.221,89,1.118,90,1.467,91,1.328,92,2.286,93,2.069,94,1.447,95,1.118,96,1.721,97,1.883,98,1.621,99,1.621,100,1.221,101,1.621]],["title/injectables/OtelcolExporterService.html",[31,0.687,361,2.035]],["body/injectables/OtelcolExporterService.html",[3,0.301,4,0.301,5,0.222,6,0.447,10,0.498,11,0.034,13,0.261,26,0.301,27,0.85,28,0.015,29,0.021,30,0.015,31,0.896,32,1.294,34,0.98,35,0.647,36,1.384,38,1.459,40,1.714,42,0.999,45,0.843,47,1.294,48,1.294,49,1.186,50,0.535,57,1.507,58,1.962,59,1.96,63,1.556,65,1.507,71,0.999,74,2.618,76,1.186,78,1.556,83,1.556,85,1.416,91,1.862,93,2.473,94,1.088,95,2.136,100,1.294,107,2.95,112,1.719,115,1.719,122,3.044,136,1.915,137,2.161,139,3.707,142,3.044,143,2.156,144,1.719,160,2.161,164,2.653,167,2.993,264,2.489,360,3.707,361,3.286,363,4.139,364,2.988,365,5.126,366,4.139,367,4.139,368,2.988,369,2.988,370,2.161,371,2.988,372,2.988,373,2.988,374,2.988,375,2.988,376,2.988,377,2.988]],["title/changelog.html",[378,1.531,379,1.531,380,2.216]],["body/changelog.html",[5,0.299,11,0.017,28,0.011,29,0.017,30,0.011,50,0.721,57,1.467,66,0.686,68,1.909,76,0.886,84,1.285,88,0.967,89,1.598,96,0.967,106,3.355,117,1.453,119,1.59,138,1.059,182,1.747,203,1.86,207,2.582,218,3.387,239,3.076,260,3.645,301,2.912,353,1.615,362,3.238,380,2.794,381,2.233,382,2.233,383,1.615,384,2.233,385,1.431,386,2.233,387,2.233,388,2.233,389,3.998,390,4.027,391,5.935,392,5.04,393,4.027,394,5.765,395,4.477,396,2.233,397,5.603,398,5.603,399,1.86,400,2.233,401,2.233,402,4.477,403,2.233,404,2.233,405,3.355,406,3.354,407,1.86,408,2.233,409,2.233,410,2.233,411,1.86,412,2.233,413,1.86,414,2.233,415,2.233,416,2.233,417,2.233,418,2.233,419,2.233,420,2.233,421,2.233,422,2.233,423,1.86,424,2.233,425,2.233,426,2.233,427,2.233,428,2.233,429,2.233,430,4.799,431,2.233,432,2.233,433,4.027,434,2.233,435,2.233,436,2.233,437,4.477,438,2.233,439,2.233,440,2.233,441,2.233,442,1.86,443,2.233,444,2.233,445,2.233,446,3.354,447,2.233,448,4.027,449,2.233,450,2.233,451,2.233,452,2.233,453,2.233,454,1.86,455,2.233,456,4.477,457,2.233,458,4.027,459,4.477,460,3.354,461,3.355,462,3.354,463,3.354,464,2.794,465,3.354,466,4.477,467,2.233,468,3.354,469,2.233,470,2.233,471,2.233,472,2.233,473,4.027,474,2.233,475,2.233,476,2.233,477,2.233,478,2.233,479,3.354,480,2.233,481,2.233,482,2.233,483,2.233,484,2.233,485,2.233,486,2.233,487,1.615,488,5.228,489,2.233,490,2.233,491,2.233,492,2.233,493,1.86,494,2.233,495,2.233,496,2.233,497,2.233,498,2.233,499,2.233,500,2.233,501,2.233,502,1.615,503,2.233,504,2.233,505,2.233,506,2.233,507,1.86,508,2.233,509,2.233,510,2.233,511,2.233,512,3.354,513,3.354,514,2.233,515,2.233,516,2.233,517,2.794,518,3.354,519,3.354,520,2.233,521,2.233,522,2.233,523,4.477,524,2.233,525,2.233,526,2.233,527,2.233,528,2.233,529,3.354,530,2.233,531,2.233]],["title/coverage.html",[532,3.595]],["body/coverage.html",[5,0.23,6,0.552,7,2.241,8,1.986,11,0.033,16,1.783,19,1.23,28,0.016,29,0.022,30,0.016,31,1.248,33,2.84,44,1.23,50,0.555,51,1.457,52,1.469,54,2.933,55,2.933,65,1.128,66,1.599,77,1.469,87,1.469,91,1.036,94,1.128,100,1.342,103,2.241,104,2.241,105,1.986,109,1.783,110,1.783,116,2.295,117,1.839,118,1.986,120,1.986,130,2.241,131,1.783,133,1.986,135,1.614,137,3.069,143,1.614,146,2.241,148,3.069,153,3.069,159,2.241,173,2.241,174,2.721,175,2.241,176,2.241,177,1.986,182,1.614,183,1.986,185,2.582,186,2.582,360,2.241,361,1.986,532,2.582,533,2.582,534,3.099,535,3.099,536,6.321,537,3.099,538,5.767,539,5.206,540,5.206,541,5.206,542,3.099,543,3.099,544,3.099,545,2.582]],["title/dependencies.html",[546,2.216,547,2.445]],["body/dependencies.html",[11,0.034,13,0.349,15,1.733,28,0.021,29,0.026,30,0.021,74,1.733,76,1.587,119,1.896,163,2.892,250,3.332,252,2.892,289,2.892,370,2.892,389,4.18,423,3.332,547,2.564,548,3.999,549,6.203,550,3.999,551,5.018,552,3.999,553,3.999,554,3.999,555,5.018,556,4.18,557,3.999,558,3.999,559,3.999,560,3.999,561,3.999,562,3.999,563,4.18,564,3.999,565,3.332,566,3.999,567,3.999,568,3.999,569,3.999,570,3.999,571,3.999,572,3.999]],["title/index.html",[35,0.576,378,1.531,379,1.531]],["body/index.html",[0,1.816,1,0.89,3,0.54,10,0.332,11,0.033,12,1.361,13,0.121,17,1.004,21,0.505,22,0.913,23,0.838,24,0.505,26,0.232,27,0.249,28,0.02,29,0.012,30,0.007,45,0.831,46,1.324,49,0.913,51,0.595,52,0.658,56,1.199,57,1.77,59,1.249,60,1.803,61,1.199,62,1.535,63,1.199,64,1.535,66,1.334,67,1.981,68,2.304,71,0.77,72,1.091,74,1.776,75,2.79,76,2.126,77,0.658,78,1.787,79,0.551,80,1.199,81,1.324,82,1.981,83,0.723,85,1.091,87,1.398,88,1.486,89,2.023,90,1.199,91,0.986,92,1.324,93,1.199,100,1.277,102,1.89,115,0.799,117,0.601,119,1.944,125,1.156,129,0.89,131,1.324,138,2.155,144,1.324,145,0.89,147,1.156,155,1.156,158,0.89,163,1.664,182,2.367,187,1.156,189,1.156,195,1.156,205,1.004,207,1.475,213,1.156,218,1.696,223,3.416,224,2.132,228,2.456,230,1.917,237,1.156,238,1.156,239,3.619,240,1.156,244,1.156,249,1.004,252,2.132,280,1.004,289,1.004,337,1.89,346,1.156,347,2.858,353,2.75,356,1.917,359,2.629,362,1.004,370,2.132,378,1.324,379,1.324,383,1.664,385,3.116,399,1.917,405,1.156,407,1.917,411,1.156,442,1.917,461,1.156,487,3.686,502,2.132,507,1.156,545,1.917,546,1.156,547,3.022,556,1.156,563,1.917,565,2.456,573,2.948,574,2.948,575,1.388,576,4.343,577,1.388,578,1.388,579,3.818,580,1.388,581,1.917,582,2.301,583,2.301,584,3.43,585,3.43,586,2.301,587,2.301,588,4.343,589,2.948,590,1.388,591,1.388,592,2.948,593,3.803,594,1.917,595,2.301,596,2.301,597,4.545,598,4.545,599,3.803,600,1.388,601,1.388,602,2.301,603,2.301,604,2.301,605,2.301,606,2.301,607,2.301,608,1.388,609,1.388,610,1.388,611,1.388,612,1.156,613,1.917,614,2.301,615,1.388,616,1.388,617,1.388,618,1.388,619,1.388,620,1.388,621,1.388,622,1.388,623,1.156,624,2.948,625,1.388,626,1.388,627,1.388,628,1.388,629,1.388,630,1.156,631,2.301,632,1.388,633,1.156,634,1.388,635,1.388,636,1.388,637,1.388,638,1.388,639,1.388,640,1.156,641,1.388,642,1.388,643,1.388,644,1.388,645,1.388,646,1.388,647,2.301,648,1.388,649,2.301,650,2.301,651,1.388,652,1.388,653,1.388,654,1.388,655,1.388,656,1.388,657,2.301,658,2.301,659,0.89,660,1.388,661,1.388,662,1.388,663,1.388,664,1.388,665,1.388,666,1.156,667,1.156,668,1.388,669,3.803,670,3.803,671,3.803,672,4.861,673,3.803,674,3.168,675,3.803,676,3.803,677,3.803,678,1.388,679,1.388,680,1.388,681,1.388,682,1.388,683,1.388,684,1.388,685,1.388,686,1.388,687,1.388,688,1.388,689,1.388,690,1.388,691,1.388,692,2.301,693,1.388,694,1.388,695,1.388,696,1.388,697,1.388,698,1.388,699,1.388]],["title/license.html",[378,1.531,379,1.531,700,2.216]],["body/license.html",[4,0.484,5,0.311,10,0.1,11,0.013,24,0.419,27,0.206,28,0.01,29,0.01,30,0.006,34,0.272,38,0.353,53,0.498,56,0.599,57,0.419,68,2.149,71,0.86,72,0.545,150,0.832,174,1.949,207,0.737,218,1.13,220,1.636,231,3.1,260,1.859,280,0.832,301,1.859,385,0.737,454,0.958,487,0.832,502,3.878,517,1.636,533,2.142,579,0.832,581,0.958,594,1.636,612,0.958,623,0.958,633,0.958,640,0.958,659,0.737,667,2.846,674,1.636,700,4.889,701,3.041,702,2.571,703,1.15,704,1.15,705,1.15,706,4.373,707,4.902,708,3.041,709,3.416,710,1.15,711,5.086,712,4.532,713,1.15,714,1.15,715,1.15,716,4.532,717,4.902,718,3.721,719,4.532,720,1.964,721,1.15,722,3.416,723,1.15,724,1.15,725,1.15,726,3.041,727,1.15,728,4.373,729,3.041,730,1.964,731,1.964,732,1.15,733,2.571,734,1.964,735,1.15,736,1.15,737,5.302,738,3.041,739,1.964,740,1.15,741,1.964,742,1.15,743,1.15,744,1.15,745,1.15,746,1.15,747,1.15,748,1.15,749,2.571,750,1.15,751,2.571,752,1.964,753,4.902,754,1.15,755,1.15,756,3.721,757,4.373,758,3.041,759,1.964,760,2.571,761,3.721,762,1.15,763,1.15,764,1.15,765,1.15,766,1.15,767,1.964,768,1.15,769,1.15,770,1.15,771,5.891,772,2.571,773,1.964,774,1.15,775,4.373,776,1.964,777,1.15,778,3.416,779,1.964,780,1.15,781,5.302,782,1.15,783,1.15,784,1.15,785,1.15,786,1.15,787,1.15,788,1.964,789,2.571,790,1.15,791,1.15,792,1.15,793,1.15,794,1.15,795,3.041,796,3.416,797,1.15,798,1.964,799,3.041,800,1.964,801,1.15,802,3.416,803,1.964,804,1.15,805,1.15,806,2.571,807,1.15,808,1.15,809,1.15,810,1.15,811,1.964,812,0.958,813,1.15,814,1.15,815,2.571,816,1.15,817,1.15,818,2.571,819,1.15,820,1.15,821,1.15,822,3.041,823,4.532,824,1.15,825,1.15,826,1.964,827,4.19,828,2.571,829,3.041,830,1.964,831,1.964,832,1.964,833,1.964,834,2.571,835,1.964,836,2.571,837,1.964,838,1.964,839,1.964,840,1.964,841,0.958,842,1.964,843,1.15,844,1.15,845,3.416,846,3.975,847,2.571,848,1.964,849,1.15,850,1.15,851,1.964,852,1.964,853,1.15,854,1.15,855,2.571,856,1.964,857,1.15,858,1.15,859,1.15,860,2.571,861,1.15,862,1.15,863,1.15,864,1.964,865,1.964,866,1.15,867,1.15,868,1.15,869,1.15,870,1.15,871,1.15,872,1.15,873,1.964,874,1.15,875,1.15,876,1.15,877,1.15,878,1.15,879,1.15,880,1.15,881,1.15,882,2.571,883,1.15,884,2.571,885,1.15,886,1.15,887,1.15,888,1.15,889,4.19,890,1.15,891,1.15,892,1.15,893,1.15,894,1.15,895,3.041,896,1.964,897,3.041,898,1.15,899,1.15,900,1.15,901,1.15,902,1.15,903,2.571,904,1.15,905,1.15,906,1.964,907,1.964,908,1.15,909,1.15,910,1.15,911,1.964,912,1.15,913,1.15,914,3.416,915,1.15,916,1.15,917,1.15,918,1.15,919,1.15,920,1.15,921,1.15,922,2.571,923,3.041,924,1.15,925,1.15,926,1.15,927,1.15,928,1.15,929,1.15,930,1.15,931,1.15,932,1.15,933,1.15,934,1.15,935,1.964,936,1.15,937,1.15,938,1.964,939,1.15,940,1.15,941,3.041,942,1.15,943,1.15,944,1.15,945,1.15,946,1.15,947,1.15,948,1.15,949,3.041,950,2.571,951,2.571,952,2.571,953,1.964,954,1.964,955,2.571,956,1.964,957,1.964,958,1.964,959,1.964,960,1.15,961,1.15,962,1.15,963,1.15,964,1.15,965,1.15,966,1.15,967,1.15,968,1.15,969,1.964,970,1.15,971,1.15,972,1.15,973,1.15,974,3.416,975,1.15,976,1.15,977,1.15,978,1.15,979,1.15,980,1.15,981,1.15,982,1.15,983,3.416,984,1.15,985,1.15,986,1.15,987,1.15,988,1.15,989,0.958,990,1.15,991,1.15,992,1.15,993,1.15,994,1.15,995,1.15,996,1.15,997,1.15,998,1.15,999,1.15,1000,1.15,1001,1.15,1002,2.571,1003,1.15,1004,1.15,1005,1.15,1006,1.15,1007,1.15,1008,1.964,1009,1.15,1010,1.15,1011,1.15,1012,1.15,1013,1.15,1014,1.15,1015,1.15,1016,1.15,1017,1.15,1018,1.15,1019,1.15,1020,1.15,1021,1.15,1022,1.15,1023,1.15,1024,1.964,1025,1.15,1026,1.15,1027,1.15,1028,1.964,1029,1.964,1030,1.15,1031,1.15,1032,1.15,1033,1.15,1034,1.15,1035,1.15,1036,1.15,1037,1.15,1038,1.15,1039,1.15,1040,1.15,1041,1.15,1042,1.15,1043,1.15,1044,1.15,1045,1.15,1046,1.15,1047,1.15,1048,1.15,1049,1.15,1050,1.15,1051,1.15]],["title/modules.html",[2,1.443]],["body/modules.html",[1,2.883,2,1.504,11,0.028,28,0.023,29,0.028,30,0.023,102,2.883,129,2.883,145,2.883,158,2.883,172,3.253,337,2.883,359,2.883,659,4.063,1052,6.339,1053,6.339]],["title/overview.html",[1054,3.595]],["body/overview.html",[0,1.725,2,1.584,11,0.029,21,1.725,23,1.725,28,0.024,29,0.029,30,0.024,32,2.052,53,2.052,350,3.947,413,3.947,464,3.947,547,3.037,630,3.947,989,3.947,1054,3.947,1055,4.738,1056,5.562,1057,4.738,1058,4.738]],["title/todo.html",[297,1.924,378,1.531,379,1.531]],["body/todo.html",[11,0.032,28,0.022,29,0.027,30,0.022,57,2.05,75,2.71,76,1.683,117,1.837,119,2.669,138,2.467,182,2.209,205,3.763,218,3.529,239,2.718,297,4.071,383,3.067,385,2.718,493,3.533,579,4.071,613,3.533,659,3.336,666,4.89,812,3.533,841,3.533,1059,4.241,1060,4.241,1061,5.63,1062,4.241,1063,4.241]],["title/miscellaneous/variables.html",[1064,2.216,1065,3.177]],["body/miscellaneous/variables.html",[6,0.487,11,0.032,19,2.041,28,0.021,29,0.026,30,0.021,35,0.901,50,1.044,54,2.168,55,2.908,74,2.228,79,2.314,80,3.038,89,1.651,94,2.033,95,1.651,96,2.526,98,2.395,99,2.395,100,2.228,101,2.395,135,2.679,138,1.973,148,3.009,152,3.467,153,3.009,157,3.467,1064,3.467,1065,3.467,1066,5.144,1067,4.162,1068,4.162]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":607,"title":{},"body":{"index.html":{}}}],["0.10.0",{"_index":423,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.10.1",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":389,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":601,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":442,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.3",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["10.1.2",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":694,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":405,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":702,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":704,"title":{},"body":{"license.html":{}}}],["2020",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":507,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["4.1.9",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":618,"title":{},"body":{"index.html":{}}}],["5.3.0",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":744,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":464,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.6.3",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1058,"title":{},"body":{"overview.html":{}}}],["735b05d",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["7a5b07e",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1057,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":454,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":578,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":927,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1005,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1002,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":696,"title":{},"body":{"index.html":{}}}],["act",{"_index":1012,"title":{},"body":{"license.html":{}}}],["acting",{"_index":724,"title":{},"body":{"license.html":{}}}],["acts",{"_index":981,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":913,"title":{},"body":{"license.html":{}}}],["adding",{"_index":646,"title":{},"body":{"index.html":{}}}],["additional",{"_index":914,"title":{},"body":{"license.html":{}}}],["additions",{"_index":797,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1000,"title":{},"body":{"license.html":{}}}],["again",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":865,"title":{},"body":{"license.html":{}}}],["agent",{"_index":411,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1015,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":952,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":932,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":870,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":682,"title":{},"body":{"index.html":{}}}],["alone",{"_index":861,"title":{},"body":{"license.html":{}}}],["along",{"_index":904,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":912,"title":{},"body":{"license.html":{}}}],["already",{"_index":354,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":648,"title":{},"body":{"index.html":{}}}],["always",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":698,"title":{},"body":{"index.html":{}}}],["amd",{"_index":673,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":885,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":892,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":898,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1009,"title":{},"body":{"license.html":{}}}],["angular",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":680,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":15,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":13,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":785,"title":{},"body":{"license.html":{}}}],["apache",{"_index":701,"title":{},"body":{"license.html":{}}}],["api",{"_index":166,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":600,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":593,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":625,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":616,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":661,"title":{},"body":{"index.html":{}}}],["appand",{"_index":652,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":624,"title":{},"body":{"index.html":{}}}],["appear",{"_index":909,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":779,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":950,"title":{},"body":{"license.html":{}}}],["application",{"_index":576,"title":{},"body":{"index.html":{}}}],["applies",{"_index":854,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1024,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":356,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1034,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":967,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1042,"title":{},"body":{"license.html":{}}}],["arising",{"_index":988,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1021,"title":{},"body":{"license.html":{}}}],["associated",{"_index":972,"title":{},"body":{"license.html":{}}}],["assume",{"_index":970,"title":{},"body":{"license.html":{}}}],["async",{"_index":610,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1025,"title":{},"body":{"license.html":{}}}],["attached",{"_index":777,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["attribution",{"_index":895,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":720,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":772,"title":{},"body":{"license.html":{}}}],["available",{"_index":659,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b112065",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":17,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3propagator",{"_index":41,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatormodule",{"_index":1,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":16,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b63afc1",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":676,"title":{},"body":{"index.html":{}}}],["base",{"_index":684,"title":{},"body":{"index.html":{}}}],["based",{"_index":640,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":954,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":334,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":802,"title":{},"body":{"license.html":{}}}],["below",{"_index":780,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":748,"title":{},"body":{"license.html":{}}}],["between",{"_index":606,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":794,"title":{},"body":{"license.html":{}}}],["body",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1026,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":608,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":630,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1029,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1053,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":556,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":644,"title":{},"body":{"index.html":{}}}],["canonicalcode",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["canonicalcode.internal",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":887,"title":{},"body":{"license.html":{}}}],["cause",{"_index":674,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["changed",{"_index":891,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":380,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":987,"title":{},"body":{"license.html":{}}}],["charge",{"_index":836,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1003,"title":{},"body":{"license.html":{}}}],["claim",{"_index":867,"title":{},"body":{"license.html":{}}}],["claims",{"_index":856,"title":{},"body":{"license.html":{}}}],["class",{"_index":27,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":678,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":367,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":368,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":377,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes",{"_index":369,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes.collectorexporterconfigbase",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":862,"title":{},"body":{"license.html":{}}}],["command",{"_index":650,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1035,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":997,"title":{},"body":{"license.html":{}}}],["commit",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":52,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":672,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":14,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["communication",{"_index":806,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":99,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":766,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1045,"title":{},"body":{"license.html":{}}}],["complies",{"_index":920,"title":{},"body":{"license.html":{}}}],["compose",{"_index":658,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":662,"title":{},"body":{"index.html":{}}}],["composite",{"_index":106,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":102,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":105,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":994,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":707,"title":{},"body":{"license.html":{}}}],["config",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":373,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":170,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":376,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":375,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":374,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":603,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":164,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["configure",{"_index":592,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":986,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1011,"title":{},"body":{"license.html":{}}}],["console",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":141,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":129,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":133,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":819,"title":{},"body":{"license.html":{}}}],["const",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["constitutes",{"_index":871,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":168,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["constructor(b3propagatorservice",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":160,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["construed",{"_index":915,"title":{},"body":{"license.html":{}}}],["contained",{"_index":901,"title":{},"body":{"license.html":{}}}],["content",{"_index":947,"title":{},"body":{"license.html":{}}}],["contents",{"_index":581,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":188,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":739,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":614,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":796,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":860,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":922,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":823,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":872,"title":{},"body":{"license.html":{}}}],["control",{"_index":726,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":727,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":768,"title":{},"body":{"license.html":{}}}],["copies",{"_index":879,"title":{},"body":{"license.html":{}}}],["copy",{"_index":884,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":717,"title":{},"body":{"license.html":{}}}],["core",{"_index":619,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1062,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":868,"title":{},"body":{"license.html":{}}}],["cours",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":532,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":642,"title":{},"body":{"index.html":{}}}],["cross",{"_index":866,"title":{},"body":{"license.html":{}}}],["current",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":943,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":90,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":983,"title":{},"body":{"license.html":{}}}],["date",{"_index":876,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":636,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":21,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":697,"title":{},"body":{"index.html":{}}}],["default",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1017,"title":{},"body":{"license.html":{}}}],["define",{"_index":86,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["defined",{"_index":38,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":190,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":200,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":730,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":710,"title":{},"body":{"license.html":{}}}],["del",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":978,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":399,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":547,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":679,"title":{},"body":{"index.html":{}}}],["depends",{"_index":671,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":575,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":781,"title":{},"body":{"license.html":{}}}],["derived",{"_index":782,"title":{},"body":{"license.html":{}}}],["describing",{"_index":944,"title":{},"body":{"license.html":{}}}],["description",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"license.html":{}}}],["designated",{"_index":821,"title":{},"body":{"license.html":{}}}],["determining",{"_index":966,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":664,"title":{},"body":{"index.html":{}}}],["different",{"_index":919,"title":{},"body":{"license.html":{}}}],["dir",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":733,"title":{},"body":{"license.html":{}}}],["direction",{"_index":735,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":948,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":816,"title":{},"body":{"license.html":{}}}],["display",{"_index":594,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":845,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":903,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":709,"title":{},"body":{"license.html":{}}}],["doc",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":657,"title":{},"body":{"index.html":{}}}],["docs",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":715,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":533,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":1033,"title":{},"body":{"license.html":{}}}],["done",{"_index":1063,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":829,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1040,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":783,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":786,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":803,"title":{},"body":{"license.html":{}}}],["en",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":1028,"title":{},"body":{"license.html":{}}}],["end",{"_index":1023,"title":{},"body":{"license.html":{}}}],["entities",{"_index":725,"title":{},"body":{"license.html":{}}}],["entity",{"_index":719,"title":{},"body":{"license.html":{}}}],["environment",{"_index":626,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":627,"title":{},"body":{"index.html":{}}}],["error",{"_index":353,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":999,"title":{},"body":{"license.html":{}}}],["event",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":487,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":847,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":818,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":835,"title":{},"body":{"license.html":{}}}],["executed",{"_index":933,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":973,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":750,"title":{},"body":{"license.html":{}}}],["existing",{"_index":632,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":924,"title":{},"body":{"license.html":{}}}],["export",{"_index":26,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["exported",{"_index":689,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":138,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":136,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["exporter.module.ts",{"_index":132,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service",{"_index":134,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service.ts",{"_index":137,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":140,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:49",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporters",{"_index":617,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":196,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":957,"title":{},"body":{"license.html":{}}}],["f",{"_index":660,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":995,"title":{},"body":{"license.html":{}}}],["fake",{"_index":621,"title":{},"body":{"index.html":{}}}],["false",{"_index":595,"title":{},"body":{"index.html":{}}}],["features",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1004,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":1027,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":742,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":877,"title":{},"body":{"license.html":{}}}],["files",{"_index":760,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":962,"title":{},"body":{"license.html":{}}}],["fix",{"_index":685,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":882,"title":{},"body":{"license.html":{}}}],["form",{"_index":753,"title":{},"body":{"license.html":{}}}],["format",{"_index":1037,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":838,"title":{},"body":{"license.html":{}}}],["functions",{"_index":634,"title":{},"body":{"index.html":{}}}],["generally",{"_index":615,"title":{},"body":{"index.html":{}}}],["generated",{"_index":767,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":139,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{}}}],["getpropagator",{"_index":37,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["getting",{"_index":378,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1060,"title":{},"body":{"todo.html":{}}}],["give",{"_index":150,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":583,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":992,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1050,"title":{},"body":{"license.html":{}}}],["grant",{"_index":828,"title":{},"body":{"license.html":{}}}],["granted",{"_index":752,"title":{},"body":{"license.html":{}}}],["granting",{"_index":721,"title":{},"body":{"license.html":{}}}],["grants",{"_index":831,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1052,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":979,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1019,"title":{},"body":{"license.html":{}}}],["header",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["here",{"_index":666,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":830,"title":{},"body":{"license.html":{}}}],["herein",{"_index":929,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1018,"title":{},"body":{"license.html":{}}}],["http",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":186,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:132",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:184",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:198",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:214",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:46",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:50",{"_index":198,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:84",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":665,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":654,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":705,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1047,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":677,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":597,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":580,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":156,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":147,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":145,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":109,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1041,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1031,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":143,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":740,"title":{},"body":{"license.html":{}}}],["iii",{"_index":747,"title":{},"body":{"license.html":{}}}],["implement",{"_index":641,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":155,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":49,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["implied",{"_index":958,"title":{},"body":{"license.html":{}}}],["import",{"_index":10,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":22,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["improving",{"_index":817,"title":{},"body":{"license.html":{}}}],["inability",{"_index":990,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":985,"title":{},"body":{"license.html":{}}}],["include",{"_index":789,"title":{},"body":{"license.html":{}}}],["included",{"_index":776,"title":{},"body":{"license.html":{}}}],["includes",{"_index":899,"title":{},"body":{"license.html":{}}}],["including",{"_index":757,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":800,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":826,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1020,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1016,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1007,"title":{},"body":{"license.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":774,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":734,"title":{},"body":{"license.html":{}}}],["individual",{"_index":749,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["information",{"_index":1032,"title":{},"body":{"license.html":{}}}],["informational",{"_index":910,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":859,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":873,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":191,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":123,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":124,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_exporter",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":371,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_propagator",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":31,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":32,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":192,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":199,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":98,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":152,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":101,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":157,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":151,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":193,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":194,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":590,"title":{},"body":{"index.html":{}}}],["installation",{"_index":582,"title":{},"body":{"index.html":{}}}],["institute",{"_index":863,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":798,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":195,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":182,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":670,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":54,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":185,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":130,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":148,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:12",{"_index":149,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":360,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":103,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":146,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":159,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":173,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":153,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:12",{"_index":154,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":184,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":51,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":53,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":44,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["irrevocable",{"_index":839,"title":{},"body":{"license.html":{}}}],["issue",{"_index":812,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerconfiguration",{"_index":591,"title":{},"body":{"index.html":{}}}],["jaegerhttppropagator",{"_index":622,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":162,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":171,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":158,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":110,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":87,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":703,"title":{},"body":{"license.html":{}}}],["jest",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":565,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":599,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":573,"title":{},"body":{"index.html":{}}}],["kind",{"_index":956,"title":{},"body":{"license.html":{}}}],["language",{"_index":1049,"title":{},"body":{"license.html":{}}}],["law",{"_index":951,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":869,"title":{},"body":{"license.html":{}}}],["legal",{"_index":722,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1055,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":974,"title":{},"body":{"license.html":{}}}],["liable",{"_index":982,"title":{},"body":{"license.html":{}}}],["library",{"_index":574,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":857,"title":{},"body":{"license.html":{}}}],["license",{"_index":700,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":917,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1044,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":874,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":716,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":959,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1051,"title":{},"body":{"license.html":{}}}],["limited",{"_index":758,"title":{},"body":{"license.html":{}}}],["link",{"_index":793,"title":{},"body":{"license.html":{}}}],["list",{"_index":613,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":810,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":864,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":355,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["logger",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":637,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":638,"title":{},"body":{"index.html":{}}}],["logging",{"_index":407,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loss",{"_index":991,"title":{},"body":{"license.html":{}}}],["losses",{"_index":998,"title":{},"body":{"license.html":{}}}],["made",{"_index":773,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":809,"title":{},"body":{"license.html":{}}}],["make",{"_index":850,"title":{},"body":{"license.html":{}}}],["making",{"_index":755,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":996,"title":{},"body":{"license.html":{}}}],["managed",{"_index":814,"title":{},"body":{"license.html":{}}}],["management",{"_index":736,"title":{},"body":{"license.html":{}}}],["manager",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":176,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":820,"title":{},"body":{"license.html":{}}}],["marks",{"_index":939,"title":{},"body":{"license.html":{}}}],["matching",{"_index":29,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":712,"title":{},"body":{"license.html":{}}}],["means",{"_index":731,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":763,"title":{},"body":{"license.html":{}}}],["media",{"_index":769,"title":{},"body":{"license.html":{}}}],["medium",{"_index":880,"title":{},"body":{"license.html":{}}}],["meet",{"_index":881,"title":{},"body":{"license.html":{}}}],["member",{"_index":690,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":961,"title":{},"body":{"license.html":{}}}],["merely",{"_index":792,"title":{},"body":{"license.html":{}}}],["merge",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":36,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["miscellaneous",{"_index":1064,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":756,"title":{},"body":{"license.html":{}}}],["modified",{"_index":886,"title":{},"body":{"license.html":{}}}],["modify",{"_index":911,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":916,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":579,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":358,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":938,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":687,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":858,"title":{},"body":{"license.html":{}}}],["need",{"_index":692,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":977,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":980,"title":{},"body":{"license.html":{}}}],["new",{"_index":50,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":12,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":563,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":584,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":688,"title":{},"body":{"index.html":{}}}],["non",{"_index":834,"title":{},"body":{"license.html":{}}}],["noop",{"_index":178,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":620,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":179,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":181,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":172,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":177,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":908,"title":{},"body":{"license.html":{}}}],["notable",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":928,"title":{},"body":{"license.html":{}}}],["notice",{"_index":775,"title":{},"body":{"license.html":{}}}],["notices",{"_index":889,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":926,"title":{},"body":{"license.html":{}}}],["npm",{"_index":589,"title":{},"body":{"index.html":{}}}],["null",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":201,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["object",{"_index":761,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1008,"title":{},"body":{"license.html":{}}}],["observable",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1046,"title":{},"body":{"license.html":{}}}],["offer",{"_index":851,"title":{},"body":{"license.html":{}}}],["ok",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":623,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":653,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":45,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":683,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":46,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":370,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":163,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":144,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":91,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":183,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":187,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":337,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":629,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":586,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":675,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["options",{"_index":681,"title":{},"body":{"index.html":{}}}],["origin",{"_index":945,"title":{},"body":{"license.html":{}}}],["original",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":362,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_exporter",{"_index":135,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_logger",{"_index":100,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":19,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":359,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":361,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":77,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":989,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":745,"title":{},"body":{"license.html":{}}}],["overide",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1054,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":718,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":741,"title":{},"body":{"license.html":{}}}],["package",{"_index":546,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1039,"title":{},"body":{"license.html":{}}}],["param",{"_index":167,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["parameters",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["parent",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":351,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":336,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":897,"title":{},"body":{"license.html":{}}}],["partial",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":963,"title":{},"body":{"license.html":{}}}],["party",{"_index":907,"title":{},"body":{"license.html":{}}}],["patent",{"_index":846,"title":{},"body":{"license.html":{}}}],["percent",{"_index":743,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":604,"title":{},"body":{"index.html":{}}}],["perform",{"_index":843,"title":{},"body":{"license.html":{}}}],["permission",{"_index":936,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":751,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":832,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":896,"title":{},"body":{"license.html":{}}}],["places",{"_index":902,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1001,"title":{},"body":{"license.html":{}}}],["power",{"_index":732,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":754,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":841,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1038,"title":{},"body":{"license.html":{}}}],["private",{"_index":122,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["probability",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":940,"title":{},"body":{"license.html":{}}}],["production",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":493,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":383,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":647,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":888,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":643,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":20,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":9,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":18,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:14",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":180,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":39,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":161,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:31",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator/b3",{"_index":8,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":104,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":175,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":125,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":197,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{}}}],["provide",{"_index":24,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":778,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":47,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["providers",{"_index":23,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":953,"title":{},"body":{"license.html":{}}}],["public",{"_index":165,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":842,"title":{},"body":{"license.html":{}}}],["publish",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":815,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":729,"title":{},"body":{"license.html":{}}}],["readable",{"_index":900,"title":{},"body":{"license.html":{}}}],["readme",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1022,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":942,"title":{},"body":{"license.html":{}}}],["received",{"_index":824,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":883,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":612,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":969,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":878,"title":{},"body":{"license.html":{}}}],["redo",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":934,"title":{},"body":{"license.html":{}}}],["release",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":790,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1030,"title":{},"body":{"license.html":{}}}],["represent",{"_index":787,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":808,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":840,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":946,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":708,"title":{},"body":{"license.html":{}}}],["request",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":941,"title":{},"body":{"license.html":{}}}],["reset",{"_index":413,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["response",{"_index":645,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1014,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":965,"title":{},"body":{"license.html":{}}}],["result",{"_index":28,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":762,"title":{},"body":{"license.html":{}}}],["results",{"_index":30,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":893,"title":{},"body":{"license.html":{}}}],["return",{"_index":40,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["returns",{"_index":42,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["review",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":784,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1010,"title":{},"body":{"license.html":{}}}],["risks",{"_index":971,"title":{},"body":{"license.html":{}}}],["root",{"_index":48,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["royalty",{"_index":837,"title":{},"body":{"license.html":{}}}],["run",{"_index":585,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":633,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":602,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":849,"title":{},"body":{"license.html":{}}}],["sections",{"_index":713,"title":{},"body":{"license.html":{}}}],["see",{"_index":385,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":852,"title":{},"body":{"license.html":{}}}],["send",{"_index":596,"title":{},"body":{"index.html":{}}}],["sending",{"_index":668,"title":{},"body":{"index.html":{}}}],["sent",{"_index":807,"title":{},"body":{"license.html":{}}}],["separable",{"_index":791,"title":{},"body":{"license.html":{}}}],["separate",{"_index":931,"title":{},"body":{"license.html":{}}}],["service",{"_index":72,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/propagator.interface",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":331,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":711,"title":{},"body":{"license.html":{}}}],["shares",{"_index":746,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":333,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":335,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":759,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1013,"title":{},"body":{"license.html":{}}}],["solely",{"_index":964,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"license.html":{}}}],["span",{"_index":131,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":142,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["spec",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":984,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1048,"title":{},"body":{"license.html":{}}}],["stack",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":649,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":651,"title":{},"body":{"index.html":{}}}],["started",{"_index":379,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":925,"title":{},"body":{"license.html":{}}}],["stated",{"_index":848,"title":{},"body":{"license.html":{}}}],["statement",{"_index":918,"title":{},"body":{"license.html":{}}}],["statements",{"_index":535,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":890,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":993,"title":{},"body":{"license.html":{}}}],["string",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":517,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":844,"title":{},"body":{"license.html":{}}}],["submission",{"_index":921,"title":{},"body":{"license.html":{}}}],["submit",{"_index":801,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":799,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":825,"title":{},"body":{"license.html":{}}}],["such",{"_index":737,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":930,"title":{},"body":{"license.html":{}}}],["support",{"_index":1006,"title":{},"body":{"license.html":{}}}],["sync",{"_index":611,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1036,"title":{},"body":{"license.html":{}}}],["systems",{"_index":811,"title":{},"body":{"license.html":{}}}],["table",{"_index":545,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1059,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":598,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":875,"title":{},"body":{"license.html":{}}}],["terms",{"_index":706,"title":{},"body":{"license.html":{}}}],["test",{"_index":461,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":174,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":43,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["theory",{"_index":975,"title":{},"body":{"license.html":{}}}],["there's",{"_index":656,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":795,"title":{},"body":{"license.html":{}}}],["third",{"_index":906,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":126,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":169,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.exporterservice.getexporter",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":127,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":128,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":372,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.propagatorservice.getpropagator",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":332,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["those",{"_index":855,"title":{},"body":{"license.html":{}}}],["through",{"_index":714,"title":{},"body":{"license.html":{}}}],["throw",{"_index":352,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":691,"title":{},"body":{"index.html":{}}}],["title",{"_index":960,"title":{},"body":{"license.html":{}}}],["todo",{"_index":297,"title":{"todo.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["token",{"_index":631,"title":{},"body":{"index.html":{}}}],["tort",{"_index":976,"title":{},"body":{"license.html":{}}}],["trace",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":189,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":605,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":813,"title":{},"body":{"license.html":{}}}],["trade",{"_index":937,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":894,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":935,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":853,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":764,"title":{},"body":{"license.html":{}}}],["translation",{"_index":765,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":587,"title":{},"body":{"index.html":{}}}],["true",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":695,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":686,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":693,"title":{},"body":{"index.html":{}}}],["types",{"_index":770,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":699,"title":{},"body":{"index.html":{}}}],["typo",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":728,"title":{},"body":{"license.html":{}}}],["union",{"_index":723,"title":{},"body":{"license.html":{}}}],["unless",{"_index":923,"title":{},"body":{"license.html":{}}}],["unused",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":663,"title":{},"body":{"index.html":{}}}],["update",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":78,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":25,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["used",{"_index":628,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":639,"title":{},"body":{"index.html":{}}}],["user",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":577,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":357,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":968,"title":{},"body":{"license.html":{}}}],["value",{"_index":80,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1065,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":804,"title":{},"body":{"license.html":{}}}],["version",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["version.json",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":609,"title":{},"body":{"index.html":{}}}],["void",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":655,"title":{},"body":{"index.html":{}}}],["warn",{"_index":635,"title":{},"body":{"index.html":{}}}],["warning",{"_index":588,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":955,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":949,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":905,"title":{},"body":{"license.html":{}}}],["whether",{"_index":738,"title":{},"body":{"license.html":{}}}],["whole",{"_index":788,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":827,"title":{},"body":{"license.html":{}}}],["without",{"_index":667,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":771,"title":{},"body":{"license.html":{}}}],["works",{"_index":502,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":833,"title":{},"body":{"license.html":{}}}],["writing",{"_index":822,"title":{},"body":{"license.html":{}}}],["written",{"_index":805,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":669,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1043,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":1061,"title":{},"body":{"todo.html":{}}}],["zone.js",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1056,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                        custom Header\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:214\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:132\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:184\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:198\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:84\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:46\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, CanonicalCode } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.exporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          // TODO : To change after new spec...\n          span.setStatus({\n            code: CanonicalCode.INTERNAL\n          });\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger (Optional)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:49\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     collectorTypes.CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter,\n  collectorTypes,\n} from '@opentelemetry/exporter-collector';\nimport { Logger } from '@opentelemetry/api';\nimport { OTELCOL_LOGGER } from '../../../configuration/opentelemetry-config';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: collectorTypes.CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   * @param logger Logger (Optional)\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig,\n    @Optional() @Inject(OTELCOL_LOGGER) logger: Logger\n  ) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      logger,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.1.2\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ^10.1.2\n        \n            @angular/compiler : ^10.1.2\n        \n            @angular/core : ^10.1.2\n        \n            @angular/forms : ^10.1.2\n        \n            @angular/material : ^10.2.1\n        \n            @angular/platform-browser : ^10.1.2\n        \n            @angular/platform-browser-dynamic : ^10.1.2\n        \n            @angular/router : ^10.1.2\n        \n            @opentelemetry/exporter-collector : ^0.11.0\n        \n            @opentelemetry/propagator-jaeger : ^0.10.0\n        \n            @opentelemetry/web : ^0.11.0\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.3.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.1.9\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 2 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the Logger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]\nYou can see an example in the example-app.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n\nIn Progress\nDone ✓\n\n Add more configuration for OpenTelemetry-collector : See here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.logger')\n                        \n                    \n\n                \n                    \n                        Logger : injection for a logger compatible \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_EXPORTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.exporter')\n                        \n                    \n\n                \n                    \n                        injection for a Exporter \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_PROPAGATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.propagator')\n                        \n                    \n\n                \n                    \n                        injection for a propagator \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
