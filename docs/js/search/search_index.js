var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/B3PropagatorService.html",[0,0.312,1,1.702]],["body/injectables/B3PropagatorService.html",[0,0.49,1,3.057,2,1.274,3,0.503,4,0.503,5,0.391,6,0.424,7,4.242,8,1.78,9,0.503,10,0.391,11,1.242,12,2.788,13,0.91,14,2.944,15,1.304,16,2.682,17,0.992,18,0.033,19,2.871,20,0.639,21,0.562,22,2.047,23,2.132,24,1.634,25,2.351,26,1.274,27,1.274,28,0.503,29,0.992,30,1.274,31,0.562,32,0.02,33,0.025,34,0.02]],["title/interfaces/CommonCollectorConfig.html",[35,0.606,36,1.305]],["body/interfaces/CommonCollectorConfig.html",[3,0.312,4,0.312,5,0.243,6,0.21,9,0.312,10,0.243,16,1.106,18,0.033,20,0.277,21,0.349,28,0.709,31,0.349,32,0.012,33,0.018,34,0.012,35,0.992,36,1.749,37,0.934,38,1.015,39,1.015,40,1.614,41,1.533,42,1.481,43,1.421,44,1.871,45,2.078,46,2.326,47,2.326,48,1.567,49,1.964,50,1.41,51,2.551,52,1.38,53,2.081,54,1.481,55,1.933,56,1.933,57,2.51,58,0.825,59,1.155,60,1.325,61,1.763,62,1.167,63,1.481,64,1.362,65,0.934,66,1.106,67,0.791,68,0.859,69,1.106,70,1.106,71,1.106,72,1.481,73,1.923,74,1.063,75,1.481,76,1.208,77,1.763,78,1.614,79,1.208,80,1.481,81,1.614,82,1.208,83,1.481,84,1.208,85,2.045,86,1.015,87,1.106,88,0.689,89,1.763,90,1.763,91,1.614,92,1.614,93,0.825,94,0.517,95,1.208,96,1.208,97,1.208]],["title/injectables/CompositePropagatorService.html",[0,0.312,98,1.877]],["body/injectables/CompositePropagatorService.html",[0,0.434,1,3.056,2,1.059,3,0.418,4,0.418,5,0.325,6,0.424,8,1.479,9,0.418,10,0.325,11,1.102,12,2.599,13,1.011,15,1.216,17,0.824,18,0.033,19,2.709,20,0.652,21,0.467,22,1.816,23,1.772,24,1.358,25,1.954,26,1.059,27,1.059,28,0.418,29,0.824,30,1.059,31,0.467,32,0.017,33,0.022,34,0.017,43,0.824,50,0.897,52,1.304,58,0.756,62,0.824,65,1.249,69,2.552,88,0.631,94,0.692,98,3.143,99,4.239,100,2.599,101,3.371,102,3.121,103,3.121,104,2.814,105,1.479,106,3.371,107,1.772,108,3.686,109,2.613,110,1.479,111,1.479,112,3.371,113,2.669,114,3.371,115,3.371,116,3.371,117,3.371,118,3.371,119,3.371]],["title/injectables/ConsoleSpanExporterService.html",[0,0.312,120,2.087]],["body/injectables/ConsoleSpanExporterService.html",[0,0.487,2,1.264,3,0.499,4,0.499,5,0.388,6,0.422,9,0.499,10,0.388,11,1.236,13,0.902,15,1.301,17,0.984,18,0.033,20,0.607,21,0.558,26,1.264,27,1.264,28,0.499,29,0.984,30,1.264,31,0.558,32,0.02,33,0.025,34,0.02,74,1.462,120,3.739,121,4.221,122,3.362,123,1.929,124,2.931,125,3.049,126,4.024,127,3.049,128,2.864,129,2.219,130,2.333,131,1.766]],["title/injectables/HttpTextPropagatorService.html",[0,0.312,132,2.087]],["body/injectables/HttpTextPropagatorService.html",[0,0.392,1,2.922,2,0.913,3,0.36,4,0.36,5,0.28,6,0.34,8,1.275,9,0.36,10,0.28,11,0.996,12,2.442,13,0.652,15,0.913,17,0.711,18,0.033,19,2.253,20,0.65,21,0.403,22,1.894,23,1.528,24,1.171,26,0.913,27,0.913,28,0.505,29,0.711,30,0.913,32,0.014,33,0.02,34,0.014,41,1.178,48,1.627,52,1.178,59,1.476,62,0.711,65,1.077,67,0.913,68,1.389,74,0.84,88,0.762,93,0.913,94,1.045,98,3.222,102,2.922,103,2.819,108,3.893,109,2.725,110,1.275,111,2.354,132,3.284,133,2.625,134,2.471,135,3.399,136,4.035,137,2.906,138,2.956,139,2.956,140,1.275,141,3.222,142,3.399,143,2.426,144,3.412,145,2.426,146,2.426,147,2.11,148,1.873,149,2.11,150,2.426,151,2.426,152,2.906,153,4.252,154,2.906,155,4.477,156,2.906,157,2.426,158,2.906]],["title/injectables/HttpTraceContextPropagatorService.html",[0,0.312,102,1.702]],["body/injectables/HttpTraceContextPropagatorService.html",[0,0.486,2,1.26,3,0.497,4,0.497,5,0.387,6,0.421,8,1.761,9,0.497,10,0.387,11,1.234,12,2.777,13,0.9,14,2.913,15,1.299,17,0.981,18,0.033,19,2.862,20,0.636,21,0.556,22,2.033,23,2.11,24,1.617,25,2.326,26,1.26,27,1.26,28,0.497,29,0.981,30,1.26,31,0.556,32,0.02,33,0.025,34,0.02,52,1.46,67,1.914,102,3.046,110,2.215,133,3.254]],["title/interfaces/IExporter.html",[35,0.606,129,1.421]],["body/interfaces/IExporter.html",[3,0.531,4,0.531,5,0.413,6,0.439,9,0.531,10,0.413,11,1.285,13,0.961,15,0.961,17,1.048,18,0.032,20,0.471,28,0.531,32,0.021,33,0.026,34,0.021,35,1.065,37,1.588,74,1.52,124,3.438,125,3.117,128,3.007,129,2.307,131,1.881,159,3.577,160,3.816,161,4.285,162,3.816,163,5.258]],["title/interfaces/IPropagator.html",[22,1.305,35,0.606]],["body/interfaces/IPropagator.html",[3,0.537,4,0.537,5,0.418,6,0.442,9,0.537,10,0.418,11,1.294,12,2.854,13,0.972,15,0.972,17,1.06,18,0.032,19,2.927,20,0.476,22,2.133,24,1.746,28,0.537,32,0.021,33,0.026,34,0.021,35,1.07,37,1.606,48,1.584,160,3.843,162,3.843,164,3.618,165,4.334,166,4.419]],["title/interfaces/JaegerCollectorConfig.html",[35,0.606,80,1.305]],["body/interfaces/JaegerCollectorConfig.html",[3,0.346,4,0.346,5,0.269,6,0.233,9,0.346,10,0.269,16,1.226,18,0.033,20,0.307,21,0.387,28,0.727,31,0.387,32,0.014,33,0.02,34,0.014,35,1.028,36,1.596,37,1.035,38,1.126,39,1.126,40,1.226,41,1.587,42,1.596,43,0.968,44,1.773,45,1.705,46,1.738,47,1.738,48,1.406,49,1.467,50,0.743,51,2.197,52,1.145,53,1.339,54,1.126,55,1.469,56,1.469,57,2.574,58,0.627,59,0.877,60,1.469,61,1.898,62,1.292,63,1.569,64,1.467,65,1.035,66,1.226,67,0.877,68,0.953,69,1.226,70,1.226,71,1.226,72,1.596,73,2.017,74,1.145,75,1.596,76,1.339,77,1.898,78,1.738,79,1.339,80,1.854,81,2.409,82,1.898,83,1.596,84,1.339,85,2.129,86,1.126,87,1.226,88,0.742,89,1.898,90,1.898,91,1.738,92,1.738,93,0.888,94,0.573,95,1.339,96,1.339,97,1.339]],["title/injectables/JaegerExporterService.html",[0,0.312,167,1.877]],["body/injectables/JaegerExporterService.html",[0,0.434,2,1.056,3,0.417,4,0.417,5,0.324,6,0.423,9,0.558,10,0.324,11,1.1,13,1.009,15,1.331,17,0.822,18,0.033,20,0.595,21,0.466,26,1.056,27,1.056,28,0.417,29,1.24,30,1.056,31,0.624,32,0.017,33,0.022,34,0.017,43,0.822,49,1.246,50,0.895,58,0.754,81,1.476,88,1.088,93,0.754,94,1.112,100,2.432,105,1.476,107,1.768,111,1.476,113,1.768,123,1.612,125,2.847,127,2.847,128,2.707,129,1.975,130,1.95,131,1.476,140,1.476,167,3.14,168,4.235,169,5.417,170,3.757,171,3.757,172,4.522,173,3.757,174,3.267,175,2.609,176,3.757,177,3.267,178,3.757,179,1.95,180,3.364,181,3.364,182,3.364,183,2.808,184,2.168,185,3.364,186,2.442,187,3.364,188,3.364]],["title/injectables/JaegerHttpTracePropagatorService.html",[0,0.312,103,1.702]],["body/injectables/JaegerHttpTracePropagatorService.html",[0,0.422,2,1.016,3,0.401,4,0.401,5,0.312,6,0.445,8,1.42,9,0.543,10,0.312,11,1.072,12,2.555,13,1.115,14,3.182,15,1.249,17,0.791,18,0.033,19,2.671,20,0.645,21,0.448,22,1.766,23,1.7,24,1.766,26,1.016,27,1.016,28,0.401,29,0.791,30,1.016,31,0.608,32,0.016,33,0.022,34,0.016,42,1.766,43,0.791,50,1.166,52,1.542,57,1.924,58,0.725,62,0.791,67,1.674,87,2.182,88,1.076,93,0.725,94,1.094,100,2.384,103,2.802,105,1.42,107,1.7,109,3.09,111,1.42,113,2.614,140,1.42,179,1.875,184,2.085,189,4.45,190,3.182,191,4.384,192,3.66,193,2.826,194,4.384,195,4.384,196,3.235,197,3.235,198,3.235,199,3.66,200,2.7,201,2.7,202,3.235,203,3.235,204,3.235]],["title/interfaces/JaegerPropagatorConfig.html",[35,0.606,85,1.305]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.346,4,0.346,5,0.269,6,0.233,9,0.346,10,0.269,16,1.226,18,0.033,20,0.307,21,0.387,28,0.727,31,0.387,32,0.014,33,0.02,34,0.014,35,1.028,36,1.596,37,1.035,38,1.126,39,1.126,40,1.226,41,1.587,42,1.596,43,0.968,44,1.724,45,1.705,46,1.738,47,1.738,48,1.46,49,1.467,50,0.743,51,2.197,52,1.145,53,1.339,54,1.126,55,1.469,56,1.469,57,2.574,58,0.627,59,0.877,60,1.469,61,1.898,62,1.224,63,1.569,64,1.467,65,1.035,66,1.226,67,0.877,68,0.953,69,1.226,70,1.226,71,1.226,72,1.596,73,2.017,74,1.145,75,1.596,76,1.339,77,2.205,78,1.738,79,1.339,80,1.596,81,1.738,82,1.339,83,1.596,84,1.339,85,2.274,86,1.596,87,2.197,88,0.742,89,1.898,90,1.898,91,1.738,92,1.738,93,0.888,94,0.573,95,1.339,96,1.339,97,1.339]],["title/injectables/NoopHttpTextPropagatorService.html",[0,0.312,141,1.877]],["body/injectables/NoopHttpTextPropagatorService.html",[0,0.49,2,1.274,3,0.503,4,0.503,5,0.391,6,0.424,8,1.78,9,0.503,10,0.391,11,1.242,12,2.788,13,0.91,15,1.304,17,0.992,18,0.033,19,2.871,20,0.609,21,0.562,22,2.047,23,2.132,24,1.634,26,1.274,27,1.274,28,0.503,29,0.992,30,1.274,31,0.562,32,0.02,33,0.025,34,0.02,104,3.386,109,2.946,134,2.671,141,3.372,199,5.101,205,4.242]],["title/interfaces/OpenTelemetryConfig.html",[35,0.606,88,0.606]],["body/interfaces/OpenTelemetryConfig.html",[3,0.325,4,0.325,5,0.253,6,0.219,9,0.325,10,0.253,16,1.152,18,0.033,20,0.288,21,0.364,28,0.716,31,0.364,32,0.013,33,0.019,34,0.013,35,1.006,36,1.96,37,0.972,38,1.057,39,1.057,40,1.152,41,1.492,42,1.526,43,1.387,44,1.688,45,1.646,46,1.662,47,1.662,48,1.373,49,1.403,50,1.373,51,2.135,52,1.095,53,1.258,54,1.057,55,1.38,56,1.38,57,2.432,58,0.589,59,0.824,60,1.38,61,1.816,62,1.189,63,1.516,64,1.403,65,0.972,66,1.152,67,0.824,68,0.895,69,1.152,70,1.152,71,1.152,72,1.96,73,1.96,74,1.095,75,1.526,76,1.258,77,1.816,78,1.662,79,1.258,80,1.96,81,1.662,82,1.258,83,1.96,84,1.258,85,2.393,86,1.057,87,1.152,88,0.911,89,2.576,90,2.576,91,2.359,92,2.359,93,0.849,94,0.539,95,1.258,96,1.258,97,1.258]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[206,1.877,207,2.087]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[0,0.242,3,0.191,4,0.191,5,0.149,6,0.423,9,0.591,10,0.149,11,0.615,13,1.106,15,0.824,17,1.06,18,0.033,20,0.582,21,0.214,24,1.014,25,0.895,26,0.485,27,0.485,28,0.191,29,0.779,30,0.485,31,0.601,32,0.008,33,0.012,34,0.008,41,1.062,42,1.014,43,1.118,45,1.695,46,0.677,47,1.904,48,1.076,50,1.312,51,1.904,53,1.527,58,1.026,59,0.79,74,0.728,79,0.74,86,1.48,88,0.688,93,0.346,94,0.979,96,1.939,100,1.761,105,2.007,107,0.811,108,1.12,110,1.104,111,2.324,113,3.006,122,3.413,124,2.129,127,1.322,128,2.286,131,0.677,132,3.074,134,0.811,135,2.1,140,0.677,147,1.12,160,1.826,175,1.458,179,0.895,192,3.621,201,1.288,206,1.846,207,1.622,208,1.543,209,4.234,210,1.288,211,2.1,212,3.185,213,3.819,214,2.516,215,2.516,216,3.185,217,2.516,218,3.185,219,2.658,220,3.074,221,2.516,222,2.516,223,1.543,224,2.516,225,3.621,226,2.516,227,1.846,228,4.045,229,2.516,230,2.516,231,5.073,232,1.543,233,2.1,234,5.811,235,2.516,236,1.543,237,1.543,238,1.458,239,2.516,240,2.1,241,2.516,242,1.543,243,3.621,244,1.826,245,2.516,246,1.543,247,1.543,248,2.658,249,3.673,250,2.658,251,2.1,252,1.543,253,3.673,254,1.543,255,2.516,256,2.1,257,3.066,258,1.458,259,2.1,260,3.185,261,3.673,262,2.516,263,3.066,264,1.543,265,2.516,266,2.516,267,3.185,268,1.12,269,1.288,270,1.12,271,2.516,272,1.543,273,2.516,274,1.543,275,2.516,276,2.516,277,1.543,278,1.543,279,1.288,280,1.543,281,1.543,282,1.543,283,1.543,284,2.516,285,1.543,286,1.543,287,1.543,288,1.543,289,1.543,290,1.543,291,1.543,292,1.543,293,1.543,294,1.543,295,1.543,296,1.543,297,2.666,298,2.516,299,2.516,300,2.516,301,1.543,302,1.826,303,1.543,304,1.543,305,1.543,306,1.543,307,1.543,308,1.543,309,1.543,310,1.543,311,1.543,312,1.543,313,1.543,314,1.543,315,1.543,316,3.185,317,1.543,318,3.185,319,1.543,320,1.543,321,1.543,322,1.543,323,1.543,324,1.543,325,1.543,326,2.516,327,1.543,328,1.543,329,1.543,330,1.543]],["title/modules/OpenTelemetryInterceptorModule.html",[331,2.351,332,2.087]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.456,4,0.456,5,0.355,6,0.399,11,0.9,13,0.826,15,0.826,17,0.9,18,0.033,20,0.639,21,0.51,28,0.456,29,0.9,31,0.51,32,0.018,33,0.024,34,0.018,43,1.297,50,0.98,58,0.826,88,1.051,93,1.071,94,1.088,100,1.765,105,1.616,140,1.616,148,3.08,200,3.074,207,3.08,244,2.673,268,2.673,332,3.749,333,2.673,334,4.778,335,3.682,336,4.778,337,3.682,338,4.778,339,3.682,340,5.303,341,4.427,342,4.778,343,3.988,344,3.988,345,3.682,346,3.682,347,2.673,348,3.074,349,3.074,350,4.778,351,3.682,352,3.074,353,3.682,354,3.682,355,3.074,356,2.673,357,3.682,358,3.682,359,3.682]],["title/interfaces/OtelCollectorConfig.html",[35,0.606,72,1.305]],["body/interfaces/OtelCollectorConfig.html",[3,0.337,4,0.337,5,0.262,6,0.227,9,0.337,10,0.262,16,1.193,18,0.033,20,0.299,21,0.377,28,0.722,31,0.377,32,0.013,33,0.019,34,0.013,35,1.018,36,1.565,37,1.007,38,1.095,39,1.095,40,1.193,41,1.573,42,1.565,43,1.209,44,1.759,45,1.679,46,1.705,47,1.705,48,1.391,49,1.439,50,1.316,51,2.17,52,1.123,53,1.303,54,1.095,55,1.429,56,1.429,57,2.558,58,0.61,59,0.854,60,1.429,61,1.862,62,1.209,63,1.546,64,1.439,65,1.007,66,1.193,67,0.854,68,0.927,69,1.193,70,1.193,71,1.705,72,1.826,73,2.307,74,1.311,75,1.826,76,1.862,77,2.172,78,2.387,79,1.303,80,1.565,81,1.705,82,1.303,83,1.565,84,1.303,85,2.107,86,1.095,87,1.193,88,0.727,89,1.862,90,1.862,91,1.705,92,1.705,93,0.871,94,0.558,95,1.303,96,1.303,97,1.303,360,3.885]],["title/injectables/OtelcolExporterService.html",[0,0.312,361,1.877]],["body/injectables/OtelcolExporterService.html",[0,0.433,2,1.054,3,0.416,4,0.416,5,0.323,6,0.451,9,0.557,10,0.323,11,1.099,13,1.136,15,1.214,17,0.821,18,0.033,20,0.638,21,0.465,26,1.054,27,1.054,28,0.416,29,1.239,30,1.054,31,0.465,32,0.017,33,0.022,34,0.017,41,1.3,42,1.811,43,0.821,49,1.243,50,1.196,58,0.753,73,1.352,78,1.473,88,1.087,92,2.224,93,0.753,94,1.111,100,2.429,105,1.473,107,1.764,111,1.473,113,2.663,123,1.609,125,2.845,128,2.429,129,1.972,130,1.946,131,1.473,140,1.473,179,1.946,184,2.163,186,2.436,361,3.137,362,4.518,363,4.495,364,3.356,365,5.412,366,5.067,367,4.495,368,3.356,369,3.262,370,2.802,371,3.356,372,3.356,373,3.356,374,3.356,375,3.356]],["title/injectables/SpanExporterService.html",[0,0.312,220,2.087]],["body/injectables/SpanExporterService.html",[0,0.409,2,0.968,3,0.382,4,0.382,5,0.297,6,0.354,9,0.382,10,0.297,11,1.037,13,0.691,15,1.088,17,0.754,18,0.033,20,0.649,21,0.427,26,0.968,27,0.968,28,0.526,29,0.754,30,0.968,32,0.015,33,0.021,34,0.015,44,1.524,45,1.572,59,0.968,62,1.037,63,1.447,64,1.572,74,0.892,88,0.794,93,0.951,94,1.072,111,2.405,120,3.127,122,1.787,123,1.478,124,3.282,125,2.747,127,2.55,128,2.325,129,2.129,130,1.787,131,1.353,136,4.11,138,3.08,139,3.08,140,1.353,143,2.574,145,2.574,146,2.574,147,2.238,149,2.238,150,2.574,151,2.574,153,4.049,155,4.362,167,3.282,220,2.735,258,2.46,279,4.362,361,3.282,376,3.08,377,4.049,378,3.084,379,3.282,380,3.08,381,3.084,382,3.084,383,2.574,384,3.084]],["title/interfaces/ZipkinCollectorConfig.html",[35,0.606,83,1.305]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.346,4,0.346,5,0.269,6,0.233,9,0.346,10,0.269,16,1.224,18,0.033,20,0.306,21,0.387,28,0.726,31,0.387,32,0.014,33,0.02,34,0.014,35,1.027,36,1.593,37,1.033,38,1.123,39,1.123,40,1.224,41,1.586,42,1.593,43,0.967,44,1.723,45,1.703,46,1.736,47,1.736,48,1.405,49,1.465,50,0.742,51,2.195,52,1.144,53,1.337,54,1.123,55,1.466,56,1.466,57,2.573,58,0.625,59,0.876,60,1.466,61,1.896,62,1.223,63,1.706,64,1.465,65,1.033,66,1.224,67,0.876,68,0.951,69,1.224,70,1.224,71,1.224,72,1.593,73,2.322,74,1.329,75,1.852,76,1.337,77,1.896,78,1.736,79,1.337,80,1.593,81,1.736,82,1.337,83,1.852,84,1.896,85,2.127,86,1.123,87,1.224,88,0.741,89,1.896,90,1.896,91,1.736,92,1.736,93,0.887,94,0.572,95,1.337,96,1.337,97,1.337]],["title/injectables/ZipkinExporterService.html",[0,0.312,379,1.877]],["body/injectables/ZipkinExporterService.html",[0,0.442,2,1.085,3,0.428,4,0.428,5,0.333,6,0.429,9,0.568,10,0.333,11,1.12,13,1.028,15,1.228,17,0.845,18,0.033,20,0.601,21,0.479,26,1.085,27,1.085,28,0.428,29,0.845,30,1.085,31,0.479,32,0.017,33,0.023,34,0.017,43,0.845,49,1.28,50,0.919,58,0.775,73,1.392,88,1.096,91,1.517,93,0.775,94,1.124,100,2.464,105,1.517,107,1.816,111,1.517,113,1.816,123,1.656,125,2.878,127,2.878,128,2.731,129,2.011,130,2.003,131,1.517,140,1.517,170,3.825,171,3.825,172,4.571,173,3.825,174,3.327,175,2.656,176,3.825,177,3.327,178,3.825,179,2.003,183,2.885,184,2.228,186,2.509,379,2.656,385,4.292,386,4.583,387,3.456,388,3.456,389,3.456,390,3.456]],["title/changelog.html",[391,1.577,392,1.577,393,2.271]],["body/changelog.html",[5,0.457,18,0.02,31,0.657,32,0.015,33,0.02,34,0.015,41,0.854,44,0.927,48,0.785,52,0.854,54,1.189,62,0.722,64,1.093,68,1.617,70,1.295,86,1.189,110,1.806,193,3.055,227,1.711,238,3.524,258,2.973,393,3.436,394,2.952,395,2.952,396,2.143,397,2.952,398,1.903,399,2.952,400,2.952,401,2.952,402,3.436,403,5.847,404,4.116,405,2.952,406,5.732,407,2.952,408,2.952,409,5.394,410,5.394,411,2.464,412,2.952,413,2.952,414,2.952,415,4.116,416,2.952,417,4.74,418,4.116,419,2.952,420,2.952,421,2.952,422,2.952,423,2.952,424,2.464,425,2.952,426,5.129,427,2.952,428,3.957,429,5.129,430,4.116,431,3.957,432,4.116,433,4.116,434,4.116,435,4.116,436,5.129,437,2.952,438,2.952,439,4.116,440,2.952,441,2.952,442,2.952,443,2.952,444,4.74,445,2.952,446,2.952,447,2.952,448,2.952,449,2.952,450,4.116,451,2.952,452,2.952,453,2.952,454,2.952,455,2.952,456,2.952,457,2.952,458,2.952,459,1.903,460,5.732,461,2.952,462,2.952,463,2.952,464,2.952,465,2.464,466,2.952,467,2.952,468,2.952,469,2.952,470,2.952,471,2.952,472,2.952,473,2.952,474,2.143,475,2.952,476,2.952,477,2.952,478,2.952,479,2.464,480,2.952,481,2.952,482,4.116,483,2.952,484,2.952,485,4.116,486,4.116,487,2.952,488,2.952,489,2.464,490,2.952,491,3.436,492,4.116,493,4.116,494,2.952,495,2.952,496,2.952,497,5.129,498,2.952,499,2.952,500,2.952,501,2.952,502,2.952,503,4.116,504,2.952,505,2.952]],["title/coverage.html",[506,3.662]],["body/coverage.html",[0,0.59,1,1.608,5,0.295,6,0.539,7,2.553,8,2.54,18,0.032,22,1.232,31,0.424,32,0.015,33,0.021,34,0.015,35,1.104,36,1.232,38,2.332,39,2.332,50,0.814,52,1.22,72,1.232,80,1.232,83,1.232,85,1.232,88,0.573,93,0.686,98,1.773,99,2.553,102,1.608,103,1.608,109,2.446,110,1.342,120,1.972,121,2.553,122,1.773,123,2.708,129,1.342,132,1.972,133,3.114,134,2.539,141,1.773,144,2.22,149,3.063,159,2.553,164,2.553,167,1.773,168,2.553,189,2.553,205,2.553,206,1.773,207,1.972,209,2.553,210,2.553,220,1.972,361,1.773,362,2.553,376,3.063,379,1.773,380,2.22,385,2.553,506,2.553,507,2.553,508,3.059,509,3.059,510,6.442,511,3.059,512,6.12,513,3.059,514,5.208,515,3.059,516,4.831,517,3.059,518,3.059,519,3.059,520,3.059,521,3.059,522,2.553]],["title/dependencies.html",[523,2.271,524,2.505]],["body/dependencies.html",[18,0.033,21,0.587,32,0.021,33,0.026,34,0.021,44,1.331,269,3.537,270,3.076,302,3.076,369,3.076,402,4.724,524,2.731,525,4.238,526,6.322,527,4.238,528,5.221,529,4.238,530,4.238,531,4.238,532,4.238,533,5.221,534,4.359,535,4.238,536,4.238,537,4.238,538,4.238,539,4.238,540,4.238,541,4.238,542,4.238,543,3.537,544,3.537,545,4.238,546,4.238,547,4.238,548,4.238]],["title/miscellaneous/enumerations.html",[549,1.43,550,3.244]],["body/miscellaneous/enumerations.html",[6,0.374,10,0.432,16,1.97,18,0.032,32,0.022,33,0.027,34,0.022,38,1.808,39,2.338,44,1.698,48,1.439,62,1.419,63,1.844,64,2.003,65,1.663,66,1.97,67,1.41,68,1.531,69,1.97,70,1.97,75,2.552,549,2.359,550,3.747,551,4.514]],["title/miscellaneous/functions.html",[549,1.43,552,3.244]],["body/miscellaneous/functions.html",[1,2.707,6,0.43,8,2.26,9,0.638,10,0.399,15,0.929,18,0.029,32,0.02,33,0.025,34,0.02,43,1.259,45,1.536,48,1.37,58,1.155,59,1.618,62,1.013,63,1.414,64,1.536,67,1.302,68,1.414,94,1.203,98,2.986,102,2.707,103,2.707,105,2.26,123,2.469,127,2.707,133,2.672,134,2.707,136,3.739,141,2.986,142,3.46,144,4.068,148,2.672,167,2.986,361,2.986,376,3.009,377,3.46,379,2.986,380,3.739,549,2.179,552,3.46,553,4.145,554,4.145,555,4.145,556,4.145]],["title/index.html",[10,0.262,391,1.577,392,1.577]],["body/index.html",[3,0.611,18,0.032,20,0.465,21,0.234,24,1.089,25,1.568,28,0.335,29,0.413,32,0.021,33,0.013,34,0.008,35,0.506,36,0.68,40,1.187,41,1.617,43,0.661,44,1.887,45,1.434,46,0.741,47,1.485,48,1.263,49,1.002,51,1.485,52,1.372,54,1.559,57,1.858,58,0.606,59,0.849,61,2.166,62,1.327,63,1.541,65,1.254,66,1.187,67,0.53,68,0.922,71,2.483,72,0.68,73,2.103,74,0.782,75,0.68,76,1.296,77,1.622,78,0.741,80,0.68,81,1.187,82,0.809,83,0.68,84,1.296,85,0.68,86,1.559,87,1.187,88,0.634,89,1.296,90,1.296,91,1.187,92,1.187,110,0.741,122,1.568,131,1.187,138,1.225,157,1.409,166,1.409,174,3.445,175,0.978,206,2.859,211,1.409,213,1.409,219,1.409,227,0.978,233,1.409,238,1.568,243,2.824,244,2.456,248,2.824,250,2.257,256,1.409,257,1.409,258,3.423,259,1.409,263,1.409,268,1.225,270,2.456,297,1.225,302,1.225,331,3.074,332,2.181,341,2.257,343,1.409,344,3.23,347,1.225,348,1.409,352,3.23,355,1.409,356,1.225,369,2.456,370,1.409,383,1.409,391,1.568,392,1.568,396,1.963,398,3.279,411,2.257,431,1.409,459,3.437,474,2.456,479,1.409,522,2.257,523,1.409,524,3.279,534,1.409,543,1.409,544,1.409,557,3.384,558,3.384,559,1.688,560,1.688,561,3.58,562,1.688,563,2.257,564,2.704,565,2.704,566,3.87,567,2.704,568,2.704,569,4.746,570,3.384,571,1.688,572,1.688,573,2.704,574,3.87,575,2.257,576,2.704,577,2.704,578,2.257,579,2.257,580,1.688,581,1.688,582,1.688,583,1.688,584,1.409,585,1.688,586,1.688,587,1.688,588,1.688,589,1.688,590,1.688,591,1.688,592,2.704,593,2.704,594,1.688,595,1.688,596,1.688,597,1.409,598,1.688,599,1.688,600,1.409,601,1.688,602,1.688,603,3.384,604,1.688,605,1.688,606,1.688,607,1.688,608,1.409,609,1.409,610,1.688,611,1.688,612,1.688,613,1.688,614,1.688,615,1.688,616,2.704,617,1.688,618,2.704,619,2.704,620,1.688,621,1.688,622,1.688,623,1.688,624,1.688,625,1.688,626,2.704,627,2.704,628,1.088,629,1.688,630,1.688,631,1.688,632,1.688,633,1.688,634,1.688,635,1.409,636,1.409,637,1.688,638,1.688,639,4.235,640,4.235,641,4.235,642,5.219,643,4.235,644,3.535,645,4.235,646,4.235,647,4.235,648,1.688,649,1.688,650,1.688,651,1.688,652,1.688,653,1.688,654,1.409,655,1.688,656,1.688,657,1.688,658,1.688,659,1.688,660,1.688,661,2.704,662,2.704,663,1.688,664,1.688,665,1.688,666,1.688,667,1.688,668,1.688,669,1.688]],["title/license.html",[391,1.577,392,1.577,670,2.271]],["body/license.html",[4,0.619,5,0.425,9,0.158,13,0.285,18,0.014,20,0.14,29,0.311,32,0.011,33,0.011,34,0.006,37,0.471,40,0.558,41,0.368,54,1.909,58,0.623,59,0.399,134,1.713,139,1.555,148,0.82,162,0.923,177,0.923,193,1.79,227,0.737,238,1.242,240,1.789,251,3.292,297,0.923,398,0.82,424,1.062,459,0.82,474,4.017,489,2.318,491,1.789,507,2.318,561,0.923,563,1.062,575,1.789,584,2.318,597,1.062,609,1.062,628,0.82,636,3.037,644,1.789,670,5.016,671,3.259,672,2.777,673,1.272,674,1.272,675,1.272,676,4.585,677,5.096,678,3.259,679,3.638,680,1.272,681,5.272,682,4.74,683,1.272,684,1.272,685,1.272,686,4.74,687,5.096,688,3.943,689,4.74,690,2.143,691,1.272,692,3.638,693,1.272,694,1.272,695,1.272,696,3.259,697,1.272,698,4.585,699,3.259,700,2.143,701,1.272,702,2.777,703,2.143,704,1.272,705,1.272,706,5.477,707,3.259,708,2.143,709,1.272,710,2.143,711,1.272,712,1.272,713,1.272,714,1.272,715,1.272,716,1.272,717,1.272,718,2.777,719,1.272,720,2.777,721,2.143,722,5.096,723,1.272,724,1.272,725,3.943,726,4.585,727,3.259,728,2.143,729,2.777,730,3.943,731,1.272,732,1.272,733,1.272,734,1.272,735,1.272,736,2.143,737,1.272,738,1.272,739,1.272,740,5.033,741,2.777,742,2.143,743,1.272,744,4.585,745,2.143,746,1.272,747,3.638,748,2.143,749,1.272,750,5.477,751,1.272,752,1.272,753,1.272,754,1.272,755,1.272,756,1.272,757,2.143,758,1.272,759,1.272,760,1.272,761,1.272,762,1.272,763,3.259,764,3.638,765,1.272,766,2.143,767,3.259,768,2.143,769,1.272,770,3.638,771,2.143,772,1.272,773,1.272,774,2.777,775,1.272,776,1.272,777,1.272,778,1.272,779,2.143,780,1.062,781,1.272,782,1.272,783,2.777,784,1.272,785,1.272,786,2.777,787,1.272,788,1.272,789,1.272,790,3.259,791,4.74,792,1.272,793,1.272,794,2.143,795,4.406,796,2.777,797,3.259,798,2.143,799,2.143,800,2.143,801,2.143,802,2.777,803,2.143,804,2.777,805,2.143,806,2.143,807,2.143,808,2.143,809,1.062,810,2.143,811,1.272,812,1.272,813,3.638,814,4.195,815,2.777,816,2.143,817,1.272,818,1.272,819,2.143,820,2.143,821,1.272,822,1.272,823,2.777,824,2.143,825,1.272,826,1.272,827,1.272,828,2.777,829,1.272,830,1.272,831,1.272,832,2.143,833,2.143,834,1.272,835,1.272,836,1.272,837,1.272,838,1.272,839,1.272,840,1.272,841,2.143,842,1.272,843,1.272,844,1.272,845,1.272,846,1.272,847,1.272,848,1.272,849,1.272,850,2.777,851,1.272,852,2.777,853,1.272,854,1.272,855,1.272,856,1.272,857,4.406,858,1.272,859,1.272,860,1.272,861,1.272,862,1.272,863,3.259,864,2.143,865,3.259,866,1.272,867,1.272,868,1.272,869,1.272,870,1.272,871,2.777,872,1.272,873,1.272,874,2.143,875,2.143,876,1.272,877,1.272,878,1.272,879,2.143,880,1.272,881,1.272,882,3.638,883,1.272,884,1.272,885,1.272,886,1.272,887,1.272,888,1.272,889,1.272,890,2.777,891,3.259,892,1.272,893,1.272,894,1.272,895,1.272,896,1.272,897,1.272,898,1.272,899,1.272,900,1.272,901,1.272,902,1.272,903,2.143,904,1.272,905,1.272,906,2.143,907,1.272,908,1.272,909,3.259,910,1.272,911,1.272,912,1.272,913,1.272,914,1.272,915,1.272,916,1.272,917,3.259,918,2.777,919,2.777,920,2.777,921,2.143,922,2.143,923,2.777,924,2.143,925,2.143,926,2.143,927,2.143,928,1.272,929,1.272,930,1.272,931,1.272,932,1.272,933,1.272,934,1.272,935,1.272,936,1.272,937,2.143,938,1.272,939,1.272,940,1.272,941,1.272,942,3.638,943,1.272,944,1.272,945,1.272,946,1.272,947,1.272,948,1.272,949,1.272,950,1.272,951,3.638,952,1.272,953,1.272,954,1.272,955,1.272,956,1.272,957,1.062,958,1.272,959,1.272,960,1.272,961,1.272,962,1.272,963,1.272,964,1.272,965,1.272,966,1.272,967,1.272,968,1.272,969,1.272,970,2.777,971,1.272,972,1.272,973,1.272,974,1.272,975,1.272,976,2.143,977,1.272,978,1.272,979,1.272,980,1.272,981,1.272,982,1.272,983,1.272,984,1.272,985,1.272,986,1.272,987,1.272,988,1.272,989,1.272,990,1.272,991,1.272,992,2.143,993,1.272,994,1.272,995,1.272,996,2.143,997,2.143,998,1.272,999,1.272,1000,1.272,1001,1.272,1002,1.272,1003,1.272,1004,1.272,1005,1.272,1006,1.272,1007,1.272,1008,1.272,1009,1.272,1010,1.272,1011,1.272,1012,1.272,1013,1.272,1014,1.272,1015,1.272,1016,1.272,1017,1.272,1018,1.272,1019,1.272,1020,1.272]],["title/modules.html",[333,3.185]],["body/modules.html",[18,0.029,32,0.025,33,0.029,34,0.025,332,3.249,333,3.658,628,3.249,1021,5.04,1022,5.04]],["title/overview.html",[1023,3.662]],["body/overview.html",[2,1.517,18,0.028,32,0.024,33,0.028,34,0.024,37,1.79,227,2.8,331,4.101,347,3.507,349,4.033,356,3.507,524,3.114,608,4.033,957,4.033,1023,4.033,1024,4.831,1025,5.649,1026,4.831,1027,4.831,1028,4.831]],["title/todo.html",[190,1.974,391,1.577,392,1.577]],["body/todo.html",[18,0.031,31,0.573,32,0.02,33,0.025,34,0.02,41,1.693,44,1.615,48,1.1,62,1.432,63,1.909,71,2.256,110,1.814,124,2.981,175,2.981,190,4.063,193,3.314,206,2.396,225,3.451,238,3.648,258,2.396,396,3.001,398,2.664,428,3.451,459,2.664,465,3.451,561,4.063,578,3.451,579,3.451,600,3.451,628,3.314,635,5.028,654,3.451,740,3.451,780,3.451,809,3.451,1029,4.134,1030,4.134,1031,4.134,1032,4.134,1033,4.134,1034,4.134]],["title/miscellaneous/variables.html",[549,1.43,1035,3.244]],["body/miscellaneous/variables.html",[6,0.402,10,0.464,18,0.03,31,0.668,32,0.024,33,0.028,34,0.024,38,1.94,39,2.271,74,1.393,75,1.94,93,1.341,94,0.988,95,2.308,97,2.308,549,2.531,551,4.02,1035,4.02]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":591,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.1",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":402,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":585,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":195,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["0.8.2",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":428,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["0319eee",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.19.0",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":411,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.5",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1027,"title":{},"body":{"overview.html":{}}}],["12.0.2",{"_index":664,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":672,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["2004",{"_index":674,"title":{},"body":{"license.html":{}}}],["2020",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":479,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["5.2.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":713,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1028,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":424,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":544,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/node",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":895,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":973,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":970,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":666,"title":{},"body":{"index.html":{}}}],["act",{"_index":980,"title":{},"body":{"license.html":{}}}],["acting",{"_index":694,"title":{},"body":{"license.html":{}}}],["acts",{"_index":949,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":881,"title":{},"body":{"license.html":{}}}],["adding",{"_index":615,"title":{},"body":{"index.html":{}}}],["additional",{"_index":882,"title":{},"body":{"license.html":{}}}],["additions",{"_index":765,"title":{},"body":{"license.html":{}}}],["advised",{"_index":968,"title":{},"body":{"license.html":{}}}],["against",{"_index":833,"title":{},"body":{"license.html":{}}}],["agent",{"_index":637,"title":{},"body":{"index.html":{}}}],["agree",{"_index":983,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":920,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":900,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":838,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":651,"title":{},"body":{"index.html":{}}}],["alone",{"_index":829,"title":{},"body":{"license.html":{}}}],["along",{"_index":872,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":880,"title":{},"body":{"license.html":{}}}],["already",{"_index":353,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":617,"title":{},"body":{"index.html":{}}}],["always",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":668,"title":{},"body":{"index.html":{}}}],["amd",{"_index":643,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":853,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":860,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":866,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":977,"title":{},"body":{"license.html":{}}}],["angular",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":649,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":754,"title":{},"body":{"license.html":{}}}],["apache",{"_index":671,"title":{},"body":{"license.html":{}}}],["api",{"_index":201,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":581,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":574,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":604,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":602,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":630,"title":{},"body":{"index.html":{}}}],["appand",{"_index":621,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":603,"title":{},"body":{"index.html":{}}}],["appear",{"_index":877,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":748,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":918,"title":{},"body":{"license.html":{}}}],["application",{"_index":174,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["applies",{"_index":822,"title":{},"body":{"license.html":{}}}],["apply",{"_index":992,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":355,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1002,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":935,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1011,"title":{},"body":{"license.html":{}}}],["arising",{"_index":956,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":989,"title":{},"body":{"license.html":{}}}],["associated",{"_index":940,"title":{},"body":{"license.html":{}}}],["assume",{"_index":938,"title":{},"body":{"license.html":{}}}],["async",{"_index":595,"title":{},"body":{"index.html":{}}}],["attach",{"_index":993,"title":{},"body":{"license.html":{}}}],["attached",{"_index":746,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":863,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":690,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":741,"title":{},"body":{"license.html":{}}}],["available",{"_index":628,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["b3,httptrace,composite,jaeger",{"_index":599,"title":{},"body":{"index.html":{}}}],["b3propagator",{"_index":16,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["b3propagatorservice",{"_index":1,"title":{"injectables/B3PropagatorService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b63afc1",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":646,"title":{},"body":{"index.html":{}}}],["base",{"_index":653,"title":{},"body":{"index.html":{}}}],["based",{"_index":609,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":922,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":770,"title":{},"body":{"license.html":{}}}],["below",{"_index":749,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":717,"title":{},"body":{"license.html":{}}}],["between",{"_index":590,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":762,"title":{},"body":{"license.html":{}}}],["body",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":994,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":51,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":594,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":608,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":997,"title":{},"body":{"license.html":{}}}],["break",{"_index":155,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["browse",{"_index":1022,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":534,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":613,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":855,"title":{},"body":{"license.html":{}}}],["case",{"_index":153,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["cause",{"_index":644,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":859,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":393,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":955,"title":{},"body":{"license.html":{}}}],["charge",{"_index":804,"title":{},"body":{"license.html":{}}}],["choose",{"_index":971,"title":{},"body":{"license.html":{}}}],["claim",{"_index":835,"title":{},"body":{"license.html":{}}}],["claims",{"_index":824,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":489,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["collector",{"_index":44,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"todo.html":{}}}],["collector(otelcol",{"_index":583,"title":{},"body":{"index.html":{}}}],["collector.jaeger",{"_index":382,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector.otelcol",{"_index":383,"title":{},"body":{"injectables/SpanExporterService.html":{},"index.html":{}}}],["collector.zipkin",{"_index":384,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector/build/src/platform/browser",{"_index":370,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["collector/build/src/platform/browser/types",{"_index":371,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collector/issues/1385",{"_index":1033,"title":{},"body":{"todo.html":{}}}],["collectorconfiguration",{"_index":572,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfig",{"_index":367,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbrowser",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":368,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":375,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":830,"title":{},"body":{"license.html":{}}}],["command",{"_index":619,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1003,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":965,"title":{},"body":{"license.html":{}}}],["commit",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":40,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":36,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":642,"title":{},"body":{"index.html":{}}}],["communication",{"_index":774,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":735,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1014,"title":{},"body":{"license.html":{}}}],["complies",{"_index":888,"title":{},"body":{"license.html":{}}}],["compose",{"_index":627,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":631,"title":{},"body":{"index.html":{}}}],["composite",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["compositepropagator",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["compositepropagatorservice",{"_index":98,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["computer",{"_index":962,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":677,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.collector",{"_index":381,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["config.commonconfig.propagator",{"_index":152,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["config.commonconfig.servicename",{"_index":186,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerconfig?.endpoint",{"_index":187,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":203,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":374,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":373,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":39,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig.url",{"_index":390,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configjaeger",{"_index":182,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["configurable",{"_index":587,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":41,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":140,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":573,"title":{},"body":{"index.html":{}}}],["configured",{"_index":377,"title":{},"body":{"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["consequential",{"_index":954,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":979,"title":{},"body":{"license.html":{}}}],["console",{"_index":45,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["console.error('error",{"_index":146,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["consolespanexporter",{"_index":127,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["consolespanexporterservice",{"_index":120,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":787,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":839,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":184,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":101,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":179,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":883,"title":{},"body":{"license.html":{}}}],["contained",{"_index":869,"title":{},"body":{"license.html":{}}}],["content",{"_index":915,"title":{},"body":{"license.html":{}}}],["contents",{"_index":563,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":708,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":764,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":828,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":890,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":791,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":840,"title":{},"body":{"license.html":{}}}],["control",{"_index":696,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":697,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":737,"title":{},"body":{"license.html":{}}}],["copies",{"_index":847,"title":{},"body":{"license.html":{}}}],["copy",{"_index":852,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":687,"title":{},"body":{"license.html":{}}}],["correlation",{"_index":1031,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":836,"title":{},"body":{"license.html":{}}}],["cours",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":506,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":611,"title":{},"body":{"index.html":{}}}],["cross",{"_index":834,"title":{},"body":{"license.html":{}}}],["current",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":911,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":951,"title":{},"body":{"license.html":{}}}],["date",{"_index":844,"title":{},"body":{"license.html":{}}}],["day",{"_index":178,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["dd7a0e5",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":667,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":985,"title":{},"body":{"license.html":{}}}],["define",{"_index":160,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":139,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"license.html":{}}}],["definitions",{"_index":680,"title":{},"body":{"license.html":{}}}],["del",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":946,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":662,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":524,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":648,"title":{},"body":{"index.html":{}}}],["depends",{"_index":641,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":559,"title":{},"body":{"index.html":{}}}],["deps",{"_index":145,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["derivative",{"_index":750,"title":{},"body":{"license.html":{}}}],["derived",{"_index":751,"title":{},"body":{"license.html":{}}}],["describing",{"_index":912,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["designated",{"_index":789,"title":{},"body":{"license.html":{}}}],["determining",{"_index":934,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":633,"title":{},"body":{"index.html":{}}}],["different",{"_index":887,"title":{},"body":{"license.html":{}}}],["dir",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":702,"title":{},"body":{"license.html":{}}}],["direction",{"_index":704,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":916,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":784,"title":{},"body":{"license.html":{}}}],["display",{"_index":575,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":813,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":871,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":679,"title":{},"body":{"license.html":{}}}],["doc",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":626,"title":{},"body":{"index.html":{}}}],["docs",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":685,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":507,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1032,"title":{},"body":{"todo.html":{}}}],["don't",{"_index":1001,"title":{},"body":{"license.html":{}}}],["done",{"_index":1034,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":797,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1009,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":752,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":755,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":771,"title":{},"body":{"license.html":{}}}],["en",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":996,"title":{},"body":{"license.html":{}}}],["end",{"_index":991,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["entities",{"_index":695,"title":{},"body":{"license.html":{}}}],["entity",{"_index":689,"title":{},"body":{"license.html":{}}}],["enum",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["enumerations",{"_index":550,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":605,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":606,"title":{},"body":{"index.html":{}}}],["error",{"_index":352,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["even",{"_index":967,"title":{},"body":{"license.html":{}}}],["event",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.status",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":459,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["except",{"_index":815,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":786,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":803,"title":{},"body":{"license.html":{}}}],["executed",{"_index":901,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":941,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":719,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":892,"title":{},"body":{"license.html":{}}}],["export",{"_index":28,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":658,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":124,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"todo.html":{}}}],["exporter.interface",{"_index":130,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.service",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["exporter.service.ts",{"_index":123,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["exporter.service.ts:16",{"_index":387,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":126,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:18",{"_index":180,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:25",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:32",{"_index":378,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["exporter.service.ts:34",{"_index":388,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:36",{"_index":181,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:43",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":183,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exports",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":925,"title":{},"body":{"license.html":{}}}],["f",{"_index":629,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":136,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["fad044a",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":963,"title":{},"body":{"license.html":{}}}],["false",{"_index":576,"title":{},"body":{"index.html":{}}}],["features",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":972,"title":{},"body":{"license.html":{}}}],["fields",{"_index":995,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":711,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":845,"title":{},"body":{"license.html":{}}}],["files",{"_index":729,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":930,"title":{},"body":{"license.html":{}}}],["fix",{"_index":654,"title":{},"body":{"index.html":{},"todo.html":{}}}],["fixes",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":850,"title":{},"body":{"license.html":{}}}],["form",{"_index":722,"title":{},"body":{"license.html":{}}}],["format",{"_index":1005,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":806,"title":{},"body":{"license.html":{}}}],["function",{"_index":149,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["functions",{"_index":552,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generally",{"_index":601,"title":{},"body":{"index.html":{}}}],["generated",{"_index":736,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":125,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":12,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["getting",{"_index":391,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1030,"title":{},"body":{"todo.html":{}}}],["give",{"_index":162,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":565,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":960,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1019,"title":{},"body":{"license.html":{}}}],["grant",{"_index":796,"title":{},"body":{"license.html":{}}}],["granted",{"_index":721,"title":{},"body":{"license.html":{}}}],["granting",{"_index":691,"title":{},"body":{"license.html":{}}}],["grants",{"_index":799,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1021,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":947,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":987,"title":{},"body":{"license.html":{}}}],["header",{"_index":86,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":78,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["here",{"_index":635,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":798,"title":{},"body":{"license.html":{}}}],["herein",{"_index":897,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":986,"title":{},"body":{"license.html":{}}}],["http",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["http.interceptor",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:115",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:140",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:176",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:192",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:14268/api/traces",{"_index":592,"title":{},"body":{"index.html":{}}}],["http://localhost:16686",{"_index":634,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":623,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":675,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1016,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":647,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":578,"title":{},"body":{"index.html":{},"todo.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":562,"title":{},"body":{"index.html":{}}}],["httpsender",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["httptextpropagator",{"_index":19,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["httptextpropagatorservice",{"_index":132,"title":{"injectables/HttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["httptextpropagatorservicefactory",{"_index":144,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httptextpropagatorservicefactory(config",{"_index":555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httptrace",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["httptracecontext",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["httptracecontextpropagatorservice",{"_index":102,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["id",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1010,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":999,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":129,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":709,"title":{},"body":{"license.html":{}}}],["iii",{"_index":716,"title":{},"body":{"license.html":{}}}],["implement",{"_index":610,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":166,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":30,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["implied",{"_index":926,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["improving",{"_index":785,"title":{},"body":{"license.html":{}}}],["inability",{"_index":958,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":953,"title":{},"body":{"license.html":{}}}],["include",{"_index":584,"title":{},"body":{"index.html":{},"license.html":{}}}],["included",{"_index":745,"title":{},"body":{"license.html":{}}}],["includes",{"_index":867,"title":{},"body":{"license.html":{}}}],["including",{"_index":726,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":768,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":194,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["incorporated",{"_index":794,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":988,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":984,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":975,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":743,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":703,"title":{},"body":{"license.html":{}}}],["individual",{"_index":718,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":1000,"title":{},"body":{"license.html":{}}}],["informational",{"_index":878,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":827,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":841,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptextpropagatorservice",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":0,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":135,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":163,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":571,"title":{},"body":{"index.html":{}}}],["installation",{"_index":564,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":831,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":766,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":206,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":640,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":38,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console",{"_index":121,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":159,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":161,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/jaeger",{"_index":168,"title":{},"body":{"injectables/JaegerExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":376,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/exporter/zipkin",{"_index":385,"title":{},"body":{"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":133,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":189,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":205,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":164,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":165,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":35,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":37,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":22,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":807,"title":{},"body":{"license.html":{}}}],["isn't",{"_index":170,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["issue",{"_index":780,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":175,"title":{},"body":{"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["jaegercollectorconfig",{"_index":80,"title":{"interfaces/JaegerCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["jaegerconfig",{"_index":90,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["jaegerexporter",{"_index":169,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporter(this.configjaeger",{"_index":188,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporterservice",{"_index":167,"title":{"injectables/JaegerExporterService.html":{}},"body":{"injectables/JaegerExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerhttptracepropagator",{"_index":197,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":204,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":103,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerpropagator",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["jaegerpropagatorconfig",{"_index":85,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":673,"title":{},"body":{"license.html":{}}}],["js",{"_index":543,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":580,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["json.stringify(event.error",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":557,"title":{},"body":{"index.html":{}}}],["key",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":924,"title":{},"body":{"license.html":{}}}],["language",{"_index":1018,"title":{},"body":{"license.html":{}}}],["law",{"_index":919,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":837,"title":{},"body":{"license.html":{}}}],["legal",{"_index":692,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1024,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":942,"title":{},"body":{"license.html":{}}}],["liable",{"_index":950,"title":{},"body":{"license.html":{}}}],["library",{"_index":558,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":825,"title":{},"body":{"license.html":{}}}],["license",{"_index":670,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":885,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1013,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":842,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":686,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":927,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1020,"title":{},"body":{"license.html":{}}}],["limited",{"_index":727,"title":{},"body":{"license.html":{}}}],["link",{"_index":761,"title":{},"body":{"license.html":{}}}],["list",{"_index":600,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":778,"title":{},"body":{"license.html":{}}}],["literal",{"_index":360,"title":{},"body":{"interfaces/OtelCollectorConfig.html":{}}}],["litigation",{"_index":832,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":354,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":959,"title":{},"body":{"license.html":{}}}],["losses",{"_index":966,"title":{},"body":{"license.html":{}}}],["made",{"_index":742,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":777,"title":{},"body":{"license.html":{}}}],["make",{"_index":818,"title":{},"body":{"license.html":{}}}],["making",{"_index":724,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":964,"title":{},"body":{"license.html":{}}}],["managed",{"_index":782,"title":{},"body":{"license.html":{}}}],["management",{"_index":705,"title":{},"body":{"license.html":{}}}],["manager",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["marked",{"_index":788,"title":{},"body":{"license.html":{}}}],["marks",{"_index":907,"title":{},"body":{"license.html":{}}}],["matching",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":682,"title":{},"body":{"license.html":{}}}],["means",{"_index":700,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":732,"title":{},"body":{"license.html":{}}}],["media",{"_index":738,"title":{},"body":{"license.html":{}}}],["medium",{"_index":848,"title":{},"body":{"license.html":{}}}],["meet",{"_index":849,"title":{},"body":{"license.html":{}}}],["member",{"_index":659,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":929,"title":{},"body":{"license.html":{}}}],["merely",{"_index":760,"title":{},"body":{"license.html":{}}}],["method",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":549,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":725,"title":{},"body":{"license.html":{}}}],["modified",{"_index":854,"title":{},"body":{"license.html":{}}}],["modify",{"_index":879,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":884,"title":{},"body":{"license.html":{}}}],["module",{"_index":331,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":333,"title":{"modules.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["moment",{"_index":172,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["more",{"_index":561,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":359,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":906,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":656,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":826,"title":{},"body":{"license.html":{}}}],["need",{"_index":661,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":945,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":948,"title":{},"body":{"license.html":{}}}],["new",{"_index":31,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":192,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ngx",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":657,"title":{},"body":{"index.html":{}}}],["non",{"_index":802,"title":{},"body":{"license.html":{}}}],["noop",{"_index":142,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"miscellaneous/functions.html":{}}}],["noophttptextpropagator",{"_index":199,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["noophttptextpropagatorservice",{"_index":141,"title":{"injectables/NoopHttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normally",{"_index":876,"title":{},"body":{"license.html":{}}}],["notable",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":896,"title":{},"body":{"license.html":{}}}],["notice",{"_index":744,"title":{},"body":{"license.html":{}}}],["notices",{"_index":857,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":894,"title":{},"body":{"license.html":{}}}],["npm",{"_index":570,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["number",{"_index":53,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["object",{"_index":730,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":976,"title":{},"body":{"license.html":{}}}],["observable",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1015,"title":{},"body":{"license.html":{}}}],["offer",{"_index":819,"title":{},"body":{"license.html":{}}}],["ok",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":177,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["open",{"_index":622,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":24,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":652,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":25,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":369,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":198,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["opentelemetry/tracing",{"_index":131,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":88,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":207,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":332,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":607,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":567,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["operationnal",{"_index":171,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["optimization",{"_index":645,"title":{},"body":{"index.html":{}}}],["optional",{"_index":43,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":650,"title":{},"body":{"index.html":{}}}],["origin",{"_index":913,"title":{},"body":{"license.html":{}}}],["original",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["otelcol,zipkin,jaeger",{"_index":598,"title":{},"body":{"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexporterservice",{"_index":361,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["otelcollectorconfig",{"_index":72,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":957,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":714,"title":{},"body":{"license.html":{}}}],["overide",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1023,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":688,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":710,"title":{},"body":{"license.html":{}}}],["package",{"_index":523,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1008,"title":{},"body":{"license.html":{}}}],["param",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameters",{"_index":105,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":865,"title":{},"body":{"license.html":{}}}],["particular",{"_index":931,"title":{},"body":{"license.html":{}}}],["party",{"_index":875,"title":{},"body":{"license.html":{}}}],["patent",{"_index":814,"title":{},"body":{"license.html":{}}}],["percent",{"_index":712,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":588,"title":{},"body":{"index.html":{}}}],["perform",{"_index":811,"title":{},"body":{"license.html":{}}}],["permission",{"_index":904,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":720,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":800,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":864,"title":{},"body":{"license.html":{}}}],["places",{"_index":870,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":969,"title":{},"body":{"license.html":{}}}],["power",{"_index":701,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":723,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":809,"title":{},"body":{"license.html":{},"todo.html":{}}}],["present",{"_index":176,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["printed",{"_index":1007,"title":{},"body":{"license.html":{}}}],["private",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["probabilitysampler",{"_index":46,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":908,"title":{},"body":{"license.html":{}}}],["production",{"_index":47,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":465,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":396,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../http",{"_index":553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../opentelemetry",{"_index":551,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../span",{"_index":554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/example",{"_index":616,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":856,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":612,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":48,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["propagator.b3",{"_index":154,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.composite",{"_index":157,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"index.html":{}}}],["propagator.httptrace",{"_index":156,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.interface",{"_index":23,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.jaeger",{"_index":158,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.service",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":8,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["propagator.service.ts:16",{"_index":104,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":14,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:30",{"_index":196,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:34",{"_index":106,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":137,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagators",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["properties",{"_index":42,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["provide",{"_index":148,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["provided",{"_index":747,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":26,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":356,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":921,"title":{},"body":{"license.html":{}}}],["public",{"_index":200,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":810,"title":{},"body":{"license.html":{}}}],["publish",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":783,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":699,"title":{},"body":{"license.html":{}}}],["readable",{"_index":868,"title":{},"body":{"license.html":{}}}],["readme",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":990,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":910,"title":{},"body":{"license.html":{}}}],["received",{"_index":792,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":851,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":597,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":937,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":846,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":902,"title":{},"body":{"license.html":{}}}],["release",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":758,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":998,"title":{},"body":{"license.html":{}}}],["represent",{"_index":756,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":776,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":808,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":914,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":678,"title":{},"body":{"license.html":{}}}],["request",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":909,"title":{},"body":{"license.html":{}}}],["reset",{"_index":1026,"title":{},"body":{"overview.html":{}}}],["response",{"_index":614,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":982,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":933,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":731,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":861,"title":{},"body":{"license.html":{}}}],["return",{"_index":15,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":17,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":753,"title":{},"body":{"license.html":{}}}],["rights",{"_index":978,"title":{},"body":{"license.html":{}}}],["risks",{"_index":939,"title":{},"body":{"license.html":{}}}],["root",{"_index":27,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":805,"title":{},"body":{"license.html":{}}}],["run",{"_index":566,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1006,"title":{},"body":{"license.html":{}}}],["sample",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":586,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":817,"title":{},"body":{"license.html":{}}}],["sections",{"_index":683,"title":{},"body":{"license.html":{}}}],["see",{"_index":398,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":820,"title":{},"body":{"license.html":{}}}],["send",{"_index":577,"title":{},"body":{"index.html":{}}}],["sending",{"_index":638,"title":{},"body":{"index.html":{}}}],["sent",{"_index":775,"title":{},"body":{"license.html":{}}}],["separable",{"_index":759,"title":{},"body":{"license.html":{}}}],["separate",{"_index":899,"title":{},"body":{"license.html":{}}}],["service",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":49,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/http",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":681,"title":{},"body":{"license.html":{}}}],["shares",{"_index":715,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":728,"title":{},"body":{"license.html":{}}}],["sole",{"_index":981,"title":{},"body":{"license.html":{}}}],["solely",{"_index":932,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":122,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('error",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.addevent('response",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('http.status_code",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":128,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spanexporterservice",{"_index":220,"title":{"injectables/SpanExporterService.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["spanexporterservicefactory",{"_index":380,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spanexporterservicefactory(config",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["special",{"_index":952,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1017,"title":{},"body":{"license.html":{}}}],["specified",{"_index":582,"title":{},"body":{"index.html":{}}}],["stackcontextmanager",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":618,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":620,"title":{},"body":{"index.html":{}}}],["started",{"_index":392,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":893,"title":{},"body":{"license.html":{}}}],["stated",{"_index":816,"title":{},"body":{"license.html":{}}}],["statement",{"_index":886,"title":{},"body":{"license.html":{}}}],["statements",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":858,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":961,"title":{},"body":{"license.html":{}}}],["string",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":491,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":812,"title":{},"body":{"license.html":{}}}],["submission",{"_index":889,"title":{},"body":{"license.html":{}}}],["submit",{"_index":769,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":767,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":793,"title":{},"body":{"license.html":{}}}],["such",{"_index":706,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":898,"title":{},"body":{"license.html":{}}}],["support",{"_index":974,"title":{},"body":{"license.html":{}}}],["switch",{"_index":151,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["sync",{"_index":596,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1004,"title":{},"body":{"license.html":{}}}],["systems",{"_index":779,"title":{},"body":{"license.html":{}}}],["table",{"_index":522,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1029,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":579,"title":{},"body":{"index.html":{},"todo.html":{}}}],["terminate",{"_index":843,"title":{},"body":{"license.html":{}}}],["terms",{"_index":676,"title":{},"body":{"license.html":{}}}],["test",{"_index":431,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":134,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["theory",{"_index":943,"title":{},"body":{"license.html":{}}}],["there's",{"_index":625,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":763,"title":{},"body":{"license.html":{}}}],["third",{"_index":874,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.configjaeger",{"_index":185,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["this.contextmanager",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":202,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(config.commonconfig.probabilitysampler",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptextpropagatorservice.getpropagator",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":372,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":389,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":823,"title":{},"body":{"license.html":{}}}],["through",{"_index":684,"title":{},"body":{"license.html":{}}}],["throw",{"_index":351,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":660,"title":{},"body":{"index.html":{}}}],["title",{"_index":928,"title":{},"body":{"license.html":{}}}],["todo",{"_index":190,"title":{"todo.html":{}},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"todo.html":{}}}],["tort",{"_index":944,"title":{},"body":{"license.html":{}}}],["trace",{"_index":52,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":589,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":781,"title":{},"body":{"license.html":{}}}],["trade",{"_index":905,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":862,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":903,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":821,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":733,"title":{},"body":{"license.html":{}}}],["translation",{"_index":734,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":568,"title":{},"body":{"index.html":{}}}],["true",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts1086",{"_index":665,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":655,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":50,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":663,"title":{},"body":{"index.html":{}}}],["types",{"_index":739,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":669,"title":{},"body":{"index.html":{}}}],["typo",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["under",{"_index":698,"title":{},"body":{"license.html":{}}}],["union",{"_index":693,"title":{},"body":{"license.html":{}}}],["unless",{"_index":891,"title":{},"body":{"license.html":{}}}],["unused",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":632,"title":{},"body":{"index.html":{}}}],["update",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["use",{"_index":54,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":358,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["used",{"_index":138,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"index.html":{}}}],["usefactory",{"_index":143,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["uses",{"_index":560,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":357,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":936,"title":{},"body":{"license.html":{}}}],["value",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1035,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":772,"title":{},"body":{"license.html":{}}}],["version",{"_index":193,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["via",{"_index":593,"title":{},"body":{"index.html":{}}}],["void",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["wait",{"_index":191,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["want",{"_index":624,"title":{},"body":{"index.html":{}}}],["warning",{"_index":569,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":923,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":917,"title":{},"body":{"license.html":{}}}],["web",{"_index":173,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["webtracerprovider",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":873,"title":{},"body":{"license.html":{}}}],["whether",{"_index":707,"title":{},"body":{"license.html":{}}}],["whole",{"_index":757,"title":{},"body":{"license.html":{}}}],["within",{"_index":795,"title":{},"body":{"license.html":{}}}],["without",{"_index":636,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":740,"title":{},"body":{"license.html":{},"todo.html":{}}}],["works",{"_index":474,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":801,"title":{},"body":{"license.html":{}}}],["writing",{"_index":790,"title":{},"body":{"license.html":{}}}],["written",{"_index":773,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":639,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1012,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["zipkincollectorconfig",{"_index":83,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":386,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporterservice",{"_index":379,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1025,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return HttpTextPropagator as B3Propagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collector\n                                \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                            Optional\n                                        propagator\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collector\n                                    \n                                \n                                \n                                    \n                                        collector:         Collector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Collector\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    collector \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        propagator\n                                    \n                                \n                                \n                                    \n                                        propagator:         Propagator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Propagator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    propagator \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:34\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return HttpTextPropagator as CompositePropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTextPropagatorService.html":{"url":"injectables/HttpTextPropagatorService.html","title":"injectable - HttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTextPropagatorService\nInjected service with factory to get a propagator by configuration\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { Injectable } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  Propagator,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { NoopHttpTextPropagatorService } from './noop-http-text-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n/**\n * HttpTextPropagatorService\n * Injected service with factory to get a propagator by configuration\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: httpTextPropagatorServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    HttpTraceContextPropagatorService,\n    B3PropagatorService,\n    CompositePropagatorService,\n    NoopHttpTextPropagatorService,\n    JaegerHttpTracePropagatorService,\n  ],\n})\nexport class HttpTextPropagatorService implements IPropagator {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getPropagator(): HttpTextPropagator {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * httpTextPropagatorServiceFactory\n * Provide a factory to have a propagator service\n * @param config config\n * @param httpTraceContextPropagatorService httpTraceContext\n * @param b3PropagatorService propagator\n * @param compositePropagatorService  composite\n * @param noopHttpTextPropagatorService noop\n *\n */\nexport function httpTextPropagatorServiceFactory(\n  config: OpenTelemetryConfig,\n  httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n  b3PropagatorService: B3PropagatorService,\n  compositePropagatorService: CompositePropagatorService,\n  noopHttpTextPropagatorService: NoopHttpTextPropagatorService,\n  jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n) {\n  let propagator: IPropagator = null;\n  switch (config.commonConfig.propagator) {\n    case Propagator.b3:\n      propagator = b3PropagatorService;\n      break;\n    case Propagator.httpTrace:\n      propagator = httpTraceContextPropagatorService;\n      break;\n    case Propagator.composite:\n      propagator = compositePropagatorService;\n      break;\n    case Propagator.jaeger:\n      propagator = jaegerHttpTracePropagatorService;\n      break;\n    default:\n      propagator = noopHttpTextPropagatorService;\n      break;\n  }\n  return propagator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerCollectorConfig.html":{"url":"interfaces/JaegerCollectorConfig.html","title":"interface - JaegerCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Jaeger Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        endpoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Endpoint for the HTTPSender\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerExporterService.html":{"url":"injectables/JaegerExporterService.html","title":"injectable - JaegerExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerExporterService class\nJaegerExporter isn't operationnal for the moment in web application.\nit's present if one day..\nFor the moment return a ConsoleSpanExporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a JaegerExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * JaegerExporterService class\n * JaegerExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n * For the moment return a ConsoleSpanExporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerExporterService implements IExporter {\n  //private configJaeger: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.configJaeger = {\n      serviceName: config.commonConfig.serviceName,\n      endpoint: config.jaegerConfig?.endpoint,\n    };*/\n  }\n\n  /**\n   * Return a JaegerExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    //return new JaegerExporter(this.configJaeger);\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\nTODO : wait the next version (incompatible 0.8.0)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:30\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\n//import { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { NoopHttpTextPropagator } from '@opentelemetry/api';\nimport { OpenTelemetryInjectConfig } from '../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n * TODO : wait the next version (incompatible 0.8.0)\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n    // return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopHttpTextPropagatorService.html":{"url":"injectables/NoopHttpTextPropagatorService.html","title":"injectable - NoopHttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopHttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopHttpTextPropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as NoopHttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator, NoopHttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopHttpTextPropagatorService implements IPropagator {\n  /**\n   * Return an NoopHttpTextPropagator\n   * @return HttpTextPropagator as NoopHttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerConfig:         JaegerCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, httpTextPropagatorService: HttpTextPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        httpTextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:192\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:115\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:140\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:176\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { HttpTextPropagatorService } from '../services/propagator/http-text-propagator.service';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param httpTextPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(HttpTextPropagatorService)\n    private httpTextPropagatorService: HttpTextPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(config.commonConfig.probabilitySampler),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.httpTextPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('error', { body: JSON.stringify(event.error) });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectorExporterConfigBrowser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBrowser,\n} from '@opentelemetry/exporter-collector/build/src/platform/browser/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfig\n   */\n  private otelcolConfig: CollectorExporterConfigBrowser;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpanExporterService.html":{"url":"injectables/SpanExporterService.html","title":"injectable - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                An Angular Factory to have the configured collector\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:32\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\nimport { Injectable } from '@angular/core';\nimport { JaegerExporterService } from './jaeger-exporter.service';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\nimport {\n  OpenTelemetryConfig,\n  Collector,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\n\n/**\n * An Angular Factory to have the configured collector\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: spanExporterServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    JaegerExporterService,\n    OtelcolExporterService,\n    ZipkinExporterService,\n    ConsoleSpanExporterService,\n  ],\n})\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getExporter(): SpanExporter {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * Factory to return Service configured\n * @param config config\n * @param jaegerExporterService jaeger\n * @param otelcolExporterService otelcol\n * @param zipkinExporterService zipkin\n * @param consoleSpanExporter console\n */\nexport function spanExporterServiceFactory(\n  config: OpenTelemetryConfig,\n  jaegerExporterService: JaegerExporterService,\n  otelcolExporterService: OtelcolExporterService,\n  zipkinExporterService: ZipkinExporterService,\n  consoleSpanExporter: ConsoleSpanExporterService\n) {\n  let exporter: IExporter = null;\n  switch (config.commonConfig.collector) {\n    case Collector.jaeger:\n      exporter = jaegerExporterService;\n      break;\n    case Collector.otelcol:\n      exporter = otelcolExporterService;\n      break;\n    case Collector.zipkin:\n      exporter = zipkinExporterService;\n      break;\n    default:\n      exporter = consoleSpanExporter;\n      break;\n  }\n  return exporter;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporter isn't operationnal for the moment in web application.\nit's present if one day..\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:34\n                \n            \n\n\n            \n                \n                    Return for the moment a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ZipkinExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  // private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig.url,\n    };*/\n  }\n\n  /**\n   * Return for the moment a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n            \n            injectable\n            JaegerExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            injectable\n            SpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            function\n            spanExporterServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            injectable\n            HttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            function\n            httpTextPropagatorServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n            \n            injectable\n            NoopHttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.10.2\n        \n            @opentelemetry/web : ^0.10.2\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Collector   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            Propagator   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n            \n                \n                    \n                        \n                        Collector\n                    \n                \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : jaeger\n                            \n                        \n                        \n                            \n                                 zipkin\n                            \n                        \n                        \n                            \n                                Value : zipkin\n                            \n                        \n                        \n                            \n                                 otelcol\n                            \n                        \n                        \n                            \n                                Value : otelcol\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Propagator\n                    \n                \n                        \n                            \n                                 b3\n                            \n                        \n                        \n                            \n                                Value : B3Propagator\n                            \n                        \n                        \n                            \n                                 httpTrace\n                            \n                        \n                        \n                            \n                                Value : HttpTraceContext\n                            \n                        \n                        \n                            \n                                 composite\n                            \n                        \n                        \n                            \n                                Value : CompositePropagator\n                            \n                        \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : JaegerPropagator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpTextPropagatorServiceFactory   (projects/.../http-text-propagator.service.ts)\n                        \n                        \n                            spanExporterServiceFactory   (projects/.../span-exporter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            httpTextPropagatorServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nhttpTextPropagatorServiceFactory(config, httpTraceContextPropagatorService, b3PropagatorService, compositePropagatorService, noopHttpTextPropagatorService, jaegerHttpTracePropagatorService)\n                \n            \n\n\n\n\n            \n                \n                    httpTextPropagatorServiceFactory\nProvide a factory to have a propagator service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    httpTraceContextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        httpTraceContext\n\n                                    \n                                \n                                \n                                    b3PropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        propagator\n\n                                    \n                                \n                                \n                                    compositePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        composite\n\n                                    \n                                \n                                \n                                    noopHttpTextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        noop\n\n                                    \n                                \n                                \n                                    jaegerHttpTracePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            spanExporterServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nspanExporterServiceFactory(config, jaegerExporterService, otelcolExporterService, zipkinExporterService, consoleSpanExporter)\n                \n            \n\n\n\n\n            \n                \n                    Factory to return Service configured\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    jaegerExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jaeger\n\n                                    \n                                \n                                \n                                    otelcolExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        otelcol\n\n                                    \n                                \n                                \n                                    zipkinExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zipkin\n\n                                    \n                                \n                                \n                                    consoleSpanExporter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nZipkin Collector Configuration\nJaeger Collector Configuration\nJaeger Propagator Configuration\n\n\nAngular Module\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collectorConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpentelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  jaegerConfig?: JaegerCollectorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      collector: Collector.otelcol, //Enum to specified the collector : OpenTelemetry Collector(otelcol), Zipkin (zipkin), Jaeger (jaeger)\n      propagator: Propagator.composite, // Enum to propagator : B3 (b3), HttpTraceContext (httpTrace), Jaeger Propagator (jaeger) and Composite that include b3, httpTrace and Jaeger (composite)\n      probabilitySampler: 0.7, //Samples a configurable percentage of traces, value between 0 to 1\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    zipkinConfig: {\n      url: 'http://localhost:9411/api/v2/spans', //url of zipkin collector\n    },\n    jaegerConfig: {\n      endpoint: 'http://localhost:14268/api/traces', // Url of Jaeger collector via HTTPSender\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\ncollector: (Enum) use Enum Collector (otelcol,zipkin,jaeger)\npropagator: (Enum) use Propagator Enum (b3,httpTrace,composite,jaeger)\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header\n\nZipkin Collector Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\n\nJaeger Collector Configuration\n\nendpoint: (string) url of jaeger collector (example : http://localhost:14268/api/traces)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header\n\nAngular Module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n jaeger-propagator doesn't work with version 0.9.0  \n Add new version collector in example after this fix (https://github.com/open-telemetry/opentelemetry-collector/issues/1385)  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
