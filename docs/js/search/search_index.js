var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/injectables/B3PropagatorService.html",[0,0.312,1,1.702]],["body/injectables/B3PropagatorService.html",[0,0.488,1,3.052,2,1.268,3,0.5,4,0.5,5,0.389,6,0.423,7,4.229,8,1.772,9,0.5,10,0.389,11,1.239,12,2.783,13,0.905,14,2.931,15,1.302,16,2.679,17,0.987,18,0.033,19,2.867,20,0.638,21,0.56,22,2.041,23,2.122,24,1.772,25,2.602,26,1.268,27,1.268,28,0.5,29,0.987,30,1.268,31,0.56,32,0.02,33,0.025,34,0.02]],["title/interfaces/CommonCollectorConfig.html",[35,0.606,36,1.305]],["body/interfaces/CommonCollectorConfig.html",[3,0.309,4,0.309,5,0.24,6,0.208,9,0.309,10,0.24,16,1.094,18,0.033,20,0.274,21,0.346,28,0.707,31,0.346,32,0.012,33,0.018,34,0.012,35,0.989,36,1.738,37,0.924,38,1.004,39,1.004,40,1.601,41,1.527,42,1.47,43,1.418,44,1.867,45,2.072,46,2.317,47,2.317,48,1.564,49,1.956,50,1.405,51,2.545,52,1.373,53,2.068,54,1.47,55,1.918,56,1.918,57,2.504,58,0.818,59,1.146,60,1.311,61,1.749,62,1.161,63,1.472,64,1.47,65,0.924,66,1.094,67,0.783,68,0.85,69,1.094,70,1.094,71,1.094,72,1.47,73,1.913,74,1.055,75,1.47,76,1.195,77,1.749,78,1.601,79,1.195,80,1.47,81,1.601,82,1.195,83,1.47,84,1.195,85,2.036,86,1.004,87,1.094,88,0.683,89,1.749,90,1.749,91,1.601,92,1.601,93,0.818,94,0.512,95,1.195,96,1.195,97,1.195]],["title/injectables/CompositePropagatorService.html",[0,0.312,98,1.877]],["body/injectables/CompositePropagatorService.html",[0,0.432,1,3.05,2,1.051,3,0.415,4,0.415,5,0.322,6,0.422,8,1.469,9,0.415,10,0.322,11,1.097,12,2.591,13,1.006,15,1.212,17,0.818,18,0.033,19,2.702,20,0.651,21,0.464,22,1.807,23,1.759,24,1.469,25,2.157,26,1.051,27,1.051,28,0.415,29,0.818,30,1.051,31,0.464,32,0.017,33,0.022,34,0.017,43,0.818,50,0.89,52,1.297,58,0.75,62,0.818,65,1.24,69,2.546,88,0.627,94,0.687,98,3.133,99,4.224,100,2.591,101,3.347,102,3.115,103,3.115,104,2.794,105,1.469,106,3.347,107,1.759,108,3.673,109,2.6,110,1.469,111,1.469,112,3.347,113,2.659,114,3.347,115,3.347,116,3.347,117,3.347,118,3.347,119,3.347]],["title/injectables/ConsoleSpanExporterService.html",[0,0.312,120,2.087]],["body/injectables/ConsoleSpanExporterService.html",[0,0.486,2,1.258,3,0.496,4,0.496,5,0.386,6,0.42,9,0.496,10,0.386,11,1.232,13,0.898,15,1.298,17,0.979,18,0.033,20,0.606,21,0.555,26,1.258,27,1.258,28,0.496,29,0.979,30,1.258,31,0.555,32,0.02,33,0.025,34,0.02,74,1.458,120,3.732,121,4.208,122,3.356,123,1.92,124,2.922,125,3.043,126,4.005,127,3.043,128,2.86,129,2.212,130,2.321,131,1.92]],["title/injectables/HttpTextPropagatorService.html",[0,0.312,132,2.087]],["body/injectables/HttpTextPropagatorService.html",[0,0.39,1,2.913,2,0.904,3,0.357,4,0.357,5,0.277,6,0.337,8,1.264,9,0.357,10,0.277,11,0.989,12,2.432,13,0.646,15,0.907,17,0.704,18,0.033,19,2.242,20,0.649,21,0.399,22,1.884,23,1.514,24,1.264,26,0.904,27,0.904,28,0.501,29,0.704,30,0.904,32,0.014,33,0.02,34,0.014,41,1.17,48,1.625,52,1.17,59,1.469,62,0.704,65,1.067,67,0.904,68,1.38,74,0.833,88,0.758,93,0.907,94,1.041,98,3.213,102,2.913,103,2.809,108,3.88,109,2.711,110,1.264,111,2.346,132,3.27,133,2.608,134,2.459,135,3.377,136,4.023,137,2.88,138,2.937,139,2.937,140,1.264,141,3.213,142,3.377,143,2.404,144,3.395,145,2.404,146,2.404,147,2.09,148,1.856,149,2.09,150,2.404,151,2.404,152,2.88,153,4.235,154,2.88,155,4.462,156,2.88,157,2.404,158,2.88]],["title/injectables/HttpTraceContextPropagatorService.html",[0,0.312,102,1.702]],["body/injectables/HttpTraceContextPropagatorService.html",[0,0.485,2,1.254,3,0.495,4,0.495,5,0.385,6,0.42,8,1.753,9,0.495,10,0.385,11,1.23,12,2.773,13,0.896,14,2.899,15,1.297,17,0.976,18,0.033,19,2.858,20,0.635,21,0.554,22,2.027,23,2.099,24,1.753,25,2.574,26,1.254,27,1.254,28,0.495,29,0.976,30,1.254,31,0.554,32,0.02,33,0.025,34,0.02,52,1.455,67,1.912,102,3.04,110,2.208,133,3.244]],["title/interfaces/IExporter.html",[35,0.606,129,1.421]],["body/interfaces/IExporter.html",[3,0.529,4,0.529,5,0.411,6,0.438,9,0.529,10,0.411,11,1.282,13,0.957,15,0.957,17,1.044,18,0.032,20,0.469,28,0.529,32,0.021,33,0.026,34,0.021,35,1.063,37,1.582,74,1.517,124,3.433,125,3.113,128,3.005,129,2.302,131,2.046,159,3.564,160,3.808,161,4.269,162,3.808,163,5.246]],["title/interfaces/IPropagator.html",[22,1.305,35,0.606]],["body/interfaces/IPropagator.html",[3,0.535,4,0.535,5,0.416,6,0.441,9,0.535,10,0.416,11,1.291,12,2.85,13,0.969,15,0.969,17,1.056,18,0.032,19,2.924,20,0.474,22,2.128,24,1.895,28,0.535,32,0.021,33,0.026,34,0.021,35,1.069,37,1.6,48,1.582,160,3.835,162,3.835,164,3.605,165,4.319,166,4.41]],["title/interfaces/JaegerCollectorConfig.html",[35,0.606,80,1.305]],["body/interfaces/JaegerCollectorConfig.html",[3,0.343,4,0.343,5,0.267,6,0.231,9,0.343,10,0.267,16,1.214,18,0.033,20,0.304,21,0.384,28,0.725,31,0.384,32,0.014,33,0.019,34,0.014,35,1.024,36,1.585,37,1.025,38,1.115,39,1.115,40,1.214,41,1.582,42,1.585,43,0.962,44,1.768,45,1.696,46,1.726,47,1.726,48,1.401,49,1.457,50,0.736,51,2.187,52,1.137,53,1.326,54,1.115,55,1.454,56,1.454,57,2.568,58,0.621,59,0.869,60,1.454,61,1.885,62,1.287,63,1.561,64,1.585,65,1.025,66,1.214,67,0.869,68,0.944,69,1.214,70,1.214,71,1.214,72,1.585,73,2.008,74,1.137,75,1.585,76,1.326,77,1.885,78,1.726,79,1.326,80,1.844,81,2.401,82,1.885,83,1.585,84,1.326,85,2.121,86,1.115,87,1.214,88,0.737,89,1.885,90,1.885,91,1.726,92,1.726,93,0.882,94,0.568,95,1.326,96,1.326,97,1.326]],["title/injectables/JaegerExporterService.html",[0,0.312,167,1.877]],["body/injectables/JaegerExporterService.html",[0,0.432,2,1.049,3,0.414,4,0.414,5,0.322,6,0.422,9,0.555,10,0.322,11,1.095,13,1.004,15,1.328,17,0.816,18,0.033,20,0.593,21,0.463,26,1.049,27,1.049,28,0.414,29,1.236,30,1.049,31,0.621,32,0.016,33,0.022,34,0.016,43,0.816,49,1.237,50,0.888,58,0.749,81,1.465,88,1.086,93,0.749,94,1.108,100,2.422,105,1.465,107,1.755,111,1.465,113,1.755,123,1.6,125,2.839,127,2.839,128,2.7,129,1.965,130,1.936,131,1.6,140,1.465,167,3.131,168,4.219,169,5.401,170,3.739,171,3.739,172,4.508,173,3.739,174,3.251,175,2.596,176,3.739,177,3.251,178,3.739,179,1.936,180,3.339,181,3.339,182,3.339,183,2.787,184,2.152,185,3.339,186,2.424,187,3.339,188,3.339]],["title/injectables/JaegerHttpTracePropagatorService.html",[0,0.312,103,1.702]],["body/injectables/JaegerHttpTracePropagatorService.html",[0,0.42,2,1.008,3,0.398,4,0.398,5,0.309,6,0.443,8,1.408,9,0.54,10,0.309,11,1.066,12,2.547,13,1.111,14,3.165,15,1.246,17,0.785,18,0.033,19,2.663,20,0.644,21,0.445,22,1.757,23,1.687,24,1.914,26,1.008,27,1.008,28,0.398,29,0.785,30,1.008,31,0.604,32,0.016,33,0.022,34,0.016,42,1.757,43,0.785,50,1.16,52,1.537,57,1.914,58,0.72,62,0.785,67,1.669,87,2.174,88,1.073,93,0.72,94,1.09,100,2.374,103,2.793,105,1.408,107,1.687,109,3.08,111,1.408,113,2.603,140,1.408,179,1.86,184,2.069,189,4.436,190,3.165,191,4.361,192,3.64,193,2.811,194,4.361,195,4.361,196,3.209,197,3.209,198,3.209,199,3.64,200,2.679,201,2.679,202,3.209,203,3.209,204,3.209]],["title/interfaces/JaegerPropagatorConfig.html",[35,0.606,85,1.305]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.343,4,0.343,5,0.267,6,0.231,9,0.343,10,0.267,16,1.214,18,0.033,20,0.304,21,0.384,28,0.725,31,0.384,32,0.014,33,0.019,34,0.014,35,1.024,36,1.585,37,1.025,38,1.115,39,1.115,40,1.214,41,1.582,42,1.585,43,0.962,44,1.718,45,1.696,46,1.726,47,1.726,48,1.456,49,1.457,50,0.736,51,2.187,52,1.137,53,1.326,54,1.115,55,1.454,56,1.454,57,2.568,58,0.621,59,0.869,60,1.454,61,1.885,62,1.218,63,1.561,64,1.585,65,1.025,66,1.214,67,0.869,68,0.944,69,1.214,70,1.214,71,1.214,72,1.585,73,2.008,74,1.137,75,1.585,76,1.326,77,2.194,78,1.726,79,1.326,80,1.585,81,1.726,82,1.326,83,1.585,84,1.326,85,2.267,86,1.585,87,2.187,88,0.737,89,1.885,90,1.885,91,1.726,92,1.726,93,0.882,94,0.568,95,1.326,96,1.326,97,1.326]],["title/injectables/NoopHttpTextPropagatorService.html",[0,0.312,141,1.877]],["body/injectables/NoopHttpTextPropagatorService.html",[0,0.488,2,1.268,3,0.5,4,0.5,5,0.389,6,0.423,8,1.772,9,0.5,10,0.389,11,1.239,12,2.783,13,0.905,15,1.302,17,0.987,18,0.033,19,2.867,20,0.608,21,0.56,22,2.041,23,2.122,24,1.772,26,1.268,27,1.268,28,0.5,29,0.987,30,1.268,31,0.56,32,0.02,33,0.025,34,0.02,104,3.37,109,2.937,134,2.663,141,3.366,199,5.095,205,4.229]],["title/interfaces/OpenTelemetryConfig.html",[35,0.606,88,0.606]],["body/interfaces/OpenTelemetryConfig.html",[3,0.322,4,0.322,5,0.25,6,0.217,9,0.322,10,0.25,16,1.14,18,0.033,20,0.285,21,0.36,28,0.714,31,0.36,32,0.013,33,0.019,34,0.013,35,1.003,36,1.951,37,0.962,38,1.047,39,1.047,40,1.14,41,1.486,42,1.515,43,1.383,44,1.682,45,1.637,46,1.65,47,1.65,48,1.367,49,1.393,50,1.367,51,2.125,52,1.087,53,1.245,54,1.047,55,1.365,56,1.365,57,2.424,58,0.583,59,0.816,60,1.365,61,1.802,62,1.184,63,1.507,64,1.515,65,0.962,66,1.14,67,0.816,68,0.886,69,1.14,70,1.14,71,1.14,72,1.951,73,1.951,74,1.087,75,1.515,76,1.245,77,1.802,78,1.65,79,1.245,80,1.951,81,1.65,82,1.245,83,1.951,84,1.245,85,2.388,86,1.047,87,1.14,88,0.907,89,2.567,90,2.567,91,2.35,92,2.35,93,0.843,94,0.533,95,1.245,96,1.245,97,1.245]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[206,1.877,207,2.087]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[0,0.24,3,0.188,4,0.188,5,0.147,6,0.421,9,0.588,10,0.147,11,0.608,13,1.101,15,0.817,17,1.053,18,0.033,20,0.579,21,0.211,24,1.091,25,0.981,26,0.478,27,0.478,28,0.188,29,0.771,30,0.478,31,0.597,32,0.008,33,0.012,34,0.008,41,1.053,42,1.002,43,1.111,45,1.684,46,0.668,47,1.891,48,1.068,50,1.306,51,1.891,53,1.511,58,1.019,59,0.781,74,0.719,79,0.729,86,1.467,88,0.682,93,0.341,94,0.973,96,1.924,100,1.745,105,1.995,107,0.8,108,1.104,110,1.091,111,2.315,113,2.997,122,3.405,124,2.111,127,1.307,128,2.273,131,0.729,132,3.057,134,0.8,135,2.075,140,0.668,147,1.104,160,1.805,175,1.441,179,0.882,192,3.596,201,1.27,206,1.828,207,1.603,208,1.521,209,4.214,210,1.27,211,2.075,212,3.153,213,3.795,214,2.486,215,2.486,216,3.153,217,2.486,218,3.153,219,2.632,220,3.057,221,2.486,222,2.486,223,1.521,224,2.486,225,3.596,226,2.486,227,1.828,228,4.014,229,2.486,230,2.486,231,5.048,232,1.521,233,2.075,234,5.795,235,2.486,236,1.521,237,1.521,238,1.441,239,2.486,240,2.075,241,2.486,242,1.521,243,3.596,244,1.805,245,2.486,246,1.521,247,1.521,248,2.632,249,3.641,250,2.632,251,2.075,252,1.521,253,3.641,254,1.521,255,2.486,256,2.075,257,3.039,258,1.441,259,2.075,260,3.153,261,3.641,262,2.486,263,3.039,264,1.521,265,2.486,266,2.486,267,3.153,268,1.104,269,1.27,270,1.104,271,2.486,272,1.521,273,2.486,274,1.521,275,2.486,276,2.486,277,1.521,278,1.521,279,1.27,280,1.521,281,1.521,282,1.521,283,1.521,284,2.486,285,1.521,286,1.521,287,1.521,288,1.521,289,1.521,290,1.521,291,1.521,292,1.521,293,1.521,294,1.521,295,1.521,296,1.521,297,2.643,298,2.486,299,2.486,300,2.486,301,1.521,302,1.805,303,1.521,304,1.521,305,1.521,306,1.521,307,1.521,308,1.521,309,1.521,310,1.521,311,1.521,312,1.521,313,1.521,314,1.521,315,1.521,316,3.153,317,1.521,318,3.153,319,1.521,320,1.521,321,1.521,322,1.521,323,1.521,324,1.521,325,1.521,326,2.486,327,1.521,328,1.521,329,1.521,330,1.521]],["title/modules/OpenTelemetryInterceptorModule.html",[331,2.351,332,2.087]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.453,4,0.453,5,0.353,6,0.397,11,0.895,13,0.821,15,0.821,17,0.895,18,0.033,20,0.638,21,0.507,28,0.453,29,0.895,31,0.507,32,0.018,33,0.024,34,0.018,43,1.293,50,0.974,58,0.821,88,1.048,93,1.067,94,1.085,100,1.754,105,1.606,140,1.606,148,3.067,200,3.055,207,3.067,244,2.657,268,2.657,332,3.741,333,2.657,334,4.759,335,3.66,336,4.759,337,3.66,338,4.759,339,3.66,340,5.288,341,4.414,342,4.759,343,3.972,344,3.972,345,3.66,346,3.66,347,2.657,348,3.055,349,3.055,350,4.759,351,3.66,352,3.055,353,3.66,354,3.66,355,3.055,356,2.657,357,3.66,358,3.66,359,3.66]],["title/interfaces/OtelCollectorConfig.html",[35,0.606,72,1.305]],["body/interfaces/OtelCollectorConfig.html",[3,0.334,4,0.334,5,0.259,6,0.225,9,0.334,10,0.259,16,1.181,18,0.033,20,0.296,21,0.373,28,0.72,31,0.373,32,0.013,33,0.019,34,0.013,35,1.015,36,1.554,37,0.997,38,1.084,39,1.084,40,1.181,41,1.568,42,1.554,43,1.203,44,1.753,45,1.67,46,1.693,47,1.693,48,1.386,49,1.429,50,1.31,51,2.16,52,1.115,53,1.29,54,1.084,55,1.415,56,1.415,57,2.552,58,0.604,59,0.845,60,1.415,61,1.849,62,1.203,63,1.537,64,1.554,65,0.997,66,1.181,67,0.845,68,0.918,69,1.181,70,1.181,71,1.693,72,1.816,73,2.301,74,1.303,75,1.816,76,1.849,77,2.16,78,2.379,79,1.29,80,1.554,81,1.693,82,1.29,83,1.554,84,1.29,85,2.099,86,1.084,87,1.181,88,0.722,89,1.849,90,1.849,91,1.693,92,1.693,93,0.865,94,0.552,95,1.29,96,1.29,97,1.29,360,3.857]],["title/injectables/OtelcolExporterService.html",[0,0.312,361,1.877]],["body/injectables/OtelcolExporterService.html",[0,0.431,2,1.046,3,0.413,4,0.413,5,0.321,6,0.45,9,0.554,10,0.321,11,1.093,13,1.132,15,1.21,17,0.814,18,0.033,20,0.636,21,0.462,26,1.046,27,1.046,28,0.413,29,1.234,30,1.046,31,0.462,32,0.016,33,0.022,34,0.016,41,1.293,42,1.802,43,0.814,49,1.234,50,1.19,58,0.747,73,1.342,78,1.462,88,1.085,92,2.215,93,0.747,94,1.107,100,2.42,105,1.462,107,1.751,111,1.462,113,2.653,123,1.597,125,2.836,128,2.42,129,1.963,130,1.931,131,1.597,140,1.462,179,1.931,184,2.147,186,2.418,361,3.128,362,4.504,363,4.472,364,3.332,365,5.396,366,5.048,367,4.472,368,3.332,369,3.246,370,3.332,371,3.332,372,3.332,373,3.332,374,3.332,375,3.332]],["title/injectables/SpanExporterService.html",[0,0.312,220,2.087]],["body/injectables/SpanExporterService.html",[0,0.406,2,0.96,3,0.379,4,0.379,5,0.295,6,0.352,9,0.379,10,0.295,11,1.031,13,0.686,15,1.083,17,0.747,18,0.033,20,0.648,21,0.424,26,0.96,27,0.96,28,0.523,29,0.747,30,0.96,32,0.015,33,0.021,34,0.015,44,1.517,45,1.563,59,0.96,62,1.031,63,1.439,64,1.699,74,0.884,88,0.79,93,0.946,94,1.068,111,2.397,120,3.113,122,1.772,123,1.466,124,3.274,125,2.737,127,2.539,128,2.315,129,2.119,130,1.772,131,1.466,136,4.1,138,3.062,139,3.062,140,1.342,143,2.552,145,2.552,146,2.552,147,2.219,149,2.219,150,2.552,151,2.552,153,4.031,155,4.346,167,3.274,220,2.719,258,2.445,279,4.346,361,3.274,376,3.062,377,4.031,378,3.057,379,3.274,380,3.062,381,3.057,382,3.057,383,2.552,384,3.057]],["title/interfaces/ZipkinCollectorConfig.html",[35,0.606,83,1.305]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.342,4,0.342,5,0.266,6,0.23,9,0.342,10,0.266,16,1.212,18,0.033,20,0.303,21,0.383,28,0.725,31,0.383,32,0.014,33,0.019,34,0.014,35,1.024,36,1.583,37,1.023,38,1.113,39,1.113,40,1.212,41,1.581,42,1.583,43,0.96,44,1.717,45,1.694,46,1.724,47,1.724,48,1.4,49,1.455,50,0.735,51,2.185,52,1.136,53,1.324,54,1.113,55,1.452,56,1.452,57,2.567,58,0.619,59,0.867,60,1.452,61,1.883,62,1.217,63,1.698,64,1.583,65,1.023,66,1.212,67,0.867,68,0.942,69,1.212,70,1.212,71,1.212,72,1.583,73,2.316,74,1.322,75,1.842,76,1.324,77,1.883,78,1.724,79,1.324,80,1.583,81,1.724,82,1.324,83,1.842,84,1.883,85,2.12,86,1.113,87,1.212,88,0.736,89,1.883,90,1.883,91,1.724,92,1.724,93,0.881,94,0.567,95,1.324,96,1.324,97,1.324]],["title/injectables/ZipkinExporterService.html",[0,0.312,379,1.877]],["body/injectables/ZipkinExporterService.html",[0,0.44,2,1.078,3,0.425,4,0.425,5,0.331,6,0.427,9,0.565,10,0.331,11,1.115,13,1.023,15,1.224,17,0.839,18,0.033,20,0.6,21,0.476,26,1.078,27,1.078,28,0.425,29,0.839,30,1.078,31,0.476,32,0.017,33,0.023,34,0.017,43,0.839,49,1.271,50,0.913,58,0.77,73,1.382,88,1.094,91,1.506,93,0.77,94,1.12,100,2.456,105,1.506,107,1.804,111,1.506,113,1.804,123,1.645,125,2.87,127,2.87,128,2.725,129,2.002,130,1.989,131,1.645,140,1.506,170,3.808,171,3.808,172,4.558,173,3.808,174,3.311,175,2.644,176,3.808,177,3.311,178,3.808,179,1.989,183,2.864,184,2.212,186,2.491,379,2.644,385,4.277,386,4.561,387,3.432,388,3.432,389,3.432,390,3.432]],["title/changelog.html",[391,1.577,392,1.577,393,2.271]],["body/changelog.html",[5,0.462,18,0.021,31,0.665,32,0.015,33,0.021,34,0.015,41,0.873,44,0.949,48,0.804,52,0.873,54,1.217,62,0.738,68,1.636,70,1.325,86,1.217,110,1.836,193,3.093,227,1.751,238,3.539,258,2.781,393,3.491,394,3.02,395,3.02,396,2.192,397,3.02,398,1.947,399,3.02,400,3.02,401,3.02,402,3.491,403,5.769,404,3.02,405,4.798,406,5.627,407,4.183,408,3.02,409,3.02,410,3.02,411,5.18,412,5.18,413,3.02,414,3.02,415,2.521,416,3.02,417,5.18,418,3.02,419,4.005,420,5.18,421,4.183,422,4.005,423,4.183,424,4.183,425,4.183,426,4.183,427,5.18,428,3.02,429,3.02,430,3.02,431,4.183,432,3.02,433,3.02,434,3.02,435,3.02,436,4.798,437,3.02,438,3.02,439,3.02,440,3.02,441,3.02,442,4.183,443,3.02,444,3.02,445,3.02,446,3.02,447,3.02,448,3.02,449,3.02,450,3.02,451,1.947,452,5.769,453,3.02,454,3.02,455,3.02,456,3.02,457,2.521,458,3.02,459,3.02,460,3.02,461,3.02,462,3.02,463,3.02,464,3.02,465,3.02,466,2.192,467,3.02,468,3.02,469,3.02,470,3.02,471,2.521,472,3.02,473,3.02,474,4.183,475,3.02,476,3.02,477,4.183,478,4.183,479,3.02,480,3.02,481,2.521,482,3.02,483,3.491,484,4.183,485,4.183,486,3.02,487,3.02,488,3.02,489,5.18,490,3.02,491,3.02,492,3.02,493,3.02,494,3.02,495,4.183,496,3.02,497,3.02]],["title/coverage.html",[498,3.662]],["body/coverage.html",[0,0.589,1,1.594,5,0.292,6,0.538,7,2.531,8,2.534,18,0.032,22,1.222,31,0.42,32,0.015,33,0.021,34,0.015,35,1.102,36,1.222,38,2.327,39,2.327,50,0.807,52,1.213,72,1.222,80,1.222,83,1.222,85,1.222,88,0.568,93,0.68,98,1.758,99,2.531,102,1.594,103,1.594,109,2.431,110,1.331,120,1.955,121,2.531,122,1.758,123,2.7,129,1.331,132,1.955,133,3.1,134,2.528,141,1.758,144,2.201,149,3.045,159,2.531,164,2.531,167,1.758,168,2.531,189,2.531,205,2.531,206,1.758,207,1.955,209,2.531,210,2.531,220,1.955,361,1.758,362,2.531,376,3.045,379,1.758,380,2.201,385,2.531,498,2.531,499,2.531,500,3.033,501,3.033,502,6.437,503,3.033,504,6.11,505,3.033,506,5.189,507,3.033,508,4.809,509,3.033,510,3.033,511,3.033,512,3.033,513,3.033,514,2.531]],["title/dependencies.html",[515,2.271,516,2.821]],["body/dependencies.html",[18,0.033,21,0.585,32,0.021,33,0.026,34,0.021,44,1.326,269,3.523,270,3.064,302,3.064,369,3.064,402,4.348,516,3.064,517,4.221,518,6.318,519,4.221,520,5.209,521,4.221,522,4.221,523,4.221,524,4.221,525,5.209,526,4.348,527,4.221,528,4.221,529,4.221,530,4.221,531,4.221,532,4.221,533,4.221,534,4.221,535,3.523,536,3.523,537,4.221,538,4.221,539,4.221,540,4.221,541,4.221]],["title/miscellaneous/enumerations.html",[542,1.43,543,3.244]],["body/miscellaneous/enumerations.html",[6,0.373,10,0.431,16,1.964,18,0.032,32,0.022,33,0.027,34,0.022,38,1.803,39,2.335,44,1.695,48,1.436,62,1.417,63,1.841,64,2.175,65,1.658,66,1.964,67,1.405,68,1.526,69,1.964,70,1.964,75,2.55,542,2.352,543,3.736,544,4.506]],["title/miscellaneous/functions.html",[542,1.43,545,3.244]],["body/miscellaneous/functions.html",[1,2.7,6,0.428,8,2.254,9,0.636,10,0.398,15,0.925,18,0.029,32,0.02,33,0.025,34,0.02,43,1.256,45,1.529,48,1.367,58,1.152,59,1.613,62,1.009,63,1.408,64,1.663,67,1.296,68,1.408,94,1.201,98,2.978,102,2.7,103,2.7,105,2.254,123,2.462,127,2.7,133,2.66,134,2.7,136,3.729,141,2.978,142,3.445,144,4.06,148,2.66,167,2.978,361,2.978,376,2.996,377,3.445,379,2.978,380,3.729,542,2.169,545,3.445,546,4.127,547,4.127,548,4.127,549,4.127]],["title/index.html",[10,0.262,391,1.577,392,1.577]],["body/index.html",[3,0.455,18,0.032,20,0.494,21,0.265,28,0.37,29,0.467,32,0.022,33,0.015,34,0.009,35,0.558,36,0.769,40,1.309,41,1.662,43,0.729,44,1.913,45,1.536,46,0.838,47,1.61,48,1.325,49,1.105,51,1.61,52,1.44,54,1.67,57,1.974,58,0.669,59,0.937,61,2.285,62,1.37,63,1.626,65,1.359,66,1.309,67,0.6,68,1.017,71,2.376,72,0.769,73,2.181,74,0.862,75,0.769,76,1.43,77,1.759,78,0.838,80,0.769,81,1.309,82,0.916,83,0.769,84,1.43,85,0.769,86,1.67,87,1.309,88,0.687,89,1.43,90,1.43,91,1.309,92,1.309,110,0.838,122,1.729,138,1.387,157,1.594,166,1.594,174,3.614,175,1.107,206,2.986,211,1.594,213,1.594,219,1.594,227,1.107,233,1.594,238,1.729,243,3.063,244,2.663,248,3.063,250,2.49,256,1.594,257,1.594,258,3.293,259,1.594,263,1.594,268,1.387,270,1.387,297,1.387,302,1.387,331,3.265,332,2.365,341,2.49,343,1.594,344,3.461,347,1.387,348,1.594,352,3.461,355,1.594,356,1.387,369,1.387,383,1.594,391,1.729,392,1.729,396,2.165,398,2.673,422,1.594,451,3.556,466,2.663,471,1.594,514,2.49,515,1.594,526,1.594,535,1.594,536,1.594,550,3.669,551,3.669,552,1.91,553,1.91,554,2.663,555,1.91,556,2.49,557,2.983,558,2.983,559,4.146,560,2.983,561,2.983,562,3.669,563,1.91,564,1.91,565,2.983,566,4.146,567,2.49,568,2.983,569,2.983,570,2.49,571,2.49,572,1.91,573,1.91,574,1.91,575,1.91,576,1.594,577,1.91,578,1.91,579,1.91,580,1.91,581,1.91,582,1.91,583,1.91,584,2.983,585,2.983,586,1.91,587,1.91,588,1.91,589,1.594,590,1.91,591,1.91,592,1.594,593,1.91,594,1.91,595,3.669,596,1.91,597,1.91,598,1.91,599,1.91,600,1.594,601,1.594,602,1.91,603,1.91,604,1.91,605,1.91,606,1.91,607,1.91,608,2.983,609,1.91,610,2.983,611,2.983,612,1.91,613,1.91,614,1.91,615,1.91,616,1.91,617,1.91,618,2.983,619,2.983,620,1.231,621,1.91,622,1.91,623,1.91,624,1.91,625,1.91,626,1.91,627,1.594,628,1.594,629,1.91,630,1.91,631,1.594,632,1.91,633,1.91,634,1.91,635,1.91,636,1.91,637,1.91,638,2.983,639,2.983,640,1.91,641,1.91,642,1.91,643,1.91,644,1.91,645,1.91,646,1.91]],["title/license.html",[391,1.577,392,1.577,647,2.271]],["body/license.html",[4,0.615,5,0.422,9,0.155,13,0.281,18,0.014,20,0.138,29,0.306,32,0.01,33,0.01,34,0.006,37,0.464,40,0.549,41,0.362,54,1.898,58,0.616,59,0.393,134,1.696,139,1.535,148,0.807,162,0.909,177,0.909,193,1.77,227,0.726,238,1.226,240,1.765,251,3.265,297,0.909,398,0.807,415,1.045,451,0.807,466,4.003,481,2.292,483,1.765,499,2.292,554,0.909,556,1.045,567,1.765,576,2.292,589,1.045,601,1.045,620,0.807,628,3.009,647,5.004,648,3.226,649,2.745,650,1.252,651,1.252,652,1.252,653,4.557,654,5.072,655,3.226,656,3.605,657,1.252,658,5.249,659,4.712,660,1.252,661,1.252,662,1.252,663,4.712,664,5.072,665,3.911,666,4.712,667,2.115,668,1.252,669,3.605,670,1.252,671,1.252,672,1.252,673,3.226,674,1.252,675,4.557,676,3.226,677,2.115,678,1.252,679,2.745,680,2.115,681,2.115,682,1.252,683,1.252,684,5.457,685,3.226,686,2.115,687,1.252,688,2.115,689,1.252,690,1.252,691,1.252,692,1.252,693,1.252,694,1.252,695,1.252,696,2.745,697,1.252,698,2.745,699,2.115,700,5.072,701,1.252,702,1.252,703,3.911,704,4.557,705,3.226,706,2.115,707,2.745,708,3.911,709,1.252,710,1.252,711,1.252,712,1.252,713,1.252,714,2.115,715,1.252,716,1.252,717,1.252,718,5.022,719,2.745,720,2.115,721,1.252,722,4.557,723,2.115,724,1.252,725,3.605,726,2.115,727,1.252,728,5.457,729,1.252,730,1.252,731,1.252,732,1.252,733,1.252,734,1.252,735,2.115,736,1.252,737,1.252,738,1.252,739,1.252,740,1.252,741,3.226,742,3.605,743,1.252,744,2.115,745,3.226,746,2.115,747,1.252,748,3.605,749,2.115,750,1.252,751,1.252,752,2.745,753,1.252,754,1.252,755,1.252,756,1.252,757,2.115,758,1.045,759,1.252,760,1.252,761,2.745,762,1.252,763,1.252,764,2.745,765,1.252,766,1.252,767,1.252,768,3.226,769,4.712,770,1.252,771,1.252,772,2.115,773,4.376,774,2.745,775,3.226,776,2.115,777,2.115,778,2.115,779,2.115,780,2.745,781,2.115,782,2.745,783,2.115,784,2.115,785,2.115,786,2.115,787,1.045,788,2.115,789,1.252,790,1.252,791,3.605,792,4.164,793,2.745,794,2.115,795,1.252,796,1.252,797,2.115,798,2.115,799,1.252,800,1.252,801,2.745,802,2.115,803,1.252,804,1.252,805,1.252,806,2.745,807,1.252,808,1.252,809,1.252,810,2.115,811,2.115,812,1.252,813,1.252,814,1.252,815,1.252,816,1.252,817,1.252,818,1.252,819,2.115,820,1.252,821,1.252,822,1.252,823,1.252,824,1.252,825,1.252,826,1.252,827,1.252,828,2.745,829,1.252,830,2.745,831,1.252,832,1.252,833,1.252,834,1.252,835,4.376,836,1.252,837,1.252,838,1.252,839,1.252,840,1.252,841,3.226,842,2.115,843,3.226,844,1.252,845,1.252,846,1.252,847,1.252,848,1.252,849,2.745,850,1.252,851,1.252,852,2.115,853,2.115,854,1.252,855,1.252,856,1.252,857,2.115,858,1.252,859,1.252,860,3.605,861,1.252,862,1.252,863,1.252,864,1.252,865,1.252,866,1.252,867,1.252,868,2.745,869,3.226,870,1.252,871,1.252,872,1.252,873,1.252,874,1.252,875,1.252,876,1.252,877,1.252,878,1.252,879,1.252,880,1.252,881,2.115,882,1.252,883,1.252,884,2.115,885,1.252,886,1.252,887,3.226,888,1.252,889,1.252,890,1.252,891,1.252,892,1.252,893,1.252,894,1.252,895,3.226,896,2.745,897,2.745,898,2.745,899,2.115,900,2.115,901,2.745,902,2.115,903,2.115,904,2.115,905,2.115,906,1.252,907,1.252,908,1.252,909,1.252,910,1.252,911,1.252,912,1.252,913,1.252,914,1.252,915,2.115,916,1.252,917,1.252,918,1.252,919,1.252,920,3.605,921,1.252,922,1.252,923,1.252,924,1.252,925,1.252,926,1.252,927,1.252,928,1.252,929,3.605,930,1.252,931,1.252,932,1.252,933,1.252,934,1.252,935,1.045,936,1.252,937,1.252,938,1.252,939,1.252,940,1.252,941,1.252,942,1.252,943,1.252,944,1.252,945,1.252,946,1.252,947,1.252,948,2.745,949,1.252,950,1.252,951,1.252,952,1.252,953,1.252,954,2.115,955,1.252,956,1.252,957,1.252,958,1.252,959,1.252,960,1.252,961,1.252,962,1.252,963,1.252,964,1.252,965,1.252,966,1.252,967,1.252,968,1.252,969,1.252,970,2.115,971,1.252,972,1.252,973,1.252,974,2.115,975,2.115,976,1.252,977,1.252,978,1.252,979,1.252,980,1.252,981,1.252,982,1.252,983,1.252,984,1.252,985,1.252,986,1.252,987,1.252,988,1.252,989,1.252,990,1.252,991,1.252,992,1.252,993,1.252,994,1.252,995,1.252,996,1.252,997,1.252,998,1.252]],["title/modules.html",[333,3.185]],["body/modules.html",[18,0.029,32,0.025,33,0.029,34,0.025,332,3.246,333,3.656,620,3.246,999,5.036,1000,5.036]],["title/overview.html",[1001,3.662]],["body/overview.html",[2,1.515,18,0.028,32,0.024,33,0.028,34,0.024,37,1.787,227,2.796,331,4.097,347,3.501,349,4.026,356,3.501,516,3.501,600,4.026,935,4.026,1001,4.026,1002,4.824,1003,5.644,1004,4.824,1005,4.824,1006,4.824]],["title/todo.html",[190,1.974,391,1.577,392,1.577]],["body/todo.html",[18,0.031,31,0.57,32,0.02,33,0.025,34,0.02,41,1.691,44,1.61,48,1.095,62,1.429,63,1.905,71,2.25,110,1.806,124,2.972,175,2.972,190,4.055,193,3.305,206,2.386,225,3.436,238,3.645,258,2.386,396,2.988,398,2.653,419,3.436,451,2.653,457,3.436,554,4.055,570,3.436,571,3.436,592,3.436,620,3.305,627,5.021,631,3.436,718,3.436,758,3.436,787,3.436,1007,4.116,1008,4.116,1009,4.116,1010,4.116,1011,4.116,1012,4.116]],["title/miscellaneous/variables.html",[542,1.43,1013,3.244]],["body/miscellaneous/variables.html",[6,0.401,10,0.463,18,0.03,31,0.666,32,0.024,33,0.028,34,0.024,38,1.937,39,2.269,74,1.39,75,1.937,93,1.34,94,0.987,95,2.305,97,2.305,542,2.527,544,4.013,1013,4.013]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":583,"title":{},"body":{"index.html":{}}}],["0.0.1",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["0.10.1",{"_index":402,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.10.2",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":577,"title":{},"body":{"index.html":{}}}],["0.8.0",{"_index":195,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["0.8.2",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":419,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["0319eee",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.19.0",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["10.0.5",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1005,"title":{},"body":{"overview.html":{}}}],["12.0.2",{"_index":641,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":649,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["2004",{"_index":651,"title":{},"body":{"license.html":{}}}],["2020",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":471,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["5.2.0",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":691,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["6.6.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1006,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":415,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":536,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/node",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":873,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":951,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":948,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":643,"title":{},"body":{"index.html":{}}}],["act",{"_index":958,"title":{},"body":{"license.html":{}}}],["acting",{"_index":671,"title":{},"body":{"license.html":{}}}],["acts",{"_index":927,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":859,"title":{},"body":{"license.html":{}}}],["adding",{"_index":607,"title":{},"body":{"index.html":{}}}],["additional",{"_index":860,"title":{},"body":{"license.html":{}}}],["additions",{"_index":743,"title":{},"body":{"license.html":{}}}],["advised",{"_index":946,"title":{},"body":{"license.html":{}}}],["against",{"_index":811,"title":{},"body":{"license.html":{}}}],["agent",{"_index":629,"title":{},"body":{"index.html":{}}}],["agree",{"_index":961,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":898,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":878,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":816,"title":{},"body":{"license.html":{}}}],["alone",{"_index":807,"title":{},"body":{"license.html":{}}}],["along",{"_index":850,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":858,"title":{},"body":{"license.html":{}}}],["already",{"_index":353,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":609,"title":{},"body":{"index.html":{}}}],["always",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":645,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":831,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":838,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":844,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":955,"title":{},"body":{"license.html":{}}}],["angular",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular/animations",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":21,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":732,"title":{},"body":{"license.html":{}}}],["apache",{"_index":648,"title":{},"body":{"license.html":{}}}],["api",{"_index":201,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":573,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":566,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":596,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":594,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":622,"title":{},"body":{"index.html":{}}}],["appand",{"_index":613,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":595,"title":{},"body":{"index.html":{}}}],["appear",{"_index":855,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":726,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":896,"title":{},"body":{"license.html":{}}}],["application",{"_index":174,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["applies",{"_index":800,"title":{},"body":{"license.html":{}}}],["apply",{"_index":970,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":355,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":980,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":913,"title":{},"body":{"license.html":{}}}],["archives",{"_index":989,"title":{},"body":{"license.html":{}}}],["arising",{"_index":934,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":967,"title":{},"body":{"license.html":{}}}],["associated",{"_index":918,"title":{},"body":{"license.html":{}}}],["assume",{"_index":916,"title":{},"body":{"license.html":{}}}],["async",{"_index":587,"title":{},"body":{"index.html":{}}}],["attach",{"_index":971,"title":{},"body":{"license.html":{}}}],["attached",{"_index":724,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":841,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":667,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":719,"title":{},"body":{"license.html":{}}}],["available",{"_index":620,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["b3,httptrace,composite,jaeger",{"_index":591,"title":{},"body":{"index.html":{}}}],["b3propagator",{"_index":16,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["b3propagatorservice",{"_index":1,"title":{"injectables/B3PropagatorService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["b63afc1",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":601,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":900,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":748,"title":{},"body":{"license.html":{}}}],["below",{"_index":727,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":695,"title":{},"body":{"license.html":{}}}],["between",{"_index":582,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":740,"title":{},"body":{"license.html":{}}}],["body",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":972,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":51,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":586,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":600,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":975,"title":{},"body":{"license.html":{}}}],["break",{"_index":155,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["browse",{"_index":1000,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":526,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":605,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":833,"title":{},"body":{"license.html":{}}}],["case",{"_index":153,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["cause",{"_index":681,"title":{},"body":{"license.html":{}}}],["changed",{"_index":837,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":393,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":933,"title":{},"body":{"license.html":{}}}],["charge",{"_index":782,"title":{},"body":{"license.html":{}}}],["choose",{"_index":949,"title":{},"body":{"license.html":{}}}],["claim",{"_index":813,"title":{},"body":{"license.html":{}}}],["claims",{"_index":802,"title":{},"body":{"license.html":{}}}],["class",{"_index":29,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":481,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["collector",{"_index":44,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"todo.html":{}}}],["collector(otelcol",{"_index":575,"title":{},"body":{"index.html":{}}}],["collector.jaeger",{"_index":382,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector.otelcol",{"_index":383,"title":{},"body":{"injectables/SpanExporterService.html":{},"index.html":{}}}],["collector.zipkin",{"_index":384,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["collector/build/src/platform/browser",{"_index":370,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collector/build/src/platform/browser/types",{"_index":371,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collector/issues/1385",{"_index":1011,"title":{},"body":{"todo.html":{}}}],["collectorconfiguration",{"_index":564,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfig",{"_index":367,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbrowser",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":368,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":375,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":808,"title":{},"body":{"license.html":{}}}],["command",{"_index":611,"title":{},"body":{"index.html":{}}}],["comment",{"_index":981,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":943,"title":{},"body":{"license.html":{}}}],["commit",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":40,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":36,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["communication",{"_index":752,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":713,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":992,"title":{},"body":{"license.html":{}}}],["complies",{"_index":866,"title":{},"body":{"license.html":{}}}],["compose",{"_index":619,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":623,"title":{},"body":{"index.html":{}}}],["composite",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["compositepropagator",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{}}}],["compositepropagatorservice",{"_index":98,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["computer",{"_index":940,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":654,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.collector",{"_index":381,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["config.commonconfig.propagator",{"_index":152,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["config.commonconfig.servicename",{"_index":186,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerconfig?.endpoint",{"_index":187,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":203,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":374,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":373,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":39,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig.url",{"_index":390,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configjaeger",{"_index":182,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["configurable",{"_index":579,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":41,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":140,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":565,"title":{},"body":{"index.html":{}}}],["configured",{"_index":377,"title":{},"body":{"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["consequential",{"_index":932,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":957,"title":{},"body":{"license.html":{}}}],["console",{"_index":45,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["console.error('error",{"_index":146,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["consolespanexporter",{"_index":127,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["consolespanexporterservice",{"_index":120,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":765,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":817,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":100,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":184,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":101,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":179,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":861,"title":{},"body":{"license.html":{}}}],["contained",{"_index":847,"title":{},"body":{"license.html":{}}}],["content",{"_index":893,"title":{},"body":{"license.html":{}}}],["contents",{"_index":556,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":686,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":742,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":806,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":868,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":769,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":818,"title":{},"body":{"license.html":{}}}],["control",{"_index":673,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":674,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":715,"title":{},"body":{"license.html":{}}}],["copies",{"_index":825,"title":{},"body":{"license.html":{}}}],["copy",{"_index":830,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":664,"title":{},"body":{"license.html":{}}}],["correlation",{"_index":1009,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":814,"title":{},"body":{"license.html":{}}}],["cours",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":498,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":603,"title":{},"body":{"index.html":{}}}],["cross",{"_index":812,"title":{},"body":{"license.html":{}}}],["current",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":889,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":929,"title":{},"body":{"license.html":{}}}],["date",{"_index":822,"title":{},"body":{"license.html":{}}}],["day",{"_index":178,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["dd7a0e5",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":644,"title":{},"body":{"index.html":{}}}],["default",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":963,"title":{},"body":{"license.html":{}}}],["define",{"_index":160,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":13,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":139,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"license.html":{}}}],["definitions",{"_index":657,"title":{},"body":{"license.html":{}}}],["del",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":924,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":639,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":516,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":552,"title":{},"body":{"index.html":{}}}],["deps",{"_index":145,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["derivative",{"_index":728,"title":{},"body":{"license.html":{}}}],["derived",{"_index":729,"title":{},"body":{"license.html":{}}}],["describing",{"_index":890,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["designated",{"_index":767,"title":{},"body":{"license.html":{}}}],["determining",{"_index":912,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":625,"title":{},"body":{"index.html":{}}}],["different",{"_index":865,"title":{},"body":{"license.html":{}}}],["dir",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":679,"title":{},"body":{"license.html":{}}}],["direction",{"_index":682,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":894,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":762,"title":{},"body":{"license.html":{}}}],["display",{"_index":567,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":791,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":849,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":656,"title":{},"body":{"license.html":{}}}],["doc",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":618,"title":{},"body":{"index.html":{}}}],["docs",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":662,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":499,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1010,"title":{},"body":{"todo.html":{}}}],["don't",{"_index":979,"title":{},"body":{"license.html":{}}}],["done",{"_index":1012,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":775,"title":{},"body":{"license.html":{}}}],["easier",{"_index":987,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":730,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":733,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":749,"title":{},"body":{"license.html":{}}}],["en",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":974,"title":{},"body":{"license.html":{}}}],["end",{"_index":969,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["entities",{"_index":672,"title":{},"body":{"license.html":{}}}],["entity",{"_index":666,"title":{},"body":{"license.html":{}}}],["enum",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["enumerations",{"_index":543,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":597,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":598,"title":{},"body":{"index.html":{}}}],["error",{"_index":352,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["even",{"_index":945,"title":{},"body":{"license.html":{}}}],["event",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.status",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":451,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["except",{"_index":793,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":764,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":781,"title":{},"body":{"license.html":{}}}],["executed",{"_index":879,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":919,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":697,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":870,"title":{},"body":{"license.html":{}}}],["export",{"_index":28,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":635,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":124,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"todo.html":{}}}],["exporter.interface",{"_index":130,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.service",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["exporter.service.ts",{"_index":123,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["exporter.service.ts:16",{"_index":387,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":126,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:18",{"_index":180,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:25",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:32",{"_index":378,"title":{},"body":{"injectables/SpanExporterService.html":{}}}],["exporter.service.ts:34",{"_index":388,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:36",{"_index":181,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["exporter.service.ts:43",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":183,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["exports",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":903,"title":{},"body":{"license.html":{}}}],["f",{"_index":621,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["factory",{"_index":136,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"miscellaneous/functions.html":{}}}],["fad044a",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":941,"title":{},"body":{"license.html":{}}}],["false",{"_index":568,"title":{},"body":{"index.html":{}}}],["features",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":950,"title":{},"body":{"license.html":{}}}],["fields",{"_index":973,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":689,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":823,"title":{},"body":{"license.html":{}}}],["files",{"_index":707,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":908,"title":{},"body":{"license.html":{}}}],["fix",{"_index":631,"title":{},"body":{"index.html":{},"todo.html":{}}}],["fixes",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":828,"title":{},"body":{"license.html":{}}}],["form",{"_index":700,"title":{},"body":{"license.html":{}}}],["format",{"_index":983,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":784,"title":{},"body":{"license.html":{}}}],["function",{"_index":149,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["functions",{"_index":545,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generally",{"_index":593,"title":{},"body":{"index.html":{}}}],["generated",{"_index":714,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":125,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":12,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["getting",{"_index":391,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer('angular",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1008,"title":{},"body":{"todo.html":{}}}],["give",{"_index":162,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":558,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":938,"title":{},"body":{"license.html":{}}}],["governing",{"_index":997,"title":{},"body":{"license.html":{}}}],["grant",{"_index":774,"title":{},"body":{"license.html":{}}}],["granted",{"_index":699,"title":{},"body":{"license.html":{}}}],["granting",{"_index":668,"title":{},"body":{"license.html":{}}}],["grants",{"_index":777,"title":{},"body":{"license.html":{}}}],["graph",{"_index":999,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":925,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":965,"title":{},"body":{"license.html":{}}}],["header",{"_index":86,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":78,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["here",{"_index":627,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":776,"title":{},"body":{"license.html":{}}}],["herein",{"_index":875,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":964,"title":{},"body":{"license.html":{}}}],["http",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["http.interceptor",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:115",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:140",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:176",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:192",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:14268/api/traces",{"_index":584,"title":{},"body":{"index.html":{}}}],["http://localhost:16686",{"_index":626,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":615,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":652,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":994,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://github.com/open",{"_index":570,"title":{},"body":{"index.html":{},"todo.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":555,"title":{},"body":{"index.html":{}}}],["httpsender",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["httptextpropagator",{"_index":19,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["httptextpropagatorservice",{"_index":132,"title":{"injectables/HttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["httptextpropagatorservicefactory",{"_index":144,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httptextpropagatorservicefactory(config",{"_index":548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["httptrace",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["httptracecontext",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["httptracecontextpropagatorservice",{"_index":102,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["id",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":988,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":977,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":129,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":687,"title":{},"body":{"license.html":{}}}],["iii",{"_index":694,"title":{},"body":{"license.html":{}}}],["implement",{"_index":602,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":166,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":30,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["implied",{"_index":904,"title":{},"body":{"license.html":{}}}],["import",{"_index":20,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["improving",{"_index":763,"title":{},"body":{"license.html":{}}}],["inability",{"_index":936,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":931,"title":{},"body":{"license.html":{}}}],["include",{"_index":576,"title":{},"body":{"index.html":{},"license.html":{}}}],["included",{"_index":723,"title":{},"body":{"license.html":{}}}],["includes",{"_index":845,"title":{},"body":{"license.html":{}}}],["including",{"_index":704,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":746,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":194,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["incorporated",{"_index":772,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":966,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":962,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":953,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":721,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":680,"title":{},"body":{"license.html":{}}}],["individual",{"_index":696,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":978,"title":{},"body":{"license.html":{}}}],["informational",{"_index":856,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":805,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":819,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptextpropagatorservice",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":0,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":135,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":163,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":563,"title":{},"body":{"index.html":{}}}],["installation",{"_index":557,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["institute",{"_index":809,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":744,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":206,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.module.ts",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":38,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console",{"_index":121,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":159,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":161,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/jaeger",{"_index":168,"title":{},"body":{"injectables/JaegerExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":376,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/exporter/zipkin",{"_index":385,"title":{},"body":{"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":133,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":189,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":205,"title":{},"body":{"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":164,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":165,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":35,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":37,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":22,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":785,"title":{},"body":{"license.html":{}}}],["isn't",{"_index":170,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["issue",{"_index":758,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":175,"title":{},"body":{"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["jaegercollectorconfig",{"_index":80,"title":{"interfaces/JaegerCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["jaegerconfig",{"_index":90,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["jaegerexporter",{"_index":169,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporter(this.configjaeger",{"_index":188,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["jaegerexporterservice",{"_index":167,"title":{"injectables/JaegerExporterService.html":{}},"body":{"injectables/JaegerExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerhttptracepropagator",{"_index":197,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":204,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":103,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["jaegerpropagator",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["jaegerpropagatorconfig",{"_index":85,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":650,"title":{},"body":{"license.html":{}}}],["js",{"_index":535,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":572,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["json.stringify(event.error",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":550,"title":{},"body":{"index.html":{}}}],["key",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":902,"title":{},"body":{"license.html":{}}}],["language",{"_index":996,"title":{},"body":{"license.html":{}}}],["law",{"_index":897,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":815,"title":{},"body":{"license.html":{}}}],["legal",{"_index":669,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1002,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":920,"title":{},"body":{"license.html":{}}}],["liable",{"_index":928,"title":{},"body":{"license.html":{}}}],["library",{"_index":551,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":803,"title":{},"body":{"license.html":{}}}],["license",{"_index":647,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":863,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":991,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":820,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":663,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":905,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":998,"title":{},"body":{"license.html":{}}}],["limited",{"_index":705,"title":{},"body":{"license.html":{}}}],["link",{"_index":739,"title":{},"body":{"license.html":{}}}],["list",{"_index":592,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":756,"title":{},"body":{"license.html":{}}}],["literal",{"_index":360,"title":{},"body":{"interfaces/OtelCollectorConfig.html":{}}}],["litigation",{"_index":810,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":354,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":937,"title":{},"body":{"license.html":{}}}],["losses",{"_index":944,"title":{},"body":{"license.html":{}}}],["made",{"_index":720,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":755,"title":{},"body":{"license.html":{}}}],["make",{"_index":796,"title":{},"body":{"license.html":{}}}],["making",{"_index":702,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":942,"title":{},"body":{"license.html":{}}}],["managed",{"_index":760,"title":{},"body":{"license.html":{}}}],["management",{"_index":683,"title":{},"body":{"license.html":{}}}],["manager",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["marked",{"_index":766,"title":{},"body":{"license.html":{}}}],["marks",{"_index":885,"title":{},"body":{"license.html":{}}}],["matching",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":659,"title":{},"body":{"license.html":{}}}],["means",{"_index":677,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":710,"title":{},"body":{"license.html":{}}}],["media",{"_index":716,"title":{},"body":{"license.html":{}}}],["medium",{"_index":826,"title":{},"body":{"license.html":{}}}],["meet",{"_index":827,"title":{},"body":{"license.html":{}}}],["member",{"_index":636,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":907,"title":{},"body":{"license.html":{}}}],["merely",{"_index":738,"title":{},"body":{"license.html":{}}}],["method",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":542,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":703,"title":{},"body":{"license.html":{}}}],["modified",{"_index":832,"title":{},"body":{"license.html":{}}}],["modify",{"_index":857,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":862,"title":{},"body":{"license.html":{}}}],["module",{"_index":331,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":333,"title":{"modules.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["moment",{"_index":172,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["more",{"_index":554,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":359,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":884,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":633,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":804,"title":{},"body":{"license.html":{}}}],["need",{"_index":638,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":923,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":926,"title":{},"body":{"license.html":{}}}],["new",{"_index":31,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":192,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngmodule",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ngx",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":634,"title":{},"body":{"index.html":{}}}],["non",{"_index":780,"title":{},"body":{"license.html":{}}}],["noop",{"_index":142,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"miscellaneous/functions.html":{}}}],["noophttptextpropagator",{"_index":199,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["noophttptextpropagatorservice",{"_index":141,"title":{"injectables/NoopHttpTextPropagatorService.html":{}},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normally",{"_index":854,"title":{},"body":{"license.html":{}}}],["notable",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":874,"title":{},"body":{"license.html":{}}}],["notice",{"_index":722,"title":{},"body":{"license.html":{}}}],["notices",{"_index":835,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":872,"title":{},"body":{"license.html":{}}}],["npm",{"_index":562,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["number",{"_index":53,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["object",{"_index":708,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":954,"title":{},"body":{"license.html":{}}}],["observable",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":993,"title":{},"body":{"license.html":{}}}],["offer",{"_index":797,"title":{},"body":{"license.html":{}}}],["ok",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":177,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["open",{"_index":614,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":24,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/core",{"_index":25,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/exporter",{"_index":369,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":198,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["opentelemetry/tracing",{"_index":131,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["opentelemetry/web",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":88,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":207,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":332,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":599,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":560,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["operationnal",{"_index":171,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["optional",{"_index":43,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["origin",{"_index":891,"title":{},"body":{"license.html":{}}}],["original",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["otelcol,zipkin,jaeger",{"_index":590,"title":{},"body":{"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexporterservice",{"_index":361,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["otelcollectorconfig",{"_index":72,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":935,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":692,"title":{},"body":{"license.html":{}}}],["overide",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1001,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":665,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":688,"title":{},"body":{"license.html":{}}}],["package",{"_index":515,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":986,"title":{},"body":{"license.html":{}}}],["param",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameters",{"_index":105,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":843,"title":{},"body":{"license.html":{}}}],["particular",{"_index":909,"title":{},"body":{"license.html":{}}}],["party",{"_index":853,"title":{},"body":{"license.html":{}}}],["patent",{"_index":792,"title":{},"body":{"license.html":{}}}],["percent",{"_index":690,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":580,"title":{},"body":{"index.html":{}}}],["perform",{"_index":789,"title":{},"body":{"license.html":{}}}],["permission",{"_index":882,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":698,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":778,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":842,"title":{},"body":{"license.html":{}}}],["places",{"_index":848,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":947,"title":{},"body":{"license.html":{}}}],["power",{"_index":678,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":701,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":787,"title":{},"body":{"license.html":{},"todo.html":{}}}],["present",{"_index":176,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["printed",{"_index":985,"title":{},"body":{"license.html":{}}}],["private",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["probabilitysampler",{"_index":46,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":886,"title":{},"body":{"license.html":{}}}],["production",{"_index":47,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":457,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":396,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../http",{"_index":546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../opentelemetry",{"_index":544,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projects/.../span",{"_index":547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/example",{"_index":608,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":834,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":604,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":48,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["propagator.b3",{"_index":154,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.composite",{"_index":157,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"index.html":{}}}],["propagator.httptrace",{"_index":156,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.interface",{"_index":23,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.jaeger",{"_index":158,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagator.service",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":8,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["propagator.service.ts:16",{"_index":104,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":14,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:30",{"_index":196,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:34",{"_index":106,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":137,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{}}}],["propagators",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["properties",{"_index":42,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["provide",{"_index":148,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["provided",{"_index":725,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":26,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":356,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":899,"title":{},"body":{"license.html":{}}}],["public",{"_index":200,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":788,"title":{},"body":{"license.html":{}}}],["publish",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":761,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":676,"title":{},"body":{"license.html":{}}}],["readable",{"_index":846,"title":{},"body":{"license.html":{}}}],["readme",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":968,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":888,"title":{},"body":{"license.html":{}}}],["received",{"_index":770,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":829,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":589,"title":{},"body":{"index.html":{},"license.html":{}}}],["redistributing",{"_index":915,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":824,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":880,"title":{},"body":{"license.html":{}}}],["release",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":736,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":976,"title":{},"body":{"license.html":{}}}],["represent",{"_index":734,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":754,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":786,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":892,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":655,"title":{},"body":{"license.html":{}}}],["request",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":887,"title":{},"body":{"license.html":{}}}],["reset",{"_index":1004,"title":{},"body":{"overview.html":{}}}],["response",{"_index":606,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":960,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":911,"title":{},"body":{"license.html":{}}}],["result",{"_index":32,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":709,"title":{},"body":{"license.html":{}}}],["results",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":839,"title":{},"body":{"license.html":{}}}],["return",{"_index":15,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/functions.html":{}}}],["returns",{"_index":17,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":731,"title":{},"body":{"license.html":{}}}],["rights",{"_index":956,"title":{},"body":{"license.html":{}}}],["risks",{"_index":917,"title":{},"body":{"license.html":{}}}],["root",{"_index":27,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":783,"title":{},"body":{"license.html":{}}}],["run",{"_index":559,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":984,"title":{},"body":{"license.html":{}}}],["sample",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["samples",{"_index":578,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":795,"title":{},"body":{"license.html":{}}}],["sections",{"_index":660,"title":{},"body":{"license.html":{}}}],["see",{"_index":398,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":798,"title":{},"body":{"license.html":{}}}],["send",{"_index":569,"title":{},"body":{"index.html":{}}}],["sending",{"_index":630,"title":{},"body":{"index.html":{}}}],["sent",{"_index":753,"title":{},"body":{"license.html":{}}}],["separable",{"_index":737,"title":{},"body":{"license.html":{}}}],["separate",{"_index":877,"title":{},"body":{"license.html":{}}}],["service",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/HttpTextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":49,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/http",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":658,"title":{},"body":{"license.html":{}}}],["shares",{"_index":693,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":706,"title":{},"body":{"license.html":{}}}],["sole",{"_index":959,"title":{},"body":{"license.html":{}}}],["solely",{"_index":910,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":122,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('error",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.addevent('response",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('http.status_code",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":128,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/JaegerExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spanexporterservice",{"_index":220,"title":{"injectables/SpanExporterService.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{},"coverage.html":{}}}],["spanexporterservicefactory",{"_index":380,"title":{},"body":{"injectables/SpanExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spanexporterservicefactory(config",{"_index":549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["special",{"_index":930,"title":{},"body":{"license.html":{}}}],["specific",{"_index":995,"title":{},"body":{"license.html":{}}}],["specified",{"_index":574,"title":{},"body":{"index.html":{}}}],["stackcontextmanager",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":610,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":612,"title":{},"body":{"index.html":{}}}],["started",{"_index":392,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":871,"title":{},"body":{"license.html":{}}}],["stated",{"_index":794,"title":{},"body":{"license.html":{}}}],["statement",{"_index":864,"title":{},"body":{"license.html":{}}}],["statements",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":836,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":939,"title":{},"body":{"license.html":{}}}],["string",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":483,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":790,"title":{},"body":{"license.html":{}}}],["submission",{"_index":867,"title":{},"body":{"license.html":{}}}],["submit",{"_index":747,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":745,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":771,"title":{},"body":{"license.html":{}}}],["such",{"_index":684,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":876,"title":{},"body":{"license.html":{}}}],["support",{"_index":952,"title":{},"body":{"license.html":{}}}],["switch",{"_index":151,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["sync",{"_index":588,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":982,"title":{},"body":{"license.html":{}}}],["systems",{"_index":757,"title":{},"body":{"license.html":{}}}],["table",{"_index":514,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1007,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":571,"title":{},"body":{"index.html":{},"todo.html":{}}}],["terminate",{"_index":821,"title":{},"body":{"license.html":{}}}],["terms",{"_index":653,"title":{},"body":{"license.html":{}}}],["test",{"_index":422,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":134,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/NoopHttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["theory",{"_index":921,"title":{},"body":{"license.html":{}}}],["there's",{"_index":617,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":741,"title":{},"body":{"license.html":{}}}],["third",{"_index":852,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.configjaeger",{"_index":185,"title":{},"body":{"injectables/JaegerExporterService.html":{}}}],["this.contextmanager",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":202,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(config.commonconfig.probabilitysampler",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptextpropagatorservice.getpropagator",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":372,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":389,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":801,"title":{},"body":{"license.html":{}}}],["through",{"_index":661,"title":{},"body":{"license.html":{}}}],["throw",{"_index":351,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":637,"title":{},"body":{"index.html":{}}}],["title",{"_index":906,"title":{},"body":{"license.html":{}}}],["todo",{"_index":190,"title":{"todo.html":{}},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"todo.html":{}}}],["tort",{"_index":922,"title":{},"body":{"license.html":{}}}],["trace",{"_index":52,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTextPropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":581,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":759,"title":{},"body":{"license.html":{}}}],["trade",{"_index":883,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":840,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":881,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":799,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":711,"title":{},"body":{"license.html":{}}}],["translation",{"_index":712,"title":{},"body":{"license.html":{}}}],["troubleshoot",{"_index":561,"title":{},"body":{"index.html":{}}}],["true",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts1086",{"_index":642,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":632,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":50,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/JaegerCollectorConfig.html":{},"injectables/JaegerExporterService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":640,"title":{},"body":{"index.html":{}}}],["types",{"_index":717,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":646,"title":{},"body":{"index.html":{}}}],["typo",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":147,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/SpanExporterService.html":{}}}],["under",{"_index":675,"title":{},"body":{"license.html":{}}}],["union",{"_index":670,"title":{},"body":{"license.html":{}}}],["unless",{"_index":869,"title":{},"body":{"license.html":{}}}],["unused",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":624,"title":{},"body":{"index.html":{}}}],["update",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["use",{"_index":54,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":358,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["used",{"_index":138,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{},"index.html":{}}}],["usefactory",{"_index":143,"title":{},"body":{"injectables/HttpTextPropagatorService.html":{},"injectables/SpanExporterService.html":{}}}],["uses",{"_index":553,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":357,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":914,"title":{},"body":{"license.html":{}}}],["value",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1013,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":750,"title":{},"body":{"license.html":{}}}],["version",{"_index":193,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"license.html":{},"todo.html":{}}}],["via",{"_index":585,"title":{},"body":{"index.html":{}}}],["void",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["wait",{"_index":191,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["want",{"_index":616,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":901,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":895,"title":{},"body":{"license.html":{}}}],["web",{"_index":173,"title":{},"body":{"injectables/JaegerExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["webtracerprovider",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":851,"title":{},"body":{"license.html":{}}}],["whether",{"_index":685,"title":{},"body":{"license.html":{}}}],["whole",{"_index":735,"title":{},"body":{"license.html":{}}}],["within",{"_index":773,"title":{},"body":{"license.html":{}}}],["without",{"_index":628,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":718,"title":{},"body":{"license.html":{},"todo.html":{}}}],["works",{"_index":466,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":779,"title":{},"body":{"license.html":{}}}],["writing",{"_index":768,"title":{},"body":{"license.html":{}}}],["written",{"_index":751,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["yyyy",{"_index":990,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/SpanExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"todo.html":{}}}],["zipkincollectorconfig",{"_index":83,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":386,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporterservice",{"_index":379,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"injectables/SpanExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["zone.js",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1003,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return HttpTextPropagator as B3Propagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collector\n                                \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                            Optional\n                                        propagator\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collector\n                                    \n                                \n                                \n                                    \n                                        collector:         Collector\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Collector\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    collector \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        propagator\n                                    \n                                \n                                \n                                    \n                                        propagator:         Propagator\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Propagator\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    propagator \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts:34\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return HttpTextPropagator as CompositePropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTextPropagatorService.html":{"url":"injectables/HttpTextPropagatorService.html","title":"injectable - HttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTextPropagatorService\nInjected service with factory to get a propagator by configuration\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { Injectable } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  Propagator,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { NoopHttpTextPropagatorService } from './noop-http-text-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n/**\n * HttpTextPropagatorService\n * Injected service with factory to get a propagator by configuration\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: httpTextPropagatorServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    HttpTraceContextPropagatorService,\n    B3PropagatorService,\n    CompositePropagatorService,\n    NoopHttpTextPropagatorService,\n    JaegerHttpTracePropagatorService,\n  ],\n})\nexport class HttpTextPropagatorService implements IPropagator {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getPropagator(): HttpTextPropagator {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * httpTextPropagatorServiceFactory\n * Provide a factory to have a propagator service\n * @param config config\n * @param httpTraceContextPropagatorService httpTraceContext\n * @param b3PropagatorService propagator\n * @param compositePropagatorService  composite\n * @param noopHttpTextPropagatorService noop\n *\n */\nexport function httpTextPropagatorServiceFactory(\n  config: OpenTelemetryConfig,\n  httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n  b3PropagatorService: B3PropagatorService,\n  compositePropagatorService: CompositePropagatorService,\n  noopHttpTextPropagatorService: NoopHttpTextPropagatorService,\n  jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n) {\n  let propagator: IPropagator = null;\n  switch (config.commonConfig.propagator) {\n    case Propagator.b3:\n      propagator = b3PropagatorService;\n      break;\n    case Propagator.httpTrace:\n      propagator = httpTraceContextPropagatorService;\n      break;\n    case Propagator.composite:\n      propagator = compositePropagatorService;\n      break;\n    case Propagator.jaeger:\n      propagator = jaegerHttpTracePropagatorService;\n      break;\n    default:\n      propagator = noopHttpTextPropagatorService;\n      break;\n  }\n  return propagator;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerCollectorConfig.html":{"url":"interfaces/JaegerCollectorConfig.html","title":"interface - JaegerCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Jaeger Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        endpoint\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoint\n                                    \n                                \n                                \n                                    \n                                        endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Endpoint for the HTTPSender\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerExporterService.html":{"url":"injectables/JaegerExporterService.html","title":"injectable - JaegerExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerExporterService class\nJaegerExporter isn't operationnal for the moment in web application.\nit's present if one day..\nFor the moment return a ConsoleSpanExporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:18\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a JaegerExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * JaegerExporterService class\n * JaegerExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n * For the moment return a ConsoleSpanExporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerExporterService implements IExporter {\n  //private configJaeger: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.configJaeger = {\n      serviceName: config.commonConfig.serviceName,\n      endpoint: config.jaegerConfig?.endpoint,\n    };*/\n  }\n\n  /**\n   * Return a JaegerExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    //return new JaegerExporter(this.configJaeger);\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\nTODO : wait the next version (incompatible 0.8.0)\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:17\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:30\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator } from '@opentelemetry/api';\n//import { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { NoopHttpTextPropagator } from '@opentelemetry/api';\nimport { OpenTelemetryInjectConfig } from '../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n * TODO : wait the next version (incompatible 0.8.0)\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an HttpTraceContext\n   * @return HttpTextPropagator as HttpTraceContext\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n    // return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopHttpTextPropagatorService.html":{"url":"injectables/NoopHttpTextPropagatorService.html","title":"injectable - NoopHttpTextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopHttpTextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopHttpTextPropagator\n\n\n                    \n                    \n                    \n                        Returns :         HttpTextPropagator\n\n                    \n                    \n                        HttpTextPropagator as NoopHttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from './propagator.interface';\nimport { HttpTextPropagator, NoopHttpTextPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopHttpTextPropagatorService implements IPropagator {\n  /**\n   * Return an NoopHttpTextPropagator\n   * @return HttpTextPropagator as NoopHttpTextPropagator\n   */\n  getPropagator(): HttpTextPropagator {\n    return new NoopHttpTextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerConfig:         JaegerCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, httpTextPropagatorService: HttpTextPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        httpTextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:192\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:115\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:140\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:176\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { HttpTextPropagatorService } from '../services/propagator/http-text-propagator.service';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param httpTextPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(HttpTextPropagatorService)\n    private httpTextPropagatorService: HttpTextPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(config.commonConfig.probabilitySampler),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.httpTextPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpEvent) => {\n          if (event instanceof HttpResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          if (event instanceof HttpErrorResponse) {\n            span.setAttribute('http.status_code', event.status);\n            span.addEvent('error', { body: JSON.stringify(event.error) });\n          }\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const span = this.tracer\n      .getTracer('angular-interceptor', '0.0.1')\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    for (const key in request.headers.keys) {\n      carrier[key] = request.headers.get(key);\n    }\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig === undefined || sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CollectorExporterConfigBrowser\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfig\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBrowser,\n} from '@opentelemetry/exporter-collector/build/src/platform/browser/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfig\n   */\n  private otelcolConfig: CollectorExporterConfigBrowser;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpanExporterService.html":{"url":"injectables/SpanExporterService.html","title":"injectable - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                An Angular Factory to have the configured collector\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:32\n                \n            \n\n\n            \n                \n                    Not used in a factory, just a definition\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\nimport { Injectable } from '@angular/core';\nimport { JaegerExporterService } from './jaeger-exporter.service';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\nimport {\n  OpenTelemetryConfig,\n  Collector,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\n\n/**\n * An Angular Factory to have the configured collector\n */\n@Injectable({\n  providedIn: 'root',\n  useFactory: spanExporterServiceFactory,\n  deps: [\n    OpenTelemetryInjectConfig,\n    JaegerExporterService,\n    OtelcolExporterService,\n    ZipkinExporterService,\n    ConsoleSpanExporterService,\n  ],\n})\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used in a factory, just a definition\n   */\n  getExporter(): SpanExporter {\n    // factory\n    console.error('error');\n    return undefined;\n  }\n}\n\n/**\n * Factory to return Service configured\n * @param config config\n * @param jaegerExporterService jaeger\n * @param otelcolExporterService otelcol\n * @param zipkinExporterService zipkin\n * @param consoleSpanExporter console\n */\nexport function spanExporterServiceFactory(\n  config: OpenTelemetryConfig,\n  jaegerExporterService: JaegerExporterService,\n  otelcolExporterService: OtelcolExporterService,\n  zipkinExporterService: ZipkinExporterService,\n  consoleSpanExporter: ConsoleSpanExporterService\n) {\n  let exporter: IExporter = null;\n  switch (config.commonConfig.collector) {\n    case Collector.jaeger:\n      exporter = jaegerExporterService;\n      break;\n    case Collector.otelcol:\n      exporter = otelcolExporterService;\n      break;\n    case Collector.zipkin:\n      exporter = zipkinExporterService;\n      break;\n    default:\n      exporter = consoleSpanExporter;\n      break;\n  }\n  return exporter;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\nexport enum Collector {\n  jaeger = 'jaeger',\n  zipkin = 'zipkin',\n  otelcol = 'otelcol',\n}\n\nexport enum Propagator {\n  b3 = 'B3Propagator',\n  httpTrace = 'HttpTraceContext',\n  composite = 'CompositePropagator',\n  jaeger = 'JaegerPropagator',\n}\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** collector */\n  collector?: Collector;\n  /** propagator */\n  propagator?: Propagator;\n  /** probabilitySampler */\n  probabilitySampler?: number;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Jaeger Collector configuration\n */\nexport interface JaegerCollectorConfig {\n  /**\n   * Endpoint for the HTTPSender\n   */\n  endpoint?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** jaegerConfig */\n  jaegerConfig?: JaegerCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporter isn't operationnal for the moment in web application.\nit's present if one day..\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:16\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts:34\n                \n            \n\n\n            \n                \n                    Return for the moment a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from './exporter.interface';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../configuration/opentelemetry-config';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ZipkinExporter isn't operationnal for the moment in web application.\n * it's present if one day..\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  // private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    /*this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig.url,\n    };*/\n  }\n\n  /**\n   * Return for the moment a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/jaeger-exporter.service.ts\n            \n            injectable\n            JaegerExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            injectable\n            SpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            function\n            spanExporterServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            injectable\n            HttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n            \n            function\n            httpTextPropagatorServiceFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator.service.ts\n            \n            injectable\n            NoopHttpTextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.10.1\n        \n            @opentelemetry/web : ^0.10.1\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Collector   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            Propagator   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n            \n                \n                    \n                        \n                        Collector\n                    \n                \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : jaeger\n                            \n                        \n                        \n                            \n                                 zipkin\n                            \n                        \n                        \n                            \n                                Value : zipkin\n                            \n                        \n                        \n                            \n                                 otelcol\n                            \n                        \n                        \n                            \n                                Value : otelcol\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Propagator\n                    \n                \n                        \n                            \n                                 b3\n                            \n                        \n                        \n                            \n                                Value : B3Propagator\n                            \n                        \n                        \n                            \n                                 httpTrace\n                            \n                        \n                        \n                            \n                                Value : HttpTraceContext\n                            \n                        \n                        \n                            \n                                 composite\n                            \n                        \n                        \n                            \n                                Value : CompositePropagator\n                            \n                        \n                        \n                            \n                                 jaeger\n                            \n                        \n                        \n                            \n                                Value : JaegerPropagator\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            httpTextPropagatorServiceFactory   (projects/.../http-text-propagator.service.ts)\n                        \n                        \n                            spanExporterServiceFactory   (projects/.../span-exporter.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/http-text-propagator.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            httpTextPropagatorServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nhttpTextPropagatorServiceFactory(config, httpTraceContextPropagatorService, b3PropagatorService, compositePropagatorService, noopHttpTextPropagatorService, jaegerHttpTracePropagatorService)\n                \n            \n\n\n\n\n            \n                \n                    httpTextPropagatorServiceFactory\nProvide a factory to have a propagator service\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    httpTraceContextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        httpTraceContext\n\n                                    \n                                \n                                \n                                    b3PropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        propagator\n\n                                    \n                                \n                                \n                                    compositePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        composite\n\n                                    \n                                \n                                \n                                    noopHttpTextPropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        noop\n\n                                    \n                                \n                                \n                                    jaegerHttpTracePropagatorService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            spanExporterServiceFactory\n                        \n                        \n                    \n                \n            \n            \n                \nspanExporterServiceFactory(config, jaegerExporterService, otelcolExporterService, zipkinExporterService, consoleSpanExporter)\n                \n            \n\n\n\n\n            \n                \n                    Factory to return Service configured\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    config\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config\n\n                                    \n                                \n                                \n                                    jaegerExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        jaeger\n\n                                    \n                                \n                                \n                                    otelcolExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        otelcol\n\n                                    \n                                \n                                \n                                    zipkinExporterService\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        zipkin\n\n                                    \n                                \n                                \n                                    consoleSpanExporter\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nZipkin Collector Configuration\nJaeger Collector Configuration\nJaeger Propagator Configuration\n\n\nAngular Module\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collectorConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpentelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  jaegerConfig?: JaegerCollectorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      collector: Collector.otelcol, //Enum to specified the collector : OpenTelemetry Collector(otelcol), Zipkin (zipkin), Jaeger (jaeger)\n      propagator: Propagator.composite, // Enum to propagator : B3 (b3), HttpTraceContext (httpTrace), Jaeger Propagator (jaeger) and Composite that include b3, httpTrace and Jaeger (composite)\n      probabilitySampler: 0.7, //Samples a configurable percentage of traces, value between 0 to 1\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    zipkinConfig: {\n      url: 'http://localhost:9411/api/v2/spans', //url of zipkin collector\n    },\n    jaegerConfig: {\n      endpoint: 'http://localhost:14268/api/traces', // Url of Jaeger collector via HTTPSender\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\ncollector: (Enum) use Enum Collector (otelcol,zipkin,jaeger)\npropagator: (Enum) use Propagator Enum (b3,httpTrace,composite,jaeger)\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header\n\nZipkin Collector Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\n\nJaeger Collector Configuration\n\nendpoint: (string) url of jaeger collector (example : http://localhost:14268/api/traces)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header\n\nAngular Module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n jaeger-propagator doesn't work with version 0.9.0  \n Add new version collector in example after this fix (https://github.com/open-telemetry/opentelemetry-collector/issues/1385)  \n\nIn Progress\nDone ✓\n\n Add sampler in configuration => here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
