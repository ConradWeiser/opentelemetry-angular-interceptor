var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AwsXrayPropagatorModule.html",[0,1.285,1,2.416]],["body/modules/AwsXrayPropagatorModule.html",[1,4.156,2,1.552,3,0.335,4,0.335,5,0.258,6,0.258,7,3.851,8,4.445,9,3.479,10,2.933,11,0.329,12,0.023,13,2.21,14,0.335,15,2.346,16,1.964,17,3.801,18,3.181,19,2.721,20,1.85,21,1.964,22,1.85,23,1.092,24,1.964,25,0.335,26,0.795,27,0.019,28,0.019]],["title/injectables/AwsXrayPropagatorService.html",[17,2.209,29,0.671]],["body/injectables/AwsXrayPropagatorService.html",[3,0.307,4,0.307,5,0.237,6,0.292,7,4.368,8,4.595,9,3.945,11,0.331,12,0.023,14,0.307,16,1.803,17,4.09,18,2.92,25,0.307,26,0.729,27,0.018,28,0.018,29,1.096,30,1.803,31,2.498,32,0.832,33,0.78,34,1.568,35,3.498,36,1.197,37,4.688,38,1.022,39,6.872,40,1.269,41,3.594,42,2.227,43,1.269,44,3.193,45,1.803,46,1.803,47,1.601,48,0.78]],["title/interfaces/B3PropagatorConfig.html",[49,0.63,50,1.364]],["body/interfaces/B3PropagatorConfig.html",[3,0.165,4,0.165,5,0.127,6,0.127,11,0.255,12,0.023,14,0.165,23,0.539,25,0.441,27,0.012,28,0.012,32,0.448,33,0.42,38,0.392,43,0.683,48,0.945,49,1.076,50,2.265,51,0.913,52,1.097,53,1.097,54,1.778,55,1.15,56,1.094,57,2.343,58,2.439,59,0.573,60,2.063,61,2.184,62,1.645,63,1.547,64,1.742,65,1.939,66,1.757,67,1.15,68,1.857,69,1.857,70,1.857,71,1.857,72,1.097,73,1.857,74,1.097,75,1.757,76,1.097,77,1.097,78,0.913,79,1.252,80,1.171,81,1.097,82,1.547,83,1.757,84,0.539,85,0.97,86,0.762,87,1.747,88,2.354,89,1.547,90,1.031,91,1.252,92,1.252,93,1.757,94,1.547,95,1.031,96,1.031,97,1.16,98,1.097,99,1.171,100,1.547,101,1.171,102,1.252,103,1.941,104,2.109,105,1.171,106,2.109,107,1.171,108,1.171,109,1.171,110,1.647,111,1.757,112,1.171,113,1.171,114,1.097,115,1.171,116,1.171,117,1.171,118,1.171,119,1.031,120,1.097,121,1.171,122,1.171,123,1.097,124,1.171,125,1.097,126,1.031,127,1.547,128,1.941,129,1.252,130,1.828,131,2.063,132,1.171,133,1.171,134,1.171,135,1.171,136,1.097,137,1.171,138,1.031,139,0.683,140,1.171,141,0.97,142,1.171,143,1.097,144,0.97,145,1.547,146,1.171,147,1.252,148,2.211,149,0.861,150,1.097,151,1.977,152,2.109,153,1.252,154,1.252,155,1.252,156,2.506,157,1.879,158,1.252,159,1.252,160,1.252,161,1.252,162,1.171,163,1.094,164,1.757,165,1.647,166,1.647,167,1.551,168,1.366,169,1.371,170,2.08,171,1.171,172,1.455,173,1.171,174,0.97,175,1.171,176,0.97,177,1.171,178,0.97,179,1.171,180,0.97,181,0.913,182,0.861,183,2.063,184,1.171,185,1.097,186,1.171,187,1.171,188,1.547,189,1.757,190,1.292,191,1.547,192,1.171,193,1.171]],["title/modules/B3PropagatorModule.html",[0,1.285,194,2.416]],["body/modules/B3PropagatorModule.html",[2,1.563,3,0.337,4,0.337,5,0.26,6,0.26,10,2.954,11,0.33,12,0.023,13,2.219,14,0.337,15,2.356,16,1.977,19,2.74,20,1.862,21,1.977,22,1.862,23,1.1,24,1.977,25,0.337,26,0.8,27,0.019,28,0.019,194,4.173,195,3.878,196,3.503,197,3.816,198,3.503]],["title/injectables/B3PropagatorService.html",[29,0.671,197,2.209]],["body/injectables/B3PropagatorService.html",[3,0.228,4,0.228,5,0.176,6,0.31,11,0.31,12,0.023,14,0.228,16,1.34,25,0.228,26,0.542,27,0.015,28,0.015,29,0.903,30,1.34,31,1.857,32,0.967,33,0.58,34,1.292,35,3.121,36,1.496,38,1.01,40,1.292,41,3.27,42,1.836,43,0.943,44,2.374,45,1.34,46,1.34,47,1.19,48,0.58,50,2.541,54,1.369,55,1.451,56,1.15,58,2.222,59,1.237,60,2.59,61,2.437,62,2.393,63,2.508,65,2,67,1.451,84,1.021,163,1.527,167,1,168,1.586,195,4.627,196,4.18,197,3.649,198,2.374,199,2.974,200,3.252,201,4.067,202,3.377,203,4.107,204,4.775,205,2.37,206,2.002,207,4.775,208,1.951,209,4.775,210,3.485,211,2.742,212,2.974,213,4.107,214,6.137,215,3.485,216,1.73,217,1.73,218,2.37,219,2.374,220,3.485,221,3.485,222,3.485,223,3.485,224,3.485,225,3.485]],["title/interfaces/BatchSpanProcessorConfig.html",[49,0.63,103,1.364]],["body/interfaces/BatchSpanProcessorConfig.html",[3,0.158,4,0.158,5,0.122,6,0.122,11,0.249,12,0.023,14,0.158,23,0.517,25,0.444,27,0.011,28,0.011,32,0.429,33,0.402,38,0.376,43,0.654,48,0.93,49,1.062,50,2.041,51,0.875,52,1.051,53,1.051,54,1.756,55,1.113,56,1.475,57,1.121,58,2.501,59,1.121,60,1.497,61,1.702,62,1.327,63,0.987,64,1.591,65,1.812,66,1.121,67,0.734,68,1.809,69,1.809,70,1.809,71,1.809,72,1.051,73,1.809,74,1.051,75,1.7,76,1.051,77,1.051,78,0.875,79,1.199,80,1.121,81,1.051,82,1.497,83,1.7,84,0.517,85,0.929,86,0.737,87,1.702,88,2.31,89,1.497,90,0.987,91,1.199,92,1.199,93,1.7,94,1.497,95,0.987,96,0.987,97,1.13,98,1.051,99,1.121,100,1.497,101,1.121,102,1.819,103,2.041,104,2.464,105,1.7,106,2.594,107,1.7,108,1.7,109,1.7,110,2.431,111,2.054,112,1.7,113,1.7,114,2.149,115,1.7,116,1.7,117,1.7,118,1.7,119,1.497,120,2.149,121,1.7,122,1.7,123,1.594,124,1.7,125,2.149,126,0.987,127,1.497,128,1.899,129,1.199,130,1.789,131,2.019,132,1.121,133,1.121,134,1.121,135,1.121,136,1.051,137,1.121,138,0.987,139,0.654,140,1.121,141,0.929,142,1.121,143,1.051,144,0.929,145,1.497,146,1.121,147,1.199,148,2.17,149,0.825,150,1.051,151,1.926,152,2.054,153,1.199,154,1.199,155,1.199,156,2.452,157,1.819,158,1.199,159,1.199,160,1.199,161,1.199,162,1.121,163,1.066,164,1.7,165,1.594,166,1.594,167,1.523,168,1.337,169,1.327,170,2.041,171,1.121,172,1.409,173,1.121,174,0.929,175,1.121,176,0.929,177,1.121,178,0.929,179,1.121,180,0.929,181,0.875,182,0.825,183,2.019,184,1.121,185,1.051,186,1.121,187,1.121,188,1.497,189,1.7,190,1.251,191,1.497,192,1.121,193,1.121]],["title/interfaces/CommonCollectorConfig.html",[49,0.63,82,1.45]],["body/interfaces/CommonCollectorConfig.html",[3,0.156,4,0.156,5,0.12,6,0.12,11,0.247,12,0.023,14,0.156,23,0.508,25,0.437,27,0.011,28,0.011,32,0.421,33,0.395,38,0.369,43,0.643,48,0.923,49,1.056,50,2.026,51,0.86,52,1.033,53,1.033,54,1.748,55,1.099,56,1.522,57,1.102,58,2.447,59,1.26,60,1.478,61,1.684,62,1.309,63,0.97,64,1.577,65,1.799,66,1.102,67,0.722,68,1.79,69,1.79,70,1.79,71,1.79,72,1.033,73,1.79,74,1.033,75,2.272,76,1.033,77,1.033,78,0.86,79,1.179,80,1.102,81,1.573,82,1.79,83,2.576,84,0.773,85,1.39,86,0.985,87,2.287,88,2.822,89,2.269,90,1.478,91,1.795,92,1.795,93,2.576,94,2.001,95,1.478,96,1.478,97,1.25,98,2.13,99,1.678,100,1.79,101,2.272,102,1.179,103,1.882,104,2.033,105,1.102,106,2.033,107,1.102,108,1.102,109,1.102,110,1.573,111,1.678,112,1.102,113,1.102,114,1.033,115,1.102,116,1.102,117,1.102,118,1.102,119,0.97,120,1.033,121,1.102,122,1.102,123,1.033,124,1.102,125,1.033,126,0.97,127,1.478,128,1.882,129,1.179,130,1.773,131,2.001,132,1.102,133,1.102,134,1.102,135,1.102,136,1.033,137,1.102,138,0.97,139,0.643,140,1.102,141,0.913,142,1.102,143,1.033,144,0.913,145,1.478,146,1.102,147,1.179,148,2.153,149,0.811,150,1.033,151,1.905,152,2.033,153,1.179,154,1.179,155,1.179,156,2.43,157,1.795,158,1.179,159,1.179,160,1.179,161,1.179,162,1.102,163,1.055,164,1.678,165,1.573,166,1.573,167,1.511,168,1.325,169,1.309,170,2.026,171,1.102,172,1.39,173,1.102,174,0.913,175,1.102,176,0.913,177,1.102,178,0.913,179,1.102,180,0.913,181,0.86,182,0.811,183,2.001,184,1.102,185,1.033,186,1.102,187,1.102,188,1.478,189,1.678,190,1.234,191,1.478,192,1.102,193,1.102]],["title/modules/CompositePropagatorModule.html",[0,1.285,226,2.416]],["body/modules/CompositePropagatorModule.html",[2,1.563,3,0.337,4,0.337,5,0.26,6,0.26,10,2.954,11,0.33,12,0.023,13,2.219,14,0.337,15,2.356,16,1.977,19,2.74,20,1.862,21,1.977,22,1.862,23,1.1,24,1.977,25,0.337,26,0.8,27,0.019,28,0.019,226,4.173,227,3.878,228,3.878,229,4.173,230,3.878]],["title/injectables/CompositePropagatorService.html",[29,0.671,229,2.416]],["body/injectables/CompositePropagatorService.html",[3,0.257,4,0.257,5,0.198,6,0.292,8,3.524,9,2.675,11,0.343,12,0.023,14,0.257,16,1.51,17,4.167,18,2.446,19,3.276,25,0.257,26,0.611,27,0.016,28,0.016,29,0.979,30,1.51,31,2.093,32,0.697,33,0.653,34,1.4,35,3.276,36,1.321,38,0.957,40,1.063,41,3.405,42,1.989,43,1.063,45,1.51,46,1.51,47,1.341,48,0.653,56,0.946,59,0.892,84,0.84,86,1.237,196,2.675,197,4.087,198,2.675,202,3.276,205,2.676,208,1.605,216,1.95,227,4.363,228,4.363,229,4.188,231,3.928,232,4.167,233,4.167,234,3.928,235,3.928,236,6.562,237,2.675,238,3.345,239,2.757,240,2.675,241,2.256,242,2.251,243,2.675,244,3.928,245,3.928,246,3.928,247,3.928,248,3.345,249,3.928,250,3.928,251,3.928,252,3.928]],["title/modules/ConsoleSpanExporterModule.html",[0,1.285,253,2.416]],["body/modules/ConsoleSpanExporterModule.html",[2,1.559,3,0.336,4,0.336,5,0.259,6,0.259,11,0.33,12,0.023,13,2.216,14,0.336,20,1.858,21,1.973,22,1.858,23,1.097,24,1.973,25,0.336,26,0.798,27,0.019,28,0.019,87,1.973,97,1.563,253,4.168,254,3.869,255,3.495,256,4.168,257,3.495,258,2.662,259,2.547]],["title/injectables/ConsoleSpanExporterService.html",[29,0.671,256,2.416]],["body/injectables/ConsoleSpanExporterService.html",[3,0.309,4,0.309,5,0.238,6,0.294,11,0.318,12,0.023,14,0.309,25,0.309,26,0.734,27,0.018,28,0.018,29,1.1,30,1.814,32,0.838,33,0.785,34,1.574,36,1.205,38,1.024,40,1.277,45,1.814,46,1.814,47,1.611,48,0.785,64,1.873,86,0.949,97,1.681,139,1.574,254,4.385,256,4.482,259,2.342,260,2.939,261,4.099,262,4.018,263,4.962,264,4.21,265,2.53,266,2.514,267,2.514]],["title/interfaces/CustomSpan.html",[49,0.63,78,1.285]],["body/interfaces/CustomSpan.html",[3,0.289,4,0.289,5,0.222,6,0.281,11,0.281,12,0.023,25,0.289,27,0.017,28,0.017,32,0.988,33,0.732,34,1.507,36,1.124,40,1.191,43,1.191,47,1.901,49,1.176,51,1.594,56,1.06,59,0.999,78,2.017,84,0.941,96,2.624,97,1.841,208,1.799,218,3.032,268,4.743,269,3.748,270,4.743,271,4.199,272,3.604,273,4.372,274,4.743,275,4.841,276,5.101,277,5.101,278,4.841,279,4.401,280,4.743,281,4.743,282,2.997]],["title/interfaces/IExporter.html",[49,0.63,265,1.543]],["body/interfaces/IExporter.html",[3,0.315,4,0.315,5,0.242,6,0.297,11,0.297,12,0.023,14,0.315,25,0.385,27,0.018,28,0.018,32,0.852,33,0.798,34,1.591,36,1.226,38,0.747,40,1.299,48,0.798,49,1.128,51,1.738,64,1.893,72,2.088,86,0.966,139,1.838,169,1.738,170,1.845,211,3.375,258,2.088,261,4.123,264,4.359,265,2.557,266,2.557,267,2.557,283,3.619,284,4.799,285,4.431,286,5.877,287,4.088]],["title/interfaces/IPropagator.html",[42,1.364,49,0.63]],["body/interfaces/IPropagator.html",[3,0.319,4,0.319,5,0.245,6,0.299,11,0.299,12,0.023,14,0.319,15,1.869,25,0.388,27,0.018,28,0.018,32,0.863,33,0.809,34,1.603,35,3.543,36,1.242,38,0.757,40,1.316,41,3.404,42,2.278,43,1.316,48,0.809,49,1.134,51,1.761,72,2.116,149,2.327,169,1.761,170,1.869,211,3.402,285,4.467,288,3.666,289,4.862,290,5.045,291,5.924,292,4.141]],["title/interfaces/IgnoreUrlsConfig.html",[49,0.63,151,1.543]],["body/interfaces/IgnoreUrlsConfig.html",[3,0.165,4,0.165,5,0.127,6,0.127,11,0.255,12,0.023,14,0.165,23,0.539,25,0.441,27,0.012,28,0.012,32,0.447,33,0.419,38,0.392,43,0.682,48,0.945,49,1.075,50,2.079,51,0.912,52,1.096,53,1.096,54,1.777,55,1.149,56,1.093,57,1.169,58,2.4,59,0.572,60,1.545,61,1.745,62,1.369,63,1.03,64,1.625,65,1.846,66,1.169,67,0.766,68,1.855,69,1.855,70,1.855,71,1.855,72,1.096,73,1.855,74,1.096,75,1.755,76,1.096,77,1.096,78,0.912,79,1.251,80,1.169,81,1.096,82,1.545,83,1.755,84,0.539,85,0.969,86,0.761,87,1.745,88,2.353,89,1.545,90,1.03,91,1.251,92,1.251,93,1.755,94,1.545,95,1.03,96,1.03,97,1.159,98,1.096,99,1.169,100,1.545,101,1.169,102,1.251,103,1.94,104,2.107,105,1.169,106,2.107,107,1.169,108,1.169,109,1.169,110,1.645,111,1.755,112,1.169,113,1.169,114,1.096,115,1.169,116,1.169,117,1.169,118,1.169,119,1.03,120,1.096,121,1.169,122,1.169,123,1.096,124,1.169,125,1.096,126,1.03,127,1.545,128,1.94,129,1.251,130,1.827,131,2.062,132,1.169,133,1.169,134,1.169,135,1.169,136,1.096,137,1.169,138,1.03,139,0.682,140,1.169,141,0.969,142,1.169,143,1.096,144,0.969,145,1.545,146,1.169,147,1.251,148,2.21,149,0.86,150,1.096,151,2.353,152,2.812,153,1.877,154,1.877,155,1.877,156,2.819,157,2.505,158,1.877,159,1.251,160,1.251,161,1.877,162,2.107,163,1.093,164,1.755,165,1.645,166,1.645,167,1.551,168,1.366,169,1.369,170,2.079,171,1.169,172,1.454,173,1.169,174,0.969,175,1.169,176,0.969,177,1.169,178,0.969,179,1.169,180,0.969,181,0.912,182,0.86,183,2.062,184,1.169,185,1.096,186,1.169,187,1.169,188,1.545,189,1.755,190,1.291,191,1.545,192,1.169,193,1.169,293,2.519,294,2.519]],["title/injectables/InstrumentationService.html",[29,0.671,295,2.209]],["body/injectables/InstrumentationService.html",[3,0.154,4,0.154,5,0.118,6,0.313,11,0.313,12,0.023,14,0.154,15,0.9,25,0.154,26,0.364,27,0.011,28,0.011,29,0.677,30,0.9,32,0.771,33,0.39,34,0.968,36,1.55,38,0.557,40,1.555,42,1.869,45,0.9,46,1.376,48,1.01,54,1.026,55,1.087,56,1.33,58,1.896,59,1.304,64,1.398,65,1.66,67,1.319,76,2.115,77,1.019,84,1.181,85,1.376,86,0.72,87,2.381,88,2.813,89,2.347,97,1.41,139,1.676,149,0.8,163,1.171,167,0.672,168,1.603,178,0.9,182,1.961,202,3.706,205,1.889,206,1.345,208,2.256,211,2.055,212,2.228,216,1.163,217,1.163,218,2.94,219,1.595,258,1.019,263,2.698,265,2.74,266,1.906,267,1.248,272,1.906,295,3.028,296,1.995,297,1.906,298,3.311,299,4.702,300,5.521,301,3.047,302,3.047,303,2.957,304,4.861,305,3.047,306,3.047,307,3.698,308,4.14,309,4.14,310,4.342,311,3.578,312,3.047,313,2.342,314,3.047,315,4.577,316,3.047,317,2.342,318,2.698,319,4.702,320,3.047,321,4.14,322,3.047,323,2.342,324,4.14,325,3.665,326,3.578,327,2.342,328,4.466,329,2.437,330,2.437,331,3.578,332,2.342,333,3.047,334,2.342,335,2.342,336,3.274,337,3.047,338,3.274,339,2.437,340,4.342,341,3.665,342,2.342,343,1.995,344,1.995,345,1.766,346,1.995,347,1.995,348,1.995,349,1.995,350,3.698,351,1.995,352,3.578,353,1.995,354,3.047,355,3.047,356,1.995,357,1.595,358,3.047,359,2.342,360,2.342,361,1.995,362,1.995,363,2.342,364,3.578,365,2.342,366,1.995,367,1.995,368,1.995,369,2.342,370,2.342,371,1.995,372,2.342,373,1.995,374,1.995,375,2.342,376,2.342,377,2.342,378,2.342,379,2.342,380,2.342,381,3.578,382,1.995,383,2.342,384,2.342,385,2.342]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.285,386,2.416]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.542,3,0.333,4,0.333,5,0.256,6,0.256,10,2.913,11,0.328,12,0.023,13,2.201,14,0.333,15,2.337,16,1.95,19,2.703,20,1.837,21,1.95,22,1.837,23,1.085,24,1.95,25,0.333,26,0.789,27,0.019,28,0.019,86,1.309,233,3.785,241,2.913,242,2.831,243,3.455,386,4.139,387,3.825]],["title/injectables/JaegerHttpTracePropagatorService.html",[29,0.671,233,2.209]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.262,4,0.262,5,0.201,6,0.312,11,0.333,12,0.023,14,0.262,16,1.534,25,0.262,26,0.621,27,0.016,28,0.016,29,0.989,30,1.534,31,2.126,32,0.928,33,0.664,34,1.415,35,3.297,36,1.489,38,0.963,40,1.08,41,3.422,42,2.01,43,1.08,44,2.718,45,1.534,46,1.534,47,1.363,48,0.664,55,1.589,56,0.961,58,1.893,59,1.187,62,1.893,84,0.853,86,1.371,130,1.893,150,2.537,163,1.588,167,1.145,168,1.675,202,3.107,205,2.537,206,2.292,208,1.631,216,1.981,217,1.981,218,1.981,219,2.718,233,3.854,241,2.292,242,2.964,243,4.214,303,2.718,387,4.666,388,4.453,389,3.991,390,5.471,391,2.718,392,3.991,393,3.991,394,3.991]],["title/interfaces/JaegerPropagatorConfig.html",[49,0.63,148,1.45]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.167,4,0.167,5,0.129,6,0.129,11,0.256,12,0.023,14,0.167,23,0.545,25,0.442,27,0.012,28,0.012,32,0.452,33,0.424,38,0.396,43,0.69,48,0.949,49,1.079,50,2.089,51,0.923,52,1.109,53,1.109,54,1.783,55,1.159,56,1.101,57,1.183,58,2.443,59,0.579,60,1.559,61,1.757,62,1.655,63,1.041,64,1.634,65,1.855,66,1.183,67,0.774,68,1.868,69,1.868,70,1.868,71,1.868,72,1.109,73,1.868,74,1.109,75,1.77,76,1.109,77,1.109,78,0.923,79,1.265,80,1.183,81,1.109,82,1.559,83,1.77,84,0.545,85,0.98,86,0.767,87,1.757,88,2.364,89,1.559,90,1.041,91,1.265,92,1.265,93,1.77,94,1.559,95,1.041,96,1.041,97,1.167,98,1.109,99,1.183,100,1.559,101,1.183,102,1.265,103,1.951,104,2.122,105,1.183,106,2.122,107,1.183,108,1.183,109,1.183,110,1.659,111,1.77,112,1.183,113,1.183,114,1.109,115,1.183,116,1.183,117,1.183,118,1.183,119,1.041,120,1.109,121,1.183,122,1.183,123,1.109,124,1.183,125,1.109,126,1.041,127,1.559,128,1.951,129,1.265,130,1.968,131,2.074,132,1.183,133,1.183,134,1.183,135,1.183,136,1.109,137,1.183,138,1.041,139,0.69,140,1.183,141,0.98,142,1.183,143,1.109,144,0.98,145,1.559,146,1.183,147,1.265,148,2.416,149,1.302,150,2.208,151,1.989,152,2.122,153,1.265,154,1.265,155,1.265,156,2.519,157,1.893,158,1.265,159,1.265,160,1.265,161,1.265,162,1.183,163,1.101,164,1.77,165,1.659,166,1.659,167,1.558,168,1.373,169,1.381,170,2.089,171,1.183,172,1.466,173,1.183,174,0.98,175,1.183,176,0.98,177,1.183,178,0.98,179,1.183,180,0.98,181,0.923,182,0.87,183,2.074,184,1.183,185,1.109,186,1.183,187,1.183,188,1.559,189,1.77,190,1.302,191,1.559,192,1.183,193,1.183]],["title/modules/NoopSpanExporterModule.html",[0,1.285,395,2.416]],["body/modules/NoopSpanExporterModule.html",[2,1.531,3,0.33,4,0.33,5,0.254,6,0.254,11,0.34,12,0.023,13,2.192,14,0.33,20,1.825,21,1.937,22,1.825,23,1.077,24,1.937,25,0.33,26,0.784,27,0.019,28,0.019,97,1.546,255,3.431,257,3.431,258,2.633,259,2.501,395,4.122,396,3.799,397,3.799,398,6.053,399,3.799,400,4.122,401,4.291]],["title/injectables/NoopSpanExporterService.html",[29,0.671,400,2.416]],["body/injectables/NoopSpanExporterService.html",[3,0.309,4,0.309,5,0.238,6,0.294,11,0.318,12,0.023,14,0.309,25,0.309,26,0.734,27,0.018,28,0.018,29,1.1,30,1.814,32,0.838,33,0.785,34,1.574,36,1.205,38,1.024,40,1.277,45,1.814,46,1.814,47,1.611,86,0.949,97,1.681,139,1.574,182,2.152,259,2.342,260,2.939,261,4.099,262,4.018,264,4.21,265,2.53,266,2.514,267,2.514,396,4.385,397,4.385,400,4.482,402,5.816]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.285,403,2.675]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.542,3,0.333,4,0.333,5,0.256,6,0.256,10,2.913,11,0.328,12,0.023,13,2.201,14,0.333,15,2.337,16,1.95,19,2.703,20,1.837,21,1.95,22,1.837,23,1.085,24,1.95,25,0.333,26,0.789,27,0.019,28,0.019,242,2.207,401,4.32,403,4.583,404,3.825,405,4.432,406,3.825,407,4.583,408,4.139]],["title/injectables/NoopTextMapPropagatorService.html",[29,0.671,408,2.416]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.31,4,0.31,5,0.239,6,0.294,11,0.318,12,0.023,14,0.31,16,1.818,25,0.31,26,0.736,27,0.018,28,0.018,29,1.101,30,1.818,31,2.519,32,0.839,33,0.786,34,1.576,35,3.509,36,1.208,38,1.025,40,1.28,41,3.603,42,2.239,43,1.28,45,1.818,46,1.818,47,1.614,181,2.449,242,2.534,404,4.391,405,4.485,406,4.391,407,4.391,408,3.966,409,5.823,410,4.728]],["title/interfaces/OpenTelemetryConfig.html",[49,0.63,163,0.854]],["body/interfaces/OpenTelemetryConfig.html",[3,0.157,4,0.157,5,0.121,6,0.121,11,0.248,12,0.023,14,0.157,23,0.513,25,0.438,27,0.011,28,0.011,32,0.426,33,0.399,38,0.373,43,0.649,48,0.927,49,1.059,50,2.435,51,0.868,52,1.043,53,1.043,54,1.711,55,1.107,56,1.565,57,1.113,58,2.377,59,1.315,60,1.489,61,1.694,62,1.319,63,0.98,64,1.584,65,1.806,66,1.113,67,0.729,68,1.8,69,1.8,70,1.8,71,1.8,72,1.043,73,1.8,74,1.043,75,1.691,76,1.043,77,1.043,78,0.868,79,1.19,80,1.113,81,1.043,82,2.011,83,1.691,84,0.513,85,0.922,86,0.733,87,1.694,88,2.302,89,1.489,90,0.98,91,1.19,92,1.19,93,1.691,94,1.489,95,0.98,96,0.98,97,1.125,98,1.043,99,1.113,100,1.489,101,1.113,102,1.19,103,2.396,104,2.045,105,1.113,106,2.045,107,1.113,108,1.113,109,1.113,110,1.585,111,1.691,112,1.113,113,1.113,114,1.043,115,1.113,116,1.113,117,1.113,118,1.113,119,0.98,120,1.043,121,1.113,122,1.113,123,1.043,124,1.113,125,1.043,126,0.98,127,2.011,128,1.892,129,1.19,130,1.782,131,2.011,132,1.113,133,1.113,134,1.113,135,1.113,136,1.043,137,1.113,138,0.98,139,0.649,140,1.113,141,0.922,142,1.113,143,1.043,144,0.922,145,2.011,146,1.113,147,1.19,148,2.589,149,0.818,150,1.043,151,2.302,152,2.045,153,1.19,154,1.19,155,1.19,156,2.962,157,1.808,158,1.19,159,1.19,160,1.19,161,1.19,162,1.113,163,1.275,164,2.586,165,2.424,166,2.424,167,1.518,168,1.332,169,1.319,170,2.034,171,1.113,172,1.4,173,1.113,174,0.922,175,1.113,176,0.922,177,1.113,178,0.922,179,1.113,180,0.922,181,0.868,182,0.818,183,2.011,184,1.113,185,1.043,186,1.113,187,1.113,188,1.489,189,1.691,190,1.244,191,1.489,192,1.113,193,1.113]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[411,1.761,412,2.416]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.106,4,0.106,5,0.082,6,0.307,11,0.318,12,0.023,14,0.106,15,0.623,25,0.106,26,0.53,27,0.008,28,0.008,29,0.505,32,0.834,33,0.269,34,0.722,36,1.533,38,0.773,40,1.5,42,1.518,43,0.722,45,0.623,46,1.026,47,0.553,48,0.922,49,0.474,54,1.132,55,0.811,56,1.334,58,1.233,59,1.221,62,1.43,64,1.096,65,0.911,67,1.034,74,1.718,78,2.057,80,0.752,84,1.11,85,1.026,86,0.537,87,1.026,89,1.091,94,1.091,95,1.391,96,1.613,97,1.658,98,1.481,110,0.705,114,0.705,120,0.705,125,0.705,130,0.967,139,1.069,141,0.623,149,1.491,163,0.951,167,0.465,168,1.345,170,1.806,172,1.806,174,0.623,176,0.623,181,0.967,182,0.911,190,0.553,202,3.609,205,1.718,206,0.93,208,2.03,211,2.267,212,1.662,216,0.804,217,1.325,218,2.819,237,1.103,239,1.422,242,0.705,258,0.705,263,2.013,265,1.718,266,1.422,267,0.863,270,3.362,271,2.977,272,2.103,273,2.689,275,4.926,276,4.374,277,3.292,278,3.292,282,1.103,299,3.719,301,2.273,302,2.273,305,3.362,306,3.362,307,3.362,308,3.362,309,3.362,312,1.38,314,1.38,315,3.542,316,2.273,318,2.013,319,4.001,320,2.273,321,3.362,322,2.273,325,2.567,328,3.542,329,3.383,330,1.818,333,2.273,336,2.567,337,2.273,338,2.567,339,1.818,341,2.977,347,1.38,348,1.38,349,1.38,350,2.899,351,1.38,353,1.38,354,2.273,355,2.273,356,1.38,357,1.103,358,2.273,361,1.38,362,1.38,366,1.38,367,1.38,368,1.38,371,1.38,373,2.273,374,1.38,382,1.38,391,1.103,399,1.221,411,1.325,412,1.818,413,1.62,414,5.183,415,1.38,416,2.273,417,3.948,418,2.669,419,3.404,420,2.899,421,2.669,422,5.191,423,2.669,424,2.669,425,2.669,426,2.273,427,2.669,428,1.62,429,1.62,430,1.62,431,3.362,432,2.669,433,2.669,434,2.273,435,2.669,436,1.62,437,2.273,438,2.669,439,1.62,440,1.62,441,2.669,442,2.273,443,1.62,444,1.62,445,1.62,446,1.62,447,4.001,448,3.948,449,1.62,450,2.669,451,2.013,452,1.422,453,3.404,454,1.62,455,1.62,456,1.38,457,3.948,458,1.62,459,2.669,460,2.273,461,1.62,462,1.62,463,1.38,464,1.62,465,3.948,466,1.38,467,1.62,468,2.669,469,2.669,470,1.62,471,1.62,472,1.62,473,1.62,474,1.62,475,1.38,476,1.62,477,1.62,478,2.669,479,1.62,480,1.62,481,1.62,482,2.669,483,1.62,484,1.62,485,1.62,486,1.62,487,1.62,488,1.62,489,2.669,490,1.38,491,1.62,492,1.221,493,1.62,494,1.62,495,1.62,496,1.62,497,1.62,498,2.977,499,2.669,500,2.669,501,2.669,502,1.62,503,1.62,504,1.62,505,2.669,506,2.013,507,1.62,508,2.669,509,1.62,510,1.62,511,1.62,512,1.62,513,1.62,514,1.62,515,1.62,516,1.62,517,1.62,518,1.62,519,1.62,520,1.62,521,1.62,522,1.62,523,1.62,524,1.62,525,2.669,526,1.62,527,1.62,528,1.62,529,1.62,530,1.62,531,1.62,532,1.62,533,1.62,534,1.62,535,1.62,536,1.62,537,1.62,538,1.62,539,1.62,540,1.38,541,1.62,542,3.404,543,1.38,544,1.62,545,1.62,546,1.62,547,1.62,548,1.62,549,1.62,550,3.404,551,1.62,552,1.62,553,1.62,554,1.62,555,1.62,556,1.62,557,1.62,558,1.62,559,1.62,560,1.62,561,1.62,562,2.669,563,1.62,564,1.62,565,1.62,566,1.62,567,1.62,568,1.62,569,1.62,570,1.62,571,1.62]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.285,572,2.416]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.215,3,0.262,4,0.262,5,0.202,6,0.264,11,0.324,12,0.023,13,2.114,14,0.262,20,1.448,21,1.537,22,1.448,23,0.855,24,1.537,25,0.262,26,0.622,27,0.016,28,0.016,34,1.082,36,1.021,38,0.622,40,1.082,48,0.665,56,1.406,59,0.908,61,1.537,68,2.531,69,2.531,70,2.531,71,2.531,73,2.531,84,0.855,119,1.634,163,1.492,168,1.58,170,1.537,180,1.537,181,2.114,182,1.992,183,2.627,188,1.634,190,1.365,203,3.947,205,1.74,208,1.634,217,1.985,282,2.723,303,2.723,330,2.723,411,1.985,412,3.565,572,4.377,573,5.235,574,3.998,575,4.458,576,3.405,577,3.998,578,3.405,579,4.971,580,4.458,581,4.458,582,4.458,583,3.998,584,3.998,585,4.458,586,3.405,587,3.405,588,3.015,589,5.235,590,3.405]],["title/modules/OtelColExporterModule.html",[0,1.285,591,2.416]],["body/modules/OtelColExporterModule.html",[2,1.566,3,0.338,4,0.338,5,0.26,6,0.26,11,0.331,12,0.023,13,2.222,14,0.338,20,1.867,21,1.982,22,1.867,23,1.102,24,1.982,25,0.338,26,0.802,27,0.019,28,0.019,255,3.511,257,3.511,258,2.67,259,2.559,591,4.179,592,3.887,593,4.179,594,3.887]],["title/interfaces/OtelCollectorConfig.html",[49,0.63,127,1.45]],["body/interfaces/OtelCollectorConfig.html",[3,0.159,4,0.159,5,0.122,6,0.122,11,0.25,12,0.023,14,0.159,23,0.518,25,0.441,27,0.011,28,0.011,32,0.43,33,0.403,38,0.377,43,0.655,48,0.93,49,1.062,50,2.043,51,0.877,52,1.053,53,1.053,54,1.757,55,1.115,56,1.505,57,1.124,58,2.48,59,1.123,60,1.5,61,1.704,62,1.329,63,0.989,64,1.801,65,1.984,66,1.124,67,0.736,68,1.811,69,1.811,70,1.811,71,1.811,72,1.053,73,1.811,74,1.053,75,1.703,76,1.053,77,1.053,78,0.877,79,1.202,80,1.124,81,1.053,82,1.5,83,1.703,84,0.518,85,0.931,86,0.738,87,1.704,88,2.312,89,1.5,90,0.989,91,1.202,92,1.202,93,1.703,94,1.5,95,0.989,96,0.989,97,1.132,98,1.053,99,1.124,100,1.811,101,1.124,102,1.202,103,1.901,104,2.295,105,1.124,106,2.057,107,1.124,108,1.124,109,1.124,110,1.597,111,2.057,112,1.124,113,1.124,114,1.053,115,1.124,116,1.124,117,1.124,118,1.124,119,0.989,120,1.053,121,1.124,122,1.124,123,1.053,124,1.124,125,1.053,126,1.5,127,1.811,128,2.301,129,1.822,130,1.924,131,2.446,132,2.057,133,1.703,134,1.703,135,1.703,136,2.151,137,1.703,138,1.5,139,0.993,140,1.703,141,1.411,142,1.703,143,2.151,144,0.931,145,1.5,146,1.124,147,1.202,148,2.172,149,0.826,150,1.053,151,1.928,152,2.057,153,1.202,154,1.202,155,1.202,156,2.455,157,1.822,158,1.202,159,1.202,160,1.202,161,1.202,162,1.124,163,1.067,164,1.703,165,1.597,166,1.597,167,1.524,168,1.338,169,1.329,170,2.043,171,1.124,172,1.411,173,1.124,174,0.931,175,1.124,176,0.931,177,1.124,178,0.931,179,1.124,180,0.931,181,0.877,182,0.826,183,2.021,184,1.124,185,1.053,186,1.124,187,1.124,188,1.5,189,1.703,190,1.253,191,1.5,192,1.124,193,1.124]],["title/components/OtelWebTracerComponent.html",[297,1.89,595,2.209]],["body/components/OtelWebTracerComponent.html",[3,0.272,4,0.272,5,0.21,6,0.3,11,0.271,12,0.023,14,0.272,25,0.272,26,0.646,27,0.017,28,0.017,32,0.953,33,0.691,34,1.453,36,1.371,40,1.125,47,1.832,56,1.001,59,0.943,84,1.271,205,2.587,208,1.698,218,2.063,295,4.324,297,3.612,298,4.049,324,4.571,325,4.047,329,3.655,357,3.655,426,3.539,447,3.539,452,2.214,543,3.539,595,3.914,596,5.367,597,4.155,598,5.064,599,4.483,600,3.539,601,5.541,602,5.945,603,4.155,604,6.284,605,6.284,606,4.155,607,4.155,608,4.155,609,3.539,610,4.155,611,4.155,612,4.155,613,4.155,614,4.155,615,4.155,616,4.155,617,5.367,618,5.367,619,4.155,620,6.284,621,4.155,622,4.155,623,4.155]],["title/modules/OtelWebTracerModule.html",[0,1.285,624,2.209]],["body/modules/OtelWebTracerModule.html",[2,1.187,3,0.256,4,0.256,5,0.197,6,0.26,11,0.322,12,0.023,13,2.09,14,0.256,20,1.867,22,1.415,25,0.256,26,0.608,27,0.016,28,0.016,34,1.058,36,0.998,38,0.608,40,1.058,48,0.65,56,1.39,59,0.887,68,2.508,69,2.508,70,2.508,71,2.508,73,2.508,84,0.836,119,2.107,163,1.478,168,1.562,180,1.502,181,2.09,182,1.97,183,2.607,188,1.597,190,1.334,203,3.888,205,1.7,208,1.597,217,1.94,295,3.211,303,2.661,575,4.391,576,3.328,578,3.328,579,4.915,580,4.391,585,4.391,586,3.328,587,3.328,588,2.946,590,3.328,595,4.377,599,2.946,609,3.328,624,4.314,625,2.961,626,3.328,627,3.328,628,3.328,629,4.391,630,2.946,631,2.946,632,5.156,633,3.907,634,3.907,635,3.907,636,3.907]],["title/injectables/OtelcolExporterService.html",[29,0.671,593,2.416]],["body/injectables/OtelcolExporterService.html",[3,0.263,4,0.263,5,0.202,6,0.313,11,0.333,12,0.023,14,0.263,25,0.263,26,0.909,27,0.016,28,0.016,29,0.991,30,1.54,32,0.93,33,0.666,34,1.419,36,1.492,38,0.964,40,1.084,45,1.54,46,1.54,47,1.367,48,0.666,54,1.503,55,1.593,56,1.262,59,1.19,84,0.857,86,1.055,128,1.54,131,1.637,136,1.743,138,1.637,139,1.084,143,1.743,163,1.589,165,2.542,167,1.149,168,1.677,202,3.112,205,2.696,206,2.3,208,1.637,216,1.988,217,1.988,218,1.988,242,1.743,259,1.988,260,2.495,261,3.859,264,3.638,265,2.28,266,2.134,267,2.792,475,3.411,592,4.672,593,4.22,637,5.241,638,4.005,639,6.196,640,5.841,641,5.241,642,4.005,643,3.02,644,4.005,645,4.005,646,4.005,647,4.005,648,4.005,649,4.005,650,4.005]],["title/modules/W3CTraceContextPropagatorModule.html",[0,1.285,651,2.416]],["body/modules/W3CTraceContextPropagatorModule.html",[2,1.542,3,0.333,4,0.333,5,0.256,6,0.256,10,2.913,11,0.328,12,0.023,13,2.201,14,0.333,15,2.337,16,1.95,19,2.703,20,1.837,21,1.95,22,1.837,23,1.085,24,1.95,25,0.333,26,0.789,27,0.019,28,0.019,86,1.309,232,3.785,238,4.32,239,3.467,240,3.455,651,4.139,652,3.825]],["title/injectables/W3CTraceContextPropagatorService.html",[29,0.671,232,2.209]],["body/injectables/W3CTraceContextPropagatorService.html",[3,0.306,4,0.306,5,0.236,6,0.292,11,0.331,12,0.023,14,0.306,16,1.795,25,0.306,26,0.726,27,0.018,28,0.018,29,1.093,30,1.795,31,2.487,32,0.829,33,0.777,34,1.564,35,3.493,36,1.192,38,1.02,40,1.264,41,3.59,42,2.221,43,1.264,45,1.795,46,1.795,47,1.594,48,0.777,86,1.319,232,4.379,237,3.18,239,3.493,240,3.935,388,3.976,652,4.357,653,5.778]],["title/interfaces/ZipkinCollectorConfig.html",[49,0.63,145,1.45]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.164,4,0.164,5,0.127,6,0.127,11,0.254,12,0.023,14,0.164,23,0.536,25,0.441,27,0.012,28,0.012,32,0.445,33,0.417,38,0.39,43,0.679,48,0.943,49,1.074,50,2.075,51,0.908,52,1.091,53,1.091,54,1.775,55,1.145,56,1.3,57,1.164,58,2.437,59,1.143,60,1.54,61,1.741,62,1.365,63,1.025,64,1.738,65,1.935,66,1.164,67,0.762,68,1.85,69,1.85,70,1.85,71,1.85,72,1.091,73,1.85,74,1.091,75,1.749,76,1.091,77,1.091,78,0.908,79,1.245,80,1.164,81,1.091,82,1.54,83,1.749,84,0.536,85,0.964,86,0.758,87,1.741,88,2.348,89,1.54,90,1.025,91,1.245,92,1.245,93,1.749,94,1.54,95,1.025,96,1.025,97,1.156,98,1.091,99,1.164,100,1.54,101,1.164,102,1.245,103,1.936,104,2.101,105,1.164,106,2.101,107,1.164,108,1.164,109,1.164,110,1.64,111,1.749,112,1.164,113,1.164,114,1.091,115,1.164,116,1.164,117,1.164,118,1.164,119,1.025,120,1.091,121,1.164,122,1.164,123,1.091,124,1.164,125,1.091,126,1.025,127,1.54,128,2.326,129,1.245,130,1.954,131,2.472,132,1.164,133,1.164,134,1.164,135,1.164,136,1.091,137,1.164,138,1.025,139,0.679,140,1.164,141,0.964,142,1.164,143,1.091,144,1.449,145,1.85,146,1.749,147,1.245,148,2.205,149,0.856,150,1.091,151,1.97,152,2.101,153,1.245,154,1.245,155,1.245,156,2.499,157,1.871,158,1.245,159,1.245,160,1.245,161,1.245,162,1.164,163,1.091,164,1.749,165,1.64,166,1.64,167,1.548,168,1.363,169,1.365,170,2.075,171,1.164,172,1.449,173,1.164,174,0.964,175,1.164,176,0.964,177,1.164,178,0.964,179,1.164,180,0.964,181,0.908,182,0.856,183,2.057,184,1.164,185,1.091,186,1.164,187,1.164,188,1.54,189,1.749,190,1.287,191,1.54,192,1.164,193,1.164,654,3.769]],["title/modules/ZipkinExporterModule.html",[0,1.285,655,2.416]],["body/modules/ZipkinExporterModule.html",[2,1.566,3,0.338,4,0.338,5,0.26,6,0.26,11,0.331,12,0.023,13,2.222,14,0.338,20,1.867,21,1.982,22,1.867,23,1.102,24,1.982,25,0.338,26,0.802,27,0.019,28,0.019,144,1.982,255,3.511,257,3.511,258,2.67,259,2.559,655,4.179,656,3.887,657,4.179]],["title/injectables/ZipkinExporterService.html",[29,0.671,657,2.416]],["body/injectables/ZipkinExporterService.html",[3,0.268,4,0.268,5,0.206,6,0.315,11,0.327,12,0.023,14,0.268,25,0.268,26,0.918,27,0.016,28,0.016,29,1.004,30,1.571,32,0.943,33,0.68,34,1.437,36,1.506,38,0.972,40,1.106,45,1.571,46,1.571,47,1.395,48,0.68,55,1.613,56,0.984,59,1.206,84,0.874,86,0.822,128,1.571,131,1.67,144,1.571,163,1.598,166,2.939,167,1.172,168,1.69,202,3.142,205,2.566,206,2.347,208,1.67,216,2.029,217,2.029,218,2.029,219,2.783,259,2.029,260,2.545,261,3.889,264,4.031,265,2.31,266,2.177,267,2.177,643,3.081,656,4.708,657,4.253,658,5.31,659,4.086,660,5.898,661,5.31,662,5.31,663,5.898,664,4.086,665,4.086,666,4.086,667,4.086]],["title/changelog.html",[668,1.848,669,1.848,670,2.527]],["body/changelog.html",[5,0.198,11,0.101,12,0.01,18,1.241,27,0.01,28,0.01,38,0.31,48,0.741,54,1.123,60,1.289,61,1.213,62,0.721,63,1.289,64,0.642,65,0.68,67,1.799,84,0.675,86,0.401,90,1.821,94,0.814,95,0.814,97,1,100,1.289,103,1.213,123,0.867,126,1.601,128,0.766,130,0.721,132,0.925,138,0.814,139,0.854,141,0.766,144,0.766,149,1.521,152,0.925,168,1.06,169,0.721,190,1.763,191,0.814,199,1.241,230,2.954,239,2.087,241,1.812,242,1.373,272,3.658,273,1.357,297,1.061,298,3.034,315,1.502,318,1.502,345,1.502,390,1.697,391,2.149,411,1.945,434,1.697,451,1.502,452,2.752,466,1.697,492,1.502,506,2.954,594,3.359,625,1.144,630,1.502,670,3.336,671,1.992,672,1.992,673,1.502,674,1.992,675,1.992,676,4.357,677,1.992,678,1.992,679,2.687,680,5.411,681,4.399,682,1.992,683,6.865,684,6.865,685,3.155,686,4.855,687,1.992,688,1.992,689,3.034,690,1.992,691,1.992,692,3.917,693,1.992,694,1.992,695,3.155,696,3.155,697,5.919,698,1.992,699,3.917,700,1.992,701,4.855,702,6.143,703,1.992,704,3.917,705,4.135,706,4.455,707,3.155,708,6.755,709,1.992,710,1.992,711,1.992,712,5.611,713,1.992,714,3.155,715,1.992,716,2.687,717,1.992,718,4.855,719,1.992,720,1.992,721,3.155,722,1.992,723,1.992,724,1.992,725,1.992,726,1.992,727,6.557,728,4.855,729,1.992,730,1.697,731,1.992,732,2.379,733,1.992,734,1.992,735,3.336,736,3.917,737,4.399,738,1.992,739,4.855,740,1.992,741,1.992,742,4.399,743,1.992,744,3.917,745,3.155,746,1.992,747,1.992,748,1.992,749,5.165,750,3.155,751,1.992,752,1.992,753,1.992,754,1.992,755,3.917,756,1.502,757,1.697,758,4.855,759,1.992,760,5.411,761,1.992,762,1.992,763,1.992,764,1.992,765,1.992,766,1.992,767,1.992,768,1.992,769,1.992,770,1.992,771,1.992,772,1.992,773,1.992,774,1.992,775,1.992,776,3.155,777,1.697,778,1.992,779,1.992,780,1.992,781,1.992,782,4.455,783,1.992,784,1.992,785,3.155,786,1.697,787,1.502,788,1.992,789,3.155,790,1.992,791,1.992,792,1.992,793,1.992,794,1.502,795,1.697,796,1.992,797,3.917,798,1.992,799,1.992,800,1.992,801,1.992,802,1.992,803,1.992,804,1.992,805,1.992,806,3.155,807,3.917,808,1.992,809,3.917,810,1.992,811,1.992,812,1.992,813,1.992,814,1.992,815,3.155,816,1.992,817,1.992,818,3.155,819,2.379,820,1.992,821,1.992,822,4.455,823,3.155,824,6.557,825,1.697,826,1.992,827,1.992,828,1.992,829,1.992,830,3.917,831,1.992,832,4.455,833,1.992,834,1.992,835,1.992,836,1.992,837,1.992,838,1.992,839,4.855,840,3.336,841,3.917,842,1.992,843,1.992,844,1.992,845,1.992,846,3.155,847,1.697,848,1.992,849,1.992,850,1.697,851,1.992,852,1.992,853,1.992,854,1.992,855,1.992,856,1.992,857,1.992,858,1.992,859,1.992,860,1.992,861,1.992,862,1.992,863,1.992,864,1.992,865,1.992,866,1.992,867,4.855,868,1.992,869,1.992,870,1.992,871,1.992,872,1.992,873,1.992,874,1.992,875,1.992,876,1.992,877,1.992,878,1.992,879,3.155,880,1.992,881,1.992,882,1.992,883,1.992,884,1.697,885,1.992,886,1.992,887,3.917,888,3.155,889,3.155,890,2.687,891,3.155,892,4.455,893,1.992,894,3.155,895,1.992,896,1.992,897,1.697,898,1.992,899,1.992,900,1.992,901,1.992,902,1.992,903,1.992,904,1.992,905,1.992,906,1.992,907,1.992,908,1.992,909,5.411,910,1.992,911,1.697,912,1.992,913,1.992,914,1.697,915,1.992,916,1.992,917,1.992,918,1.992,919,1.992,920,1.992,921,1.992,922,1.992,923,1.502,924,1.992,925,1.992,926,1.992,927,1.992,928,1.697,929,1.992,930,1.992,931,1.992,932,1.992,933,3.155,934,3.155,935,1.992,936,1.992,937,1.992,938,2.687,939,3.155,940,3.155,941,1.992,942,1.992,943,1.992,944,4.455,945,1.992,946,1.992,947,1.992,948,1.992,949,3.155,950,1.992,951,1.992]],["title/coverage.html",[952,4.116]],["body/coverage.html",[5,0.169,6,0.368,7,2.529,8,3.167,9,2.284,12,0.023,15,1.29,17,2.089,27,0.014,28,0.014,29,1.286,31,3.337,42,1.29,48,0.558,49,1.207,50,1.29,52,3.006,53,3.006,59,0.762,78,1.215,82,1.371,86,1.16,97,1.188,103,1.29,127,1.371,145,1.371,148,1.371,151,1.459,163,0.808,167,0.962,174,1.29,176,1.29,178,1.29,180,1.29,195,2.529,196,2.284,197,2.089,213,3.506,227,2.529,228,2.529,229,2.284,232,2.089,233,2.089,239,2.477,240,2.284,242,2.322,243,2.284,254,2.529,256,2.284,258,1.459,260,3.59,265,1.459,268,2.857,269,2.857,283,3.506,288,3.506,295,2.089,296,2.857,297,1.787,387,2.529,396,2.529,397,2.529,400,2.284,404,2.529,405,3.167,406,2.529,407,2.529,408,2.284,411,1.665,412,2.284,414,2.857,415,2.857,592,2.529,593,2.284,595,2.089,598,2.857,599,2.529,600,2.857,652,2.529,656,2.529,657,2.284,787,2.529,952,2.857,953,3.354,954,3.354,955,7.263,956,5.337,957,6.8,958,5.337,959,3.354,960,3.354,961,6.423,962,4.65,963,6.053,964,3.354,965,5.337,966,3.354,967,3.354,968,2.857]],["title/dependencies.html",[625,2.449,689,2.02]],["body/dependencies.html",[12,0.023,14,0.329,27,0.019,28,0.019,172,1.928,399,3.782,452,2.672,463,4.272,625,2.881,777,4.272,819,3.782,969,5.016,970,5.016,971,5.016,972,7.123,973,5.016,974,6.036,975,5.016,976,5.016,977,5.016,978,6.036,979,4.551,980,5.016,981,5.141,982,5.016,983,4.272,984,5.016,985,5.016,986,5.016,987,5.016,988,5.016,989,5.016]],["title/index.html",[33,0.493,668,1.848,669,1.848]],["body/index.html",[0,2.318,1,0.865,2,0.867,3,0.394,6,0.064,11,0.209,12,0.023,13,1.605,14,0.083,15,0.488,18,0.791,20,0.788,21,1.097,22,1.377,23,0.723,24,0.488,25,0.32,26,0.526,27,0.007,28,0.007,38,0.338,42,0.488,43,1.029,44,1.481,47,0.974,48,0.211,49,0.386,50,0.836,54,1.773,56,1.176,57,0.589,58,1.986,59,0.288,60,0.889,61,1.097,62,1.605,63,0.519,64,1.089,65,1.154,66,0.589,67,0.867,74,0.552,75,1.324,76,0.552,77,1.929,78,1.033,81,1.471,82,0.519,83,1.324,84,0.61,85,1.097,86,1.146,87,1.704,88,1.654,89,1.694,90,2.363,93,1.324,94,1.381,95,1.166,96,1.554,97,1.369,98,0.946,99,1.01,100,2.455,101,1.324,103,1.097,104,1.764,105,1.01,106,1.924,107,1.01,108,1.01,109,1.01,110,1.471,111,1.324,112,1.01,113,1.01,114,0.946,115,1.01,116,1.764,117,1.764,118,1.01,119,0.889,120,0.946,121,1.01,122,2.17,123,0.946,124,1.01,125,0.946,126,2.241,127,0.519,128,1.797,130,1.377,131,0.889,133,0.589,134,0.589,135,0.589,136,0.552,137,1.01,138,1.554,139,1.541,140,0.589,141,0.488,142,0.589,143,0.552,144,1.704,145,0.519,146,0.589,148,1.166,149,2.028,150,0.946,162,0.589,163,0.814,164,1.764,165,1.241,166,0.552,167,0.364,169,1.033,172,1.462,174,1.3,176,1.097,178,1.097,185,0.552,190,1.298,191,2.069,194,0.865,198,2.589,199,3.338,200,4.092,211,1.249,212,0.791,213,1.64,216,2.058,226,2.589,230,0.957,237,1.481,239,0.677,241,2.381,242,2.034,248,1.082,253,0.865,258,0.552,265,0.552,271,0.957,272,2.781,273,2.302,274,1.853,275,3.126,276,1.64,277,1.64,278,1.64,280,2.43,281,2.43,282,0.865,290,2.43,297,2.362,298,4.245,328,3.126,329,0.865,330,3.556,336,3.126,338,2.151,339,1.481,341,0.957,343,1.082,344,1.082,345,0.957,346,1.082,357,1.481,386,0.865,391,0.865,395,0.865,411,3.138,416,1.082,420,1.082,431,2.879,437,1.082,451,1.64,452,3.294,456,1.853,460,2.43,490,1.082,492,2.151,498,0.957,572,2.302,581,1.082,582,2.879,588,2.151,591,3.326,594,1.64,601,2.879,624,2.368,625,2.804,643,2.151,651,0.865,655,0.865,668,1.355,669,1.355,673,2.549,689,0.865,705,1.082,716,1.853,730,2.879,732,4.621,737,1.853,742,1.082,756,1.64,757,1.853,794,1.64,795,1.082,819,1.64,825,1.853,840,1.082,847,2.43,850,1.082,890,1.082,897,1.082,911,1.082,923,1.64,928,1.082,968,1.853,979,0.957,981,1.853,983,1.082,990,2.853,991,3.801,992,1.27,993,5.063,994,1.27,995,1.27,996,1.853,997,1.853,998,2.175,999,2.175,1000,2.175,1001,3.801,1002,2.879,1003,2.175,1004,4.432,1005,1.27,1006,1.27,1007,2.175,1008,1.27,1009,1.27,1010,1.27,1011,4.432,1012,1.27,1013,4.146,1014,2.175,1015,2.175,1016,3.38,1017,1.27,1018,2.43,1019,3.38,1020,1.853,1021,1.27,1022,2.175,1023,2.175,1024,2.853,1025,1.27,1026,2.853,1027,1.27,1028,1.27,1029,1.27,1030,1.27,1031,2.853,1032,1.27,1033,1.27,1034,1.27,1035,1.27,1036,1.27,1037,1.27,1038,1.27,1039,1.27,1040,1.27,1041,1.27,1042,1.082,1043,1.082,1044,2.175,1045,5.063,1046,5.221,1047,2.853,1048,4.146,1049,1.27,1050,1.27,1051,2.175,1052,1.27,1053,1.27,1054,2.853,1055,1.27,1056,1.27,1057,1.27,1058,2.175,1059,1.27,1060,1.27,1061,1.27,1062,1.27,1063,1.27,1064,1.082,1065,1.27,1066,1.27,1067,3.801,1068,1.27,1069,1.27,1070,1.27,1071,1.27,1072,1.27,1073,2.175,1074,1.27,1075,1.082,1076,1.27,1077,1.27,1078,1.27,1079,2.879,1080,1.27,1081,1.27,1082,1.27,1083,1.27,1084,1.27,1085,1.27,1086,1.27,1087,1.27,1088,1.27,1089,1.27,1090,1.27,1091,1.27,1092,1.27,1093,1.27,1094,1.27,1095,1.27,1096,1.27,1097,1.27,1098,1.481,1099,2.853,1100,2.175,1101,1.27,1102,1.27,1103,1.27,1104,1.082,1105,1.27,1106,1.27,1107,1.27,1108,1.27,1109,1.27,1110,1.27,1111,2.853,1112,2.853,1113,2.175,1114,2.175,1115,2.175,1116,2.175,1117,1.27,1118,1.27,1119,2.175,1120,2.175,1121,1.27,1122,1.27,1123,1.27,1124,1.27,1125,1.27,1126,1.27,1127,1.082,1128,1.082,1129,1.27,1130,3.801,1131,3.801,1132,3.801,1133,2.175,1134,5.063,1135,3.801,1136,3.238,1137,3.801,1138,3.801,1139,3.801,1140,2.175,1141,1.27,1142,1.27,1143,1.27,1144,1.27,1145,1.27,1146,1.27,1147,1.27,1148,1.27,1149,1.27,1150,1.27,1151,1.27,1152,1.27,1153,1.27,1154,1.27,1155,1.27,1156,1.27,1157,1.27,1158,1.27]],["title/license.html",[668,1.848,669,1.848,1159,2.527]],["body/license.html",[4,0.388,5,0.269,11,0.087,12,0.011,23,0.371,26,0.27,27,0.009,28,0.009,32,0.308,36,0.443,51,0.628,54,0.497,67,0.527,81,0.754,84,0.763,85,0.666,90,2.316,141,1.581,199,1.079,200,1.18,201,1.476,272,1.503,285,1.307,339,3.304,405,2.8,442,2.403,498,1.307,506,2.69,540,2.403,631,1.307,676,2.69,732,1.307,756,1.307,786,1.476,787,2.69,794,1.307,884,1.476,923,4.853,938,2.403,996,1.476,997,1.476,1002,1.476,1018,2.403,1020,1.476,1042,1.476,1043,1.476,1064,1.476,1075,1.476,1079,1.476,1098,1.18,1104,1.476,1128,3.855,1136,2.403,1159,5.872,1160,4.112,1161,3.568,1162,1.733,1163,1.733,1164,1.733,1165,5.513,1166,6.017,1167,4.112,1168,4.526,1169,1.733,1170,6.187,1171,5.667,1172,1.733,1173,1.733,1174,5.667,1175,6.017,1176,4.851,1177,5.667,1178,2.821,1179,1.733,1180,4.526,1181,1.733,1182,1.733,1183,1.733,1184,4.112,1185,1.733,1186,5.513,1187,4.112,1188,2.821,1189,2.821,1190,1.733,1191,3.568,1192,2.821,1193,1.733,1194,1.733,1195,6.383,1196,4.112,1197,2.821,1198,1.733,1199,2.821,1200,1.733,1201,1.733,1202,1.733,1203,1.733,1204,1.733,1205,1.733,1206,1.733,1207,3.568,1208,1.733,1209,3.568,1210,2.821,1211,6.017,1212,1.733,1213,1.733,1214,4.851,1215,5.513,1216,4.112,1217,2.821,1218,3.568,1219,4.851,1220,1.733,1221,1.733,1222,1.733,1223,1.733,1224,1.733,1225,2.821,1226,1.733,1227,1.733,1228,1.733,1229,6.894,1230,3.568,1231,2.821,1232,1.733,1233,5.513,1234,2.821,1235,1.733,1236,4.526,1237,2.821,1238,1.733,1239,6.383,1240,1.733,1241,1.733,1242,1.733,1243,1.733,1244,1.733,1245,1.733,1246,2.821,1247,3.568,1248,1.733,1249,1.733,1250,1.733,1251,1.733,1252,4.112,1253,4.526,1254,1.733,1255,2.821,1256,4.112,1257,2.821,1258,1.733,1259,4.526,1260,2.821,1261,1.733,1262,1.733,1263,3.568,1264,1.733,1265,1.733,1266,1.733,1267,1.733,1268,2.821,1269,1.733,1270,1.733,1271,1.733,1272,3.568,1273,1.733,1274,1.733,1275,3.568,1276,1.733,1277,1.733,1278,1.733,1279,4.112,1280,5.667,1281,1.733,1282,1.733,1283,2.821,1284,5.331,1285,3.568,1286,2.821,1287,2.821,1288,2.821,1289,2.821,1290,3.568,1291,2.821,1292,3.568,1293,2.821,1294,2.821,1295,2.821,1296,2.821,1297,1.476,1298,2.821,1299,1.733,1300,1.733,1301,4.526,1302,5.114,1303,3.568,1304,2.821,1305,1.733,1306,2.821,1307,2.821,1308,1.733,1309,3.568,1310,2.821,1311,1.733,1312,1.733,1313,1.733,1314,3.568,1315,1.733,1316,1.733,1317,1.733,1318,2.821,1319,2.821,1320,1.733,1321,1.733,1322,1.733,1323,1.733,1324,1.733,1325,1.733,1326,1.733,1327,2.821,1328,1.733,1329,1.733,1330,1.733,1331,1.733,1332,1.733,1333,1.733,1334,1.733,1335,1.733,1336,3.568,1337,1.733,1338,3.568,1339,1.733,1340,1.733,1341,1.733,1342,1.733,1343,5.331,1344,1.733,1345,1.733,1346,1.733,1347,1.733,1348,1.733,1349,4.112,1350,2.821,1351,4.112,1352,1.733,1353,1.733,1354,1.733,1355,1.733,1356,1.733,1357,3.568,1358,1.733,1359,1.733,1360,2.821,1361,2.821,1362,1.733,1363,1.733,1364,1.733,1365,2.821,1366,1.733,1367,1.733,1368,4.526,1369,1.733,1370,1.733,1371,1.733,1372,1.733,1373,1.733,1374,1.733,1375,3.568,1376,4.112,1377,1.733,1378,1.733,1379,1.733,1380,1.733,1381,1.733,1382,1.733,1383,1.733,1384,1.733,1385,1.733,1386,1.733,1387,2.821,1388,1.733,1389,1.733,1390,2.821,1391,1.733,1392,1.733,1393,4.112,1394,1.733,1395,1.733,1396,1.733,1397,1.733,1398,1.733,1399,1.733,1400,4.112,1401,3.568,1402,3.568,1403,3.568,1404,2.821,1405,2.821,1406,3.568,1407,2.821,1408,2.821,1409,2.821,1410,1.733,1411,1.733,1412,1.733,1413,1.733,1414,1.733,1415,1.733,1416,1.733,1417,1.733,1418,1.733,1419,2.821,1420,1.733,1421,1.733,1422,1.733,1423,1.733,1424,4.526,1425,1.733,1426,1.733,1427,1.733,1428,1.733,1429,1.733,1430,1.733,1431,1.733,1432,1.733,1433,4.526,1434,1.733,1435,1.733,1436,1.733,1437,1.733,1438,1.733,1439,1.733,1440,1.733,1441,1.733,1442,1.733,1443,1.733,1444,1.733,1445,1.733,1446,1.733,1447,1.733,1448,1.733,1449,1.733,1450,1.733,1451,3.568,1452,1.733,1453,1.733,1454,1.733,1455,1.476,1456,1.733,1457,2.821,1458,1.733,1459,1.733,1460,1.733,1461,1.733,1462,1.733,1463,1.733,1464,1.733,1465,1.733,1466,1.733,1467,1.733,1468,1.733,1469,1.733,1470,1.733,1471,1.733,1472,1.733,1473,2.821,1474,1.733,1475,1.733,1476,1.733,1477,2.821,1478,2.821,1479,1.733,1480,1.733,1481,1.733,1482,1.733,1483,1.733,1484,1.733,1485,1.733,1486,1.733,1487,1.733,1488,1.733,1489,1.733,1490,1.733,1491,1.733,1492,1.733,1493,1.733,1494,1.733,1495,1.733,1496,1.733,1497,1.733,1498,1.733]],["title/modules.html",[2,1.469]],["body/modules.html",[1,3.463,2,1.545,12,0.019,27,0.019,28,0.019,194,3.463,226,3.463,253,3.463,386,3.463,395,3.463,403,3.834,572,3.463,591,3.463,624,3.167,651,3.463,655,3.463,979,3.834,1098,4.941,1455,4.33,1499,7.255,1500,7.281,1501,5.084]],["title/overview.html",[1502,4.116]],["body/overview.html",[2,1.611,12,0.021,27,0.019,28,0.019,30,2.039,51,1.92,67,1.611,297,2.825,595,4.447,624,4.347,625,3.583,626,4.516,627,4.516,628,4.516,629,5.314,630,3.998,631,3.998,681,4.516,735,5.314,1502,4.516]],["title/properties.html",[55,1.296,689,2.02]],["body/properties.html",[12,0.022,27,0.02,28,0.02,55,1.683,67,1.683,411,2.75,452,2.951,676,4.177,679,4.718,1503,5.54,1504,5.54,1505,5.54,1506,5.54,1507,5.54]],["title/todo.html",[668,1.848,669,1.848,1508,2.527]],["body/todo.html",[12,0.022,27,0.019,28,0.019,54,1.787,100,2.546,126,2.162,139,1.432,199,3.294,200,4.243,212,3.294,241,3.804,272,3.529,411,2.626,452,2.818,673,3.988,914,4.505,1098,3.603,1127,5.641,1297,4.505,1508,5.306,1509,5.29,1510,5.29,1511,5.29]],["title/miscellaneous/variables.html",[1512,2.527,1513,3.632]],["body/miscellaneous/variables.html",[6,0.297,12,0.023,15,2.034,23,0.869,27,0.016,28,0.016,33,0.676,38,0.632,48,1.138,52,1.768,53,2.882,54,1.166,64,2.172,65,2.335,68,2.162,69,2.162,70,2.162,71,2.162,73,2.162,97,1.351,130,1.472,139,1.1,149,1.387,163,0.979,167,1.9,168,1.687,169,2.257,171,1.886,172,2.034,173,1.886,174,2.034,175,1.886,176,2.034,177,1.886,178,2.034,179,1.886,180,2.034,181,1.472,182,1.387,183,2.547,184,1.886,185,1.768,186,1.886,187,1.886,188,2.162,189,2.456,190,1.806,191,2.162,192,1.886,193,1.886,258,2.302,283,3.064,287,3.461,288,3.064,292,3.461,1512,3.461,1513,3.461,1514,6.461,1515,4.064,1516,4.064]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":213,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["0.10.0",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["0.11.0",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["0.21.0",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["0.24.0",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":1021,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":1035,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{},"properties.html":{}}}],["1.0.0",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":679,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1/1",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":737,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.2",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["10/10",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["10000ms",{"_index":142,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["106",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":735,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12",{"_index":681,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.2",{"_index":1153,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["13.0.0",{"_index":983,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["13.3.10",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["13.3.12",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["13.3.9",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["15/15",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["1c7c0c0",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["1f22380",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":705,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":1161,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1163,"title":{},"body":{"license.html":{}}}],["2020",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":1027,"title":{},"body":{"index.html":{}}}],["21",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["23e35d1",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["24f4d6f",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":840,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":928,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":1030,"title":{},"body":{"index.html":{}}}],["31",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["332baf7",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["3ae307e",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":897,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4/4",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["40f33cc",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["412d2fd",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["41c8947",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["4318",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["4fcec62",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["5.0.11",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1202,"title":{},"body":{"license.html":{}}}],["5000",{"_index":1029,"title":{},"body":{"index.html":{}}}],["51",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":1028,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["59ac6ca",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["5a29d29",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["5a7c375",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":890,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.6.3",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["640d901",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["6763f97",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["7023a31",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["735b05d",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":1036,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["7bbaf2e",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["7f3aba9",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["80d2ada",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["8442349",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":884,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9/node",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["97579f0",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":1037,"title":{},"body":{"index.html":{}}}],["_currentcontext",{"_index":547,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["_exact",{"_index":159,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["a1746bf",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["a6307f2",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1380,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1454,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1451,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1155,"title":{},"body":{"index.html":{}}}],["act",{"_index":1461,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1182,"title":{},"body":{"license.html":{}}}],["action",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":1054,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1431,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":623,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ad03334",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":272,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":274,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1367,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1106,"title":{},"body":{"index.html":{}}}],["addition",{"_index":158,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["additional",{"_index":1368,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1254,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1449,"title":{},"body":{"license.html":{}}}],["again",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1319,"title":{},"body":{"license.html":{}}}],["agent",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1464,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1403,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1384,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1324,"title":{},"body":{"license.html":{}}}],["allow",{"_index":546,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["allowedcommonjsdependencies",{"_index":1145,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1315,"title":{},"body":{"license.html":{}}}],["along",{"_index":1358,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1366,"title":{},"body":{"license.html":{}}}],["already",{"_index":586,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":1109,"title":{},"body":{"index.html":{}}}],["always",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":353,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":354,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1157,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1135,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1458,"title":{},"body":{"license.html":{}}}],["angular",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["angular.json",{"_index":1143,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":399,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":282,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":14,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1243,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1160,"title":{},"body":{"license.html":{}}}],["api",{"_index":391,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":552,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":551,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.spankind.client",{"_index":541,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.trace.setspan",{"_index":549,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["apis",{"_index":427,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":1007,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":1068,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":1088,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":1056,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1067,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1363,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1237,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1401,"title":{},"body":{"license.html":{}}}],["application",{"_index":993,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1110,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1043,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1473,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":588,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1481,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1417,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1489,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1438,"title":{},"body":{"license.html":{}}}],["array",{"_index":162,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["asserted",{"_index":1470,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1422,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1420,"title":{},"body":{"license.html":{}}}],["async",{"_index":1040,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1474,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1235,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":273,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["attribution",{"_index":1349,"title":{},"body":{"license.html":{}}}],["author",{"_index":1505,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1178,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1230,"title":{},"body":{"license.html":{}}}],["available",{"_index":1098,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["aws",{"_index":18,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"changelog.html":{},"index.html":{}}}],["awsxraypropagator",{"_index":39,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["awsxraypropagatormodule",{"_index":1,"title":{"modules/AwsXrayPropagatorModule.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["awsxraypropagatorservice",{"_index":17,"title":{"injectables/AwsXrayPropagatorService.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b",{"_index":1339,"title":{},"body":{"license.html":{}}}],["b112065",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":198,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3e15af",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["b3injectencoding",{"_index":214,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":224,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":223,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":225,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":50,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":194,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":197,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":222,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["backendapp.get('/api/config",{"_index":1032,"title":{},"body":{"index.html":{}}}],["bad",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1510,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":1138,"title":{},"body":{"index.html":{}}}],["base",{"_index":267,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["based",{"_index":1104,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1405,"title":{},"body":{"license.html":{}}}],["batch",{"_index":111,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":336,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":383,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":568,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":103,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1259,"title":{},"body":{"license.html":{}}}],["below",{"_index":1238,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1206,"title":{},"body":{"license.html":{}}}],["between",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1251,"title":{},"body":{"license.html":{}}}],["body",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["boilerplate",{"_index":1475,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":1038,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1073,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1478,"title":{},"body":{"license.html":{}}}],["branch",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1500,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":979,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bufferconfig",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1346,"title":{},"body":{"license.html":{}}}],["c2b4209",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["c36e295",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["calls",{"_index":425,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["cancelled",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":550,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":554,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1341,"title":{},"body":{"license.html":{}}}],["catch",{"_index":1008,"title":{},"body":{"index.html":{}}}],["cause",{"_index":1136,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1345,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":670,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1437,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1292,"title":{},"body":{"license.html":{}}}],["choices",{"_index":1053,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1452,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1321,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1310,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["classprovider",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["cluster_otelwebtracermodule",{"_index":626,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_declarations",{"_index":627,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_exports",{"_index":628,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["code",{"_index":506,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":126,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":1141,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":1122,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":639,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":641,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1316,"title":{},"body":{"license.html":{}}}],["command",{"_index":1112,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1482,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1446,"title":{},"body":{"license.html":{}}}],["commit",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":82,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":164,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":1134,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":398,"title":{},"body":{"modules/NoopSpanExporterModule.html":{}}}],["commons",{"_index":1000,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1263,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":173,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1224,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1492,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1373,"title":{},"body":{"license.html":{}}}],["component",{"_index":297,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/otel",{"_index":635,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["component_template",{"_index":621,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["components",{"_index":596,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["compose",{"_index":1120,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":1123,"title":{},"body":{"index.html":{}}}],["composite",{"_index":230,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":236,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":226,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":229,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1443,"title":{},"body":{"license.html":{}}}],["concurencylimit",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["concurrencylimit",{"_index":136,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["conditions",{"_index":1166,"title":{},"body":{"license.html":{}}}],["config",{"_index":168,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":393,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":647,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":646,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":666,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":665,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configprovider",{"_index":183,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configprovider.provide",{"_index":192,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":825,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["configuration/directive",{"_index":1089,"title":{},"body":{"index.html":{}}}],["configuration/opentelemetry",{"_index":217,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":1013,"title":{},"body":{"index.html":{}}}],["configured",{"_index":661,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1436,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1460,"title":{},"body":{"license.html":{}}}],["console",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":263,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":253,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":256,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1276,"title":{},"body":{"license.html":{}}}],["const",{"_index":170,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":1325,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":205,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(otel_config",{"_index":219,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":231,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":206,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(instrumentationservice",{"_index":606,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructor(private",{"_index":614,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructorprovider",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["construed",{"_index":1369,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1355,"title":{},"body":{"license.html":{}}}],["content",{"_index":997,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":996,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":239,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":299,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1197,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1253,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1314,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1375,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1280,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1326,"title":{},"body":{"license.html":{}}}],["control",{"_index":1184,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1185,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":349,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["conversions",{"_index":1226,"title":{},"body":{"license.html":{}}}],["convert",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1333,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1338,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1175,"title":{},"body":{"license.html":{}}}],["core",{"_index":1060,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1322,"title":{},"body":{"license.html":{}}}],["cours",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":952,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1105,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1320,"title":{},"body":{"license.html":{}}}],["current",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":130,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1395,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":150,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customize",{"_index":1085,"title":{},"body":{"index.html":{}}}],["customspan",{"_index":78,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":1100,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1352,"title":{},"body":{"license.html":{}}}],["d2ecbb8",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1433,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":545,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["date",{"_index":1330,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1093,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["declare",{"_index":1074,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1156,"title":{},"body":{"index.html":{}}}],["default",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1466,"title":{},"body":{"license.html":{}}}],["define",{"_index":211,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["defineb3encoding",{"_index":204,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":209,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineconfigprovider",{"_index":180,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defineconfigprovider(config,configprovider",{"_index":590,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1188,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1169,"title":{},"body":{"license.html":{}}}],["del",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1428,"title":{},"body":{"license.html":{}}}],["dep",{"_index":346,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["dependence",{"_index":716,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":625,"title":{"dependencies.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":1142,"title":{},"body":{"index.html":{}}}],["depends",{"_index":1132,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":992,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["derivative",{"_index":1239,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1240,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1396,"title":{},"body":{"license.html":{}}}],["description",{"_index":32,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1278,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1416,"title":{},"body":{"license.html":{}}}],["devkit/core",{"_index":969,"title":{},"body":{"dependencies.html":{}}}],["dgo",{"_index":1125,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["different",{"_index":1372,"title":{},"body":{"license.html":{}}}],["dir",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1191,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1193,"title":{},"body":{"license.html":{}}}],["directive",{"_index":619,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["directives",{"_index":622,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disable",{"_index":610,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disclaimer",{"_index":1399,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1273,"title":{},"body":{"license.html":{}}}],["display",{"_index":1018,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1301,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1357,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1168,"title":{},"body":{"license.html":{}}}],["doc",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1119,"title":{},"body":{"index.html":{}}}],["docs",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":756,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":787,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":426,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["don't",{"_index":794,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1511,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":280,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":777,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e29c839",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["e9dc64b",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":141,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["ead3251",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1487,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1241,"title":{},"body":{"license.html":{}}}],["ee08e85",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["efa9083",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1244,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1260,"title":{},"body":{"license.html":{}}}],["element",{"_index":618,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["en",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["encapsulates",{"_index":424,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["enclosed",{"_index":1477,"title":{},"body":{"license.html":{}}}],["end",{"_index":1472,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1183,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1177,"title":{},"body":{"license.html":{}}}],["enum",{"_index":1026,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1069,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":1070,"title":{},"body":{"index.html":{}}}],["equal",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":190,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error(`configuration",{"_index":189,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":543,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["eslint/component",{"_index":612,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["even",{"_index":1448,"title":{},"body":{"license.html":{}}}],["event",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":502,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":514,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":512,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":510,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":501,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exact",{"_index":293,"title":{},"body":{"interfaces/IgnoreUrlsConfig.html":{}}}],["example",{"_index":732,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":1114,"title":{},"body":{"index.html":{}}}],["except",{"_index":1303,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1275,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1291,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1385,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1423,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1208,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1090,"title":{},"body":{"index.html":{}}}],["existingprovider",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1377,"title":{},"body":{"license.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":1149,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":139,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":259,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":255,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":257,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":260,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":658,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:18",{"_index":262,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{}}}],["exporter.service.ts:21",{"_index":637,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:36",{"_index":659,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:44",{"_index":638,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":359,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporter/noop",{"_index":397,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["exporterconfig",{"_index":663,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":1057,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exporttimeoutmillis",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exposes",{"_index":1083,"title":{},"body":{"index.html":{}}}],["express",{"_index":1407,"title":{},"body":{"license.html":{}}}],["external",{"_index":730,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["f",{"_index":1121,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["fabre",{"_index":1507,"title":{},"body":{"properties.html":{}}}],["factoryprovider",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["fad044a",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1444,"title":{},"body":{"license.html":{}}}],["fake",{"_index":1058,"title":{},"body":{"index.html":{}}}],["false",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1453,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":1014,"title":{},"body":{"index.html":{}}}],["ff373c0",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":662,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1476,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1200,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1331,"title":{},"body":{"license.html":{}}}],["files",{"_index":1218,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1412,"title":{},"body":{"license.html":{}}}],["fix",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1336,"title":{},"body":{"license.html":{}}}],["forget",{"_index":795,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1211,"title":{},"body":{"license.html":{}}}],["format",{"_index":1484,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":575,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":576,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1294,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1091,"title":{},"body":{"index.html":{}}}],["generally",{"_index":1055,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1225,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":261,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":35,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["getting",{"_index":668,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(infolibrary.name",{"_index":522,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":417,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":285,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":999,"title":{},"body":{"index.html":{}}}],["going",{"_index":1081,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1441,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1497,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1285,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1210,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1179,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1287,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1499,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1429,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1468,"title":{},"body":{"license.html":{}}}],["header",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":131,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":1127,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1286,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1381,"title":{},"body":{"license.html":{}}}],["hhttps://github.com/open",{"_index":1049,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1467,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1503,"title":{},"body":{"properties.html":{}}}],["hostname",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["html",{"_index":617,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["http",{"_index":242,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["http.interceptor",{"_index":584,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":415,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:110",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:164",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:173",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:205",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:225",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:237",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:249",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:269",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:286",{"_index":428,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:298",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:53",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:57",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:61",{"_index":423,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":1126,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1116,"title":{},"body":{"index.html":{}}}],["http://localhost:4318/v1/trace",{"_index":129,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["http://localhost:4318/v1/traces",{"_index":1031,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":146,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1164,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1494,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":581,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":1009,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":582,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":278,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":271,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":276,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":277,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":1139,"title":{},"body":{"index.html":{}}}],["https://github.com/jufab/opentelemetry",{"_index":1504,"title":{},"body":{"properties.html":{}}}],["https://github.com/open",{"_index":1045,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":995,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":291,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["id",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1488,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1480,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":265,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["if(config",{"_index":184,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["if(configprovider",{"_index":186,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["if(configprovider.provide",{"_index":187,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["if(this.exporterservice.getexporter()!==undefined",{"_index":558,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ignore",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["ignoreurls",{"_index":156,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["ignoreurlsconfig",{"_index":151,"title":{"interfaces/IgnoreUrlsConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{}}}],["ii",{"_index":1198,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1205,"title":{},"body":{"license.html":{}}}],["implement",{"_index":1099,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":290,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":47,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1408,"title":{},"body":{"license.html":{}}}],["import",{"_index":11,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1274,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1439,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1435,"title":{},"body":{"license.html":{}}}],["include",{"_index":1247,"title":{},"body":{"license.html":{}}}],["included",{"_index":1234,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1353,"title":{},"body":{"license.html":{}}}],["including",{"_index":1215,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1257,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1283,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1469,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1465,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1456,"title":{},"body":{"license.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1232,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1192,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1207,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["infolibrary",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["infolibrary.version",{"_index":523,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["infor",{"_index":1086,"title":{},"body":{"index.html":{}}}],["information",{"_index":201,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1364,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1313,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1327,"title":{},"body":{"license.html":{}}}],["init",{"_index":324,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["initialise",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":418,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":216,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(awsxraypropagatorservice",{"_index":247,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(b3propagatorservice",{"_index":244,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":246,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(otel_config",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otel_custom_span",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_exporter",{"_index":361,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_instrumentation_plugins",{"_index":363,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["inject(otel_logger",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_propagator",{"_index":362,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(w3ctracecontextpropagatorservice",{"_index":245,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["injectable",{"_index":29,"title":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":30,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":419,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":270,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":221,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":169,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":171,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":177,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":287,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.instrumentation.plugins",{"_index":179,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":175,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":292,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":286,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":328,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":326,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertornotspanexporter",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertornotspanexporter(production",{"_index":331,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":334,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["install",{"_index":1012,"title":{},"body":{"index.html":{}}}],["installation",{"_index":998,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1317,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":298,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationoption",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["instrumentationoptions",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentations",{"_index":375,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":295,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["integration",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":1255,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":420,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":281,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":411,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["interceptor.js",{"_index":1131,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":574,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:36",{"_index":577,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":79,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":583,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/component/otel",{"_index":598,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":268,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":414,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":573,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":632,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":254,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":283,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:13",{"_index":284,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/noop",{"_index":396,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":592,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":656,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":296,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:111",{"_index":335,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:128",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:138",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:31",{"_index":342,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:36",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:65",{"_index":323,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:82",{"_index":332,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:96",{"_index":327,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/aws",{"_index":7,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":195,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":227,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":387,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":404,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":288,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:13",{"_index":289,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/w3c",{"_index":652,"title":{},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/public",{"_index":1076,"title":{},"body":{"index.html":{}}}],["interceptorconfiguration",{"_index":1017,"title":{},"body":{"index.html":{}}}],["interceptorprovider",{"_index":589,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptors",{"_index":413,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":49,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":42,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1295,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1269,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["issue#41",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["issue#80",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["isurlignored",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["isurlignored(request.url",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["it's",{"_index":212,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":241,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":1063,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":386,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":233,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":390,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{}}}],["jaegerpropagator(this.customheader",{"_index":394,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerpropagatorconfig",{"_index":148,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1162,"title":{},"body":{"license.html":{}}}],["jest",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":819,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/main/experimental/packages/exporter",{"_index":1047,"title":{},"body":{"index.html":{}}}],["js/tree/main/experimental/packages/opentelemetry",{"_index":1059,"title":{},"body":{"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":1048,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":504,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":990,"title":{},"body":{"index.html":{}}}],["julien",{"_index":1506,"title":{},"body":{"properties.html":{}}}],["key",{"_index":147,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":540,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["language",{"_index":1496,"title":{},"body":{"license.html":{}}}],["last",{"_index":1052,"title":{},"body":{"index.html":{}}}],["law",{"_index":1402,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1323,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1180,"title":{},"body":{"license.html":{}}}],["legend",{"_index":616,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["level",{"_index":99,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1424,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1432,"title":{},"body":{"license.html":{}}}],["library",{"_index":991,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1311,"title":{},"body":{"license.html":{}}}],["license",{"_index":1159,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1491,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1328,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1174,"title":{},"body":{"license.html":{}}}],["limit",{"_index":133,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["limitation",{"_index":1409,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1498,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1216,"title":{},"body":{"license.html":{}}}],["line",{"_index":611,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["link",{"_index":786,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":1044,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1267,"title":{},"body":{"license.html":{}}}],["literal",{"_index":654,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1318,"title":{},"body":{"license.html":{}}}],["load",{"_index":757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loaded",{"_index":587,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["lock",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["lock.json",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":172,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":1094,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":1095,"title":{},"body":{"index.html":{}}}],["logging",{"_index":847,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":101,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":1025,"title":{},"body":{"index.html":{}}}],["long",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1440,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1447,"title":{},"body":{"license.html":{}}}],["made",{"_index":1231,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1266,"title":{},"body":{"license.html":{}}}],["main",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1305,"title":{},"body":{"license.html":{}}}],["making",{"_index":1213,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1445,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1271,"title":{},"body":{"license.html":{}}}],["management",{"_index":1194,"title":{},"body":{"license.html":{}}}],["manager",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":407,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1277,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1391,"title":{},"body":{"license.html":{}}}],["match",{"_index":154,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["matches",{"_index":294,"title":{},"body":{"interfaces/IgnoreUrlsConfig.html":{}}}],["matches_",{"_index":160,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxexportbatchsize",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":104,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":110,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1171,"title":{},"body":{"license.html":{}}}],["means",{"_index":1189,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1221,"title":{},"body":{"license.html":{}}}],["media",{"_index":1227,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1334,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1335,"title":{},"body":{"license.html":{}}}],["member",{"_index":1150,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1411,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1250,"title":{},"body":{"license.html":{}}}],["merge",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":511,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["metadata",{"_index":603,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["method",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":34,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1512,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":337,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":1214,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1340,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1365,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1370,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":579,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":200,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["named",{"_index":1087,"title":{},"body":{"index.html":{}}}],["names",{"_index":1390,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1147,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1312,"title":{},"body":{"license.html":{}}}],["need",{"_index":1011,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1427,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1430,"title":{},"body":{"license.html":{}}}],["new",{"_index":48,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["next.handle(request",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":13,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngoninit",{"_index":605,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ngx",{"_index":981,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":1001,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1148,"title":{},"body":{"index.html":{}}}],["non",{"_index":1290,"title":{},"body":{"license.html":{}}}],["noop",{"_index":401,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":1061,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":409,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["noopspanexportermodule",{"_index":395,"title":{"modules/NoopSpanExporterModule.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["noopspanexporterservice",{"_index":400,"title":{"injectables/NoopSpanExporterService.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["noopspanprocessor",{"_index":358,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["nooptextmappropagator",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["nooptextmappropagatormodule",{"_index":403,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":408,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1362,"title":{},"body":{"license.html":{}}}],["notable",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":1020,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1233,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1343,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1379,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1016,"title":{},"body":{"index.html":{}}}],["null",{"_index":181,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["number(config.otelcolconfig?.concurrencylimit",{"_index":648,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(config.otelcolconfig?.timeoutmillis",{"_index":649,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(value",{"_index":385,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["o",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1219,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1457,"title":{},"body":{"license.html":{}}}],["observable",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1493,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1306,"title":{},"body":{"license.html":{}}}],["offers",{"_index":1005,"title":{},"body":{"index.html":{}}}],["ok",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":1064,"title":{},"body":{"index.html":{},"license.html":{}}}],["oninit",{"_index":602,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["op",{"_index":402,"title":{},"body":{"injectables/NoopSpanExporterService.html":{}}}],["open",{"_index":1115,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":43,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":343,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":237,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":643,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/otlp",{"_index":644,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["opentelemetry/propagator",{"_index":44,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["opentelemetry/resources",{"_index":351,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/sdk",{"_index":266,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["opentelemetry/semantic",{"_index":348,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["opentelemetry/tracing",{"_index":1140,"title":{},"body":{"index.html":{}}}],["opentelemetry/web",{"_index":1133,"title":{},"body":{"index.html":{}}}],["opentelemetryconfig",{"_index":163,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryhttpinterceptor",{"_index":412,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinterceptor",{"_index":416,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":572,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":1072,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":1137,"title":{},"body":{"index.html":{}}}],["option",{"_index":1097,"title":{},"body":{"index.html":{}}}],["optional",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":1144,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1397,"title":{},"body":{"license.html":{}}}],["original",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["os",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["otel",{"_index":601,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["otel_config",{"_index":167,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_custom_span",{"_index":176,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_exporter",{"_index":258,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_instrumentation_plugins",{"_index":178,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_logger",{"_index":174,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_propagator",{"_index":15,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol",{"_index":594,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":165,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":591,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":593,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":127,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracercomponent",{"_index":595,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"overview.html":{}}}],["otelwebtracermodule",{"_index":624,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":1077,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":339,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":138,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["otlpexporterconfigbase",{"_index":640,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter",{"_index":642,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter(this.otelcolconfig",{"_index":650,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["out",{"_index":631,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1203,"title":{},"body":{"license.html":{}}}],["overide",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["override",{"_index":1084,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1502,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1176,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1199,"title":{},"body":{"license.html":{}}}],["package",{"_index":689,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1486,"title":{},"body":{"license.html":{}}}],["param",{"_index":218,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":208,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":355,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":585,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["part",{"_index":1351,"title":{},"body":{"license.html":{}}}],["partial",{"_index":132,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["partially",{"_index":153,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["particular",{"_index":1413,"title":{},"body":{"license.html":{}}}],["party",{"_index":1361,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1302,"title":{},"body":{"license.html":{}}}],["peer",{"_index":345,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["peerdependencies",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":134,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["percent",{"_index":1201,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":1023,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1299,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1388,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1209,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1288,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1350,"title":{},"body":{"license.html":{}}}],["places",{"_index":1356,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":422,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["plugins",{"_index":1010,"title":{},"body":{"index.html":{}}}],["port",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["possibilities",{"_index":1006,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1450,"title":{},"body":{"license.html":{}}}],["power",{"_index":1190,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1212,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1297,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1485,"title":{},"body":{"license.html":{}}}],["private",{"_index":202,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1392,"title":{},"body":{"license.html":{}}}],["production",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":914,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":673,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":1108,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":1107,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1342,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1051,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":149,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":16,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.module.ts",{"_index":10,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service",{"_index":19,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":31,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:15",{"_index":234,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":410,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":37,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":388,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":207,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":389,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":235,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:43",{"_index":210,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:55",{"_index":215,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/aws",{"_index":9,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/b3",{"_index":196,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":228,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":243,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":406,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":360,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagator/w3c",{"_index":240,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":248,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"properties.html":{}}}],["protocol",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":23,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/IgnoreUrlsConfig.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1236,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":45,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["provider",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["provides",{"_index":1404,"title":{},"body":{"license.html":{}}}],["public",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1298,"title":{},"body":{"license.html":{}}}],["publish",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1272,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1187,"title":{},"body":{"license.html":{}}}],["queue",{"_index":105,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ray",{"_index":1066,"title":{},"body":{"index.html":{}}}],["reached",{"_index":107,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1354,"title":{},"body":{"license.html":{}}}],["readme",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1471,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1394,"title":{},"body":{"license.html":{}}}],["received",{"_index":1281,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1337,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1042,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1419,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1332,"title":{},"body":{"license.html":{}}}],["redo",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1386,"title":{},"body":{"license.html":{}}}],["regex",{"_index":155,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["registerinstrumentations",{"_index":352,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1248,"title":{},"body":{"license.html":{}}}],["remove",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1479,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1245,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1265,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1296,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1398,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1167,"title":{},"body":{"license.html":{}}}],["req,res",{"_index":1033,"title":{},"body":{"index.html":{}}}],["request",{"_index":275,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":556,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":555,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":553,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":529,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":527,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":1102,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":531,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":519,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requests",{"_index":135,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["required",{"_index":1393,"title":{},"body":{"license.html":{}}}],["res.status(200).send",{"_index":1034,"title":{},"body":{"index.html":{}}}],["reset",{"_index":630,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"overview.html":{}}}],["resource",{"_index":350,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["resource.default().merge",{"_index":366,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["response",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":1103,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1463,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1415,"title":{},"body":{"license.html":{}}}],["restart",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":1002,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1220,"title":{},"body":{"license.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1347,"title":{},"body":{"license.html":{}}}],["return",{"_index":38,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1242,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1459,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1421,"title":{},"body":{"license.html":{}}}],["root",{"_index":46,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1293,"title":{},"body":{"license.html":{}}}],["run",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1079,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":322,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":1022,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":911,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["scheduleddelaymillis",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1075,"title":{},"body":{"index.html":{},"license.html":{}}}],["sections",{"_index":1172,"title":{},"body":{"license.html":{}}}],["see",{"_index":199,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["selector",{"_index":604,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["sell",{"_index":1307,"title":{},"body":{"license.html":{}}}],["semanticattributes",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_host",{"_index":532,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_method",{"_index":528,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_scheme",{"_index":534,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_status_code",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_target",{"_index":535,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_url",{"_index":530,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_user_agent",{"_index":538,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes",{"_index":347,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes.service_name",{"_index":367,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["send",{"_index":1019,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1129,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1264,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1249,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1383,"title":{},"body":{"license.html":{}}}],["service",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":83,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":609,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":421,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":557,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1170,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1204,"title":{},"body":{"license.html":{}}}],["show",{"_index":1050,"title":{},"body":{"index.html":{}}}],["simplespanexporter(sync",{"_index":92,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":338,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":384,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":382,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":569,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":580,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1217,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1462,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1414,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":503,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":516,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":269,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:16",{"_index":279,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.kind",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["span.recordexception",{"_index":509,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":1101,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":505,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":264,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spans",{"_index":108,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":515,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.unset",{"_index":507,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1434,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1495,"title":{},"body":{"license.html":{}}}],["specify",{"_index":193,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":513,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1111,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":1113,"title":{},"body":{"index.html":{}}}],["started",{"_index":669,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":524,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1378,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1304,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1371,"title":{},"body":{"license.html":{}}}],["statements",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":203,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1344,"title":{},"body":{"license.html":{}}}],["status.code",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1442,"title":{},"body":{"license.html":{}}}],["string",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["strings",{"_index":161,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["subject",{"_index":938,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1300,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1374,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1258,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1256,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1282,"title":{},"body":{"license.html":{}}}],["such",{"_index":1195,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1382,"title":{},"body":{"license.html":{}}}],["support",{"_index":1455,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":1501,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":1041,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1483,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1268,"title":{},"body":{"license.html":{}}}],["table",{"_index":968,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1509,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":1046,"title":{},"body":{"index.html":{}}}],["template",{"_index":613,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["terminate",{"_index":1329,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1165,"title":{},"body":{"license.html":{}}}],["test",{"_index":742,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":405,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":41,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["theory",{"_index":1425,"title":{},"body":{"license.html":{}}}],["there's",{"_index":1118,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1252,"title":{},"body":{"license.html":{}}}],["third",{"_index":1360,"title":{},"body":{"license.html":{}}}],["this.awsxraypropagatorservice.getpropagator",{"_index":252,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.b3propagatorconfig",{"_index":220,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":249,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":371,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":567,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.servicename",{"_index":368,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.ignoreurls?.urls",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":373,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":548,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":542,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":565,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":563,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":566,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":564,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":392,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":570,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":571,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(this.config.commonconfig.probabilitysampler",{"_index":365,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice",{"_index":370,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice.getexporter",{"_index":377,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.initspan(request",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":560,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(console",{"_index":379,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertornotspanexporter",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertornotspanexporter(this.config.commonconfig.production",{"_index":369,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":559,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode(production",{"_index":378,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions",{"_index":376,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationservice.initinstrumentation",{"_index":615,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":251,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.logbody",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":645,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":517,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":374,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span",{"_index":508,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":562,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor(new",{"_index":561,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":364,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor",{"_index":381,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor(new",{"_index":380,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":372,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.w3ctracecontextpropagatorservice.getpropagator",{"_index":250,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.zipkinconfig",{"_index":664,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1309,"title":{},"body":{"license.html":{}}}],["through",{"_index":1173,"title":{},"body":{"license.html":{}}}],["throw",{"_index":188,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":137,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["timeout",{"_index":1151,"title":{},"body":{"index.html":{}}}],["timeoutmillis",{"_index":143,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["title",{"_index":1410,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1508,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":191,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1426,"title":{},"body":{"license.html":{}}}],["touppercase",{"_index":526,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["trace",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["traced",{"_index":157,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["tracedreq",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":356,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":329,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["tracerprovider",{"_index":300,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":1024,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1270,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1389,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1348,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1387,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1308,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1222,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1223,"title":{},"body":{"license.html":{}}}],["tree",{"_index":597,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["trouble",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":1003,"title":{},"body":{"index.html":{}}}],["true",{"_index":330,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":1154,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":1146,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":1082,"title":{},"body":{"index.html":{}}}],["two",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":1152,"title":{},"body":{"index.html":{}}}],["types",{"_index":1228,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1158,"title":{},"body":{"index.html":{}}}],["typo",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":182,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1186,"title":{},"body":{"license.html":{}}}],["underscore",{"_index":544,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["union",{"_index":1181,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1376,"title":{},"body":{"license.html":{}}}],["unset",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1124,"title":{},"body":{"index.html":{}}}],["update",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":128,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":520,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":521,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":518,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":533,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":536,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":525,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":537,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urls",{"_index":152,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["use",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":24,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":1071,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":1096,"title":{},"body":{"index.html":{}}}],["useless",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":994,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":185,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1418,"title":{},"body":{"license.html":{}}}],["value",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valueprovider",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":620,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["variable",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1513,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1261,"title":{},"body":{"license.html":{}}}],["verify",{"_index":333,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["version",{"_index":676,"title":{},"body":{"changelog.html":{},"license.html":{},"properties.html":{}}}],["version.json",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":1039,"title":{},"body":{"index.html":{}}}],["void",{"_index":325,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["w3c",{"_index":238,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["w3ctracecontext",{"_index":1062,"title":{},"body":{"index.html":{}}}],["w3ctracecontextpropagator",{"_index":653,"title":{},"body":{"injectables/W3CTraceContextPropagatorService.html":{}}}],["w3ctracecontextpropagatormodule",{"_index":651,"title":{"modules/W3CTraceContextPropagatorModule.html":{}},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["w3ctracecontextpropagatorservice",{"_index":232,"title":{"injectables/W3CTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["wait",{"_index":140,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["want",{"_index":1117,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1092,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1004,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1406,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1400,"title":{},"body":{"license.html":{}}}],["web",{"_index":357,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["webtracer.component",{"_index":636,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.component.ts",{"_index":600,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["webtracer.component.ts:13",{"_index":607,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.component.ts:25",{"_index":608,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.module.ts",{"_index":633,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.module.ts:34",{"_index":634,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer/otel",{"_index":599,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["webtracerprovider",{"_index":341,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1359,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1196,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1246,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":539,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1284,"title":{},"body":{"license.html":{}}}],["without",{"_index":1128,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1229,"title":{},"body":{"license.html":{}}}],["works",{"_index":923,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1289,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1279,"title":{},"body":{"license.html":{}}}],["written",{"_index":1262,"title":{},"body":{"license.html":{}}}],["x",{"_index":1065,"title":{},"body":{"index.html":{}}}],["xml",{"_index":1015,"title":{},"body":{"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":1078,"title":{},"body":{"index.html":{}}}],["xray",{"_index":8,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["xsrf",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":1130,"title":{},"body":{"index.html":{}}}],["yes",{"_index":578,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["you're",{"_index":1080,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1490,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":144,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":145,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":166,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IgnoreUrlsConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":660,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":667,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":655,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":657,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":344,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["zone.js",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":340,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":629,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AwsXrayPropagatorModule.html":{"url":"modules/AwsXrayPropagatorModule.html","title":"module - AwsXrayPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsXrayPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\nimport { AwsXrayPropagatorService } from './aws-xray-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: AwsXrayPropagatorService }\n  ]\n})\nexport class AwsXrayPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsXrayPropagatorService.html":{"url":"injectables/AwsXrayPropagatorService.html","title":"injectable - AwsXrayPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsXrayPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AwsXrayPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an AwsXrayPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as AwsXrayPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { AWSXRayPropagator } from '@opentelemetry/propagator-aws-xray';\n/**\n * AwsXrayPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AwsXrayPropagatorService implements IPropagator {\n  /**\n   * Return an AwsXrayPropagator\n   *\n   * @return TextMapPropagator as AwsXrayPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new AWSXRayPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            multiHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        defineB3Encoding\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:43\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:55\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        b3PropagatorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         B3PropagatorConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                        \n                    \n\n            \n                \n                    B3PropagatorConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   *\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   *\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exportTimeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxExportBatchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxQueueSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scheduledDelayMillis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            console\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            probabilitySampler\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, w3cTraceContextPropagatorService: W3CTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService, awsXrayPropagatorService: AwsXrayPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w3cTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        W3CTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsXrayPropagatorService\n                                                  \n                                                        \n                                                                        AwsXrayPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { W3CTraceContextPropagatorService } from '../w3c-trace-context-propagator/w3c-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\nimport { AwsXrayPropagatorService } from '../aws-xray-propagator/aws-xray-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(W3CTraceContextPropagatorService)\n    private w3cTraceContextPropagatorService: W3CTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService,\n    @Inject(AwsXrayPropagatorService)\n    private awsXrayPropagatorService: AwsXrayPropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   *\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.w3cTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n        this.awsXrayPropagatorService.getPropagator()\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:16\n                \n            \n\n\n            \n                \n                    To add Attributes in a Span during interception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpRequest\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpResponse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Span } from '@opentelemetry/api';\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   *\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getExporter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTEL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getPropagator\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   *\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTEL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IgnoreUrlsConfig.html":{"url":"interfaces/IgnoreUrlsConfig.html","title":"interface - IgnoreUrlsConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IgnoreUrlsConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for IgnoreUrlsConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            urls\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        urls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        urls:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    URLs that partially match any regex in ignoreUrls will not be traced.\nIn addition, URLs that are exact matches of strings in ignoreUrls will\nalso not be traced.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, instrumentationOptions: InstrumentationOption[])\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        instrumentationOptions\n                                                  \n                                                        \n                                                                    InstrumentationOption[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:128\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:138\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initInstrumentation\n                        \n                    \n                \n            \n            \n                \n                    \n                    initInstrumentation()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:65\n                \n            \n\n\n            \n                \n                    Init instrumentation on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:96\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:82\n                \n            \n\n\n            \n                \n                    Verify to insert or not a Span Exporter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:111\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ZoneContextManager()\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:36\n                        \n                    \n\n            \n                \n                    contextManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tracerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:31\n                        \n                    \n\n            \n                \n                    tracerProvider\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationOption, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport {\n  AlwaysOffSampler,\n  AlwaysOnSampler,\n  ParentBasedSampler,\n  Sampler,\n  TraceIdRatioBasedSampler,\n  WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor, BatchSpanProcessor, NoopSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { OTEL_CONFIG, OpenTelemetryConfig, OTEL_INSTRUMENTATION_PLUGINS } from '../../configuration/opentelemetry-config';\nimport { OTEL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\n\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider: WebTracerProvider;\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * Constructor\n   *\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Inject(OTEL_INSTRUMENTATION_PLUGINS)\n    private instrumentationOptions: InstrumentationOption[]) {\n    this.tracerProvider = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(this.config.commonConfig.probabilitySampler)),\n      resource: Resource.default().merge(\n        new Resource({\n          [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n        })\n      ),\n    });\n  }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.insertOrNotSpanExporter(this.config.commonConfig.production, this.exporterService, this.config.commonConfig.console);\n\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator()\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentationOptions,\n      tracerProvider: this.tracerProvider,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n  private insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean) {\n    if (this.exporterService.getExporter() !== undefined) {\n      this.insertSpanProcessorProductionMode(production, exporter);\n      this.insertConsoleSpanExporter(console);\n    } else {\n      this.tracerProvider.addSpanProcessor(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   *\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracerProvider.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   *\n   * @param boolean production\n   * @param IExporter exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ) {\n    this.tracerProvider.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(exporter.getExporter())\n        : new SimpleSpanProcessor(exporter.getExporter())\n    );\n  }\n\n  /**\n   * convert String to Number (or undefined)\n   *\n   * @param value\n   * @returns number or undefined\n   */\n  private convertStringToNumber(value: string): number {\n    return value !== undefined ? Number(value) : undefined;\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an JaegerPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerPropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                        \n                    \n\n            \n                \n                    custom Header\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\nimport { OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerPropagator\n   *\n   * @return TextMapPropagator as JaegerPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerPropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopSpanExporterModule.html":{"url":"modules/NoopSpanExporterModule.html","title":"module - NoopSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopSpanExporterService } from './noop-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: NoopSpanExporterService }\n  ]\n})\nexport class NoopSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopSpanExporterService.html":{"url":"injectables/NoopSpanExporterService.html","title":"injectable - NoopSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopSpanExporterService\nA No-op span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return undefined\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * NoopSpanExporterService\n * A No-op span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopSpanExporterService implements IExporter {\n  /**\n   * Return undefined\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return null\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return null\n   *\n   * @return TextMapPropagator as null\n   */\n  getPropagator(): TextMapPropagator {\n    return null;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b3PropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSpanProcessorConfig\n                                        \n                                \n                                \n                                        \n                                            commonConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ignoreUrls\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jaegerPropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otelcolConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipkinConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreUrls\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ignoreUrls:         IgnoreUrlsConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IgnoreUrlsConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    ignoreUrls\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:61\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator injected\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define logger\n\n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customSpan interface to add attributes\n\n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                encapsulates all calls to DOM APIs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:286\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:269\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:164\n                \n            \n\n\n            \n                \n                    Get current scheme, hostname and port\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:173\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        injectContextAndHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:205\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:237\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOrNotSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:225\n                \n            \n\n\n            \n                \n                    Verify to insert or not a Span Exporter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:249\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:110\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCustomSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCustomSpan(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:298\n                \n            \n\n\n            \n                \n                    Set custom attributes in span with a CustomSpan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        Span\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StackContextManager\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:57\n                        \n                    \n\n            \n                \n                    context manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:61\n                        \n                    \n\n            \n                \n                    Log or not body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:53\n                        \n                    \n\n            \n                \n                    tracer\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Span, SpanStatusCode, DiagLogger } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/sdk-trace-web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  NoopSpanProcessor,\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n  Sampler,\n  BufferConfig\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  isUrlIgnored\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes, SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../configuration/opentelemetry-config';\nimport infoLibrary from '../../version.json';\nimport { OTEL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTEL_LOGGER, OTEL_CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   *\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator injected\n   * @param logger define logger\n   * @param customSpan a customSpan interface to add attributes\n   * @param platformLocation encapsulates all calls to DOM APIs\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTEL_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(OTEL_CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n      resource: Resource.default().merge(\n        new Resource({\n          [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n        })\n      ),\n    });\n    this.insertOrNotSpanExporter();\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   *\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    if (isUrlIgnored(request.url, this.config.ignoreUrls?.urls)) {\n      return next.handle(request);\n    }\n    this.contextManager.disable(); //FIX - reinit contextManager for each http call\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.UNSET\n          });\n          this.setCustomSpan(span, request, event);\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n          this.setCustomSpan(span, request, event);\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   *\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(infoLibrary.name, infoLibrary.version)\n      .startSpan(\n        `${urlRequest.protocol.replace(':', '').toUpperCase()} ${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            [SemanticAttributes.HTTP_METHOD]: request.method,\n            [SemanticAttributes.HTTP_URL]: request.urlWithParams,\n            [SemanticAttributes.HTTP_HOST]: urlRequest.host,\n            [SemanticAttributes.HTTP_SCHEME]: urlRequest.protocol.replace(':', ''),\n            [SemanticAttributes.HTTP_TARGET]: urlRequest.pathname + urlRequest.search,\n            [SemanticAttributes.HTTP_USER_AGENT]: window.navigator.userAgent\n          },\n          kind: api.SpanKind.CLIENT,\n        },\n        this.contextManager.active()\n      );\n    /*eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_currentContext\"] }]*/\n    this.contextManager._currentContext = api.trace.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   *\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n  private insertOrNotSpanExporter() {\n    if(this.exporterService.getExporter()!==undefined) {\n      this.insertSpanProcessorProductionMode();\n      this.insertConsoleSpanExporter();\n    } else {\n      this.tracer.addSpanProcessor(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    };\n    this.tracer.addSpanProcessor(\n      this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter())\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n    return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configProvider\n                                    \n                                            ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n    ): ModuleWithProviders {\n\n      //Interceptor\n      const interceptorProvider = {\n        provide: HTTP_INTERCEPTORS,\n        useClass: OpenTelemetryHttpInterceptor,\n        multi: true,\n      };\n\n      configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        configProvider,\n        interceptorProvider,\n      ],\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: OtelcolExporterService },\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            concurrencyLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        concurrencyLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concurrencyLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An optional limit on pending requests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum time the OTLP exporter will wait for each batch export.\nThe default value is 10000ms.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:4318/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OtelWebTracerComponent.html":{"url":"components/OtelWebTracerComponent.html","title":"component - OtelWebTracerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OtelWebTracerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Otel Web Tracer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                otel-instrumentation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentationService: InstrumentationService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentationService\n                                                  \n                                                        \n                                                                        InstrumentationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                InstrumentationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:25\n                \n            \n\n\n            \n                \n                    Init Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InstrumentationService } from '../../services/instrumentation/instrumentation.service';\n\n\n/**\n * Otel Web Tracer Component\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'otel-instrumentation',\n  template: '',\n})\nexport class OtelWebTracerComponent implements OnInit {\n\n  /**\n   * Constructor\n   *\n   * @param instrumentationService InstrumentationService\n   */\n  constructor(private instrumentationService: InstrumentationService) { }\n\n  /**\n   * Init Component\n   */\n  ngOnInit(): void {\n   this.instrumentationService.initInstrumentation();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OtelWebTracerComponent', 'selector': 'otel-instrumentation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OtelWebTracerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configProvider\n                                    \n                                            ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { OtelWebTracerComponent } from './component/otel-webtracer/otel-webtracer.component';\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\n@NgModule({\n  declarations: [OtelWebTracerComponent],\n  exports: [OtelWebTracerComponent]\n})\nexport class OtelWebTracerModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ModuleWithProviders {\n\n    configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        configProvider,\n        InstrumentationService\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:44\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        otelcolConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OTLPExporterConfigBase\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                        \n                    \n\n            \n                \n                    CollectorExporterConfigBase\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG\n} from '../../../configuration/opentelemetry-config';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http';\nimport { OTLPExporterConfigBase } from '@opentelemetry/otlp-exporter-base';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: OTLPExporterConfigBase;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      concurrencyLimit: Number(config.otelcolConfig?.concurrencyLimit),\n      timeoutMillis: Number(config.otelcolConfig?.timeoutMillis)\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   *\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new OTLPTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/W3CTraceContextPropagatorModule.html":{"url":"modules/W3CTraceContextPropagatorModule.html","title":"module - W3CTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    W3CTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { W3CTraceContextPropagatorService } from './w3c-trace-context-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: W3CTraceContextPropagatorService }\n  ]\n})\nexport class W3CTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/W3CTraceContextPropagatorService.html":{"url":"injectables/W3CTraceContextPropagatorService.html","title":"injectable - W3CTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  W3CTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                W3CTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts:18\n                \n            \n\n\n            \n                \n                    Return an W3CTraceContextPropagatorService\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as W3CTraceContextPropagatorService\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n/**\n * W3CTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class W3CTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an W3CTraceContextPropagatorService\n   *\n   * @return TextMapPropagator as W3CTraceContextPropagatorService\n   */\n  getPropagator(): TextMapPropagator {\n    return new W3CTraceContextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n  /**\n   * Maximum time the OTLP exporter will wait for each batch export.\n   * The default value is 10000ms.\n   * */\n   timeoutMillis?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n\n/**\n * Configuration for IgnoreUrlsConfig\n */\n export interface IgnoreUrlsConfig {\n  /**\n   * URLs that partially match any regex in ignoreUrls will not be traced.\n   * In addition, URLs that are _exact matches_ of strings in ignoreUrls will\n   * also not be traced.\n   */\n  urls?: Array;\n}\n\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** ignoreUrls */\n  ignoreUrls?: IgnoreUrlsConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        zipkinConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExporterConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                        \n                    \n\n            \n                \n                    zipkinConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { OpenTelemetryConfig, OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n1.3.0-1 (2022-12-31)\nBug Fixes\n\nbad url in readme (640d901)\ndeprecated package (8442349)\nreadme (24f4d6f)\nremove NoopTextMapPropagator (7f3aba9)\n\n1.3.0 (2022-12-18)\n1.2.0-1 (2022-09-25)\nBug Fixes\n\npeerDependencies (5a29d29)\n\n1.2.0 (2022-09-02)\nBug Fixes\n\nupdate api (7023a31)\n\n1.1.0-2 (2022-07-19)\nFeatures\n\nadd config to ignore urls in interceptor (6763f97)\n\nBug Fixes\n\nimport isUrlIgnored (c36e295)\n\n1.1.0-1 (2022-06-22)\nBug Fixes\n\nremove useless os dependence (97579f0)\n\n1.1.0 (2022-05-27)\nFeatures\n\nremove instrumentation plugin and rename token (#106) (59ac6ca)\n\nBug Fixes\n\npackage-lock.json (e9dc64b)\n\n1.0.1 (2021-12-03)\nFeatures\n\nadd config provider for external config (7bbaf2e)\nadd example in instrumentation (e29c839)\n\n1.0.0 (2021-11-09)\n0.25.0-2 (2021-10-24)\nBug Fixes\n\nreview aws propagator integration (4fcec62)\ntest (3ae307e)\n\n0.25.0-1 (2021-10-01)\nBug Fixes\n\nissue#80: old reference package (ee08e85), closes issue#80\n\n0.25.0 (2021-09-17)\nFeatures\n\nupdate collector and add new default http port collector (4318) (5a7c375)\n\nBug Fixes\n\nadd test for instrumentation (23e35d1)\npeer dependencies version number (41c8947)\nreturn to 0.24.0 in document-load to release (1f22380)\n\n0.24.0-1 (2021-08-04)\nBug Fixes\n\nbad version on peerDependencies (c2b4209)\n\n0.24.0 (2021-08-01)\n0.23.0 (2021-07-08)\n0.22.0 (2021-06-17)\nBug Fixes\n\nreadme (a6307f2)\n\n0.21.0 (2021-06-11)\n0.20.0 (2021-06-07)\nFeatures\n\nadd concurencyLimit (40f33cc)\n\nBug Fixes\n\nspan.kind to client value and status.code to unset (#51) (b3e15af)\nissue#41: add custom dynamic span attributes (1c7c0c0), closes issue#41\n\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n            \n            component\n            OtelWebTracerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            IgnoreUrlsConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            defineConfigProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_INSTRUMENTATION_PLUGINS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTEL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n            \n            injectable\n            NoopSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n            \n            injectable\n            AwsXrayPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTEL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n            \n            injectable\n            W3CTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-devkit/core : ^13.3.10\n        \n            @angular/animations : ^13.3.12\n        \n            @angular/cdk : ^13.3.9\n        \n            @angular/common : ^13.3.12\n        \n            @angular/compiler : ^13.3.12\n        \n            @angular/core : ^13.3.12\n        \n            @angular/forms : ^13.3.12\n        \n            @angular/material : ^13.3.9\n        \n            @angular/platform-browser : ^13.3.12\n        \n            @angular/platform-browser-dynamic : ^13.3.12\n        \n            @angular/router : ^13.3.12\n        \n            ngx-highlight-js : ^13.0.0\n        \n            ngx-logger : 5.0.11\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nUse Angular >= 13.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nExternal Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\nInjection token\n\n\nComponent otel-instrumentation\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with web plugins (You need to install and configure it) like : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n...\n\n\n\nInstallation\nWith npm :\nnpm i @jufab/opentelemetry-angular-interceptorConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n}Example global Configuration\nFrom the interceptor-example\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nbackendApp.get('/api/config', (req,res) => {\n  return res.status(200).send({\n    commonConfig: {\n      console: true, // Display trace on console\n      production: true, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: 99 //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', // URL of opentelemetry collector\n    }\n  });\n})\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:4318/v1/traces)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\nconcurrencyLimit (string) : An optional limit on pending requests (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\ntimeoutMillis (string): Maximum time the OTLP exporter will wait for each batch export. The default value is 10000ms (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/exporter-trace-otlp-http)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : hhttps://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nExternal Configuration\nInstrumentation example project have an external configuration to show how you can do it.\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 4 exporters:\n\nNoopSpanExporterModule : This a fake exporter\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 6 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nW3CTraceContextPropagatorModule : Use W3CTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nAwsXrayPropagatorModule : Use AWS X-Ray propagator\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation.\nYou need to provide Web instrumentation on the OTEL_INSTRUMENTATION_PLUGINS token in providers section of NgModule\nExample in instrumentation-example project\n...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [\n    {provide: OTEL_INSTRUMENTATION_PLUGINS, useValue: [new XMLHttpRequestInstrumentation()]}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nInjection token\nThis library exposes injection token.\nYou can use them to override or customize. \n\nOTEL_EXPORTER : token to inject an implementation of IExporter\nOTEL_PROPAGATOR : token to inject an implementation of IPropagator\nOTEL_CONFIG : token to inject an OpenTelemetryConfig\nOTEL_INSTRUMENTATION_PLUGINS : token to inject an InstrumentationOption array\nOTEL_LOGGER : more info in (Optional) Logging in OtelColExporterModule\nOTEL_CUSTOM_SPAN : more infor in (Optional) Add span attributes during interception\n\nComponent otel-instrumentation\nA component named otel-instrumentation must be add in your application.\nIn instrumentation-example, this component is in app.component.html like this :\n...\n\n...there is no configuration/directive need : all is in OtelWebTracerModule\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTEL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTEL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n\nspan : Current span, you can set or get attributes\nrequest : Current request in interceptor\nresponse : Current response in interceptor\n\nImplement CustomSpan class like : \nclass CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with OTEL_CUSTOM_SPAN :\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]\nYou can see an example in the interceptor-example.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nnpm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nnpm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AwsXrayPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        W3CTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.3.0-1\n        \n            Homepage : https://github.com/jufab/opentelemetry-angular-interceptor\n        \n            Author : Julien Fabre\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add more configuration for OpenTelemetry-collector : See here  \n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here\n\n\n Prepare baggage here\n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defineConfigProvider   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CONFIG   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTEL_INSTRUMENTATION_PLUGINS   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defineConfigProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('opentelemetry.config')\n                    \n                \n\n            \n                \n                    OTEL_CONFIG : Config injection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CUSTOM_SPAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.custom-span')\n                    \n                \n\n            \n                \n                    custom span\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_INSTRUMENTATION_PLUGINS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.instrumentation.plugins')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.logger')\n                    \n                \n\n            \n                \n                    Logger : injection for a logger compatible\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_EXPORTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.exporter')\n                    \n                \n\n            \n                \n                    injection for a Exporter\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_PROPAGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.propagator')\n                    \n                \n\n            \n                \n                    injection for a propagator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
