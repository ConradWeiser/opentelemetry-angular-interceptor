var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/B3PropagatorConfig.html",[0,0.513,1,1.247]],["body/interfaces/B3PropagatorConfig.html",[0,0.907,1,2.149,2,0.93,3,0.185,4,0.185,5,0.138,6,0.138,7,1.136,8,1.136,9,0.476,10,1.698,11,0.442,12,1.27,13,1.011,14,2.301,15,2.245,16,0.549,17,0.026,18,2.005,19,2.082,20,1.599,21,1.547,22,1.543,23,1.646,24,1.775,25,1.19,26,0.277,27,1.136,28,0.185,29,1.136,30,1.908,31,1.775,32,0.672,33,0.93,34,1.309,35,1.218,36,1.136,37,0.44,38,1.547,39,1.775,40,0.512,41,0.993,42,0.745,43,1.708,44,2.519,45,1.547,46,1.062,47,1.309,48,1.309,49,1.775,50,1.547,51,0.993,52,1.062,53,1.233,54,1.136,55,1.218,56,1.547,57,1.218,58,0.993,59,1.876,60,1.775,61,1.404,62,1.309,63,1.775,64,1.218,65,1.656,66,1.218,67,1.309,68,1.876,69,1.775,70,1.218,71,2.094,72,1.218,73,1.218,74,1.218,75,1.656,76,1.218,77,1.218,78,1.218,79,1.136,80,1.218,81,1.218,82,1.218,83,1.218,84,1.062,85,1.136,86,1.218,87,1.218,88,1.136,89,1.218,90,1.136,91,0.993,92,1.547,93,2.005,94,1.309,95,1.868,96,2.005,97,1.218,98,1.599,99,0.872,100,1.218,101,1.218,102,1.218,103,1.136,104,0.993,105,1.547,106,1.218,107,1.309,108,2.132,109,0.872,110,1.136,111,0.916,112,1.775,113,1.656,114,1.656,115,1.218,116,0.718,117,1.447,118,1.708,119,0.672,120,0.703,121,1.218,122,1.447,123,1.136,124,0.993,125,1.218,126,0.993,127,1.218,128,0.014,129,0.014]],["title/modules/B3PropagatorModule.html",[130,1.332,131,2.298]],["body/modules/B3PropagatorModule.html",[3,0.332,4,0.332,5,0.247,6,0.247,17,0.026,26,0.385,28,0.332,37,0.332,128,0.021,129,0.021,131,3.932,132,1.561,133,3.646,134,3.278,135,2.983,136,2.28,137,2.813,138,2.034,139,3.579,140,3.278,141,2.738,142,2.441,143,2.034,144,1.901,145,2.034,146,1.901,147,1.778,148,2.034,149,0.852]],["title/injectables/B3PropagatorService.html",[139,2.091,150,0.738]],["body/injectables/B3PropagatorService.html",[1,2.323,3,0.228,4,0.228,5,0.169,6,0.299,9,0.916,10,1.292,11,0.543,12,1.47,13,0.992,15,2.019,16,1.057,17,0.026,18,2.38,19,2.227,20,2.175,21,2.305,23,1.806,25,1.378,26,0.35,28,0.228,32,0.826,37,0.228,40,0.863,99,1.47,111,1.41,116,1.486,119,0.826,120,0.503,128,0.017,129,0.017,133,4.421,134,3.974,139,3.452,140,2.251,143,1.397,149,0.585,150,0.992,151,1.397,152,1.881,153,2.81,154,3.088,155,3.9,156,3.166,157,1.292,158,3.921,159,4.607,160,3.168,161,2.187,162,1.881,163,1.486,164,4.607,165,1.791,166,4.607,167,3.358,168,2.81,169,4.452,170,1.292,171,5.928,172,3.358,173,1.758,174,3.32,175,1.61,176,1.916,177,2.504,178,1.61,179,1.397,180,1.397,181,1.221,182,2.209,183,2.251,184,3.358,185,3.358,186,3.358,187,3.358,188,3.358,189,3.358]],["title/interfaces/BatchSpanProcessorConfig.html",[0,0.513,68,1.247]],["body/interfaces/BatchSpanProcessorConfig.html",[0,0.894,1,1.955,2,0.886,3,0.177,4,0.177,5,0.131,6,0.131,7,1.082,8,1.082,9,0.453,10,1.675,11,0.421,12,1.226,13,1.313,14,1.16,15,2.298,16,1.013,17,0.026,18,1.493,19,1.66,20,1.308,21,1.011,22,1.365,23,1.457,24,1.16,25,0.778,26,0.269,27,1.082,28,0.177,29,1.082,30,1.841,31,1.713,32,0.64,33,0.886,34,1.247,35,1.16,36,1.082,37,0.444,38,1.493,39,1.713,40,0.487,41,0.946,42,0.719,43,1.66,44,2.485,45,1.493,46,1.011,47,1.247,48,1.247,49,1.713,50,1.493,51,0.946,52,1.011,53,1.199,54,1.082,55,1.16,56,1.493,57,1.16,58,0.946,59,1.833,60,1.713,61,1.365,62,1.247,63,1.713,64,1.16,65,1.597,66,1.16,67,1.841,68,1.955,69,2.248,70,1.713,71,2.51,72,1.713,73,1.713,74,1.713,75,2.341,76,1.713,77,1.713,78,1.713,79,2.097,80,1.713,81,1.713,82,1.713,83,1.713,84,1.493,85,2.097,86,1.713,87,1.713,88,1.597,89,1.713,90,2.097,91,0.946,92,1.493,93,1.959,94,1.247,95,1.831,96,1.959,97,1.16,98,1.555,99,0.83,100,1.16,101,1.16,102,1.16,103,1.082,104,0.946,105,1.493,106,1.16,107,1.247,108,2.09,109,0.83,110,1.082,111,0.884,112,1.713,113,1.597,114,1.597,115,1.16,116,0.683,117,1.397,118,1.66,119,0.64,120,0.684,121,1.16,122,1.397,123,1.082,124,0.946,125,1.16,126,0.946,127,1.16,128,0.014,129,0.014]],["title/interfaces/CommonCollectorConfig.html",[0,0.513,38,1.332]],["body/interfaces/CommonCollectorConfig.html",[0,0.889,1,1.94,2,0.869,3,0.173,4,0.173,5,0.129,6,0.129,7,1.061,8,1.061,9,0.445,10,1.665,11,0.413,12,1.208,13,1.348,14,1.138,15,2.249,16,1.123,17,0.026,18,1.471,19,1.641,20,1.289,21,0.992,22,1.35,23,1.44,24,1.138,25,0.763,26,0.266,27,1.061,28,0.173,29,1.061,30,1.815,31,2.227,32,0.628,33,0.869,34,1.223,35,1.138,36,1.575,37,0.435,38,1.754,39,2.492,40,0.709,41,1.377,42,0.935,43,2.16,44,2.73,45,2.172,46,1.471,47,1.815,48,1.815,49,2.492,50,1.941,51,1.377,52,1.471,53,1.312,54,2.077,55,1.689,56,1.754,57,2.227,58,0.928,59,1.816,60,1.689,61,1.35,62,1.223,63,1.689,64,1.138,65,1.575,66,1.138,67,1.223,68,1.816,69,1.689,70,1.138,71,2.013,72,1.138,73,1.138,74,1.138,75,1.575,76,1.138,77,1.138,78,1.138,79,1.061,80,1.138,81,1.138,82,1.138,83,1.138,84,0.992,85,1.061,86,1.138,87,1.138,88,1.061,89,1.138,90,1.061,91,0.928,92,1.471,93,1.941,94,1.223,95,1.816,96,1.941,97,1.138,98,1.537,99,0.814,100,1.138,101,1.138,102,1.138,103,1.061,104,0.928,105,1.471,106,1.138,107,1.223,108,2.073,109,0.814,110,1.061,111,0.872,112,1.689,113,1.575,114,1.575,115,1.138,116,0.67,117,1.377,118,1.641,119,0.628,120,0.676,121,1.138,122,1.377,123,1.061,124,0.928,125,1.138,126,0.928,127,1.138,128,0.014,129,0.014]],["title/modules/CompositePropagatorModule.html",[130,1.332,190,2.298]],["body/modules/CompositePropagatorModule.html",[3,0.332,4,0.332,5,0.247,6,0.247,17,0.026,26,0.385,28,0.332,37,0.332,128,0.021,129,0.021,132,1.561,135,2.983,136,2.28,137,2.813,138,2.034,141,2.738,142,2.441,143,2.034,144,1.901,145,2.034,146,1.901,147,1.778,148,2.034,149,0.852,190,3.932,191,3.646,192,3.646,193,3.932,194,3.646]],["title/injectables/CompositePropagatorService.html",[150,0.738,193,2.298]],["body/injectables/CompositePropagatorService.html",[3,0.266,4,0.266,5,0.197,6,0.286,9,0.682,11,0.633,13,0.842,16,0.786,17,0.026,26,0.385,28,0.266,32,0.963,37,0.266,40,0.733,42,1.127,120,0.586,128,0.018,129,0.018,134,2.623,139,3.904,140,2.623,141,3.179,143,1.628,149,0.682,150,1.098,151,1.628,152,2.191,156,2.935,157,1.431,160,3.369,161,2.503,163,1.34,165,1.521,170,1.097,173,1.687,174,3.494,175,1.876,176,2.123,179,1.628,180,1.628,181,1.423,191,4.234,192,4.234,193,4.033,195,3.913,196,3.976,197,3.976,198,3.913,199,3.913,200,6.399,201,2.387,202,2.207,203,2.638,204,2.623,205,2.191,206,2.623,207,3.913,208,3.913,209,3.913,210,3.313,211,3.913,212,3.913,213,3.913]],["title/modules/ConsoleSpanExporterModule.html",[130,1.332,214,2.298]],["body/modules/ConsoleSpanExporterModule.html",[3,0.331,4,0.331,5,0.246,6,0.246,17,0.026,26,0.384,28,0.331,37,0.331,43,1.774,53,1.539,128,0.021,129,0.021,132,1.557,136,2.277,137,2.809,138,2.03,144,1.896,145,2.03,146,1.896,147,1.774,148,2.03,149,0.85,214,3.927,215,3.638,216,3.638,217,3.927,218,3.638,219,2.809,220,2.732]],["title/injectables/ConsoleSpanExporterService.html",[150,0.738,217,2.298]],["body/injectables/ConsoleSpanExporterService.html",[3,0.309,4,0.309,5,0.23,6,0.284,9,0.794,11,0.737,17,0.026,22,1.681,26,0.36,28,0.309,37,0.309,42,0.853,53,1.671,120,0.682,128,0.02,129,0.02,149,0.794,150,1.21,151,1.895,157,1.576,163,1.197,170,1.277,173,1.784,179,1.895,180,1.895,181,1.657,215,4.19,217,4.264,220,2.551,221,3.054,222,2.694,223,4.264,224,4.556,225,4.744,226,4.38,227,2.694,228,2.355,229,2.355]],["title/interfaces/CustomSpan.html",[0,0.513,33,1.168]],["body/interfaces/CustomSpan.html",[0,0.959,2,1.447,3,0.288,4,0.288,5,0.214,6,0.271,9,0.937,11,0.687,13,0.914,16,0.854,17,0.026,26,0.318,32,1.045,33,1.832,37,0.288,40,0.796,52,2.412,53,1.831,61,1.956,98,2.113,128,0.019,129,0.019,157,1.508,163,1.116,165,1.651,170,1.191,181,1.956,182,2.83,230,4.554,231,3.596,232,4.554,233,4.011,234,4.554,235,4.159,236,4.877,237,4.877,238,4.627,239,4.247,240,4.554,241,4.554,242,2.847]],["title/modules/HttpTraceContextPropagatorModule.html",[130,1.332,243,2.298]],["body/modules/HttpTraceContextPropagatorModule.html",[3,0.327,4,0.327,5,0.243,6,0.243,17,0.026,26,0.383,28,0.327,37,0.327,42,1.17,128,0.021,129,0.021,132,1.539,135,2.943,136,2.262,137,2.79,138,2.007,141,2.701,142,2.421,143,2.007,144,1.875,145,2.007,146,1.875,147,1.754,148,2.007,149,0.841,196,3.55,202,1.875,203,3.23,204,3.233,243,3.9,244,3.597]],["title/injectables/HttpTraceContextPropagatorService.html",[150,0.738,196,2.091]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.306,4,0.306,5,0.227,6,0.282,9,0.785,11,0.729,17,0.026,26,0.374,28,0.306,32,1.109,37,0.306,42,1.187,120,0.675,128,0.02,129,0.02,143,1.875,149,0.785,150,1.202,151,1.875,152,2.524,157,1.565,160,3.549,163,1.184,170,1.264,173,1.777,174,3.648,176,2.323,179,1.875,180,1.875,181,1.639,196,3.867,201,2.75,203,3.277,204,3.742,244,4.163,245,3.817,246,6.638]],["title/interfaces/IExporter.html",[0,0.513,227,1.643]],["body/interfaces/IExporter.html",[0,0.919,2,1.579,3,0.315,4,0.315,5,0.234,6,0.287,9,0.808,11,0.75,17,0.026,22,1.699,26,0.335,27,1.928,28,0.315,37,0.385,42,0.868,99,1.813,117,1.686,118,1.686,120,0.694,128,0.02,129,0.02,157,1.592,163,1.218,170,1.3,173,1.3,219,2.222,222,3.148,223,4.29,226,4.537,227,2.723,228,2.396,229,2.396,247,3.456,248,4.635,249,4.235,250,5.679,251,3.924]],["title/interfaces/IPropagator.html",[0,0.513,176,1.426]],["body/interfaces/IPropagator.html",[0,0.925,2,1.6,3,0.319,4,0.319,5,0.237,6,0.289,9,0.818,11,0.76,17,0.026,26,0.338,27,1.954,28,0.319,32,1.155,37,0.388,99,1.827,109,2.104,117,1.708,118,1.708,120,0.703,128,0.021,129,0.021,142,1.954,157,1.605,160,3.6,163,1.234,170,1.317,173,1.317,174,3.458,176,2.382,249,4.269,252,3.502,253,4.696,254,4.847,255,5.725,256,3.976]],["title/interfaces/InstrumentationConfig.html",[0,0.513,59,1.247]],["body/interfaces/InstrumentationConfig.html",[0,0.901,1,1.976,2,0.909,3,0.181,4,0.181,5,0.135,6,0.135,7,1.111,8,1.111,9,0.465,10,1.687,11,0.432,12,1.249,13,1.263,14,1.191,15,2.201,16,0.931,17,0.026,18,1.521,19,1.685,20,1.333,21,1.038,22,1.386,23,1.479,24,1.191,25,0.799,26,0.274,27,1.111,28,0.181,29,1.111,30,1.876,31,1.746,32,0.657,33,0.909,34,1.28,35,1.191,36,1.111,37,0.439,38,1.521,39,1.746,40,0.5,41,0.971,42,0.733,43,1.685,44,2.712,45,1.521,46,1.038,47,1.28,48,1.28,49,1.746,50,1.521,51,0.971,52,1.038,53,1.217,54,1.111,55,1.191,56,1.521,57,1.191,58,1.423,59,1.976,60,2.533,61,1.699,62,1.876,63,2.533,64,1.746,65,2.362,66,1.746,67,1.28,68,1.856,69,1.746,70,1.191,71,2.067,72,1.191,73,1.191,74,1.191,75,1.628,76,1.191,77,1.191,78,1.191,79,1.111,80,1.191,81,1.191,82,1.191,83,1.191,84,1.038,85,1.111,86,1.191,87,1.191,88,1.111,89,1.191,90,1.111,91,0.971,92,1.521,93,1.984,94,1.28,95,1.851,96,1.984,97,1.191,98,1.578,99,0.852,100,1.191,101,1.191,102,1.191,103,1.111,104,0.971,105,1.521,106,1.191,107,1.28,108,2.112,109,0.852,110,1.111,111,0.901,112,1.746,113,1.628,114,1.628,115,1.191,116,0.701,117,1.423,118,1.685,119,0.657,120,0.694,121,1.191,122,1.423,123,1.111,124,0.971,125,1.191,126,0.971,127,1.191,128,0.014,129,0.014]],["title/injectables/InstrumentationService.html",[150,0.738,257,2.091]],["body/injectables/InstrumentationService.html",[3,0.147,4,0.147,5,0.11,6,0.304,9,0.713,10,0.94,11,0.351,12,1.07,13,1.13,15,1.693,16,1.136,17,0.026,22,1.224,23,1.468,25,1.224,26,0.374,28,0.147,32,0.534,37,0.147,40,0.984,41,1.219,42,0.628,43,1.991,44,2.277,45,2.042,53,1.209,58,1.91,59,1.91,61,1.003,64,1.495,65,0.904,66,1.495,99,1.07,109,0.693,111,1.059,116,1.485,119,0.534,120,0.869,128,0.012,129,0.012,142,0.904,149,0.379,150,0.721,151,0.904,156,3.484,157,0.94,161,1.702,162,1.216,163,1.556,165,2.042,168,2.045,170,1.535,173,0.94,175,1.041,176,1.914,178,1.041,179,0.904,180,1.394,182,2.781,183,1.456,201,1.325,202,0.844,219,1.041,222,2.205,225,2.499,227,2.71,228,1.733,229,1.123,235,1.456,257,2.806,258,1.839,259,1.733,260,4.447,261,4.97,262,5.252,263,3.351,264,2.838,265,2.838,266,2.743,267,4.6,268,2.838,269,3.465,270,3.895,271,3.895,272,3.351,273,3.351,274,2.172,275,3.351,276,2.838,277,3.43,278,2.838,279,2.172,280,2.838,281,4.325,282,4.447,283,2.838,284,2.172,285,2.499,286,4.447,287,2.838,288,3.895,289,2.838,290,2.172,291,3.895,292,3.351,293,2.172,294,3.917,295,2.246,296,2.246,297,2.172,298,2.172,299,3.051,300,2.499,301,3.051,302,2.246,303,4.092,304,2.172,305,4.092,306,3.43,307,2.172,308,1.839,309,1.839,310,1.62,311,1.839,312,2.838,313,1.839,314,1.839,315,2.838,316,1.839,317,1.62,318,1.62,319,3.465,320,1.62,321,3.351,322,3.895,323,1.456,324,1.62,325,3.351,326,1.839,327,1.456,328,2.172,329,2.172,330,1.839,331,1.839,332,3.351,333,2.172,334,1.839,335,1.839,336,1.839,337,2.172,338,2.172,339,2.172,340,2.172,341,2.172,342,1.839,343,1.839,344,2.172,345,3.351,346,3.351,347,1.839,348,2.172,349,2.172,350,2.172,351,4.092,352,2.172,353,2.172,354,2.172]],["title/modules/JaegerHttpTracePropagatorModule.html",[130,1.332,355,2.298]],["body/modules/JaegerHttpTracePropagatorModule.html",[3,0.327,4,0.327,5,0.243,6,0.243,17,0.026,26,0.383,28,0.327,37,0.327,42,1.17,128,0.021,129,0.021,132,1.539,135,2.943,136,2.262,137,2.79,138,2.007,141,2.701,142,2.421,143,2.007,144,1.875,145,2.007,146,1.875,147,1.754,148,2.007,149,0.841,197,3.55,202,2.429,205,2.701,206,3.233,355,3.9,356,3.597]],["title/injectables/JaegerHttpTracePropagatorService.html",[150,0.738,197,2.091]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.261,4,0.261,5,0.194,6,0.302,9,0.88,11,0.623,12,1.611,13,0.828,15,1.719,16,1.014,17,0.026,20,1.719,26,0.376,28,0.261,32,0.947,37,0.261,40,0.721,42,1.234,95,1.719,110,2.343,111,1.467,116,1.571,119,0.947,120,0.576,128,0.018,129,0.018,143,1.601,149,0.671,150,1.087,151,1.601,152,2.155,156,2.912,157,1.415,160,3.348,161,2.343,162,2.155,163,1.48,165,1.496,170,1.079,173,1.676,174,3.476,175,1.845,176,2.1,177,2.87,178,1.845,179,1.601,180,1.601,181,1.4,182,1.845,183,2.58,197,3.648,202,2.56,205,2.155,206,4.008,245,4.274,266,2.58,356,4.459,357,3.849,358,5.256,359,2.58,360,3.849,361,3.849,362,3.849]],["title/interfaces/JaegerPropagatorConfig.html",[0,0.513,108,1.332]],["body/interfaces/JaegerPropagatorConfig.html",[0,0.91,1,2.004,2,0.941,3,0.187,4,0.187,5,0.139,6,0.139,7,1.149,8,1.149,9,0.481,10,1.703,11,0.447,12,1.281,13,1.017,14,1.232,15,2.249,16,0.555,17,0.026,18,1.56,19,1.719,20,1.61,21,1.074,22,1.414,23,1.508,24,1.232,25,0.826,26,0.279,27,1.149,28,0.187,29,1.149,30,1.924,31,1.79,32,0.68,33,0.941,34,1.325,35,1.232,36,1.149,37,0.441,38,1.56,39,1.79,40,0.517,41,1.005,42,0.752,43,1.719,44,2.527,45,1.56,46,1.074,47,1.325,48,1.325,49,1.79,50,1.56,51,1.005,52,1.074,53,1.242,54,1.149,55,1.232,56,1.56,57,1.232,58,1.005,59,1.886,60,1.79,61,1.414,62,1.325,63,1.79,64,1.232,65,1.67,66,1.232,67,1.325,68,1.886,69,1.79,70,1.232,71,2.108,72,1.232,73,1.232,74,1.232,75,1.67,76,1.232,77,1.232,78,1.232,79,1.149,80,1.232,81,1.232,82,1.232,83,1.232,84,1.074,85,1.149,86,1.232,87,1.232,88,1.149,89,1.232,90,1.149,91,1.005,92,1.56,93,2.016,94,1.325,95,1.958,96,2.016,97,1.232,98,1.61,99,0.882,100,1.232,101,1.232,102,1.232,103,1.149,104,1.005,105,1.56,106,1.232,107,1.325,108,2.305,109,1.281,110,2.158,111,0.924,112,1.79,113,1.67,114,1.67,115,1.232,116,0.726,117,1.46,118,1.719,119,0.68,120,0.708,121,1.232,122,1.46,123,1.149,124,1.005,125,1.232,126,1.005,127,1.232,128,0.014,129,0.014]],["title/modules/NoopTextMapPropagatorModule.html",[130,1.332,363,2.556]],["body/modules/NoopTextMapPropagatorModule.html",[3,0.327,4,0.327,5,0.243,6,0.243,17,0.026,26,0.383,28,0.327,37,0.327,128,0.021,129,0.021,132,1.539,135,2.943,136,2.262,137,2.79,138,2.007,141,2.701,142,2.421,143,2.007,144,1.875,145,2.007,146,1.875,147,1.754,148,2.007,149,0.841,202,1.875,363,4.339,364,3.597,365,4.188,366,3.597,367,4.339,368,3.9,369,4.823]],["title/injectables/NoopTextMapPropagatorService.html",[150,0.738,368,2.298]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.306,4,0.306,5,0.227,6,0.282,9,0.785,11,0.729,17,0.026,26,0.374,28,0.306,32,1.109,37,0.306,120,0.675,128,0.02,129,0.02,143,1.875,149,0.785,150,1.202,151,1.875,152,2.524,157,1.565,160,3.549,163,1.184,170,1.264,173,1.777,174,3.648,176,2.323,179,1.875,180,1.875,181,1.639,202,2.17,364,4.163,365,4.249,366,4.163,367,4.163,368,3.742,370,5.583,371,4.508,372,6.638,373,4.508]],["title/interfaces/OpenTelemetryConfig.html",[0,0.513,111,0.789]],["body/interfaces/OpenTelemetryConfig.html",[0,0.892,1,2.284,2,0.878,3,0.175,4,0.175,5,0.13,6,0.13,7,1.073,8,1.073,9,0.449,10,1.627,11,0.417,12,1.218,13,1.382,14,1.15,15,2.187,16,1.166,17,0.026,18,1.483,19,1.652,20,1.3,21,1.003,22,1.359,23,1.45,24,1.15,25,0.772,26,0.268,27,1.073,28,0.175,29,1.073,30,1.829,31,1.702,32,0.635,33,0.878,34,1.237,35,1.15,36,1.073,37,0.436,38,1.951,39,1.702,40,0.483,41,0.938,42,0.715,43,1.652,44,2.479,45,1.483,46,1.003,47,1.237,48,1.237,49,1.702,50,1.483,51,0.938,52,1.003,53,1.193,54,1.073,55,1.15,56,1.483,57,1.15,58,0.938,59,2.251,60,1.702,61,1.359,62,1.237,63,1.702,64,1.15,65,1.587,66,1.15,67,1.237,68,2.251,69,1.702,70,1.15,71,2.026,72,1.15,73,1.15,74,1.15,75,1.587,76,1.15,77,1.15,78,1.15,79,1.073,80,1.15,81,1.15,82,1.15,83,1.15,84,1.003,85,1.073,86,1.15,87,1.15,88,1.073,89,1.15,90,1.073,91,0.938,92,1.951,93,1.951,94,1.237,95,1.825,96,1.951,97,1.15,98,1.547,99,0.823,100,1.15,101,1.15,102,1.15,103,1.073,104,0.938,105,1.951,106,1.15,107,1.237,108,2.441,109,0.823,110,1.073,111,1.156,112,2.502,113,2.333,114,2.333,115,1.15,116,0.678,117,1.388,118,1.652,119,0.635,120,0.68,121,1.15,122,1.388,123,1.073,124,0.938,125,1.15,126,0.938,127,1.15,128,0.014,129,0.014]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[374,1.919,375,2.298]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[0,0.394,3,0.109,4,0.109,5,0.081,6,0.295,9,0.801,10,1.086,11,0.259,12,0.84,13,1.162,15,1.14,16,1.054,17,0.026,20,1.319,22,1.001,23,0.84,25,1.001,26,0.361,28,0.109,29,1.611,32,0.647,33,1.885,35,0.715,37,0.109,40,0.983,41,0.957,42,0.493,43,0.957,45,1.023,50,1.023,51,1.217,52,1.505,53,1.634,54,1.392,61,1.158,75,0.667,79,0.667,85,0.667,90,0.667,95,0.896,98,1.319,99,1.236,109,1.364,111,0.891,116,1.275,118,1.671,119,0.394,120,0.809,122,1.671,124,0.583,126,0.583,128,0.009,129,0.009,138,0.667,142,0.667,149,0.583,150,0.566,156,3.361,157,0.738,161,1.611,162,0.898,163,1.511,165,1.887,168,1.605,170,1.471,173,1.288,175,0.768,176,1.611,178,1.261,179,0.667,180,1.094,181,0.583,182,2.653,201,0.978,202,0.623,203,1.36,219,0.768,222,1.261,225,1.962,227,1.856,228,1.36,229,0.829,232,3.278,233,2.887,235,4.253,236,4.212,237,3.188,238,3.188,242,1.074,260,3.62,264,2.227,265,2.227,268,3.278,269,3.278,270,3.278,271,3.278,277,1.962,278,1.357,280,1.357,281,3.426,282,2.227,283,2.227,285,1.962,286,3.89,287,2.227,288,3.278,289,2.227,294,2.887,295,3.253,296,1.763,299,2.495,300,1.962,301,2.495,302,1.763,306,2.887,312,2.227,313,1.357,314,1.357,315,2.227,316,1.357,317,1.195,318,1.195,319,2.833,320,1.195,327,1.074,330,1.357,331,1.357,334,1.357,335,1.357,336,1.357,342,2.227,343,1.357,347,1.357,359,1.074,374,1.473,375,1.763,376,1.603,377,4.945,378,1.357,379,2.227,380,3.872,381,2.631,382,3.346,383,2.833,384,2.631,385,5.067,386,2.631,387,2.631,388,2.631,389,2.227,390,2.631,391,1.603,392,1.603,393,1.603,394,3.278,395,2.631,396,2.631,397,2.227,398,2.631,399,1.603,400,2.227,401,2.631,402,1.603,403,1.603,404,2.631,405,2.227,406,1.603,407,1.603,408,1.603,409,3.89,410,3.872,411,1.603,412,2.631,413,1.962,414,1.605,415,3.346,416,1.603,417,1.603,418,1.357,419,3.872,420,1.603,421,2.631,422,2.227,423,1.603,424,1.603,425,1.357,426,1.603,427,3.872,428,1.603,429,2.631,430,2.631,431,1.603,432,1.763,433,1.603,434,1.603,435,1.603,436,1.357,437,1.603,438,1.603,439,2.631,440,1.603,441,1.603,442,1.603,443,1.603,444,2.631,445,1.603,446,1.603,447,1.603,448,2.631,449,1.357,450,1.603,451,1.195,452,1.195,453,1.603,454,1.603,455,1.603,456,1.603,457,1.603,458,2.887,459,2.631,460,2.631,461,2.631,462,1.603,463,2.631,464,1.603,465,1.603,466,2.631,467,1.962,468,1.603,469,2.631,470,1.603,471,1.603,472,1.603,473,1.603,474,1.603,475,1.603,476,1.603,477,1.603,478,1.603,479,1.603,480,1.603,481,1.603,482,1.603,483,1.603,484,1.603,485,2.631,486,1.603,487,1.603,488,1.603,489,1.603,490,1.603,491,1.603,492,1.603,493,1.603,494,1.603,495,1.603,496,1.603,497,1.603,498,1.603,499,1.603,500,1.357,501,1.603,502,3.346,503,1.357,504,1.603,505,1.603,506,0.978,507,1.603,508,1.603,509,1.603,510,1.603,511,3.346,512,1.603,513,1.603,514,1.603,515,1.603,516,1.603,517,1.603,518,1.603,519,1.603,520,2.631,521,1.603,522,1.603,523,1.603,524,1.603,525,1.603,526,1.603,527,1.603,528,1.603,529,1.603]],["title/modules/OpenTelemetryInterceptorModule.html",[130,1.332,530,2.298]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.289,4,0.289,5,0.215,6,0.272,13,1.273,16,0.857,17,0.026,19,1.551,26,0.378,28,0.289,37,0.289,40,0.799,84,1.658,111,1.431,116,1.554,119,1.327,120,0.639,128,0.019,129,0.019,132,1.361,136,2.299,144,1.658,145,1.774,146,1.658,147,1.961,148,1.774,149,0.743,157,1.196,158,4.021,161,1.774,163,1.12,165,1.658,170,1.196,173,1.196,178,2.045,242,2.858,266,2.858,296,2.858,375,3.614,506,2.602,530,4.296,531,5.392,532,4.264,533,3.611,534,4.566,535,4.264,536,5.007,537,4.566,538,4.566,539,4.566,540,4.264,541,4.264,542,4.566,543,3.611,544,3.611,545,3.611,546,3.18,547,3.611]],["title/modules/OtelColExporterModule.html",[130,1.332,548,2.298]],["body/modules/OtelColExporterModule.html",[3,0.333,4,0.333,5,0.247,6,0.247,17,0.026,26,0.385,28,0.333,37,0.333,128,0.021,129,0.021,132,1.564,136,2.284,137,2.817,138,2.039,144,1.905,145,2.039,146,1.905,147,1.783,148,2.039,149,0.854,216,3.655,218,3.655,219,2.817,220,2.744,548,3.938,549,3.655,550,3.938,551,3.655]],["title/interfaces/OtelCollectorConfig.html",[0,0.513,92,1.332]],["body/interfaces/OtelCollectorConfig.html",[0,0.897,1,1.963,2,0.895,3,0.178,4,0.178,5,0.133,6,0.133,7,1.093,8,1.093,9,0.458,10,1.68,11,0.425,12,1.234,13,1.338,14,1.172,15,2.259,16,1.018,17,0.026,18,1.503,19,1.67,20,1.317,21,1.021,22,1.515,23,1.616,24,1.172,25,0.786,26,0.271,27,1.093,28,0.178,29,1.093,30,2.428,31,1.725,32,0.646,33,0.895,34,1.259,35,1.172,36,1.093,37,0.437,38,1.503,39,1.725,40,0.492,41,0.955,42,0.724,43,1.67,44,2.492,45,1.503,46,1.021,47,1.259,48,1.259,49,1.725,50,1.503,51,0.955,52,1.021,53,1.206,54,1.093,55,1.172,56,1.784,57,1.172,58,0.955,59,1.842,60,1.725,61,1.373,62,1.259,63,1.725,64,1.172,65,1.609,66,1.172,67,1.259,68,1.842,69,1.725,70,1.172,71,2.048,72,1.172,73,1.172,74,1.172,75,1.609,76,1.172,77,1.172,78,1.172,79,1.093,80,1.172,81,1.172,82,1.172,83,1.172,84,1.021,85,1.093,86,1.172,87,1.172,88,1.093,89,1.172,90,1.093,91,1.407,92,1.784,93,2.328,94,1.854,95,1.988,96,2.328,97,2.048,98,2.04,99,1.234,100,1.725,101,1.725,102,1.725,103,2.107,104,0.955,105,1.503,106,1.172,107,1.259,108,2.098,109,0.838,110,1.093,111,0.891,112,1.725,113,1.609,114,1.609,115,1.172,116,0.69,117,1.407,118,1.67,119,0.646,120,0.687,121,1.172,122,1.407,123,1.093,124,0.955,125,1.172,126,0.955,127,1.172,128,0.014,129,0.014]],["title/components/OtelWebTracerComponent.html",[259,1.772,552,2.091]],["body/components/OtelWebTracerComponent.html",[3,0.272,4,0.272,5,0.202,6,0.29,9,0.903,11,0.648,13,0.863,16,0.805,17,0.026,26,0.306,28,0.272,37,0.272,40,1.076,58,2.089,128,0.019,129,0.019,149,0.698,157,1.453,161,2.39,163,1.362,165,1.558,170,1.124,181,1.885,182,1.922,257,4.095,259,3.389,277,3.865,291,4.388,295,3.474,327,3.474,389,3.394,409,3.394,414,2.445,503,3.394,552,3.705,553,5.183,554,4.008,555,4.863,556,4.283,557,3.394,558,5.324,559,5.744,560,4.008,561,6.072,562,6.072,563,4.008,564,4.008,565,4.008,566,3.394,567,4.008,568,4.008,569,4.008,570,4.008,571,4.008,572,4.008,573,4.008,574,5.183,575,5.183,576,4.008,577,6.072,578,4.008,579,4.008,580,4.008]],["title/modules/OtelWebTracerModule.html",[130,1.332,581,2.091]],["body/modules/OtelWebTracerModule.html",[3,0.279,4,0.279,5,0.208,6,0.266,13,1.252,16,0.827,17,0.026,26,0.374,28,0.279,37,0.279,40,0.771,84,2.049,111,1.412,116,1.528,119,1.297,120,0.616,128,0.019,129,0.019,132,1.314,136,2.261,144,2.049,146,1.6,147,1.497,149,0.717,157,1.154,158,3.932,161,1.713,163,1.081,165,1.6,170,1.154,173,1.154,178,1.974,257,3.217,266,2.759,506,2.511,533,3.485,534,4.464,536,4.925,537,4.464,542,4.464,543,3.485,544,3.485,545,3.485,546,3.07,547,3.485,552,4.199,556,3.07,566,3.485,581,4.148,582,2.952,583,3.485,584,3.485,585,3.485,586,4.464,587,3.07,588,3.07,589,5.272,590,4.116,591,4.116,592,4.116,593,4.116]],["title/injectables/OtelcolExporterService.html",[150,0.738,550,2.298]],["body/injectables/OtelcolExporterService.html",[3,0.266,4,0.266,5,0.198,6,0.304,9,0.89,10,1.432,11,0.634,12,1.63,13,1.1,16,1.027,17,0.026,26,0.369,28,0.266,37,0.266,40,0.734,42,0.734,91,1.426,93,1.524,96,1.524,98,1.335,103,1.631,111,1.474,113,2.364,116,1.582,119,0.964,120,0.587,128,0.018,129,0.018,149,0.99,150,1.1,151,1.631,156,2.938,157,1.432,161,2.505,162,2.195,163,1.493,165,1.524,170,1.099,173,1.688,175,1.879,178,1.879,179,1.631,180,1.631,181,1.426,182,1.879,220,2.195,221,2.627,223,4.036,226,3.809,227,2.449,228,2.027,229,2.027,436,3.319,549,4.49,550,4.036,594,5.108,595,3.92,596,6.021,597,5.108,598,5.108,599,3.92,600,3.92,601,2.923,602,3.92,603,3.92,604,3.92,605,3.92,606,3.92,607,3.92]],["title/interfaces/ZipkinCollectorConfig.html",[0,0.513,105,1.332]],["body/interfaces/ZipkinCollectorConfig.html",[0,0.905,1,1.989,2,0.924,3,0.184,4,0.184,5,0.137,6,0.137,7,1.129,8,1.129,9,0.473,10,1.695,11,0.439,12,1.264,13,1.177,14,1.21,15,2.243,16,1.034,17,0.026,18,1.54,19,1.701,20,1.349,21,1.055,22,1.539,23,1.641,24,1.21,25,0.812,26,0.276,27,1.129,28,0.184,29,1.129,30,1.899,31,1.767,32,0.668,33,0.924,34,1.301,35,1.21,36,1.129,37,0.44,38,1.54,39,1.767,40,0.508,41,0.987,42,0.742,43,1.701,44,2.515,45,1.54,46,1.055,47,1.301,48,1.301,49,1.767,50,1.54,51,0.987,52,1.055,53,1.229,54,1.129,55,1.21,56,1.54,57,1.21,58,0.987,59,1.871,60,1.767,61,1.399,62,1.301,63,1.767,64,1.21,65,1.648,66,1.21,67,1.301,68,1.871,69,1.767,70,1.21,71,2.087,72,1.21,73,1.21,74,1.21,75,1.648,76,1.21,77,1.21,78,1.21,79,1.129,80,1.21,81,1.21,82,1.21,83,1.21,84,1.055,85,1.129,86,1.21,87,1.21,88,1.129,89,1.21,90,1.129,91,0.987,92,1.54,93,2.35,94,1.301,95,1.945,96,2.35,97,1.21,98,1.593,99,0.866,100,1.21,101,1.21,102,1.21,103,1.129,104,1.441,105,1.818,106,1.767,107,1.301,108,2.126,109,0.866,110,1.129,111,0.912,112,1.767,113,1.648,114,1.648,115,1.21,116,0.713,117,1.441,118,1.701,119,0.668,120,0.7,121,1.21,122,1.441,123,1.129,124,0.987,125,1.21,126,0.987,127,1.21,128,0.014,129,0.014,608,3.961]],["title/modules/ZipkinExporterModule.html",[130,1.332,609,2.298]],["body/modules/ZipkinExporterModule.html",[3,0.333,4,0.333,5,0.247,6,0.247,17,0.026,26,0.385,28,0.333,37,0.333,104,1.783,128,0.021,129,0.021,132,1.564,136,2.284,137,2.817,138,2.039,144,1.905,145,2.039,146,1.905,147,1.783,148,2.039,149,0.854,216,3.655,218,3.655,219,2.817,220,2.744,609,3.938,610,3.655,611,3.938]],["title/injectables/ZipkinExporterService.html",[150,0.738,611,2.298]],["body/injectables/ZipkinExporterService.html",[3,0.267,4,0.267,5,0.199,6,0.304,9,0.893,11,0.638,12,1.636,13,0.848,16,1.03,17,0.026,26,0.369,28,0.267,37,0.267,40,0.738,42,0.738,93,1.532,96,1.532,104,1.434,111,1.476,114,2.716,116,1.585,119,0.97,120,0.59,128,0.018,129,0.018,149,0.993,150,1.103,151,1.64,156,2.946,157,1.437,161,2.37,162,2.207,163,1.497,165,1.532,170,1.105,173,1.692,175,1.89,178,1.89,179,1.64,180,1.64,181,1.434,182,1.89,183,2.642,220,2.207,221,2.642,223,4.044,226,4.193,227,2.458,228,2.038,229,2.038,601,2.939,610,4.499,611,4.044,612,5.127,613,3.941,614,5.698,615,5.127,616,5.127,617,5.698,618,3.941,619,3.941,620,3.941,621,3.941]],["title/changelog.html",[622,1.748,623,1.748,624,2.427]],["body/changelog.html",[5,0.205,10,1.139,17,0.012,18,1.291,19,1.208,20,0.731,21,1.291,22,0.642,23,0.685,25,1.63,40,0.622,42,0.402,46,1.777,50,0.834,51,0.781,53,1.067,56,1.291,58,1.208,61,1.992,68,1.208,88,0.893,91,1.477,95,0.731,97,0.957,98,0.731,104,0.781,109,1.296,117,0.781,120,0.684,128,0.012,129,0.012,153,1.309,173,0.602,194,3.028,202,1.291,203,2.099,205,1.859,222,1.592,259,1.11,281,1.6,285,1.6,310,1.6,323,1.438,324,1.6,358,1.817,359,1.438,374,1.859,397,1.817,413,1.6,414,3.189,432,3.874,451,1.6,452,1.6,467,3.028,506,3.189,551,3.408,582,1.202,587,1.6,624,3.438,625,2.146,626,2.146,627,1.6,628,2.146,629,2.146,630,2.146,631,2.146,632,3.32,633,6.314,634,3.686,635,4.061,636,5.538,637,6.541,638,3.32,639,2.146,640,2.146,641,2.476,642,2.146,643,5.226,644,5.45,645,3.32,646,6.541,647,6.011,648,2.146,649,2.146,650,4.185,651,2.146,652,2.146,653,4.061,654,4.943,655,2.146,656,5.45,657,2.146,658,2.146,659,3.32,660,2.146,661,1.817,662,4.061,663,2.146,664,5.45,665,4.061,666,2.146,667,2.146,668,2.811,669,2.146,670,2.146,671,2.146,672,2.146,673,2.146,674,2.146,675,2.146,676,2.146,677,2.146,678,3.32,679,1.817,680,2.146,681,2.146,682,4.57,683,4.57,684,2.146,685,2.146,686,4.57,687,2.146,688,2.146,689,3.32,690,1.817,691,1.6,692,2.146,693,3.32,694,2.146,695,2.146,696,2.146,697,2.146,698,1.6,699,1.817,700,2.146,701,4.061,702,2.146,703,2.146,704,2.146,705,2.146,706,2.146,707,2.146,708,2.146,709,2.146,710,2.146,711,3.32,712,4.061,713,2.146,714,4.061,715,2.146,716,2.146,717,2.146,718,2.146,719,2.146,720,4.57,721,3.32,722,2.146,723,2.146,724,3.32,725,2.476,726,2.146,727,2.146,728,4.57,729,3.32,730,6.463,731,4.061,732,2.146,733,1.817,734,2.146,735,2.146,736,2.146,737,2.146,738,4.061,739,2.146,740,4.57,741,2.146,742,2.146,743,2.146,744,2.146,745,2.146,746,2.146,747,2.146,748,4.943,749,3.438,750,4.061,751,4.57,752,2.146,753,1.817,754,2.146,755,2.146,756,2.146,757,3.438,758,3.32,759,1.817,760,2.146,761,2.146,762,2.146,763,1.817,764,2.146,765,2.146,766,2.146,767,2.146,768,2.146,769,2.146,770,2.146,771,2.146,772,2.146,773,2.146,774,2.146,775,2.146,776,2.146,777,2.146,778,2.146,779,2.146,780,4.943,781,2.146,782,2.146,783,2.146,784,2.146,785,2.146,786,2.146,787,2.146,788,2.146,789,2.146,790,2.146,791,2.146,792,3.32,793,2.146,794,2.146,795,2.146,796,2.146,797,2.146,798,1.6,799,2.146,800,2.146,801,4.061,802,3.32,803,3.32,804,3.32,805,3.32,806,4.57,807,2.146,808,3.32,809,2.146,810,2.146,811,2.146,812,2.146,813,2.146,814,2.146,815,2.146,816,2.146,817,2.146,818,2.146,819,2.146,820,2.146,821,2.146,822,2.146,823,1.6,824,4.614,825,2.146,826,1.817,827,2.146,828,2.146,829,1.6,830,2.146,831,2.146,832,2.146,833,2.146,834,2.146,835,2.146,836,2.146,837,2.146,838,1.6,839,2.146,840,2.146,841,2.146,842,2.146,843,1.817,844,2.146,845,2.146,846,2.146,847,2.146,848,3.32,849,3.32,850,2.146,851,2.146,852,2.146,853,2.811,854,3.32,855,3.32,856,2.146,857,2.146,858,2.146,859,4.57,860,2.146,861,2.146,862,2.146,863,2.146,864,3.32,865,2.146,866,2.146]],["title/coverage.html",[867,3.955]],["body/coverage.html",[0,0.995,1,1.245,5,0.173,6,0.355,7,2.763,8,2.763,16,0.688,17,0.025,33,1.166,38,1.331,42,1.068,53,0.899,59,1.245,68,1.245,92,1.331,105,1.331,108,1.331,111,0.788,119,0.842,120,0.513,124,1.245,126,1.245,128,0.017,129,0.017,133,2.553,134,2.294,139,2.088,142,1.424,150,1.4,152,3.342,176,1.424,191,2.553,192,2.553,193,2.294,196,2.088,197,2.088,202,2.064,203,2.413,204,2.294,206,2.294,215,2.553,217,2.294,219,1.641,221,3.559,227,1.641,230,2.898,231,2.898,244,2.553,247,3.48,252,3.48,257,2.088,258,2.898,259,1.77,356,2.553,364,2.553,365,3.128,366,2.553,367,2.553,368,2.294,374,1.917,375,2.294,377,2.898,378,2.898,549,2.553,550,2.294,552,2.088,555,2.898,556,2.553,557,2.898,610,2.553,611,2.294,691,2.553,867,2.898,868,3.423,869,3.423,870,7.033,871,5.31,872,6.415,873,5.31,874,3.423,875,5.703,876,3.423,877,5.968,878,5.968,879,3.423,880,3.423,881,3.423,882,2.898]],["title/dependencies.html",[582,2.307,641,2.137]],["body/dependencies.html",[17,0.026,28,0.329,51,1.762,122,1.762,128,0.021,129,0.021,138,2.016,425,4.103,582,2.713,679,4.103,725,3.613,883,4.845,884,6.973,885,4.845,886,4.845,887,4.845,888,4.845,889,5.834,890,4.351,891,4.845,892,4.845,893,4.845,894,4.94,895,4.845,896,4.845,897,4.845,898,4.845,899,4.845,900,4.845,901,4.845,902,4.845]],["title/index.html",[11,0.464,622,1.748,623,1.748]],["body/index.html",[0,0.315,1,0.764,3,0.39,6,0.062,10,1.676,13,0.922,14,0.547,15,1.765,16,0.246,17,0.025,18,0.817,19,1.003,20,1.459,21,0.477,22,0.825,23,0.88,24,0.547,25,0.825,26,0.237,28,0.083,29,0.51,31,1.23,32,0.986,33,0.939,36,1.359,37,0.32,38,0.477,39,1.23,40,0.516,41,1.003,42,0.993,43,1.558,44,1.782,45,1.665,46,2.061,49,1.23,50,1.27,51,1.003,52,1.428,53,1.326,54,0.874,55,0.937,56,2.258,57,1.23,58,2.192,59,1.003,60,1.23,61,1.464,63,1.23,65,1.528,68,1.003,69,1.457,70,0.937,71,1.787,72,0.937,73,0.937,74,0.937,75,1.359,76,0.937,77,0.937,78,0.937,79,0.874,80,0.937,81,1.639,82,1.639,83,0.937,84,0.817,85,0.874,86,0.937,87,2.016,88,0.874,89,0.937,90,0.874,91,2.174,92,0.477,93,1.757,95,1.365,96,0.817,98,1.251,99,0.671,100,0.547,101,0.547,102,0.547,103,0.51,104,1.643,105,0.477,106,0.547,108,1.072,109,1.784,110,0.874,111,0.752,112,1.639,113,1.147,114,0.51,118,0.446,122,1.336,123,0.51,124,1.003,126,0.764,128,0.008,129,0.008,130,2.406,131,0.822,132,0.88,136,1.557,140,2.686,144,0.817,145,1.147,146,1.27,147,0.764,148,0.51,149,0.569,153,3.161,154,3.801,168,0.748,169,1.779,173,0.344,175,1.007,177,2.435,181,1.003,190,2.462,194,0.914,201,1.682,202,1.428,203,0.634,205,2.399,210,1.038,214,0.822,222,2.719,228,1.086,229,0.634,233,0.914,234,1.779,235,2.872,236,1.567,237,1.567,238,1.567,240,1.779,241,1.779,242,0.822,243,0.822,254,1.038,259,2.215,276,2.334,294,2.988,295,0.822,296,3.553,299,2.988,300,0.914,301,2.056,302,1.408,306,0.914,308,1.779,309,1.779,310,1.567,311,1.779,317,0.914,318,0.914,320,0.914,322,4.273,323,1.848,324,2.056,326,2.334,327,1.408,355,0.822,359,0.822,374,3.445,379,1.038,383,1.038,394,2.765,400,1.038,413,1.567,414,3.647,418,1.779,422,3.11,432,0.822,449,1.779,452,2.056,458,0.914,506,2.241,530,2.189,538,1.038,539,2.765,546,2.056,548,3.029,551,1.567,558,3.826,581,2.241,582,2.643,601,2.739,609,0.822,622,1.282,623,1.282,627,1.567,634,1.567,636,1.038,641,0.914,650,1.038,661,1.038,698,1.567,699,1.038,725,1.567,733,1.779,749,1.779,753,1.779,757,1.038,759,1.779,763,1.038,823,4.282,824,1.038,826,1.038,829,0.914,838,2.056,843,1.038,882,1.779,890,0.914,894,1.779,903,2.756,904,3.673,905,1.226,906,4.894,907,1.226,908,1.226,909,1.226,910,1.779,911,1.779,912,2.101,913,2.101,914,2.101,915,3.673,916,2.765,917,2.101,918,4.284,919,1.226,920,1.226,921,2.101,922,1.226,923,1.226,924,1.226,925,1.226,926,1.226,927,3.673,928,1.226,929,1.226,930,3.673,931,2.334,932,3.266,933,1.779,934,1.226,935,2.101,936,2.101,937,2.756,938,1.226,939,2.756,940,1.226,941,1.226,942,1.226,943,1.226,944,2.756,945,2.101,946,1.226,947,1.226,948,1.226,949,1.226,950,1.226,951,1.226,952,1.226,953,1.226,954,1.226,955,1.226,956,1.038,957,1.038,958,2.756,959,5.047,960,5.181,961,4.894,962,1.226,963,4.006,964,1.226,965,3.673,966,2.101,967,1.226,968,1.226,969,1.226,970,1.226,971,1.226,972,1.226,973,1.226,974,1.226,975,1.226,976,1.226,977,1.226,978,1.038,979,3.673,980,1.226,981,1.226,982,1.226,983,1.226,984,2.101,985,1.226,986,1.226,987,1.226,988,2.765,989,1.226,990,1.226,991,1.226,992,1.226,993,1.226,994,1.226,995,1.226,996,2.101,997,1.226,998,1.226,999,1.226,1000,1.226,1001,1.226,1002,1.226,1003,1.226,1004,1.226,1005,1.408,1006,2.756,1007,2.101,1008,1.226,1009,1.226,1010,1.226,1011,1.038,1012,1.226,1013,1.226,1014,1.226,1015,1.226,1016,1.226,1017,1.226,1018,2.756,1019,2.756,1020,2.101,1021,2.101,1022,2.101,1023,2.101,1024,1.226,1025,1.226,1026,2.101,1027,2.101,1028,1.226,1029,1.226,1030,1.226,1031,1.226,1032,1.226,1033,1.226,1034,1.779,1035,1.038,1036,1.226,1037,1.226,1038,1.226,1039,1.226,1040,3.673,1041,3.673,1042,3.673,1043,2.101,1044,4.894,1045,3.673,1046,3.11,1047,3.673,1048,3.673,1049,3.673,1050,2.101,1051,1.226,1052,1.226,1053,1.226,1054,1.226,1055,1.226,1056,1.226,1057,1.226,1058,1.226,1059,1.226,1060,1.226,1061,1.226,1062,1.226,1063,1.226,1064,1.226,1065,1.226,1066,1.226,1067,1.226,1068,1.226]],["title/license.html",[622,1.748,623,1.748,1069,2.427]],["body/license.html",[2,0.567,4,0.388,5,0.26,9,0.29,10,0.467,17,0.012,25,0.498,26,0.098,36,0.693,40,0.643,41,0.606,46,2.126,61,0.812,128,0.01,129,0.01,147,0.606,149,0.29,153,1.016,154,1.116,155,1.41,163,0.438,249,1.242,302,3.136,323,1.116,365,2.655,405,2.298,432,2.303,451,2.954,458,1.242,467,2.562,500,2.298,588,1.242,690,1.41,691,2.562,698,1.242,798,1.242,823,1.242,838,4.637,853,2.298,910,1.41,911,1.41,916,1.41,931,2.298,933,1.41,956,1.41,957,1.41,978,1.41,988,1.41,1005,1.116,1011,1.41,1035,3.694,1046,2.298,1069,5.642,1070,3.962,1071,3.435,1072,1.665,1073,1.665,1074,1.665,1075,5.32,1076,5.81,1077,3.962,1078,4.363,1079,1.665,1080,5.976,1081,5.47,1082,1.665,1083,1.665,1084,5.47,1085,5.81,1086,4.678,1087,5.47,1088,2.714,1089,1.665,1090,4.363,1091,1.665,1092,1.665,1093,1.665,1094,3.962,1095,1.665,1096,5.32,1097,3.962,1098,2.714,1099,2.714,1100,1.665,1101,3.435,1102,2.714,1103,1.665,1104,1.665,1105,6.166,1106,3.962,1107,2.714,1108,1.665,1109,2.714,1110,1.665,1111,1.665,1112,1.665,1113,1.665,1114,1.665,1115,1.665,1116,1.665,1117,3.435,1118,1.665,1119,3.435,1120,2.714,1121,5.81,1122,1.665,1123,1.665,1124,4.678,1125,5.32,1126,3.962,1127,2.714,1128,3.435,1129,4.678,1130,1.665,1131,1.665,1132,1.665,1133,1.665,1134,1.665,1135,2.714,1136,1.665,1137,1.665,1138,1.665,1139,6.664,1140,3.435,1141,2.714,1142,1.665,1143,5.32,1144,2.714,1145,1.665,1146,4.363,1147,2.714,1148,1.665,1149,6.166,1150,1.665,1151,1.665,1152,1.665,1153,1.665,1154,1.665,1155,1.665,1156,2.714,1157,3.435,1158,1.665,1159,1.665,1160,1.665,1161,1.665,1162,3.962,1163,4.363,1164,1.665,1165,2.714,1166,3.962,1167,2.714,1168,1.665,1169,4.363,1170,2.714,1171,1.665,1172,1.665,1173,3.435,1174,1.665,1175,1.665,1176,1.665,1177,1.665,1178,2.714,1179,1.665,1180,1.665,1181,1.665,1182,3.435,1183,1.665,1184,1.665,1185,3.435,1186,1.665,1187,1.665,1188,1.665,1189,3.962,1190,5.47,1191,1.665,1192,1.665,1193,2.714,1194,5.144,1195,3.435,1196,2.714,1197,2.714,1198,2.714,1199,2.714,1200,3.435,1201,2.714,1202,3.435,1203,2.714,1204,2.714,1205,2.714,1206,2.714,1207,1.41,1208,2.714,1209,1.665,1210,1.665,1211,4.363,1212,4.933,1213,3.435,1214,2.714,1215,1.665,1216,1.665,1217,2.714,1218,2.714,1219,1.665,1220,3.435,1221,2.714,1222,1.665,1223,1.665,1224,1.665,1225,3.435,1226,1.665,1227,1.665,1228,1.665,1229,2.714,1230,2.714,1231,1.665,1232,1.665,1233,1.665,1234,1.665,1235,1.665,1236,1.665,1237,1.665,1238,2.714,1239,1.665,1240,1.665,1241,1.665,1242,1.665,1243,1.665,1244,1.665,1245,1.665,1246,1.665,1247,3.435,1248,1.665,1249,3.435,1250,1.665,1251,1.665,1252,1.665,1253,1.665,1254,5.144,1255,1.665,1256,1.665,1257,1.665,1258,1.665,1259,1.665,1260,3.962,1261,2.714,1262,3.962,1263,1.665,1264,1.665,1265,1.665,1266,1.665,1267,1.665,1268,3.435,1269,1.665,1270,1.665,1271,2.714,1272,2.714,1273,1.665,1274,1.665,1275,1.665,1276,2.714,1277,1.665,1278,1.665,1279,4.363,1280,1.665,1281,1.665,1282,1.665,1283,1.665,1284,1.665,1285,1.665,1286,3.435,1287,3.962,1288,1.665,1289,1.665,1290,1.665,1291,1.665,1292,1.665,1293,1.665,1294,1.665,1295,1.665,1296,1.665,1297,1.665,1298,2.714,1299,1.665,1300,1.665,1301,2.714,1302,1.665,1303,1.665,1304,3.962,1305,1.665,1306,1.665,1307,1.665,1308,1.665,1309,1.665,1310,1.665,1311,3.962,1312,3.435,1313,3.435,1314,3.435,1315,2.714,1316,2.714,1317,3.435,1318,2.714,1319,2.714,1320,2.714,1321,1.665,1322,1.665,1323,1.665,1324,1.665,1325,1.665,1326,1.665,1327,1.665,1328,1.665,1329,1.665,1330,2.714,1331,1.665,1332,1.665,1333,1.665,1334,1.665,1335,4.363,1336,1.665,1337,1.665,1338,1.665,1339,1.665,1340,1.665,1341,1.665,1342,1.665,1343,1.665,1344,4.363,1345,1.665,1346,1.665,1347,1.665,1348,1.665,1349,1.665,1350,1.665,1351,1.665,1352,1.665,1353,1.665,1354,1.665,1355,1.665,1356,1.665,1357,1.665,1358,1.665,1359,1.665,1360,1.665,1361,1.665,1362,3.435,1363,1.665,1364,1.665,1365,1.665,1366,1.41,1367,1.665,1368,2.714,1369,1.665,1370,1.665,1371,1.665,1372,1.665,1373,1.665,1374,1.665,1375,1.665,1376,1.665,1377,1.665,1378,1.665,1379,1.665,1380,1.665,1381,1.665,1382,1.665,1383,1.665,1384,2.714,1385,1.665,1386,1.665,1387,1.665,1388,2.714,1389,2.714,1390,1.665,1391,1.665,1392,1.665,1393,1.665,1394,1.665,1395,1.665,1396,1.665,1397,1.665,1398,1.665,1399,1.665,1400,1.665,1401,1.665,1402,1.665,1403,1.665,1404,1.665,1405,1.665,1406,1.665,1407,1.665,1408,1.665,1409,1.665]],["title/modules.html",[132,1.491]],["body/modules.html",[17,0.021,128,0.021,129,0.021,131,3.354,132,1.597,190,3.354,214,3.354,243,3.354,355,3.354,363,3.732,530,3.354,548,3.354,581,3.053,609,3.354,890,3.732,1005,4.673,1366,4.237,1410,6.971,1411,7.005,1412,5.004]],["title/overview.html",[1413,3.955]],["body/overview.html",[2,1.745,17,0.024,25,1.533,128,0.022,129,0.022,132,1.636,151,2.132,259,2.649,552,4.213,581,4.118,582,3.378,583,4.339,584,4.339,585,4.339,586,5.108,587,3.822,588,3.822,634,3.822,668,4.339,798,3.822,1413,4.339]],["title/todo.html",[622,1.748,623,1.748,1414,2.427]],["body/todo.html",[10,1.689,17,0.024,56,2.342,61,1.916,91,1.859,128,0.022,129,0.022,153,3.119,154,4.038,168,3.119,205,3.586,222,2.451,374,2.863,414,3.119,627,3.812,829,3.812,1005,3.427,1034,5.423,1207,4.329,1414,5.1,1415,5.112,1416,5.112,1417,5.112]],["title/miscellaneous/variables.html",[1418,2.427,1419,3.489]],["body/miscellaneous/variables.html",[6,0.312,7,1.958,8,2.677,11,0.761,17,0.025,22,1.973,23,2.105,53,1.506,95,1.603,109,1.502,115,2.099,116,1.237,117,2.34,119,1.411,120,0.988,121,2.099,122,2.085,123,1.958,124,2.085,125,2.099,126,2.085,127,2.099,128,0.021,129,0.021,142,2.385,219,2.748,222,2.256,247,3.51,251,3.985,252,3.51,256,3.985,1418,3.985,1419,3.985,1420,6.182,1421,4.706,1422,4.706]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":169,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{}}}],["0.10.0",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["0.21.0",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":661,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.24.0",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["0.28.0",{"_index":1039,"title":{},"body":{"index.html":{}}}],["0.29.0",{"_index":1037,"title":{},"body":{"index.html":{}}}],["0.4.0",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":934,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":949,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":25,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.19.0",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":634,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["10.0.3",{"_index":896,"title":{},"body":{"dependencies.html":{}}}],["10.2",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["10.2.4",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":668,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["11/11",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":1063,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["14/14",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["1c7c0c0",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["1f22380",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":757,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":1071,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1073,"title":{},"body":{"license.html":{}}}],["2020",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":940,"title":{},"body":{"index.html":{}}}],["21",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["23e35d1",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":749,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":843,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":943,"title":{},"body":{"index.html":{}}}],["332baf7",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["4.3.3",{"_index":897,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["40f33cc",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["412d2fd",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["41c8947",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["4318",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":972,"title":{},"body":{"index.html":{}}}],["5/5",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1112,"title":{},"body":{"license.html":{}}}],["5000",{"_index":942,"title":{},"body":{"index.html":{}}}],["51",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":941,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["5a7c375",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":898,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":950,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["80d2ada",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":798,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":908,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["_currentcontext",{"_index":508,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["a1746bf",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["a6307f2",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1291,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1365,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1362,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1065,"title":{},"body":{"index.html":{}}}],["act",{"_index":1372,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1092,"title":{},"body":{"license.html":{}}}],["action",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":963,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1342,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":580,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ad03334",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":234,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1278,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1013,"title":{},"body":{"index.html":{}}}],["addinstrumentationplugin",{"_index":263,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["addinstrumentationplugin(instrumentationconfig",{"_index":273,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["additional",{"_index":1279,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1164,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1360,"title":{},"body":{"license.html":{}}}],["again",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1230,"title":{},"body":{"license.html":{}}}],["agent",{"_index":763,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1375,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1314,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1295,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1235,"title":{},"body":{"license.html":{}}}],["allow",{"_index":507,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["allowedcommonjsdependencies",{"_index":1055,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1226,"title":{},"body":{"license.html":{}}}],["along",{"_index":1269,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1277,"title":{},"body":{"license.html":{}}}],["already",{"_index":544,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":1016,"title":{},"body":{"index.html":{}}}],["always",{"_index":287,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1067,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1045,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1369,"title":{},"body":{"license.html":{}}}],["angular",{"_index":414,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":1053,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":138,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":242,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1153,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1070,"title":{},"body":{"license.html":{}}}],["api",{"_index":359,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":513,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":512,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.spankind.client",{"_index":501,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.trace.setspan",{"_index":510,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["apis",{"_index":390,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":921,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":980,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":994,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":970,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":979,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1274,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1147,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1312,"title":{},"body":{"license.html":{}}}],["application",{"_index":906,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1017,"title":{},"body":{"index.html":{}}}],["applies",{"_index":957,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1384,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":546,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1392,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1328,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1400,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1349,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1381,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1333,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1331,"title":{},"body":{"license.html":{}}}],["async",{"_index":954,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1385,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1145,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["attribution",{"_index":1260,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":1088,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1140,"title":{},"body":{"license.html":{}}}],["available",{"_index":1005,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b",{"_index":1250,"title":{},"body":{"license.html":{}}}],["b112065",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":140,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3e15af",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["b3injectencoding",{"_index":171,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":188,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":187,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":21,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":189,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":1,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":131,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":139,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":186,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["bad",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1416,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":1048,"title":{},"body":{"index.html":{}}}],["base",{"_index":229,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["based",{"_index":1011,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1316,"title":{},"body":{"license.html":{}}}],["batch",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":47,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":299,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":348,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":526,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":68,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1169,"title":{},"body":{"license.html":{}}}],["below",{"_index":1148,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1116,"title":{},"body":{"license.html":{}}}],["between",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1161,"title":{},"body":{"license.html":{}}}],["body",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1386,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":44,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":952,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":984,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1389,"title":{},"body":{"license.html":{}}}],["branch",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1411,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":890,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bufferconfig",{"_index":427,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":636,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["c",{"_index":1257,"title":{},"body":{"license.html":{}}}],["c2b4209",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":742,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["calls",{"_index":388,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["cancelled",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":511,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":515,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1252,"title":{},"body":{"license.html":{}}}],["catch",{"_index":922,"title":{},"body":{"index.html":{}}}],["cause",{"_index":1046,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1256,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":624,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1348,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1202,"title":{},"body":{"license.html":{}}}],["choices",{"_index":968,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1363,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1232,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1221,"title":{},"body":{"license.html":{}}}],["class",{"_index":149,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["client",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["cluster_otelwebtracermodule",{"_index":583,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_declarations",{"_index":584,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_exports",{"_index":585,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["code",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":1051,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":1029,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":596,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":598,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":599,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":607,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes",{"_index":600,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes.collectorexporterconfigbase",{"_index":597,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1227,"title":{},"body":{"license.html":{}}}],["command",{"_index":1019,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1393,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1357,"title":{},"body":{"license.html":{}}}],["commit",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":36,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":38,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":1044,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":137,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["commons",{"_index":914,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1173,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1134,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1403,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1284,"title":{},"body":{"license.html":{}}}],["component",{"_index":259,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/otel",{"_index":592,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["component_template",{"_index":578,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["components",{"_index":553,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["compose",{"_index":1027,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":1030,"title":{},"body":{"index.html":{}}}],["composite",{"_index":194,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":200,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":190,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":193,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1354,"title":{},"body":{"license.html":{}}}],["concurencylimit",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["concurrencylimit",{"_index":103,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["conditions",{"_index":1076,"title":{},"body":{"license.html":{}}}],["config",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":361,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":605,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":604,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":603,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":8,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":620,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":619,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configurable",{"_index":733,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/directive",{"_index":995,"title":{},"body":{"index.html":{}}}],["configuration/opentelemetry",{"_index":178,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":930,"title":{},"body":{"index.html":{}}}],["configured",{"_index":615,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":83,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1347,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":404,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1371,"title":{},"body":{"license.html":{}}}],["console",{"_index":43,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":225,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":214,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":217,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1186,"title":{},"body":{"license.html":{}}}],["const",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["constitutes",{"_index":1236,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":161,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(otelcol_config",{"_index":183,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":195,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":162,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(instrumentationservice",{"_index":563,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructor(private",{"_index":571,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["construed",{"_index":1280,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1266,"title":{},"body":{"license.html":{}}}],["content",{"_index":911,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":910,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":203,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":260,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1107,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1163,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1225,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1286,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1190,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1237,"title":{},"body":{"license.html":{}}}],["control",{"_index":1094,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1095,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["conversions",{"_index":1136,"title":{},"body":{"license.html":{}}}],["convert",{"_index":280,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":264,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":278,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1244,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1249,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1085,"title":{},"body":{"license.html":{}}}],["core",{"_index":973,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1233,"title":{},"body":{"license.html":{}}}],["cours",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":867,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1012,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1231,"title":{},"body":{"license.html":{}}}],["current",{"_index":394,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["custom_span",{"_index":126,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1306,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":110,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customspan",{"_index":33,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":1007,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1263,"title":{},"body":{"license.html":{}}}],["d2ecbb8",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1344,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":505,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["date",{"_index":1241,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1000,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":144,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["declare",{"_index":985,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1066,"title":{},"body":{"index.html":{}}}],["default",{"_index":22,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1377,"title":{},"body":{"license.html":{}}}],["define",{"_index":99,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["defineb3encoding",{"_index":159,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":166,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defined",{"_index":163,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":265,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":283,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1098,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1079,"title":{},"body":{"license.html":{}}}],["del",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1339,"title":{},"body":{"license.html":{}}}],["dep",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["dependence",{"_index":753,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":582,"title":{"dependencies.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":1052,"title":{},"body":{"index.html":{}}}],["depends",{"_index":1042,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":905,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":1149,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1150,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1307,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1188,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1327,"title":{},"body":{"license.html":{}}}],["devconfiguration",{"_index":929,"title":{},"body":{"index.html":{}}}],["dgo",{"_index":1032,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":29,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":31,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel.all",{"_index":951,"title":{},"body":{"index.html":{}}}],["different",{"_index":1283,"title":{},"body":{"license.html":{}}}],["dir",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1101,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1103,"title":{},"body":{"license.html":{}}}],["directive",{"_index":576,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["directives",{"_index":579,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disable",{"_index":567,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disclaimer",{"_index":1310,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1183,"title":{},"body":{"license.html":{}}}],["display",{"_index":931,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1211,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1268,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1078,"title":{},"body":{"license.html":{}}}],["doc",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1026,"title":{},"body":{"index.html":{}}}],["docs",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":323,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":691,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["documentload",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["documentloadinstrumentation",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["dom",{"_index":389,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["don't",{"_index":698,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1417,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":240,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":679,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e2e",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["ead3251",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1398,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1151,"title":{},"body":{"license.html":{}}}],["ee08e85",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["efa9083",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1154,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1170,"title":{},"body":{"license.html":{}}}],["element",{"_index":575,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["en",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["enable",{"_index":275,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["encapsulates",{"_index":387,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["enclosed",{"_index":1388,"title":{},"body":{"license.html":{}}}],["end",{"_index":1383,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1093,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1087,"title":{},"body":{"license.html":{}}}],["enum",{"_index":939,"title":{},"body":{"index.html":{}}}],["environment",{"_index":945,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":981,"title":{},"body":{"index.html":{}}}],["equal",{"_index":78,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":506,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"changelog.html":{},"index.html":{}}}],["eslint",{"_index":503,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["eslint/component",{"_index":569,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["even",{"_index":1359,"title":{},"body":{"license.html":{}}}],["event",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":823,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":1021,"title":{},"body":{"index.html":{}}}],["except",{"_index":1213,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1185,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1201,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1296,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1334,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1118,"title":{},"body":{"license.html":{}}}],["existing",{"_index":997,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":1288,"title":{},"body":{"license.html":{}}}],["export",{"_index":37,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":1059,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":222,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":220,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":216,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":218,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":221,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":612,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:18",{"_index":224,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:23",{"_index":594,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:36",{"_index":613,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:46",{"_index":595,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":328,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporterconfig",{"_index":617,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":971,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":270,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exporttimeoutmillis",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["express",{"_index":1318,"title":{},"body":{"license.html":{}}}],["external",{"_index":923,"title":{},"body":{"index.html":{}}}],["f",{"_index":1028,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1355,"title":{},"body":{"license.html":{}}}],["fake",{"_index":975,"title":{},"body":{"index.html":{}}}],["false",{"_index":422,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1364,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["fetch:(boolean",{"_index":964,"title":{},"body":{"index.html":{}}}],["fetchinstrumentation",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["ff373c0",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":616,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1387,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1110,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1242,"title":{},"body":{"license.html":{}}}],["files",{"_index":1128,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1323,"title":{},"body":{"license.html":{}}}],["fix",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1247,"title":{},"body":{"license.html":{}}}],["forget",{"_index":699,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1121,"title":{},"body":{"license.html":{}}}],["format",{"_index":1395,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":533,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":534,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1204,"title":{},"body":{"license.html":{}}}],["functions",{"_index":998,"title":{},"body":{"index.html":{}}}],["generally",{"_index":969,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1135,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":223,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":160,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["getting",{"_index":622,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":380,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":249,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":913,"title":{},"body":{"index.html":{}}}],["going",{"_index":991,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1352,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1408,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1195,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1120,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1089,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1197,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1410,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1340,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1379,"title":{},"body":{"license.html":{}}}],["header",{"_index":20,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":1034,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1196,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1292,"title":{},"body":{"license.html":{}}}],["hhttps://github.com/open",{"_index":962,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":895,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1378,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":396,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["html",{"_index":574,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["http",{"_index":202,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["http.interceptor",{"_index":541,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":378,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:108",{"_index":411,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:159",{"_index":393,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:168",{"_index":399,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:200",{"_index":403,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:220",{"_index":406,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:232",{"_index":407,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:252",{"_index":392,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:269",{"_index":391,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:281",{"_index":417,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:50",{"_index":423,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:54",{"_index":420,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:58",{"_index":386,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":1033,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1023,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/api",{"_index":948,"title":{},"body":{"index.html":{}}}],["http://localhost:4318/v1/trace",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["http://localhost:4318/v1/traces",{"_index":944,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1074,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1405,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":538,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":924,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":539,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":238,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":424,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":410,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":233,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":236,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":237,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":1049,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":959,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":909,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":255,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":976,"title":{},"body":{"index.html":{}}}],["httptracecontextpropagator",{"_index":246,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{}}}],["httptracecontextpropagatormodule",{"_index":243,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":196,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1399,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1391,"title":{},"body":{"license.html":{}}}],["ienvironment",{"_index":946,"title":{},"body":{"index.html":{}}}],["iexporter",{"_index":227,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["if(instrumentationconfig?.documentload",{"_index":352,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["if(instrumentationconfig?.fetch",{"_index":353,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["if(instrumentationconfig?.xmlhttprequest",{"_index":350,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["ii",{"_index":1108,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1115,"title":{},"body":{"license.html":{}}}],["implement",{"_index":1006,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":254,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":181,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1319,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":145,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1184,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1350,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1346,"title":{},"body":{"license.html":{}}}],["include",{"_index":1157,"title":{},"body":{"license.html":{}}}],["included",{"_index":1144,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1264,"title":{},"body":{"license.html":{}}}],["including",{"_index":1125,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1167,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1193,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1380,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1376,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1367,"title":{},"body":{"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1142,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1102,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1117,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":155,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1275,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1224,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1238,"title":{},"body":{"license.html":{}}}],["init",{"_index":291,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["initialise",{"_index":400,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":267,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":381,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":398,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":175,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":207,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(custom_span",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":208,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":209,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(otelcol_config",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_exporter",{"_index":330,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_propagator",{"_index":331,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":150,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":382,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":402,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":232,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":185,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":27,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":127,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":251,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":256,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":250,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":294,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":268,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":292,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":269,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":297,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["installation",{"_index":912,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1228,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationconfig",{"_index":59,"title":{"interfaces/InstrumentationConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["instrumentationoption",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationoptions",{"_index":261,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentations",{"_index":344,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":257,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["intentionally",{"_index":1165,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":383,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":408,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":401,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":241,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":374,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":1041,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":532,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":535,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":34,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":540,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/component/otel",{"_index":555,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":7,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":230,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":377,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":531,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":589,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":215,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":247,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:13",{"_index":248,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":549,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":610,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":258,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:109",{"_index":298,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:125",{"_index":274,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:144",{"_index":279,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:154",{"_index":284,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:35",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:40",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:45",{"_index":272,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:72",{"_index":290,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:94",{"_index":293,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":133,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":191,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":244,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":356,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":364,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":252,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:13",{"_index":253,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/public",{"_index":986,"title":{},"body":{"index.html":{}}}],["interceptors",{"_index":376,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":176,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["irrevocable",{"_index":1205,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1179,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["issue#41",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["issue#80",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":168,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":205,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":977,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":355,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":197,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":358,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{}}}],["jaegerpropagator(this.customheader",{"_index":362,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerpropagatorconfig",{"_index":108,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1072,"title":{},"body":{"license.html":{}}}],["jest",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":725,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/issues/2321",{"_index":1038,"title":{},"body":{"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":961,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":903,"title":{},"body":{"index.html":{}}}],["key",{"_index":107,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["language",{"_index":1407,"title":{},"body":{"license.html":{}}}],["last",{"_index":967,"title":{},"body":{"index.html":{}}}],["law",{"_index":1313,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1234,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1090,"title":{},"body":{"license.html":{}}}],["legend",{"_index":573,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["level",{"_index":55,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1335,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1343,"title":{},"body":{"license.html":{}}}],["library",{"_index":904,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1222,"title":{},"body":{"license.html":{}}}],["license",{"_index":1069,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1402,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1239,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1084,"title":{},"body":{"license.html":{}}}],["limit",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["limitation",{"_index":1320,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1409,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1126,"title":{},"body":{"license.html":{}}}],["line",{"_index":568,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["link",{"_index":690,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":958,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1177,"title":{},"body":{"license.html":{}}}],["literal",{"_index":608,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1229,"title":{},"body":{"license.html":{}}}],["load",{"_index":324,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["loaded",{"_index":545,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["lock",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":50,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":1001,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":1002,"title":{},"body":{"index.html":{}}}],["logging",{"_index":759,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":938,"title":{},"body":{"index.html":{}}}],["long",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1351,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1358,"title":{},"body":{"license.html":{}}}],["made",{"_index":1141,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1176,"title":{},"body":{"license.html":{}}}],["main",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1216,"title":{},"body":{"license.html":{}}}],["making",{"_index":1123,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1356,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1181,"title":{},"body":{"license.html":{}}}],["management",{"_index":1104,"title":{},"body":{"license.html":{}}}],["manager",{"_index":421,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":367,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1187,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1302,"title":{},"body":{"license.html":{}}}],["matching",{"_index":129,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxexportbatchsize",{"_index":79,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1081,"title":{},"body":{"license.html":{}}}],["means",{"_index":1099,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1131,"title":{},"body":{"license.html":{}}}],["media",{"_index":1137,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1245,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1246,"title":{},"body":{"license.html":{}}}],["member",{"_index":1060,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1322,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1160,"title":{},"body":{"license.html":{}}}],["merge",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["metadata",{"_index":560,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["method",{"_index":413,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":157,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1418,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":300,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["modifications",{"_index":1124,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1251,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1276,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1281,"title":{},"body":{"license.html":{}}}],["module",{"_index":130,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":132,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":536,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":154,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":19,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":14,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["named",{"_index":993,"title":{},"body":{"index.html":{}}}],["names",{"_index":1301,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1057,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1223,"title":{},"body":{"license.html":{}}}],["need",{"_index":965,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1338,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1341,"title":{},"body":{"license.html":{}}}],["new",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":409,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["next.handle(tracedreq).pipe",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":136,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngoninit",{"_index":562,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ngx",{"_index":894,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":915,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1058,"title":{},"body":{"index.html":{}}}],["non",{"_index":1200,"title":{},"body":{"license.html":{}}}],["noop",{"_index":369,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":974,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":370,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":372,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":363,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":368,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1273,"title":{},"body":{"license.html":{}}}],["notable",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":933,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1143,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1254,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1290,"title":{},"body":{"license.html":{}}}],["npm",{"_index":927,"title":{},"body":{"index.html":{}}}],["null",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":281,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["number(config.otelcolconfig?.concurrencylimit",{"_index":606,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(value",{"_index":354,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["o",{"_index":24,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1129,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1368,"title":{},"body":{"license.html":{}}}],["observable",{"_index":415,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1404,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1217,"title":{},"body":{"license.html":{}}}],["offers",{"_index":919,"title":{},"body":{"index.html":{}}}],["ok",{"_index":824,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["old",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":978,"title":{},"body":{"index.html":{},"license.html":{}}}],["oninit",{"_index":559,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["open",{"_index":1022,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":32,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/api/build/src/propagation/nooptextmappropagator",{"_index":373,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["opentelemetry/context",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":201,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":601,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":322,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":177,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["opentelemetry/resources",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/sdk",{"_index":228,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/semantic",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":1050,"title":{},"body":{"index.html":{}}}],["opentelemetry/web",{"_index":1043,"title":{},"body":{"index.html":{}}}],["opentelemetryconfig",{"_index":111,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":375,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":379,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":530,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":983,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":1047,"title":{},"body":{"index.html":{}}}],["option",{"_index":1004,"title":{},"body":{"index.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":1054,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1308,"title":{},"body":{"license.html":{}}}],["original",{"_index":405,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otel",{"_index":558,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["otelcol",{"_index":551,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_config",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_exporter",{"_index":219,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_logger",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":142,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":548,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":550,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":92,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracercomponent",{"_index":552,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"overview.html":{}}}],["otelwebtracermodule",{"_index":581,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":987,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":588,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1113,"title":{},"body":{"license.html":{}}}],["overide",{"_index":412,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1413,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1086,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1109,"title":{},"body":{"license.html":{}}}],["package",{"_index":641,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1397,"title":{},"body":{"license.html":{}}}],["param",{"_index":182,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":165,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":542,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["parser",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":1262,"title":{},"body":{"license.html":{}}}],["partial",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1324,"title":{},"body":{"license.html":{}}}],["party",{"_index":1272,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1212,"title":{},"body":{"license.html":{}}}],["peer",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["peerdependencies",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":101,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["percent",{"_index":1111,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":936,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1209,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1299,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1119,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1198,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1261,"title":{},"body":{"license.html":{}}}],["places",{"_index":1267,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":385,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":276,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["plugins",{"_index":926,"title":{},"body":{"index.html":{}}}],["port",{"_index":397,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["possibilities",{"_index":920,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1361,"title":{},"body":{"license.html":{}}}],["power",{"_index":1100,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1122,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1207,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1396,"title":{},"body":{"license.html":{}}}],["private",{"_index":156,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":285,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":49,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1303,"title":{},"body":{"license.html":{}}}],["production",{"_index":45,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":829,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["project",{"_index":627,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":1015,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":1014,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1253,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":966,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":143,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":135,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":141,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":152,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:14",{"_index":198,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":371,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":245,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":164,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:32",{"_index":199,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":357,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:43",{"_index":167,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:55",{"_index":172,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/b3",{"_index":134,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":192,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":204,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":206,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":366,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":329,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagators",{"_index":210,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":271,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{}}}],["protocol",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":147,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":1146,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":179,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":146,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["provides",{"_index":1315,"title":{},"body":{"license.html":{}}}],["public",{"_index":266,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1208,"title":{},"body":{"license.html":{}}}],["publish",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1182,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1097,"title":{},"body":{"license.html":{}}}],["queue",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["reached",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1265,"title":{},"body":{"license.html":{}}}],["readme",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1382,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1305,"title":{},"body":{"license.html":{}}}],["received",{"_index":1191,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1248,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":956,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1330,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1243,"title":{},"body":{"license.html":{}}}],["redo",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1297,"title":{},"body":{"license.html":{}}}],["registerinstrumentations",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1158,"title":{},"body":{"license.html":{}}}],["rename",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1390,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1155,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1175,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1206,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1309,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1077,"title":{},"body":{"license.html":{}}}],["request",{"_index":235,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":517,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":516,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":514,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":1009,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requests",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["required",{"_index":1304,"title":{},"body":{"license.html":{}}}],["reset",{"_index":587,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"overview.html":{}}}],["resource",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["resource.default().merge",{"_index":334,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["response",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":1010,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1374,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1326,"title":{},"body":{"license.html":{}}}],["restart",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":916,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1130,"title":{},"body":{"license.html":{}}}],["results",{"_index":128,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1258,"title":{},"body":{"license.html":{}}}],["return",{"_index":173,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["returns",{"_index":170,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1152,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1370,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1332,"title":{},"body":{"license.html":{}}}],["root",{"_index":180,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1203,"title":{},"body":{"license.html":{}}}],["run",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":425,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":988,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":289,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":288,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":286,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":935,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":826,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["save",{"_index":928,"title":{},"body":{"index.html":{}}}],["scheduleddelaymillis",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":395,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1215,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1082,"title":{},"body":{"license.html":{}}}],["see",{"_index":153,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["selector",{"_index":561,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["sell",{"_index":1218,"title":{},"body":{"license.html":{}}}],["semanticattributes",{"_index":428,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_host",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_method",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_scheme",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_status_code",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_target",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_url",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_user_agent",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes.service_name",{"_index":335,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["send",{"_index":932,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1036,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1174,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1159,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1294,"title":{},"body":{"license.html":{}}}],["service",{"_index":41,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":39,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":566,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":418,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":384,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":416,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":518,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1080,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1114,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":48,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":349,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":347,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":527,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":18,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":537,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1127,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1373,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1325,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":35,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":231,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:16",{"_index":239,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.kind",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["span.recordexception",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":1008,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanattributes",{"_index":30,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["spanexporter",{"_index":226,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spans",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":426,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.unset",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1345,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1406,"title":{},"body":{"license.html":{}}}],["stack",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":419,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1018,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":1020,"title":{},"body":{"index.html":{}}}],["started",{"_index":623,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1289,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1214,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1282,"title":{},"body":{"license.html":{}}}],["statements",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":158,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1255,"title":{},"body":{"license.html":{}}}],["status.code",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1353,"title":{},"body":{"license.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":853,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1210,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1285,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1168,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1166,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1192,"title":{},"body":{"license.html":{}}}],["such",{"_index":1105,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1293,"title":{},"body":{"license.html":{}}}],["support",{"_index":1366,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":1412,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":955,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1394,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1178,"title":{},"body":{"license.html":{}}}],["table",{"_index":882,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1415,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":960,"title":{},"body":{"index.html":{}}}],["template",{"_index":570,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["terminate",{"_index":1240,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1075,"title":{},"body":{"license.html":{}}}],["test",{"_index":650,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":365,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":174,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["theory",{"_index":1336,"title":{},"body":{"license.html":{}}}],["there's",{"_index":1025,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1162,"title":{},"body":{"license.html":{}}}],["third",{"_index":1271,"title":{},"body":{"license.html":{}}}],["this.addinstrumentationplugin(this.config.instrumentationconfig",{"_index":340,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.b3propagatorconfig",{"_index":184,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":211,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":519,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":525,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.servicename",{"_index":336,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":342,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":509,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":502,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":523,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":521,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":524,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":522,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":360,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":528,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":529,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(this.config.commonconfig.probabilitysampler",{"_index":333,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice",{"_index":339,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":212,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":337,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode(this.config.commonconfig.production",{"_index":338,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions",{"_index":345,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions.push(new",{"_index":351,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationservice.initinstrumentation",{"_index":572,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":213,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.logbody",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":602,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":343,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":520,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":332,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor",{"_index":346,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":341,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.zipkinconfig",{"_index":618,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1220,"title":{},"body":{"license.html":{}}}],["three",{"_index":925,"title":{},"body":{"index.html":{}}}],["through",{"_index":1083,"title":{},"body":{"license.html":{}}}],["throw",{"_index":543,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["time",{"_index":989,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":1061,"title":{},"body":{"index.html":{}}}],["title",{"_index":1321,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1414,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":996,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1337,"title":{},"body":{"license.html":{}}}],["touppercase",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["trace",{"_index":42,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":295,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["tracerprovider",{"_index":262,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":937,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1180,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1300,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1259,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1298,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1219,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1132,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1133,"title":{},"body":{"license.html":{}}}],["tree",{"_index":554,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["trouble",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":917,"title":{},"body":{"index.html":{}}}],["true",{"_index":296,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":1064,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":1056,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":899,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":992,"title":{},"body":{"index.html":{}}}],["two",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":1062,"title":{},"body":{"index.html":{}}}],["types",{"_index":1138,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1068,"title":{},"body":{"index.html":{}}}],["typo",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":282,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["under",{"_index":1096,"title":{},"body":{"license.html":{}}}],["underscore",{"_index":504,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["union",{"_index":1091,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1287,"title":{},"body":{"license.html":{}}}],["unset",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1031,"title":{},"body":{"index.html":{}}}],["update",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urltest",{"_index":947,"title":{},"body":{"index.html":{}}}],["use",{"_index":46,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":148,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":982,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":1003,"title":{},"body":{"index.html":{}}}],["useless",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":907,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":547,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["using",{"_index":1329,"title":{},"body":{"license.html":{}}}],["value",{"_index":23,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":577,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["variable",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1419,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1171,"title":{},"body":{"license.html":{}}}],["version",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["version.json",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":953,"title":{},"body":{"index.html":{}}}],["void",{"_index":277,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["want",{"_index":1024,"title":{},"body":{"index.html":{}}}],["warn",{"_index":999,"title":{},"body":{"index.html":{}}}],["warning",{"_index":918,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1317,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1311,"title":{},"body":{"license.html":{}}}],["web",{"_index":327,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["webtracer.component",{"_index":593,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.component.ts",{"_index":557,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["webtracer.component.ts:13",{"_index":564,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.component.ts:25",{"_index":565,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.module.ts",{"_index":590,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.module.ts:24",{"_index":591,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer/otel",{"_index":556,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["webtracerprovider",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1270,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1106,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1156,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1194,"title":{},"body":{"license.html":{}}}],["without",{"_index":1035,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1139,"title":{},"body":{"license.html":{}}}],["works",{"_index":838,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1199,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1189,"title":{},"body":{"license.html":{}}}],["written",{"_index":1172,"title":{},"body":{"license.html":{}}}],["xml",{"_index":326,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["xmlhttprequest",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":325,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["xmlhttrequestinstrumentation",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["xsrf",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":1040,"title":{},"body":{"index.html":{}}}],["you're",{"_index":990,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1401,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":104,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":105,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/InstrumentationConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":614,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":621,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":609,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":611,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["zone.js",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":586,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            multiHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        defineB3Encoding\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:43\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:55\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        b3PropagatorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         B3PropagatorConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                        \n                    \n\n            \n                \n                    B3PropagatorConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OTELCOL_CONFIG,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTELCOL_CONFIG) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   *\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   *\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exportTimeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxExportBatchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxQueueSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scheduledDelayMillis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            console\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            probabilitySampler\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:32\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   *\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:16\n                \n            \n\n\n            \n                \n                    To add Attributes in a Span during interception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpRequest\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpResponse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Span } from '@opentelemetry/api';\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   *\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:18\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContextPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContextPropagator } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContextPropagator\n   *\n   * @return TextMapPropagator as HttpTraceContextPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getExporter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getPropagator\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   *\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InstrumentationConfig.html":{"url":"interfaces/InstrumentationConfig.html","title":"interface - InstrumentationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InstrumentationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Instrumentation Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            documentLoad\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fetch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            xmlHttpRequest\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        documentLoad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        documentLoad:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    documentLoad : to add DocumentLoadInstrumentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fetch:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    fetch : to add FetchInstrumentation\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xmlHttpRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        xmlHttpRequest:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    xmlHttpRequest : to add XmlHttRequestInstrumentation\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                instrumentationOptions\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addInstrumentationPlugin\n                            \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:45\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        addInstrumentationPlugin\n                        \n                    \n                \n            \n            \n                \n                    \n                    addInstrumentationPlugin(instrumentationConfig: InstrumentationConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:125\n                \n            \n\n\n            \n                \n                    Enable plugin instrumentation\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    instrumentationConfig\n                                    \n                                                InstrumentationConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:144\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:154\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initInstrumentation\n                        \n                    \n                \n            \n            \n                \n                    \n                    initInstrumentation()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:72\n                \n            \n\n\n            \n                \n                    Init instrumentation on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:94\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:109\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ZoneContextManager()\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:40\n                        \n                    \n\n            \n                \n                    contextManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        instrumentationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InstrumentationOption[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:45\n                        \n                    \n\n            \n                \n                    instrumentationOptions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tracerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:35\n                        \n                    \n\n            \n                \n                    tracerProvider\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { Sampler } from '@opentelemetry/api';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationOption, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { DocumentLoadInstrumentation } from '@opentelemetry/instrumentation-document-load';\nimport { FetchInstrumentation } from '@opentelemetry/instrumentation-fetch';\nimport { XMLHttpRequestInstrumentation } from '@opentelemetry/instrumentation-xml-http-request';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor, BatchSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { OTELCOL_CONFIG, OpenTelemetryConfig, InstrumentationConfig } from '../../configuration/opentelemetry-config';\nimport { OTELCOL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\n\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider: WebTracerProvider;\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * instrumentationOptions\n   */\n  private instrumentationOptions: InstrumentationOption[];\n\n  /**\n   * Constructor\n   *\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OTELCOL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator) {\n      this.tracerProvider = new WebTracerProvider({\n        sampler: this.defineProbabilitySampler(this.convertStringToNumber(this.config.commonConfig.probabilitySampler)),\n        resource: Resource.default().merge(\n          new Resource({\n            [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n          })\n        ),\n      });\n    }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.insertSpanProcessorProductionMode(this.config.commonConfig.production, this.exporterService);\n    this.addInstrumentationPlugin(this.config.instrumentationConfig);\n\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator()\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentationOptions,\n      tracerProvider: this.tracerProvider,\n    });\n\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   *\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracerProvider.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   *\n   * @param boolean production\n   * @param IExporter exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ) {\n    this.tracerProvider.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(exporter.getExporter())\n        : new SimpleSpanProcessor(exporter.getExporter())\n    );\n  }\n\n  /**\n   * Enable plugin instrumentation\n   *\n   * @param instrumentationConfig\n   */\n   private addInstrumentationPlugin(instrumentationConfig: InstrumentationConfig) {\n    this.instrumentationOptions = [];\n    if(instrumentationConfig?.xmlHttpRequest) {\n      this.instrumentationOptions.push(new XMLHttpRequestInstrumentation());\n    }\n    if(instrumentationConfig?.documentLoad) {\n      this.instrumentationOptions.push(new DocumentLoadInstrumentation());\n    }\n    if(instrumentationConfig?.fetch) {\n      this.instrumentationOptions.push(new FetchInstrumentation());\n    }\n  }\n\n  /**\n   * convert String to Number (or undefined)\n   *\n   * @param value\n   * @returns number or undefined\n   */\n  private convertStringToNumber(value: string): number {\n    return value !== undefined ? Number(value) : undefined;\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an JaegerPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerPropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                        \n                    \n\n            \n                \n                    custom Header\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\nimport { OTELCOL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTELCOL_CONFIG) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerPropagator\n   *\n   * @return TextMapPropagator as JaegerPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerPropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { NoopTextMapPropagator } from '@opentelemetry/api/build/src/propagation/NoopTextMapPropagator';\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   *\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b3PropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSpanProcessorConfig\n                                        \n                                \n                                \n                                        \n                                            commonConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            instrumentationConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jaegerPropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otelcolConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipkinConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        instrumentationConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        instrumentationConfig:         InstrumentationConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InstrumentationConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    instrumentationConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:58\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator injected\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define logger\n\n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customSpan interface to add attributes\n\n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                encapsulates all calls to DOM APIs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:269\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:252\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:159\n                \n            \n\n\n            \n                \n                    Get current scheme, hostname and port\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:168\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        injectContextAndHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:200\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:220\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:232\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:108\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCustomSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCustomSpan(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:281\n                \n            \n\n\n            \n                \n                    Set custom attributes in span with a CustomSpan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        Span\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StackContextManager\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:54\n                        \n                    \n\n            \n                \n                    context manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:58\n                        \n                    \n\n            \n                \n                    Log or not body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                        \n                    \n\n            \n                \n                    tracer\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, SpanStatusCode, DiagLogger } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/sdk-trace-web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  BufferConfig\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes, SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OTELCOL_CONFIG,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTELCOL_LOGGER, CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   *\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator injected\n   * @param logger define logger\n   * @param customSpan a customSpan interface to add attributes\n   * @param platformLocation encapsulates all calls to DOM APIs\n   */\n  constructor(\n    @Inject(OTELCOL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTELCOL_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n      resource: Resource.default().merge(\n        new Resource({\n          [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n        })\n      ),\n    });\n    this.insertSpanProcessorProductionMode();\n    this.insertConsoleSpanExporter();\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   *\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager.disable(); //FIX - reinit contextManager for each http call\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.UNSET\n          });\n          this.setCustomSpan(span, request, event);\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n          this.setCustomSpan(span, request, event);\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   *\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        `${urlRequest.protocol.replace(':', '').toUpperCase()} ${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            [SemanticAttributes.HTTP_METHOD]: request.method,\n            [SemanticAttributes.HTTP_URL]: request.urlWithParams,\n            [SemanticAttributes.HTTP_HOST]: urlRequest.host,\n            [SemanticAttributes.HTTP_SCHEME]: urlRequest.protocol.replace(':', ''),\n            [SemanticAttributes.HTTP_TARGET]: urlRequest.pathname + urlRequest.search,\n            [SemanticAttributes.HTTP_USER_AGENT]: window.navigator.userAgent\n          },\n          kind: api.SpanKind.CLIENT,\n        },\n        this.contextManager.active()\n      );\n    /*eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_currentContext\"] }]*/\n    this.contextManager._currentContext = api.trace.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   *\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    };\n    this.tracer.addSpanProcessor(\n      this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter())\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n    return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OTELCOL_CONFIG,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OTELCOL_CONFIG, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attributes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            concurrencyLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     SpanAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpanAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        concurrencyLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concurrencyLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An optional limit on pending requests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:4318/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OtelWebTracerComponent.html":{"url":"components/OtelWebTracerComponent.html","title":"component - OtelWebTracerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OtelWebTracerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Otel Web Tracer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                otel-instrumentation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentationService: InstrumentationService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentationService\n                                                  \n                                                        \n                                                                        InstrumentationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                InstrumentationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:25\n                \n            \n\n\n            \n                \n                    Init Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InstrumentationService } from '../../services/instrumentation/instrumentation.service';\n\n\n/**\n * Otel Web Tracer Component\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'otel-instrumentation',\n  template: '',\n})\nexport class OtelWebTracerComponent implements OnInit {\n\n  /**\n   * Constructor\n   *\n   * @param instrumentationService InstrumentationService\n   */\n  constructor(private instrumentationService: InstrumentationService) { }\n\n  /**\n   * Init Component\n   */\n  ngOnInit(): void {\n   this.instrumentationService.initInstrumentation();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OtelWebTracerComponent', 'selector': 'otel-instrumentation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OtelWebTracerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OTELCOL_CONFIG,\n} from './configuration/opentelemetry-config';\nimport { OtelWebTracerComponent } from './component/otel-webtracer/otel-webtracer.component';\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\n@NgModule({\n  declarations: [OtelWebTracerComponent],\n  exports: [OtelWebTracerComponent]\n})\nexport class OtelWebTracerModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        { provide: OTELCOL_CONFIG, useValue: config },\n        InstrumentationService\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:23\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:46\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        otelcolConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     collectorTypes.CollectorExporterConfigBase\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:23\n                        \n                    \n\n            \n                \n                    CollectorExporterConfigBase\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport {\n  OpenTelemetryConfig,\n  OTELCOL_CONFIG\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter,\n  collectorTypes,\n} from '@opentelemetry/exporter-collector';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: collectorTypes.CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OTELCOL_CONFIG) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      concurrencyLimit: Number(config.otelcolConfig?.concurrencyLimit),\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   *\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * Instrumentation Configuration\n */\nexport interface InstrumentationConfig {\n  /** xmlHttpRequest : to add XmlHttRequestInstrumentation */\n  xmlHttpRequest?: boolean;\n  /** documentLoad : to add DocumentLoadInstrumentation */\n  documentLoad?: boolean;\n  /** fetch : to add FetchInstrumentation */\n  fetch?: boolean;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n  /** instrumentationConfig */\n  instrumentationConfig?: InstrumentationConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OTELCOL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        zipkinConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExporterConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                        \n                    \n\n            \n                \n                    zipkinConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { OpenTelemetryConfig, OTELCOL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTELCOL_CONFIG) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.25.0-1 (2021-10-01)\nBug Fixes\n\nissue#80: old reference package (ee08e85), closes issue#80\n\n0.25.0 (2021-09-17)\nFeatures\n\nupdate collector and add new default http port collector (4318) (5a7c375)\n\nBug Fixes\n\nadd test for instrumentation (23e35d1)\npeer dependencies version number (41c8947)\nreturn to 0.24.0 in document-load to release (1f22380)\n\n0.24.0-1 (2021-08-04)\nBug Fixes\n\nbad version on peerDependencies (c2b4209)\n\n0.24.0 (2021-08-01)\n0.23.0 (2021-07-08)\n0.22.0 (2021-06-17)\nBug Fixes\n\nreadme (a6307f2)\n\n0.21.0 (2021-06-11)\n0.20.0 (2021-06-07)\nFeatures\n\nadd concurencyLimit (40f33cc)\n\nBug Fixes\n\nspan.kind to client value and status.code to unset (#51) (b3e15af)\nissue#41: add custom dynamic span attributes (1c7c0c0), closes issue#41\n\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n            \n            component\n            OtelWebTracerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            InstrumentationConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.4\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.2.4\n        \n            @angular/compiler : ^10.2.4\n        \n            @angular/core : ^10.2.4\n        \n            @angular/forms : ^10.2.4\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.2.4\n        \n            @angular/platform-browser-dynamic : ^10.2.4\n        \n            @angular/router : ^10.2.4\n        \n            body-parser : ^1.19.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.3.3\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nInstrumentation Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\n\n\nComponent otel-instrumentation\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nOtel Collector\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with three web plugins : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n\n\n\nInstallation\nWith npm :\nnpm i @jufab/opentelemetry-angular-interceptor && npm i @opentelemetry/api @opentelemetry/sdk-trace-web @opentelemetry/sdk-trace-base @opentelemetry/core @opentelemetry/semantic-conventions @opentelemetry/resources @opentelemetry/exporter-collector @opentelemetry/exporter-zipkin @opentelemetry/propagator-b3 @opentelemetry/propagator-jaeger @opentelemetry/context-zone-peer-dep @opentelemetry/instrumentation @opentelemetry/instrumentation-document-load @opentelemetry/instrumentation-fetch @opentelemetry/instrumentation-xml-http-request --save-devConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n  instrumentationConfig?: InstrumentationConfig;\n}Example global Configuration\nFrom the interceptor-example\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nexport const environment: IEnvironment = {\n  production: false,\n  urlTest: 'http://localhost:4200/api',\n  openTelemetryConfig: {\n    commonConfig: {\n      console: true, // Display trace on console\n      production: false, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: DiagLogLevel.ALL //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', // URL of opentelemetry collector\n    },\n    instrumentationConfig: {\n      xmlHttpRequest: true,\n      fetch: true,\n      documentLoad: true,\n    }\n  }\n};\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:4318/v1/traces)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\nconcurrencyLimit (string) : An optional limit on pending requests (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : hhttps://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nInstrumentation Configuration\nthis configuration is only for the instrumentation Mode\n\nxmlHttpRequest: (boolean) Activate XmlHttpRequest plugin\nfetch:(boolean) Activate fetch plugin\ndocumentLoad: (boolean) Activate documentLoad plugin\n\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 3 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation\n...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nComponent otel-instrumentation\nA component named otel-instrumentation must be add in your application.\nIn instrumentation-example, this component is in app.component.html like this :\n...\n\n...there is no configuration/directive need : all is in OtelWebTracerModule\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n\nspan : Current span, you can set or get attributes\nrequest : Current request in interceptor\nresponse : Current response in interceptor\n\nImplement CustomSpan class like : \nclass CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with CUSTOM_SPAN :\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]\nYou can see an example in the interceptor-example.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nnpm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nnpm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nOtel Collector\nOtel Collector 0.29.0 is not compatible with this library in version 0.23.0.\nA bug fix is in progress here: https://github.com/open-telemetry/opentelemetry-js/issues/2321\nOtel Collector 0.28.0 is OK.\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        10 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n \nAdd more configuration for OpenTelemetry-collector : See here  \n\n \nJaeger  \n\n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here\n\n\n \nPrepare baggage here\n\n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_CONFIG   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CUSTOM_SPAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.custom-span')\n                    \n                \n\n            \n                \n                    custom span\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTELCOL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('opentelemetry.config')\n                    \n                \n\n            \n                \n                    OpenTelemetryInjectConfig : Config injection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTELCOL_LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.logger')\n                    \n                \n\n            \n                \n                    Logger : injection for a logger compatible\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTELCOL_EXPORTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.exporter')\n                    \n                \n\n            \n                \n                    injection for a Exporter\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTELCOL_PROPAGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.propagator')\n                    \n                \n\n            \n                \n                    injection for a propagator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
