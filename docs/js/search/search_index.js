var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AwsXrayPropagatorModule.html",[0,1.263,1,2.395]],["body/modules/AwsXrayPropagatorModule.html",[1,4.102,2,1.51,3,0.341,4,0.341,5,0.262,6,0.262,7,3.795,8,4.013,9,3.424,10,2.883,11,0.386,12,0.023,13,2.163,14,0.341,15,2.299,16,1.919,17,3.748,18,3.129,19,2.672,20,1.806,21,1.919,22,1.806,23,1.12,24,1.919,25,0.341,26,0.758,27,0.019,28,0.019]],["title/injectables/AwsXrayPropagatorService.html",[17,2.189,29,0.649]],["body/injectables/AwsXrayPropagatorService.html",[3,0.312,4,0.312,5,0.24,6,0.297,7,4.304,8,4.147,9,3.884,11,0.388,12,0.023,14,0.312,16,1.755,17,4.034,18,2.861,25,0.312,26,0.693,27,0.018,28,0.018,29,1.053,30,1.755,31,2.443,32,0.849,33,0.795,34,1.522,35,3.445,36,1.156,37,3.923,38,1.048,39,6.812,40,1.227,41,3.542,42,2.177,43,1.227,44,3.132,45,1.755,46,1.755,47,1.555,48,0.743]],["title/interfaces/B3PropagatorConfig.html",[49,0.692,50,1.428]],["body/interfaces/B3PropagatorConfig.html",[3,0.173,4,0.173,5,0.133,6,0.133,11,0.302,12,0.024,14,0.173,23,0.568,25,0.447,27,0.012,28,0.012,32,0.471,33,0.441,38,0.412,43,0.681,48,0.916,49,1.156,50,2.387,51,0.974,52,1.179,53,1.179,54,1.815,55,1.214,56,1.146,57,2.5,58,2.538,59,0.604,60,2.187,61,2.304,62,1.739,63,1.648,64,1.709,65,1.942,66,1.884,67,1.288,68,1.972,69,1.972,70,1.972,71,1.972,72,1.179,73,1.972,74,1.179,75,2.023,76,1.884,77,1.179,78,1.179,79,0.974,80,1.355,81,1.262,82,1.179,83,1.648,84,1.884,85,0.568,86,1.036,87,0.798,88,1.851,89,2.499,90,1.648,91,1.104,92,1.355,93,1.355,94,1.884,95,1.648,96,1.104,97,1.104,98,1.216,99,1.179,100,1.262,101,1.648,102,1.262,103,1.355,104,2.052,105,1.884,106,1.262,107,2.254,108,1.262,109,1.262,110,1.262,111,1.76,112,1.262,113,1.262,114,1.262,115,1.179,116,1.262,117,1.262,118,1.262,119,1.262,120,1.104,121,1.179,122,1.262,123,1.262,124,1.179,125,1.262,126,1.179,127,1.104,128,1.648,129,2.187,130,1.355,131,2.064,132,2.187,133,1.262,134,1.739,135,0.916,136,1.262,137,1.262,138,1.262,139,1.179,140,1.036,141,1.648,142,1.262,143,1.355,144,2.34,145,0.916,146,1.179,147,1.146,148,1.884,149,1.76,150,1.76,151,1.624,152,1.431,153,1.454,154,2.196,155,1.262,156,1.547,157,1.262,158,1.036,159,1.262,160,1.036,161,1.262,162,1.036,163,1.262,164,1.036,165,1.036,166,0.916,167,2.187,168,1.262,169,1.179,170,1.262,171,1.262,172,1.648,173,1.884,174,1.368,175,1.648,176,1.262,177,1.262]],["title/modules/B3PropagatorModule.html",[0,1.263,178,2.395]],["body/modules/B3PropagatorModule.html",[2,1.521,3,0.343,4,0.343,5,0.264,6,0.264,10,2.904,11,0.387,12,0.023,13,2.173,14,0.343,15,2.309,16,1.933,19,2.691,20,1.819,21,1.933,22,1.819,23,1.129,24,1.933,25,0.343,26,0.763,27,0.019,28,0.019,178,4.12,179,3.822,180,3.449,181,3.764,182,3.449]],["title/injectables/B3PropagatorService.html",[29,0.649,181,2.189]],["body/injectables/B3PropagatorService.html",[3,0.229,4,0.229,5,0.176,6,0.315,11,0.361,12,0.024,14,0.229,16,1.291,25,0.229,26,0.51,27,0.015,28,0.015,29,0.861,30,1.291,31,1.797,32,0.985,33,0.585,34,1.244,35,3.057,36,1.447,38,1.033,40,1.244,41,3.207,42,1.78,43,0.902,44,2.303,45,1.291,46,1.291,47,1.144,48,0.546,50,2.646,54,1.401,55,1.486,56,1.173,58,2.304,59,1.264,60,2.701,61,2.534,62,2.487,63,2.612,65,2.067,67,1.577,85,1.039,135,1.675,147,1.569,151,1.016,152,1.629,179,4.555,180,4.111,181,3.58,182,2.303,183,2.902,184,3.176,185,3.979,186,3.316,187,4.028,188,4.677,189,2.31,190,1.939,191,4.677,192,1.894,193,4.677,194,3.392,195,2.902,196,4.028,197,6.053,198,3.392,199,1.673,200,1.673,201,2.307,202,2.303,203,3.392,204,3.392,205,3.392,206,3.392,207,3.392,208,3.392]],["title/interfaces/BatchSpanProcessorConfig.html",[49,0.692,104,1.428]],["body/interfaces/BatchSpanProcessorConfig.html",[3,0.165,4,0.165,5,0.127,6,0.127,11,0.296,12,0.024,14,0.165,23,0.543,25,0.45,27,0.012,28,0.012,32,0.449,33,0.421,38,0.393,43,0.65,48,0.901,49,1.139,50,2.153,51,0.93,52,1.125,53,1.125,54,1.79,55,1.172,56,1.533,57,1.205,58,2.608,59,1.169,60,1.592,61,1.8,62,1.404,63,1.054,64,1.499,65,1.773,66,1.205,67,0.824,68,1.918,69,1.918,70,1.918,71,1.918,72,1.125,73,1.918,74,1.125,75,1.954,76,1.819,77,1.125,78,1.125,79,0.93,80,1.294,81,1.205,82,1.125,83,1.592,84,1.819,85,0.543,86,0.989,87,0.771,88,1.8,89,2.449,90,1.592,91,1.054,92,1.294,93,1.294,94,1.819,95,1.592,96,1.054,97,1.054,98,1.183,99,1.125,100,1.205,101,1.592,102,1.205,103,1.954,104,2.153,105,2.443,106,1.819,107,2.757,108,1.819,109,1.819,110,1.819,111,2.576,112,1.819,113,1.819,114,1.819,115,2.282,116,1.819,117,1.819,118,1.819,119,1.819,120,1.592,121,2.282,122,1.819,123,1.819,124,1.7,125,1.819,126,2.282,127,1.054,128,1.592,129,2.137,130,1.294,131,2.023,132,2.137,133,1.205,134,1.692,135,0.875,136,1.205,137,1.205,138,1.205,139,1.125,140,0.989,141,1.592,142,1.205,143,1.294,144,2.294,145,0.875,146,1.125,147,1.114,148,1.819,149,1.7,150,1.7,151,1.592,152,1.398,153,1.404,154,2.153,155,1.205,156,1.494,157,1.205,158,0.989,159,1.205,160,0.989,161,1.205,162,0.989,163,1.205,164,0.989,165,0.989,166,0.875,167,2.137,168,1.205,169,1.125,170,1.205,171,1.205,172,1.592,173,1.819,174,1.321,175,1.592,176,1.205,177,1.205]],["title/interfaces/CommonCollectorConfig.html",[49,0.692,83,1.522]],["body/interfaces/CommonCollectorConfig.html",[3,0.162,4,0.162,5,0.125,6,0.125,11,0.293,12,0.024,14,0.162,23,0.533,25,0.441,27,0.012,28,0.012,32,0.441,33,0.413,38,0.386,43,0.638,48,0.894,49,1.132,50,2.135,51,0.913,52,1.105,53,1.105,54,1.779,55,1.156,56,1.58,57,1.183,58,2.546,59,1.31,60,1.57,61,1.78,62,1.384,63,1.035,64,1.482,65,1.757,66,1.183,67,0.809,68,1.897,69,1.897,70,1.897,71,1.897,72,1.105,73,1.897,74,1.105,75,1.927,76,2.42,77,1.105,78,1.105,79,0.913,80,1.27,81,1.183,82,1.676,83,1.897,84,2.738,85,0.808,86,1.473,87,1.025,88,2.406,89,2.979,90,2.395,91,1.57,92,1.927,93,1.927,94,2.738,95,2.117,96,1.57,97,1.57,98,1.305,99,2.26,100,1.794,101,1.897,102,2.42,103,1.27,104,1.987,105,1.794,106,1.183,107,2.168,108,1.183,109,1.183,110,1.183,111,1.676,112,1.183,113,1.183,114,1.183,115,1.105,116,1.183,117,1.183,118,1.183,119,1.183,120,1.035,121,1.105,122,1.183,123,1.183,124,1.105,125,1.183,126,1.105,127,1.035,128,1.57,129,2.117,130,1.27,131,2.007,132,2.117,133,1.183,134,1.673,135,0.859,136,1.183,137,1.183,138,1.183,139,1.105,140,0.971,141,1.57,142,1.183,143,1.27,144,2.276,145,0.859,146,1.105,147,1.102,148,1.794,149,1.676,150,1.676,151,1.579,152,1.385,153,1.384,154,2.135,155,1.183,156,1.473,157,1.183,158,0.971,159,1.183,160,0.971,161,1.183,162,0.971,163,1.183,164,0.971,165,0.971,166,0.859,167,2.117,168,1.183,169,1.105,170,1.183,171,1.183,172,1.57,173,1.794,174,1.303,175,1.57,176,1.183,177,1.183]],["title/modules/CompositePropagatorModule.html",[0,1.263,209,2.395]],["body/modules/CompositePropagatorModule.html",[2,1.521,3,0.343,4,0.343,5,0.264,6,0.264,10,2.904,11,0.387,12,0.023,13,2.173,14,0.343,15,2.309,16,1.933,19,2.691,20,1.819,21,1.933,22,1.819,23,1.129,24,1.933,25,0.343,26,0.763,27,0.019,28,0.019,209,4.12,210,3.822,211,3.822,212,4.12,213,3.822]],["title/injectables/CompositePropagatorService.html",[29,0.649,212,2.395]],["body/injectables/CompositePropagatorService.html",[3,0.259,4,0.259,5,0.2,6,0.296,8,3.154,9,2.606,11,0.401,12,0.023,14,0.259,16,1.461,17,4.108,18,2.381,19,3.216,25,0.259,26,0.577,27,0.016,28,0.016,29,0.936,30,1.461,31,2.033,32,0.706,33,0.661,34,1.353,35,3.216,36,1.275,38,0.978,40,1.021,41,3.346,42,1.935,43,1.021,45,1.461,46,1.461,47,1.294,48,0.618,56,0.962,59,0.906,85,0.853,87,1.268,180,2.606,181,4.027,182,2.606,186,3.216,189,2.62,192,1.554,199,1.893,210,4.29,211,4.29,212,4.122,214,3.837,215,4.108,216,4.108,217,3.837,218,3.837,219,6.49,220,2.381,221,3.265,222,2.694,223,2.606,224,2.194,225,2.343,226,2.606,227,3.837,228,3.837,229,3.837,230,3.837,231,3.265,232,3.837,233,3.837,234,3.837,235,3.837]],["title/modules/ConsoleSpanExporterModule.html",[0,1.263,236,2.395]],["body/modules/ConsoleSpanExporterModule.html",[2,1.518,3,0.342,4,0.342,5,0.263,6,0.263,11,0.387,12,0.023,13,2.17,14,0.342,20,1.815,21,1.929,22,1.815,23,1.126,24,1.929,25,0.342,26,0.762,27,0.019,28,0.019,88,2.052,98,1.612,236,4.114,237,3.813,238,3.441,239,4.114,240,3.441,241,2.614,242,2.5]],["title/injectables/ConsoleSpanExporterService.html",[29,0.649,239,2.395]],["body/injectables/ConsoleSpanExporterService.html",[3,0.314,4,0.314,5,0.241,6,0.299,11,0.372,12,0.023,14,0.314,25,0.314,26,0.698,27,0.018,28,0.018,29,1.057,30,1.767,32,0.854,33,0.8,34,1.528,36,1.164,38,1.05,40,1.235,45,1.767,46,1.767,47,1.566,48,0.748,64,1.937,87,0.97,98,1.734,237,4.322,239,4.426,242,2.29,243,2.88,244,2.479,245,4.043,246,3.949,247,4.904,248,4.155,249,2.479,250,2.29,251,2.29]],["title/interfaces/CustomSpan.html",[49,0.692,79,1.343]],["body/interfaces/CustomSpan.html",[3,0.292,4,0.292,5,0.225,6,0.285,11,0.328,12,0.023,25,0.292,27,0.018,28,0.018,32,1.01,33,0.744,34,1.461,36,1.083,40,1.149,43,1.149,47,1.851,49,1.286,51,1.643,56,1.083,59,1.019,79,2.089,85,0.959,97,2.74,98,1.903,134,2.417,192,1.749,201,2.977,252,4.67,253,3.674,254,4.67,255,4.13,256,3.55,257,4.67,258,4.778,259,5.042,260,5.042,261,4.778,262,4.318,263,4.67,264,4.67,265,2.932]],["title/interfaces/IExporter.html",[49,0.692,249,1.522]],["body/interfaces/IExporter.html",[3,0.319,4,0.319,5,0.246,6,0.302,11,0.347,12,0.023,14,0.319,25,0.392,27,0.019,28,0.019,32,0.87,33,0.814,34,1.545,36,1.185,38,0.761,40,1.257,48,0.761,49,1.234,51,1.799,64,1.959,72,2.177,87,0.987,135,2.08,153,1.799,154,1.914,241,2.039,244,2.905,245,4.069,248,4.307,249,2.506,250,2.331,251,2.331,266,3.556,267,4.726,268,4.37,269,5.807,270,4.02]],["title/interfaces/IPropagator.html",[42,1.343,49,0.692]],["body/interfaces/IPropagator.html",[3,0.324,4,0.324,5,0.249,6,0.304,11,0.349,12,0.023,14,0.324,15,1.823,25,0.396,27,0.019,28,0.019,32,0.882,33,0.826,34,1.558,35,3.491,36,1.201,38,0.772,40,1.275,41,3.351,42,2.229,43,1.275,48,0.772,49,1.241,51,1.823,72,2.207,135,2.097,145,2.42,153,1.823,154,1.94,268,4.406,271,3.604,272,4.79,273,4.982,274,5.856,275,4.075]],["title/injectables/InstrumentationService.html",[29,0.649,276,2.189]],["body/injectables/InstrumentationService.html",[3,0.152,4,0.152,5,0.117,6,0.317,11,0.376,12,0.024,14,0.152,15,0.854,25,0.152,26,0.337,27,0.011,28,0.011,29,0.636,30,0.854,32,0.776,33,0.387,34,0.92,36,1.496,38,0.557,40,1.499,42,1.804,43,0.597,45,0.854,46,1.316,48,0.962,54,1.036,55,1.099,56,1.356,58,1.948,59,1.33,64,1.423,65,1.697,67,1.423,77,2.184,78,1.034,85,1.202,86,1.4,87,0.722,88,2.468,89,2.938,90,2.432,98,1.439,135,1.238,145,0.804,147,1.188,151,0.672,152,1.642,162,0.909,166,1.937,186,3.647,189,1.82,190,1.283,192,2.19,195,2.145,199,1.107,200,1.107,201,2.87,202,1.524,220,1.392,241,0.968,244,2.63,247,2.602,249,2.677,250,1.706,251,1.107,256,1.832,276,2.941,277,1.909,278,1.832,279,3.219,280,4.601,281,5.408,282,2.942,283,2.942,284,2.865,285,4.74,286,2.942,287,2.942,288,3.589,289,4.032,290,4.032,291,4.218,292,3.458,293,2.942,294,2.244,295,2.942,296,4.491,297,2.942,298,2.244,299,2.602,300,4.601,301,2.942,302,4.032,303,2.942,304,2.244,305,4.032,306,3.566,307,3.458,308,2.244,309,4.378,310,2.348,311,2.348,312,3.458,313,2.244,314,2.942,315,2.244,316,2.244,317,3.174,318,2.942,319,3.174,320,2.348,321,4.218,322,3.566,323,2.244,324,1.909,325,1.909,326,1.689,327,1.909,328,2.942,329,1.909,330,1.909,331,2.942,332,1.909,333,1.689,334,1.689,335,3.589,336,1.689,337,3.458,338,1.524,339,2.942,340,2.244,341,2.244,342,1.909,343,1.909,344,2.244,345,3.458,346,2.244,347,1.909,348,1.909,349,1.909,350,2.244,351,2.244,352,2.244,353,1.909,354,1.909,355,2.244,356,2.244,357,1.909,358,2.244,359,2.244,360,2.244,361,3.458,362,1.909,363,2.244,364,2.244,365,2.244]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.263,366,2.395]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.5,3,0.338,4,0.338,5,0.26,6,0.26,10,2.862,11,0.385,12,0.023,13,2.154,14,0.338,15,2.289,16,1.906,19,2.653,20,1.793,21,1.906,22,1.793,23,1.112,24,1.906,25,0.338,26,0.752,27,0.019,28,0.019,87,1.347,216,3.732,224,2.862,225,2.971,226,3.4,366,4.084,367,3.768]],["title/injectables/JaegerHttpTracePropagatorService.html",[29,0.649,216,2.189]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.264,4,0.264,5,0.203,6,0.318,11,0.389,12,0.024,14,0.264,16,1.485,25,0.264,26,0.586,27,0.016,28,0.016,29,0.946,30,1.485,31,2.067,32,0.946,33,0.672,34,1.368,35,3.237,36,1.441,38,0.984,40,1.038,41,3.364,42,1.956,43,1.038,44,2.649,45,1.485,46,1.485,47,1.316,48,0.629,55,1.633,56,0.978,58,1.956,59,1.214,62,1.956,85,0.867,87,1.409,131,1.956,146,2.649,147,1.635,151,1.169,152,1.725,186,3.046,189,2.481,190,2.23,192,1.58,199,1.924,200,1.924,201,1.924,202,2.649,216,3.791,224,2.23,225,3.109,226,4.149,284,2.649,367,4.598,368,4.373,369,3.901,370,5.402,371,2.649,372,3.901,373,3.901,374,3.901]],["title/interfaces/JaegerPropagatorConfig.html",[49,0.692,144,1.522]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.175,4,0.175,5,0.134,6,0.134,11,0.304,12,0.024,14,0.175,23,0.575,25,0.448,27,0.012,28,0.012,32,0.476,33,0.446,38,0.417,43,0.688,48,0.92,49,1.161,50,2.206,51,0.984,52,1.192,53,1.192,54,1.821,55,1.224,56,1.153,57,1.276,58,2.542,59,0.611,60,1.662,61,1.863,62,1.751,63,1.116,64,1.551,65,1.825,66,1.276,67,0.872,68,1.985,69,1.985,70,1.985,71,1.985,72,1.192,73,1.985,74,1.192,75,2.04,76,1.899,77,1.192,78,1.192,79,0.984,80,1.37,81,1.276,82,1.192,83,1.662,84,1.899,85,0.575,86,1.047,87,0.804,88,1.863,89,2.51,90,1.662,91,1.116,92,1.37,93,1.37,94,1.899,95,1.662,96,1.116,97,1.116,98,1.224,99,1.192,100,1.276,101,1.662,102,1.276,103,1.37,104,2.064,105,1.899,106,1.276,107,2.269,108,1.276,109,1.276,110,1.276,111,1.774,112,1.276,113,1.276,114,1.276,115,1.192,116,1.276,117,1.276,118,1.276,119,1.276,120,1.116,121,1.192,122,1.276,123,1.276,124,1.192,125,1.276,126,1.192,127,1.116,128,1.662,129,2.199,130,1.37,131,2.174,132,2.199,133,1.276,134,1.751,135,0.926,136,1.276,137,1.276,138,1.276,139,1.192,140,1.047,141,1.662,142,1.276,143,1.37,144,2.553,145,1.379,146,2.348,147,1.153,148,1.899,149,1.774,150,1.774,151,1.632,152,1.439,153,1.466,154,2.206,155,1.276,156,1.559,157,1.276,158,1.047,159,1.276,160,1.047,161,1.276,162,1.047,163,1.276,164,1.047,165,1.047,166,0.926,167,2.199,168,1.276,169,1.192,170,1.276,171,1.276,172,1.662,173,1.899,174,1.379,175,1.662,176,1.276,177,1.276]],["title/modules/NoopSpanExporterModule.html",[0,1.263,375,2.395]],["body/modules/NoopSpanExporterModule.html",[2,1.489,3,0.336,4,0.336,5,0.258,6,0.258,11,0.398,12,0.023,13,2.145,14,0.336,20,1.78,21,1.892,22,1.78,23,1.105,24,1.892,25,0.336,26,0.747,27,0.019,28,0.019,98,1.594,238,3.376,240,3.376,241,2.585,242,2.452,375,4.067,376,3.741,377,3.741,378,5.989,379,3.741,380,4.067,381,4.229]],["title/injectables/NoopSpanExporterService.html",[29,0.649,380,2.395]],["body/injectables/NoopSpanExporterService.html",[3,0.314,4,0.314,5,0.241,6,0.299,11,0.372,12,0.023,14,0.314,25,0.314,26,0.698,27,0.018,28,0.018,29,1.057,30,1.767,32,0.854,33,0.8,34,1.528,36,1.164,38,1.05,40,1.235,45,1.767,46,1.767,47,1.566,87,0.97,98,1.734,166,2.234,242,2.29,243,2.88,244,2.479,245,4.043,246,3.949,248,4.155,249,2.479,250,2.29,251,2.29,376,4.322,377,4.322,380,4.426,382,5.744]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.263,383,2.654]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.5,3,0.338,4,0.338,5,0.26,6,0.26,10,2.862,11,0.385,12,0.023,13,2.154,14,0.338,15,2.289,16,1.906,19,2.653,20,1.793,21,1.906,22,1.793,23,1.112,24,1.906,25,0.338,26,0.752,27,0.019,28,0.019,225,2.307,381,4.26,383,4.526,384,3.768,385,4.378,386,3.768,387,4.526,388,4.084]],["title/injectables/NoopTextMapPropagatorService.html",[29,0.649,388,2.395]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.31,4,0.31,5,0.239,6,0.297,11,0.387,12,0.023,14,0.31,16,1.748,25,0.31,26,0.69,27,0.018,28,0.018,29,1.05,30,1.748,31,2.433,32,0.845,33,0.791,34,1.518,35,3.44,36,1.151,37,3.906,38,1.046,40,1.222,41,3.537,42,2.171,43,1.222,45,1.748,46,1.748,47,1.548,48,0.74,225,2.629,384,4.293,385,4.408,386,4.293,387,4.293,388,3.874,389,5.705,390,6.805,391,4.591]],["title/interfaces/OpenTelemetryConfig.html",[49,0.692,147,0.884]],["body/interfaces/OpenTelemetryConfig.html",[3,0.166,4,0.166,5,0.127,6,0.127,11,0.296,12,0.024,14,0.166,23,0.545,25,0.443,27,0.012,28,0.012,32,0.451,33,0.422,38,0.395,43,0.652,48,0.902,49,1.14,50,2.566,51,0.933,52,1.129,53,1.129,54,1.74,55,1.175,56,1.589,57,1.209,58,2.472,59,1.322,60,1.596,61,1.804,62,1.408,63,1.058,64,1.502,65,1.776,66,1.209,67,0.827,68,1.922,69,1.922,70,1.922,71,1.922,72,1.129,73,1.922,74,1.129,75,1.959,76,1.824,77,1.129,78,1.129,79,0.933,80,1.299,81,1.209,82,1.129,83,2.141,84,1.824,85,0.545,86,0.993,87,0.773,88,1.804,89,2.453,90,1.596,91,1.058,92,1.299,93,1.299,94,1.824,95,1.596,96,1.058,97,1.058,98,1.185,99,1.129,100,1.209,101,1.596,102,1.209,103,1.299,104,2.526,105,1.824,106,1.209,107,2.197,108,1.209,109,1.209,110,1.209,111,1.704,112,1.209,113,1.209,114,1.209,115,1.129,116,1.209,117,1.209,118,1.209,119,1.209,120,1.058,121,1.129,122,1.209,123,1.209,124,1.129,125,1.209,126,1.129,127,1.058,128,2.141,129,2.141,130,1.299,131,2.026,132,2.141,133,1.209,134,1.695,135,0.878,136,1.209,137,1.209,138,1.209,139,1.129,140,0.993,141,2.141,142,1.209,143,1.299,144,2.735,145,0.878,146,1.129,147,1.335,148,2.761,149,2.579,150,2.579,151,1.595,152,1.4,153,1.408,154,2.156,155,1.209,156,1.498,157,1.209,158,0.993,159,1.209,160,0.993,161,1.209,162,0.993,163,1.209,164,0.993,165,0.993,166,0.878,167,2.141,168,1.209,169,1.129,170,1.209,171,1.209,172,1.596,173,1.824,174,1.324,175,1.596,176,1.209,177,1.209]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[392,1.74,393,2.395]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.105,4,0.105,5,0.081,6,0.312,11,0.37,12,0.024,14,0.105,15,0.592,25,0.105,26,0.496,27,0.008,28,0.008,29,0.474,32,0.845,33,0.268,34,0.686,36,1.482,38,0.74,40,1.448,42,1.462,43,0.686,45,0.592,46,0.981,47,0.525,48,0.877,49,0.506,54,1.151,55,0.819,56,1.364,58,1.257,59,1.246,62,1.462,64,1.114,65,0.923,67,1.114,74,1.77,79,2.124,81,0.767,85,1.173,86,1.044,87,0.539,88,1.044,90,1.113,95,1.113,96,1.425,97,1.658,98,1.706,99,1.522,111,0.717,115,0.717,121,0.717,126,0.717,131,0.981,134,1.462,135,1.376,145,1.525,147,0.963,151,0.466,152,1.373,154,1.859,156,1.859,158,0.63,160,0.63,165,1.044,166,0.923,174,0.557,186,3.55,189,1.658,190,0.889,192,1.969,195,1.6,199,0.767,200,1.272,201,2.753,220,0.965,222,1.366,225,0.717,241,0.671,244,1.658,247,1.94,249,1.658,250,1.272,251,0.767,254,3.268,255,2.891,256,2.035,258,4.856,259,4.293,260,3.205,261,3.205,265,1.056,280,3.623,282,2.193,283,2.193,286,3.268,287,3.268,288,3.268,289,3.268,290,3.268,293,1.323,295,1.323,296,3.455,297,2.193,299,1.94,300,3.906,301,2.193,302,3.268,303,2.193,306,2.485,309,3.455,310,3.302,311,1.751,314,2.193,317,2.485,318,2.193,319,2.485,320,1.751,322,2.891,328,2.193,329,1.323,330,1.323,331,2.193,332,1.323,333,1.17,334,1.17,335,2.809,336,1.17,338,1.056,339,2.193,342,1.323,343,1.323,347,1.323,348,1.323,349,1.323,353,2.193,354,1.323,357,1.323,362,1.323,371,1.056,379,1.17,392,1.272,393,1.751,394,1.555,395,5.101,396,1.323,397,2.193,398,3.841,399,2.578,400,3.302,401,2.809,402,2.578,403,5.088,404,2.578,405,2.578,406,2.578,407,2.193,408,2.578,409,1.555,410,1.555,411,1.555,412,3.268,413,2.578,414,2.578,415,2.193,416,2.578,417,1.555,418,2.193,419,2.578,420,1.555,421,1.555,422,2.578,423,2.193,424,1.555,425,1.555,426,1.555,427,1.555,428,3.906,429,3.841,430,1.555,431,2.578,432,1.94,433,1.474,434,3.302,435,1.555,436,1.555,437,1.323,438,3.841,439,1.555,440,2.578,441,2.193,442,1.555,443,1.555,444,1.323,445,1.555,446,3.841,447,1.555,448,2.578,449,2.578,450,1.555,451,1.751,452,1.555,453,1.555,454,1.555,455,1.323,456,1.555,457,1.555,458,2.578,459,1.555,460,1.555,461,1.555,462,2.578,463,1.555,464,1.555,465,1.555,466,2.578,467,1.323,468,1.555,469,1.17,470,1.17,471,1.555,472,1.555,473,1.555,474,1.555,475,1.555,476,2.891,477,2.578,478,2.578,479,2.578,480,1.555,481,1.555,482,1.555,483,2.578,484,1.94,485,1.555,486,2.578,487,1.555,488,1.555,489,1.555,490,1.555,491,1.555,492,1.555,493,1.555,494,1.555,495,1.555,496,1.555,497,1.555,498,1.555,499,1.555,500,1.555,501,1.555,502,2.578,503,1.555,504,1.555,505,1.555,506,1.555,507,1.555,508,1.555,509,1.555,510,1.555,511,1.555,512,1.555,513,1.555,514,1.555,515,1.555,516,1.555,517,1.323,518,1.555,519,3.302,520,1.323,521,1.555,522,1.555,523,1.555,524,1.555,525,1.555,526,1.555,527,3.302,528,1.555,529,1.555,530,1.555,531,1.555,532,1.555,533,1.555,534,1.555,535,1.555,536,1.555,537,1.555,538,1.555,539,2.578,540,1.555,541,1.555,542,1.555,543,1.555,544,1.555,545,1.555,546,1.555,547,1.555,548,1.555]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.263,549,2.395]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.171,3,0.264,4,0.264,5,0.203,6,0.268,11,0.379,12,0.024,13,2.061,14,0.264,20,1.4,21,1.488,22,1.4,23,0.868,24,1.488,25,0.264,26,0.587,27,0.016,28,0.016,34,1.04,36,0.98,38,0.63,40,1.04,48,0.63,56,1.442,59,0.923,61,1.583,68,2.639,69,2.639,70,2.639,71,2.639,73,2.639,85,0.868,120,1.687,147,1.533,152,1.624,154,1.583,164,1.583,165,2.33,166,2.061,167,2.742,172,1.687,174,1.4,187,3.872,189,1.687,192,1.583,200,1.928,265,2.654,284,2.654,311,2.654,392,1.928,393,3.495,549,4.314,550,5.146,551,3.909,552,4.378,553,3.325,554,3.909,555,3.325,556,4.895,557,4.378,558,4.378,559,4.378,560,3.909,561,3.909,562,4.378,563,3.325,564,3.325,565,2.941,566,5.146,567,3.325]],["title/modules/OtelColExporterModule.html",[0,1.263,568,2.395]],["body/modules/OtelColExporterModule.html",[2,1.525,3,0.344,4,0.344,5,0.265,6,0.265,11,0.388,12,0.023,13,2.176,14,0.344,20,1.823,21,1.938,22,1.823,23,1.131,24,1.938,25,0.344,26,0.765,27,0.019,28,0.019,238,3.458,240,3.458,241,2.622,242,2.512,568,4.126,569,3.831,570,4.126,571,3.831]],["title/interfaces/OtelCollectorConfig.html",[49,0.692,128,1.522]],["body/interfaces/OtelCollectorConfig.html",[3,0.167,4,0.167,5,0.128,6,0.128,11,0.297,12,0.024,14,0.167,23,0.548,25,0.444,27,0.012,28,0.012,32,0.454,33,0.425,38,0.397,43,0.656,48,0.904,49,1.142,50,2.161,51,0.938,52,1.136,53,1.136,54,1.795,55,1.18,56,1.566,57,1.216,58,2.557,59,1.175,60,1.603,61,1.81,62,1.414,63,1.064,64,1.678,65,1.911,66,1.216,67,0.831,68,1.929,69,1.929,70,1.929,71,1.929,72,1.136,73,1.929,74,1.136,75,2.636,76,1.832,77,1.136,78,1.136,79,0.938,80,1.306,81,1.216,82,1.136,83,1.603,84,1.832,85,0.548,86,0.998,87,0.776,88,1.81,89,2.459,90,1.603,91,1.064,92,1.306,93,1.306,94,1.832,95,1.603,96,1.064,97,1.064,98,1.189,99,1.136,100,1.216,101,1.929,102,1.216,103,1.306,104,2.015,105,1.832,106,1.216,107,2.205,108,1.216,109,1.216,110,1.216,111,1.712,112,1.216,113,1.216,114,1.216,115,1.136,116,1.216,117,1.216,118,1.216,119,1.216,120,1.064,121,1.136,122,1.216,123,1.216,124,1.136,125,1.216,126,1.136,127,1.603,128,1.929,129,2.586,130,1.968,131,2.216,132,2.586,133,2.205,134,2.281,135,1.33,136,1.832,137,1.832,138,1.832,139,2.292,140,0.998,141,1.603,142,1.216,143,1.306,144,2.303,145,0.883,146,1.136,147,1.121,148,1.832,149,1.712,150,1.712,151,1.599,152,1.405,153,1.414,154,2.161,155,1.216,156,1.504,157,1.216,158,0.998,159,1.216,160,0.998,161,1.216,162,0.998,163,1.216,164,0.998,165,0.998,166,0.883,167,2.147,168,1.216,169,1.136,170,1.216,171,1.216,172,1.603,173,1.832,174,1.33,175,1.603,176,1.216,177,1.216]],["title/components/OtelWebTracerComponent.html",[278,1.869,572,2.189]],["body/components/OtelWebTracerComponent.html",[3,0.275,4,0.275,5,0.211,6,0.305,11,0.315,12,0.023,14,0.275,25,0.275,26,0.611,27,0.017,28,0.017,32,0.972,33,0.701,34,1.405,36,1.324,40,1.082,47,1.781,56,1.02,59,0.96,85,1.303,189,2.531,192,1.647,201,2.006,276,4.269,278,3.557,279,3.983,305,4.494,306,3.975,310,3.587,338,3.587,407,3.46,428,3.46,433,2.325,520,3.46,572,3.852,573,5.282,574,4.067,575,4.991,576,4.414,577,3.46,578,5.475,579,5.866,580,4.067,581,6.209,582,6.209,583,4.067,584,4.067,585,4.067,586,3.46,587,4.067,588,4.067,589,4.067,590,4.067,591,4.067,592,4.067,593,4.067,594,5.282,595,5.282,596,4.067,597,6.209,598,4.067,599,4.067,600,4.067]],["title/modules/OtelWebTracerModule.html",[0,1.263,601,2.189]],["body/modules/OtelWebTracerModule.html",[2,1.143,3,0.258,4,0.258,5,0.198,6,0.263,11,0.376,12,0.024,13,2.036,14,0.258,20,1.814,22,1.367,25,0.258,26,0.574,27,0.016,28,0.016,34,1.016,36,0.957,38,0.615,40,1.016,48,0.615,56,1.426,59,0.901,68,2.614,69,2.614,70,2.614,71,2.614,73,2.614,85,0.848,120,2.186,147,1.519,152,1.605,164,1.546,165,2.303,166,2.036,167,2.72,172,1.647,174,1.367,187,3.812,189,1.647,192,1.546,200,1.883,276,3.143,284,2.592,552,4.31,553,3.247,555,3.247,556,4.838,557,4.31,562,4.31,563,3.247,564,3.247,565,2.872,567,3.247,572,4.322,576,2.872,586,3.247,601,4.258,602,2.896,603,3.247,604,3.247,605,3.247,606,4.31,607,2.872,608,2.872,609,5.066,610,3.816,611,3.816,612,3.816,613,3.816]],["title/injectables/OtelcolExporterService.html",[29,0.649,570,2.395]],["body/injectables/OtelcolExporterService.html",[3,0.265,4,0.265,5,0.204,6,0.318,11,0.39,12,0.024,14,0.265,25,0.265,26,0.865,27,0.016,28,0.016,29,0.948,30,1.49,32,0.948,33,0.675,34,1.371,36,1.444,38,0.986,40,1.042,45,1.49,46,1.49,47,1.321,48,0.631,54,1.543,55,1.637,56,1.292,59,1.217,85,0.87,87,1.076,129,1.69,132,1.69,134,1.49,139,1.804,147,1.636,149,2.654,151,1.173,152,1.727,186,3.051,189,2.641,190,2.238,192,1.586,199,1.932,200,1.932,201,1.932,242,1.932,243,2.43,244,1.69,245,3.796,248,3.573,249,2.224,250,1.932,251,2.542,455,3.332,569,4.604,570,4.155,614,5.153,615,3.916,616,6.119,617,5.759,618,5.153,619,3.916,620,2.947,621,2.947,622,3.916,623,3.916,624,3.916,625,3.916,626,3.916,627,3.916,628,3.916,629,3.916]],["title/modules/W3CTraceContextPropagatorModule.html",[0,1.263,630,2.395]],["body/modules/W3CTraceContextPropagatorModule.html",[2,1.5,3,0.338,4,0.338,5,0.26,6,0.26,10,2.862,11,0.385,12,0.023,13,2.154,14,0.338,15,2.289,16,1.906,19,2.653,20,1.793,21,1.906,22,1.793,23,1.112,24,1.906,25,0.338,26,0.752,27,0.019,28,0.019,87,1.347,215,3.732,221,4.26,222,3.416,223,3.4,630,4.084,631,3.768]],["title/injectables/W3CTraceContextPropagatorService.html",[29,0.649,215,2.189]],["body/injectables/W3CTraceContextPropagatorService.html",[3,0.31,4,0.31,5,0.239,6,0.297,11,0.387,12,0.023,14,0.31,16,1.748,25,0.31,26,0.69,27,0.018,28,0.018,29,1.05,30,1.748,31,2.433,32,0.845,33,0.791,34,1.518,35,3.44,36,1.151,38,1.046,40,1.222,41,3.537,42,2.171,43,1.222,45,1.748,46,1.748,47,1.548,48,0.74,87,1.356,215,4.326,220,2.849,222,3.44,223,3.874,368,3.906,631,4.293,632,5.705]],["title/interfaces/ZipkinCollectorConfig.html",[49,0.692,141,1.522]],["body/interfaces/ZipkinCollectorConfig.html",[3,0.172,4,0.172,5,0.132,6,0.132,11,0.302,12,0.024,14,0.172,23,0.565,25,0.446,27,0.012,28,0.012,32,0.468,33,0.438,38,0.41,43,0.677,48,0.914,49,1.154,50,2.19,51,0.968,52,1.172,53,1.172,54,1.811,55,1.208,56,1.356,57,1.254,58,2.535,59,1.193,60,1.641,61,1.844,62,1.447,63,1.097,64,1.704,65,1.937,66,1.254,67,0.858,68,1.965,69,1.965,70,1.965,71,1.965,72,1.172,73,1.965,74,1.172,75,2.014,76,1.875,77,1.172,78,1.172,79,0.968,80,1.347,81,1.254,82,1.172,83,1.641,84,1.875,85,0.565,86,1.03,87,0.794,88,1.844,89,2.492,90,1.641,91,1.097,92,1.347,93,1.347,94,1.875,95,1.641,96,1.097,97,1.097,98,1.212,99,1.172,100,1.254,101,1.641,102,1.254,103,1.347,104,2.046,105,1.875,106,1.254,107,2.246,108,1.254,109,1.254,110,1.254,111,1.752,112,1.254,113,1.254,114,1.254,115,1.172,116,1.254,117,1.254,118,1.254,119,1.254,120,1.097,121,1.172,122,1.254,123,1.254,124,1.172,125,1.254,126,1.172,127,1.097,128,1.641,129,2.61,130,1.347,131,2.16,132,2.61,133,1.254,134,1.733,135,0.911,136,1.254,137,1.254,138,1.254,139,1.172,140,1.54,141,1.965,142,1.875,143,1.347,144,2.334,145,0.911,146,1.172,147,1.142,148,1.875,149,1.752,150,1.752,151,1.62,152,1.427,153,1.447,154,2.19,155,1.254,156,1.54,157,1.254,158,1.03,159,1.254,160,1.03,161,1.254,162,1.03,163,1.254,164,1.03,165,1.03,166,0.911,167,2.181,168,1.254,169,1.172,170,1.254,171,1.254,172,1.641,173,1.875,174,1.362,175,1.641,176,1.254,177,1.254,633,3.802]],["title/modules/ZipkinExporterModule.html",[0,1.263,634,2.395]],["body/modules/ZipkinExporterModule.html",[2,1.525,3,0.344,4,0.344,5,0.265,6,0.265,11,0.388,12,0.023,13,2.176,14,0.344,20,1.823,21,1.938,22,1.823,23,1.131,24,1.938,25,0.344,26,0.765,27,0.019,28,0.019,140,2.062,238,3.458,240,3.458,241,2.622,242,2.512,634,4.126,635,3.831,636,4.126]],["title/injectables/ZipkinExporterService.html",[29,0.649,636,2.395]],["body/injectables/ZipkinExporterService.html",[3,0.27,4,0.27,5,0.208,6,0.321,11,0.382,12,0.024,14,0.27,25,0.27,26,0.874,27,0.017,28,0.017,29,0.961,30,1.522,32,0.961,33,0.689,34,1.39,36,1.458,38,0.994,40,1.064,45,1.522,46,1.522,47,1.348,48,0.644,55,1.66,56,1.002,59,1.233,85,0.888,87,0.835,129,1.725,132,1.725,140,1.619,147,1.646,150,3.081,151,1.197,152,1.741,186,3.082,189,2.51,190,2.285,192,1.619,199,1.972,200,1.972,201,1.972,202,2.715,242,1.972,243,2.48,245,3.827,248,3.971,249,2.254,250,1.972,251,1.972,620,3.008,635,4.641,636,4.189,637,5.223,638,3.998,639,5.817,640,5.223,641,5.223,642,5.817,643,3.998,644,3.998,645,3.998,646,3.998]],["title/changelog.html",[647,1.831,648,1.831,649,2.51]],["body/changelog.html",[5,0.207,12,0.01,18,1.268,27,0.01,28,0.01,38,0.329,48,0.726,54,1.19,60,1.387,61,1.302,62,0.778,63,1.387,64,0.689,65,0.732,67,1.836,85,0.714,87,0.427,91,1.945,95,0.882,96,0.882,98,1.057,101,1.387,104,1.302,124,0.942,127,1.715,131,0.778,133,1.008,134,0.778,140,0.828,145,1.614,152,0.908,153,0.778,174,1.863,175,0.882,183,1.268,213,2.99,222,2.106,224,1.838,225,1.481,244,1.387,256,3.617,278,1.083,279,3.06,296,1.538,299,1.538,326,1.538,370,1.739,371,1.388,392,1.586,415,1.739,432,1.538,433,2.974,451,3.939,469,1.538,470,1.538,484,2.99,571,3.391,602,1.168,607,1.538,621,1.538,649,3.381,650,2.044,651,2.044,652,1.538,653,2.044,654,2.044,655,2.044,656,2.044,657,1.739,658,2.044,659,4.9,660,2.044,661,6.712,662,2.044,663,2.044,664,3.215,665,2.044,666,2.044,667,6.712,668,6.712,669,2.699,670,2.044,671,2.044,672,2.044,673,6.553,674,3.834,675,4.9,676,2.044,677,1.739,678,2.044,679,2.419,680,2.044,681,2.044,682,3.381,683,5.638,684,3.974,685,3.834,686,3.915,687,2.044,688,4.9,689,2.044,690,2.044,691,4.426,692,2.044,693,3.974,694,3.215,695,2.044,696,2.044,697,2.044,698,5.203,699,3.215,700,6.053,701,2.044,702,2.044,703,2.044,704,2.044,705,3.974,706,1.538,707,1.739,708,4.9,709,2.044,710,5.443,711,2.044,712,2.044,713,3.215,714,2.044,715,2.044,716,3.974,717,2.044,718,5.443,719,3.974,720,2.044,721,2.044,722,2.044,723,2.044,724,2.044,725,2.044,726,2.044,727,2.044,728,2.044,729,2.044,730,2.044,731,3.215,732,1.739,733,2.044,734,2.044,735,2.044,736,2.044,737,4.506,738,2.044,739,2.044,740,3.215,741,1.739,742,1.538,743,2.044,744,3.215,745,2.044,746,2.044,747,2.044,748,2.044,749,1.538,750,1.739,751,2.044,752,3.974,753,2.044,754,2.044,755,2.044,756,2.044,757,2.044,758,2.044,759,2.044,760,2.044,761,3.215,762,3.974,763,2.044,764,3.974,765,2.044,766,2.044,767,2.044,768,2.044,769,2.044,770,4.506,771,3.215,772,2.044,773,2.044,774,3.215,775,2.419,776,2.044,777,2.044,778,4.506,779,3.215,780,6.553,781,2.044,782,1.739,783,2.044,784,2.044,785,2.044,786,2.044,787,3.974,788,2.044,789,4.506,790,2.044,791,2.044,792,2.044,793,2.044,794,2.044,795,2.044,796,2.044,797,4.9,798,3.381,799,3.974,800,2.044,801,1.739,802,2.044,803,2.044,804,2.044,805,3.215,806,1.739,807,2.044,808,2.044,809,2.044,810,1.739,811,2.044,812,2.044,813,2.044,814,2.044,815,2.044,816,2.044,817,2.044,818,2.044,819,2.044,820,2.044,821,2.044,822,2.044,823,2.044,824,2.044,825,2.044,826,2.044,827,4.9,828,2.044,829,2.044,830,2.044,831,2.044,832,2.044,833,2.044,834,2.044,835,2.044,836,2.044,837,2.044,838,2.044,839,3.215,840,2.044,841,2.044,842,2.044,843,2.044,844,1.739,845,2.044,846,2.044,847,3.974,848,3.215,849,3.215,850,2.735,851,3.215,852,4.506,853,2.044,854,3.215,855,2.044,856,2.044,857,1.739,858,2.044,859,2.044,860,2.044,861,2.044,862,2.044,863,2.044,864,2.044,865,2.044,866,2.044,867,2.044,868,2.044,869,5.443,870,2.044,871,1.739,872,2.044,873,2.044,874,1.739,875,2.044,876,2.044,877,2.044,878,2.044,879,2.044,880,2.044,881,2.044,882,2.044,883,1.538,884,2.044,885,2.044,886,2.044,887,2.044,888,1.739,889,2.044,890,2.044,891,2.044,892,2.044,893,3.215,894,3.215,895,2.044,896,2.044,897,2.044,898,2.735,899,3.215,900,3.215,901,2.044,902,2.044,903,2.044,904,4.506,905,2.044,906,2.044,907,2.044,908,2.044,909,3.215,910,2.044,911,2.044]],["title/coverage.html",[912,4.087]],["body/coverage.html",[5,0.172,6,0.376,7,2.484,8,2.848,9,2.242,12,0.023,15,1.256,17,2.048,27,0.015,28,0.015,29,1.241,31,3.288,42,1.256,48,0.532,49,1.31,50,1.337,52,3.135,53,3.135,59,0.779,79,1.256,83,1.425,87,1.192,98,1.221,104,1.337,128,1.425,141,1.425,144,1.425,147,0.828,151,0.989,158,1.337,160,1.337,162,1.337,164,1.337,179,2.484,180,2.242,181,2.048,196,3.454,210,2.484,211,2.484,212,2.242,215,2.048,216,2.048,222,2.432,223,2.242,225,2.432,226,2.242,237,2.484,239,2.242,241,1.425,243,3.539,249,1.425,252,2.809,253,2.809,266,3.454,271,3.454,276,2.048,277,2.809,278,1.749,367,2.484,376,2.484,377,2.484,380,2.242,384,2.484,385,3.117,386,2.484,387,2.484,388,2.242,392,1.628,393,2.242,395,2.809,396,2.809,569,2.484,570,2.242,572,2.048,575,2.809,576,2.484,577,2.809,631,2.484,635,2.484,636,2.242,742,2.484,912,2.809,913,3.301,914,3.301,915,7.201,916,5.277,917,6.676,918,5.277,919,4.59,920,6.366,921,4.59,922,5.995,923,3.301,924,5.277,925,3.301,926,3.301,927,2.809]],["title/dependencies.html",[602,2.424,669,2.003]],["body/dependencies.html",[12,0.023,14,0.338,27,0.019,28,0.019,156,2.023,379,3.759,444,4.25,602,2.855,732,4.25,775,3.759,928,4.995,929,7.167,930,4.995,931,4.995,932,4.995,933,4.995,934,6.006,935,4.52,936,4.995,937,5.11,938,4.995,939,4.995,940,4.995,941,4.995,942,4.995,943,4.995,944,4.995,945,4.995]],["title/index.html",[33,0.508,647,1.831,648,1.831]],["body/index.html",[0,2.254,1,0.81,2,0.814,3,0.398,6,0.062,8,0.74,11,0.238,12,0.023,13,1.533,14,0.081,15,0.454,18,1.278,20,0.738,21,1.034,22,1.307,23,0.719,24,0.454,25,0.306,26,0.486,27,0.007,28,0.007,38,0.332,42,0.454,43,1.063,44,2.479,47,0.916,48,0.192,49,0.404,50,0.834,54,1.817,56,1.187,57,0.588,58,1.987,59,0.282,60,0.889,61,1.1,62,1.629,63,0.515,64,0.916,65,0.973,66,0.588,67,0.916,74,0.55,76,1.34,77,0.55,78,2.085,79,1.034,82,1.49,83,0.515,84,1.34,85,0.604,86,1.1,87,1.215,88,1.734,89,1.682,90,1.723,91,2.4,94,1.34,95,1.396,96,1.173,97,1.575,98,1.389,99,0.949,100,1.016,101,2.54,102,1.34,104,1.1,105,1.595,106,1.016,107,1.97,108,1.016,109,1.016,110,1.016,111,1.49,112,1.016,113,1.016,114,1.016,115,0.949,116,1.016,117,1.801,118,1.801,119,1.016,120,0.889,121,0.949,122,1.016,123,2.232,124,0.949,125,1.016,126,0.949,127,2.307,128,0.515,129,1.953,131,1.52,132,0.889,134,1.52,135,0.738,136,0.588,137,0.588,138,0.588,139,0.55,140,1.833,141,0.515,142,0.588,144,1.173,145,2.055,146,0.949,147,0.811,148,1.801,149,1.252,150,0.55,151,0.357,153,1.034,156,1.478,158,1.31,160,1.1,162,1.1,169,0.55,174,1.307,175,2.122,178,0.81,182,2.712,183,3.238,184,3.996,195,0.74,196,1.55,199,1.97,209,2.479,213,0.897,220,1.686,222,0.632,224,2.447,225,2.182,231,1.015,236,0.81,241,0.515,244,2.509,249,0.515,250,1.016,251,0.588,255,0.897,256,2.69,257,1.752,258,3.005,259,1.55,260,1.55,261,1.55,263,2.312,264,2.312,265,0.81,273,2.312,278,2.268,279,4.154,309,3.005,310,0.81,311,3.448,317,3.005,319,2.045,320,1.398,322,0.897,324,1.752,325,1.752,326,1.55,327,1.752,333,0.897,334,0.897,336,0.897,338,1.845,366,0.81,371,0.81,375,0.81,392,3.084,397,1.015,401,1.015,412,2.752,418,1.015,432,1.55,433,3.467,437,1.752,441,2.312,467,1.015,470,2.045,476,0.897,549,2.196,558,1.015,559,2.752,565,2.045,568,3.215,571,1.55,578,2.752,601,2.265,602,2.707,620,2.747,621,2.747,630,0.81,634,0.81,647,1.278,648,1.278,652,2.434,669,0.81,677,2.752,679,4.522,685,1.015,686,1.55,691,1.015,706,1.55,707,1.752,749,1.55,750,1.015,775,1.55,782,1.752,798,1.015,801,1.752,806,2.312,810,1.015,850,1.015,857,1.015,871,1.015,883,2.045,888,1.015,927,1.752,935,0.897,937,1.752,946,2.717,947,3.651,948,1.193,949,4.918,950,1.193,951,1.193,952,1.193,953,1.752,954,1.752,955,2.059,956,2.059,957,2.059,958,3.651,959,2.752,960,2.059,961,4.281,962,1.193,963,1.193,964,2.059,965,1.193,966,1.193,967,1.193,968,4.281,969,1.193,970,3.994,971,2.059,972,2.059,973,3.651,974,1.193,975,1.193,976,2.312,977,3.234,978,1.752,979,1.193,980,2.059,981,2.059,982,2.717,983,1.193,984,2.717,985,1.193,986,1.193,987,1.193,988,1.193,989,2.717,990,1.193,991,1.193,992,1.193,993,1.193,994,1.193,995,1.193,996,1.193,997,1.193,998,1.193,999,1.193,1000,1.015,1001,1.015,1002,2.717,1003,4.918,1004,5.078,1005,3.234,1006,3.994,1007,1.193,1008,1.193,1009,2.059,1010,1.193,1011,1.193,1012,2.717,1013,1.193,1014,1.193,1015,1.193,1016,2.059,1017,1.193,1018,1.193,1019,1.193,1020,1.193,1021,1.015,1022,1.193,1023,1.193,1024,3.651,1025,1.193,1026,1.193,1027,1.193,1028,1.193,1029,1.193,1030,2.059,1031,1.193,1032,1.015,1033,1.193,1034,1.193,1035,1.193,1036,2.752,1037,1.193,1038,1.193,1039,1.193,1040,1.193,1041,1.193,1042,1.193,1043,1.193,1044,1.193,1045,1.193,1046,1.193,1047,1.193,1048,1.193,1049,1.193,1050,1.193,1051,1.193,1052,1.193,1053,1.193,1054,1.193,1055,1.193,1056,1.193,1057,1.398,1058,2.717,1059,2.059,1060,1.193,1061,1.193,1062,1.193,1063,1.015,1064,1.193,1065,1.193,1066,1.193,1067,1.193,1068,1.193,1069,1.193,1070,2.717,1071,2.717,1072,2.059,1073,2.059,1074,2.059,1075,2.059,1076,1.193,1077,1.193,1078,2.059,1079,2.059,1080,1.193,1081,1.193,1082,1.193,1083,1.193,1084,1.193,1085,1.193,1086,1.015,1087,1.015,1088,1.193,1089,3.651,1090,3.651,1091,3.651,1092,2.059,1093,4.918,1094,3.651,1095,3.106,1096,3.651,1097,3.651,1098,3.651,1099,2.059,1100,1.193,1101,1.193,1102,1.193,1103,1.193,1104,1.193,1105,1.193,1106,1.193,1107,1.193,1108,1.193,1109,1.193,1110,1.193,1111,1.193,1112,1.193,1113,1.193,1114,1.193,1115,1.193,1116,1.193,1117,1.193]],["title/license.html",[647,1.831,648,1.831,1118,2.51]],["body/license.html",[4,0.393,5,0.272,11,0.099,12,0.011,23,0.369,26,0.25,27,0.009,28,0.009,32,0.306,36,0.416,51,0.632,54,0.497,67,0.56,82,0.765,85,0.768,86,0.673,91,2.401,183,1.031,184,1.128,185,1.413,256,1.442,268,1.25,320,3.218,385,2.715,423,2.316,451,2.348,469,3.009,476,1.25,484,2.602,517,2.316,608,1.25,679,1.25,706,1.25,741,1.413,742,2.602,749,1.25,844,1.413,883,4.778,898,2.316,953,1.413,954,1.413,959,1.413,976,2.316,978,1.413,1000,1.413,1001,1.413,1021,1.413,1032,1.413,1036,1.413,1057,1.128,1063,1.413,1087,3.754,1095,2.316,1118,5.804,1119,3.998,1120,3.458,1121,1.661,1122,1.661,1123,1.661,1124,5.408,1125,5.921,1126,3.998,1127,4.412,1128,1.661,1129,6.095,1130,5.564,1131,1.661,1132,1.661,1133,5.564,1134,5.921,1135,4.739,1136,5.564,1137,2.722,1138,1.661,1139,4.412,1140,1.661,1141,1.661,1142,1.661,1143,3.998,1144,1.661,1145,5.408,1146,3.998,1147,2.722,1148,2.722,1149,1.661,1150,3.458,1151,2.722,1152,1.661,1153,1.661,1154,6.295,1155,3.998,1156,2.722,1157,1.661,1158,2.722,1159,1.661,1160,1.661,1161,1.661,1162,1.661,1163,1.661,1164,1.661,1165,1.661,1166,3.458,1167,1.661,1168,3.458,1169,2.722,1170,5.921,1171,1.661,1172,1.661,1173,4.739,1174,5.408,1175,3.998,1176,2.722,1177,3.458,1178,4.739,1179,1.661,1180,1.661,1181,1.661,1182,1.661,1183,1.661,1184,2.722,1185,1.661,1186,1.661,1187,1.661,1188,6.822,1189,3.458,1190,2.722,1191,1.661,1192,5.408,1193,2.722,1194,1.661,1195,4.412,1196,2.722,1197,1.661,1198,6.295,1199,1.661,1200,1.661,1201,1.661,1202,1.661,1203,1.661,1204,1.661,1205,2.722,1206,3.458,1207,1.661,1208,1.661,1209,1.661,1210,1.661,1211,3.998,1212,4.412,1213,1.661,1214,2.722,1215,3.998,1216,2.722,1217,1.661,1218,4.412,1219,2.722,1220,1.661,1221,1.661,1222,3.458,1223,1.661,1224,1.661,1225,1.661,1226,1.661,1227,2.722,1228,1.661,1229,1.661,1230,1.661,1231,3.458,1232,1.661,1233,1.661,1234,3.458,1235,1.661,1236,1.661,1237,1.661,1238,3.998,1239,5.564,1240,1.661,1241,1.661,1242,2.722,1243,5.223,1244,3.458,1245,2.722,1246,2.722,1247,2.722,1248,2.722,1249,3.458,1250,2.722,1251,3.458,1252,2.722,1253,2.722,1254,2.722,1255,2.722,1256,1.413,1257,2.722,1258,1.661,1259,1.661,1260,4.412,1261,5.004,1262,3.458,1263,2.722,1264,1.661,1265,2.722,1266,2.722,1267,1.661,1268,3.458,1269,2.722,1270,1.661,1271,1.661,1272,1.661,1273,3.458,1274,1.661,1275,1.661,1276,1.661,1277,2.722,1278,2.722,1279,1.661,1280,1.661,1281,1.661,1282,1.661,1283,1.661,1284,1.661,1285,1.661,1286,2.722,1287,1.661,1288,1.661,1289,1.661,1290,1.661,1291,1.661,1292,1.661,1293,1.661,1294,1.661,1295,3.458,1296,1.661,1297,3.458,1298,1.661,1299,1.661,1300,1.661,1301,1.661,1302,5.223,1303,1.661,1304,1.661,1305,1.661,1306,1.661,1307,1.661,1308,3.998,1309,2.722,1310,3.998,1311,1.661,1312,1.661,1313,1.661,1314,1.661,1315,1.661,1316,3.458,1317,1.661,1318,1.661,1319,2.722,1320,2.722,1321,1.661,1322,1.661,1323,1.661,1324,2.722,1325,1.661,1326,1.661,1327,4.412,1328,1.661,1329,1.661,1330,1.661,1331,1.661,1332,1.661,1333,1.661,1334,3.458,1335,3.998,1336,1.661,1337,1.661,1338,1.661,1339,1.661,1340,1.661,1341,1.661,1342,1.661,1343,1.661,1344,1.661,1345,1.661,1346,2.722,1347,1.661,1348,1.661,1349,2.722,1350,1.661,1351,1.661,1352,3.998,1353,1.661,1354,1.661,1355,1.661,1356,1.661,1357,1.661,1358,1.661,1359,3.998,1360,3.458,1361,3.458,1362,3.458,1363,2.722,1364,2.722,1365,3.458,1366,2.722,1367,2.722,1368,2.722,1369,1.661,1370,1.661,1371,1.661,1372,1.661,1373,1.661,1374,1.661,1375,1.661,1376,1.661,1377,1.661,1378,2.722,1379,1.661,1380,1.661,1381,1.661,1382,1.661,1383,4.412,1384,1.661,1385,1.661,1386,1.661,1387,1.661,1388,1.661,1389,1.661,1390,1.661,1391,1.661,1392,4.412,1393,1.661,1394,1.661,1395,1.661,1396,1.661,1397,1.661,1398,1.661,1399,1.661,1400,1.661,1401,1.661,1402,1.661,1403,1.661,1404,1.661,1405,1.661,1406,1.661,1407,1.661,1408,1.661,1409,1.661,1410,3.458,1411,1.661,1412,1.661,1413,1.661,1414,1.413,1415,1.661,1416,2.722,1417,1.661,1418,1.661,1419,1.661,1420,1.661,1421,1.661,1422,1.661,1423,1.661,1424,1.661,1425,1.661,1426,1.661,1427,1.661,1428,1.661,1429,1.661,1430,1.661,1431,1.661,1432,2.722,1433,1.661,1434,1.661,1435,1.661,1436,2.722,1437,2.722,1438,1.661,1439,1.661,1440,1.661,1441,1.661,1442,1.661,1443,1.661,1444,1.661,1445,1.661,1446,1.661,1447,1.661,1448,1.661,1449,1.661,1450,1.661,1451,1.661,1452,1.661,1453,1.661,1454,1.661,1455,1.661,1456,1.661,1457,1.661]],["title/modules.html",[2,1.439]],["body/modules.html",[1,3.408,2,1.503,12,0.019,27,0.019,28,0.019,178,3.408,209,3.408,236,3.408,366,3.408,375,3.408,383,3.777,549,3.408,568,3.408,601,3.114,630,3.408,634,3.408,935,3.777,1057,4.891,1414,4.27,1458,7.203,1459,7.229,1460,5.019]],["title/overview.html",[1461,4.087]],["body/overview.html",[2,1.571,12,0.022,27,0.02,28,0.02,30,1.996,51,1.996,67,1.769,278,2.779,572,4.399,601,4.298,602,3.534,603,4.462,604,4.462,605,4.462,606,5.26,607,3.946,608,3.946,674,4.462,682,4.462,686,3.946,1461,4.462]],["title/properties.html",[55,1.347,669,2.003]],["body/properties.html",[12,0.022,27,0.02,28,0.02,55,1.749,392,2.715,433,3.147,451,3.738,657,4.683,1462,5.505,1463,5.505,1464,5.505,1465,5.505,1466,5.505]],["title/todo.html",[647,1.831,648,1.831,1467,2.51]],["body/todo.html",[12,0.022,27,0.02,28,0.02,54,1.849,101,2.664,127,2.257,183,3.246,184,4.192,195,3.246,224,3.755,244,2.257,256,3.48,392,2.58,433,2.99,652,3.936,874,4.45,1057,3.552,1086,5.588,1256,4.45,1467,5.252,1468,5.231,1469,5.231,1470,5.231]],["title/miscellaneous/variables.html",[1471,2.51,1472,3.607]],["body/miscellaneous/variables.html",[6,0.302,12,0.024,15,1.981,23,0.883,27,0.017,28,0.017,33,0.685,38,0.64,48,1.091,52,1.832,53,3.02,54,1.191,64,2.252,65,2.426,68,2.246,69,2.246,70,2.246,71,2.246,73,2.246,98,1.385,131,1.513,145,1.424,147,0.997,151,1.963,152,1.738,153,2.343,155,1.961,156,2.107,157,1.961,158,2.107,159,1.961,160,2.107,161,1.961,162,2.107,163,1.961,164,2.107,165,1.61,166,1.424,167,2.656,168,1.961,169,1.832,170,1.961,171,1.961,172,2.246,173,2.567,174,1.864,175,2.246,176,1.961,177,1.961,241,2.246,244,1.715,266,2.991,270,3.382,271,2.991,275,3.382,1471,3.382,1472,3.382,1473,6.388,1474,3.975,1475,3.975]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":196,"title":{},"body":{"injectables/B3PropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["0.10.0",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["0.16.0",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["0.18.0",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["0.18.2",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["0.19.0",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["0.21.0",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["0.24.0",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":979,"title":{},"body":{"index.html":{}}}],["0.75",{"_index":993,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["0615f02",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0.0",{"_index":681,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":657,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["1/1",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":686,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["10.0.3",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["10.2",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["10.2.4",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["106",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":682,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12",{"_index":674,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.2",{"_index":1112,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["15/15",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["18d04fd",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["1a56037",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["1c7c0c0",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["1f22380",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":685,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["2.0",{"_index":1120,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":1122,"title":{},"body":{"license.html":{}}}],["2020",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["2048",{"_index":985,"title":{},"body":{"index.html":{}}}],["21",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["23e35d1",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":765,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["2965c35",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":798,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":888,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["30000",{"_index":988,"title":{},"body":{"index.html":{}}}],["332baf7",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["34",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["3ae307e",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":857,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4/4",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["40f33cc",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["412d2fd",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["41c8947",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["4318",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["4fcec62",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["5.0.3",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1161,"title":{},"body":{"license.html":{}}}],["5000",{"_index":987,"title":{},"body":{"index.html":{}}}],["51",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["512",{"_index":986,"title":{},"body":{"index.html":{}}}],["563071d",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["59ac6ca",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["5a7c375",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":850,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.6.3",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["66ca86c",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["68d7aee",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["7/7",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["735b05d",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":994,"title":{},"body":{"index.html":{}}}],["7a5b07e",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["7bbaf2e",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["80d2ada",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":844,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":951,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["99",{"_index":995,"title":{},"body":{"index.html":{}}}],["_currentcontext",{"_index":524,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["a1746bf",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["a6307f2",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["a73e382",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1339,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1413,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1410,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":1114,"title":{},"body":{"index.html":{}}}],["act",{"_index":1420,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1141,"title":{},"body":{"license.html":{}}}],["action",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":1012,"title":{},"body":{"index.html":{}}}],["acts",{"_index":1390,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":600,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ad03334",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":256,"title":{},"body":{"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["add(span",{"_index":257,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["addendum",{"_index":1326,"title":{},"body":{"license.html":{}}}],["adding",{"_index":1065,"title":{},"body":{"index.html":{}}}],["additional",{"_index":1327,"title":{},"body":{"license.html":{}}}],["additions",{"_index":1213,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1408,"title":{},"body":{"license.html":{}}}],["again",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":1278,"title":{},"body":{"license.html":{}}}],["agent",{"_index":810,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1423,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1362,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1343,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":1283,"title":{},"body":{"license.html":{}}}],["allow",{"_index":523,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["allowedcommonjsdependencies",{"_index":1104,"title":{},"body":{"index.html":{}}}],["alone",{"_index":1274,"title":{},"body":{"license.html":{}}}],["along",{"_index":1317,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1325,"title":{},"body":{"license.html":{}}}],["already",{"_index":563,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["althought",{"_index":1068,"title":{},"body":{"index.html":{}}}],["always",{"_index":301,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":329,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":328,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":1116,"title":{},"body":{"index.html":{}}}],["amd",{"_index":1094,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":1417,"title":{},"body":{"license.html":{}}}],["angular",{"_index":433,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["angular.json",{"_index":1102,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":379,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":265,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":14,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":1202,"title":{},"body":{"license.html":{}}}],["apache",{"_index":1119,"title":{},"body":{"license.html":{}}}],["api",{"_index":371,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["api.defaulttextmapsetter",{"_index":529,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.diag.setlogger(logger",{"_index":464,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":528,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.spankind.client",{"_index":518,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.trace.setspan",{"_index":526,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["apis",{"_index":408,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":964,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":1025,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":1047,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":1014,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1024,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1322,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1196,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1360,"title":{},"body":{"license.html":{}}}],["application",{"_index":949,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1069,"title":{},"body":{"index.html":{}}}],["applies",{"_index":1001,"title":{},"body":{"index.html":{},"license.html":{}}}],["apply",{"_index":1432,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":565,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"index.html":{}}}],["appropriate",{"_index":1440,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1376,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1448,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1397,"title":{},"body":{"license.html":{}}}],["array",{"_index":1044,"title":{},"body":{"index.html":{}}}],["asserted",{"_index":1429,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1381,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1379,"title":{},"body":{"license.html":{}}}],["async",{"_index":998,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1433,"title":{},"body":{"license.html":{}}}],["attached",{"_index":1194,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":134,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["attribution",{"_index":1308,"title":{},"body":{"license.html":{}}}],["author",{"_index":1464,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1137,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1189,"title":{},"body":{"license.html":{}}}],["available",{"_index":1057,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["aws",{"_index":18,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"changelog.html":{},"index.html":{}}}],["awsxraypropagator",{"_index":39,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{}}}],["awsxraypropagatormodule",{"_index":1,"title":{"modules/AwsXrayPropagatorModule.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["awsxraypropagatorservice",{"_index":17,"title":{"injectables/AwsXrayPropagatorService.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b",{"_index":1298,"title":{},"body":{"license.html":{}}}],["b112065",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":182,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3e15af",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["b3injectencoding",{"_index":197,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":207,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":206,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":208,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":50,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":178,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":181,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":205,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["backendapp.get('/api/config",{"_index":990,"title":{},"body":{"index.html":{}}}],["bad",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["baggage",{"_index":1469,"title":{},"body":{"todo.html":{}}}],["bailouts",{"_index":1097,"title":{},"body":{"index.html":{}}}],["base",{"_index":251,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["based",{"_index":1063,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1364,"title":{},"body":{"license.html":{}}}],["batch",{"_index":112,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["batchspanexporter",{"_index":103,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanexporter(async",{"_index":92,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":317,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(exporter.getexporter",{"_index":363,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["batchspanprocessor(this.exporterservice.getexporter",{"_index":545,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["batchspanprocessorconfig",{"_index":104,"title":{"interfaces/BatchSpanProcessorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["bca88a0",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":124,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["behalf",{"_index":1218,"title":{},"body":{"license.html":{}}}],["below",{"_index":1197,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1165,"title":{},"body":{"license.html":{}}}],["between",{"_index":117,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["bfc26ae",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1210,"title":{},"body":{"license.html":{}}}],["body",{"_index":96,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["boilerplate",{"_index":1434,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":996,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1030,"title":{},"body":{"index.html":{}}}],["brackets",{"_index":1437,"title":{},"body":{"license.html":{}}}],["branch",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1459,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":935,"title":{},"body":{"dependencies.html":{},"index.html":{},"modules.html":{}}}],["bufferconfig",{"_index":446,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bug",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1305,"title":{},"body":{"license.html":{}}}],["c2b4209",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["c53447a",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["c9f8667",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["caab7a9",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":470,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["calls",{"_index":406,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["cancelled",{"_index":125,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["carrier",{"_index":527,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":531,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":1300,"title":{},"body":{"license.html":{}}}],["catch",{"_index":965,"title":{},"body":{"index.html":{}}}],["cause",{"_index":1095,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":1304,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":649,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1396,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1251,"title":{},"body":{"license.html":{}}}],["choices",{"_index":1011,"title":{},"body":{"index.html":{}}}],["choose",{"_index":1411,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1280,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1269,"title":{},"body":{"license.html":{}}}],["class",{"_index":26,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["classprovider",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["closes",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["cluster_otelwebtracermodule",{"_index":603,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_declarations",{"_index":605,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["cluster_otelwebtracermodule_exports",{"_index":604,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}],["code",{"_index":484,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":127,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":1100,"title":{},"body":{"index.html":{}}}],["collector/docker",{"_index":1081,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":616,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":618,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":1275,"title":{},"body":{"license.html":{}}}],["command",{"_index":1071,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1441,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1405,"title":{},"body":{"license.html":{}}}],["commit",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":82,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":83,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":148,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":1093,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":378,"title":{},"body":{"modules/NoopSpanExporterModule.html":{}}}],["commons",{"_index":957,"title":{},"body":{"index.html":{}}}],["communication",{"_index":1222,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":157,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":1183,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1451,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1332,"title":{},"body":{"license.html":{}}}],["component",{"_index":278,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/otel",{"_index":612,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["component_template",{"_index":598,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["components",{"_index":573,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["compose",{"_index":1079,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":1082,"title":{},"body":{"index.html":{}}}],["composite",{"_index":213,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{},"index.html":{}}}],["compositepropagator",{"_index":219,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":209,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":212,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1402,"title":{},"body":{"license.html":{}}}],["concurencylimit",{"_index":723,"title":{},"body":{"changelog.html":{}}}],["concurrencylimit",{"_index":139,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["conditions",{"_index":1125,"title":{},"body":{"license.html":{}}}],["config",{"_index":152,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.logbody",{"_index":463,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.commonconfig.loglevel",{"_index":465,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":373,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":627,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":626,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":625,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":645,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":644,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configprovider",{"_index":167,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configprovider.provide",{"_index":176,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":782,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configuration",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["configuration/directive",{"_index":1048,"title":{},"body":{"index.html":{}}}],["configuration/opentelemetry",{"_index":200,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":970,"title":{},"body":{"index.html":{}}}],["configured",{"_index":640,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consecutive",{"_index":119,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consequential",{"_index":1395,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":422,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1419,"title":{},"body":{"license.html":{}}}],["console",{"_index":88,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":247,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":236,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":239,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":1235,"title":{},"body":{"license.html":{}}}],["const",{"_index":154,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":1284,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":189,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(otel_config",{"_index":202,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":214,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":190,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(instrumentationservice",{"_index":583,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructor(private",{"_index":591,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["constructorprovider",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["construed",{"_index":1328,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1314,"title":{},"body":{"license.html":{}}}],["content",{"_index":954,"title":{},"body":{"index.html":{},"license.html":{}}}],["contents",{"_index":953,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":222,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["contextmanager",{"_index":280,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":1156,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1212,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1273,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1334,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1239,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1285,"title":{},"body":{"license.html":{}}}],["control",{"_index":1143,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1144,"title":{},"body":{"license.html":{}}}],["conventions",{"_index":334,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["conversions",{"_index":1185,"title":{},"body":{"license.html":{}}}],["convert",{"_index":295,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber",{"_index":282,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["convertstringtonumber(value",{"_index":293,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["copies",{"_index":1292,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1297,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1134,"title":{},"body":{"license.html":{}}}],["core",{"_index":1017,"title":{},"body":{"index.html":{}}}],["counterclaim",{"_index":1281,"title":{},"body":{"license.html":{}}}],["cours",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":912,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1064,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1279,"title":{},"body":{"license.html":{}}}],["current",{"_index":412,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":131,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["customary",{"_index":1354,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":146,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customize",{"_index":1043,"title":{},"body":{"index.html":{}}}],["customspan",{"_index":79,"title":{"interfaces/CustomSpan.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["customspanimpl",{"_index":1059,"title":{},"body":{"index.html":{}}}],["cypress",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1311,"title":{},"body":{"license.html":{}}}],["d2ecbb8",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["d8b9f3c",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1392,"title":{},"body":{"license.html":{}}}],["dangle",{"_index":522,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["date",{"_index":1289,"title":{},"body":{"license.html":{}}}],["dbaec60",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["dcde5bb",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["dd7a0e5",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":1052,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["declare",{"_index":1031,"title":{},"body":{"index.html":{}}}],["declared",{"_index":1115,"title":{},"body":{"index.html":{}}}],["default",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1425,"title":{},"body":{"license.html":{}}}],["define",{"_index":135,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["defineb3encoding",{"_index":188,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":193,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineconfigprovider",{"_index":164,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defineconfigprovider(config,configprovider",{"_index":567,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":283,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":297,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":1147,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1128,"title":{},"body":{"license.html":{}}}],["del",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1387,"title":{},"body":{"license.html":{}}}],["dep",{"_index":327,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["dependence",{"_index":801,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":602,"title":{"dependencies.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":1101,"title":{},"body":{"index.html":{}}}],["depends",{"_index":1091,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":948,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":1198,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1199,"title":{},"body":{"license.html":{}}}],["describing",{"_index":1355,"title":{},"body":{"license.html":{}}}],["description",{"_index":32,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":1237,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1375,"title":{},"body":{"license.html":{}}}],["devconfiguration",{"_index":975,"title":{},"body":{"index.html":{}}}],["dgo",{"_index":1084,"title":{},"body":{"index.html":{}}}],["diaglogger",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["diagloglevel",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["different",{"_index":1331,"title":{},"body":{"license.html":{}}}],["dir",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1150,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1152,"title":{},"body":{"license.html":{}}}],["directive",{"_index":596,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["directives",{"_index":599,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disable",{"_index":587,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["disclaimer",{"_index":1358,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":1232,"title":{},"body":{"license.html":{}}}],["display",{"_index":976,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":1260,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1316,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1127,"title":{},"body":{"license.html":{}}}],["doc",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1078,"title":{},"body":{"index.html":{}}}],["docs",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":706,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["documentation",{"_index":742,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["dom",{"_index":407,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["don't",{"_index":749,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["done",{"_index":1470,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["dropped",{"_index":110,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["during",{"_index":263,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["dynamic",{"_index":732,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["e29c839",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["e9dc64b",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":469,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["ead3251",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":1446,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":1200,"title":{},"body":{"license.html":{}}}],["ee08e85",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["efa9083",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["elaborations",{"_index":1203,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":1219,"title":{},"body":{"license.html":{}}}],["element",{"_index":595,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["en",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["encapsulates",{"_index":405,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["enclosed",{"_index":1436,"title":{},"body":{"license.html":{}}}],["end",{"_index":1431,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1142,"title":{},"body":{"license.html":{}}}],["entity",{"_index":1136,"title":{},"body":{"license.html":{}}}],["enum",{"_index":984,"title":{},"body":{"index.html":{}}}],["environment",{"_index":1026,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":1027,"title":{},"body":{"index.html":{}}}],["equal",{"_index":114,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["error",{"_index":174,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error(`configuration",{"_index":173,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":520,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["eslint/component",{"_index":589,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["even",{"_index":1407,"title":{},"body":{"license.html":{}}}],["event",{"_index":476,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":480,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":492,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":490,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":488,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":479,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":679,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["exampleand",{"_index":1073,"title":{},"body":{"index.html":{}}}],["except",{"_index":1262,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1234,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1250,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1344,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1382,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1167,"title":{},"body":{"license.html":{}}}],["existing",{"_index":1049,"title":{},"body":{"index.html":{}}}],["existingprovider",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["explicitly",{"_index":1336,"title":{},"body":{"license.html":{}}}],["export",{"_index":25,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":1108,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":244,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":242,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":238,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":240,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":243,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":637,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:18",{"_index":246,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/NoopSpanExporterService.html":{}}}],["exporter.service.ts:21",{"_index":614,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:36",{"_index":638,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:44",{"_index":615,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter/exporter.interface",{"_index":340,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["exporter/noop",{"_index":377,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["exporterconfig",{"_index":642,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":1015,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":289,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":120,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exporttimeoutmillis",{"_index":126,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["exposes",{"_index":1041,"title":{},"body":{"index.html":{}}}],["express",{"_index":1366,"title":{},"body":{"license.html":{}}}],["external",{"_index":677,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["f",{"_index":1080,"title":{},"body":{"index.html":{}}}],["f0a18ea",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["f195a50",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["fabre",{"_index":1466,"title":{},"body":{"properties.html":{}}}],["factoryprovider",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["fad044a",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1403,"title":{},"body":{"license.html":{}}}],["fake",{"_index":1016,"title":{},"body":{"index.html":{}}}],["false",{"_index":441,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["features",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1412,"title":{},"body":{"license.html":{}}}],["fetch",{"_index":971,"title":{},"body":{"index.html":{}}}],["ff373c0",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":641,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1435,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1159,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":1290,"title":{},"body":{"license.html":{}}}],["files",{"_index":1177,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":449,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1371,"title":{},"body":{"license.html":{}}}],["fix",{"_index":467,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["fixes",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1295,"title":{},"body":{"license.html":{}}}],["forget",{"_index":750,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["form",{"_index":1170,"title":{},"body":{"license.html":{}}}],["format",{"_index":1443,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":552,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["forroot(config",{"_index":553,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["free",{"_index":1253,"title":{},"body":{"license.html":{}}}],["functions",{"_index":1050,"title":{},"body":{"index.html":{}}}],["generally",{"_index":1013,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1184,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":245,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":35,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["getting",{"_index":647,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":500,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["geturl",{"_index":398,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":268,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":956,"title":{},"body":{"index.html":{}}}],["going",{"_index":1039,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1400,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1456,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1244,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1169,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1138,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1246,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1458,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1388,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1427,"title":{},"body":{"license.html":{}}}],["header",{"_index":62,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":132,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":1086,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":1245,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1340,"title":{},"body":{"license.html":{}}}],["hhttps://github.com/open",{"_index":1007,"title":{},"body":{"index.html":{}}}],["highlight",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1426,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1462,"title":{},"body":{"properties.html":{}}}],["hostname",{"_index":414,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["html",{"_index":594,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["http",{"_index":225,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["http.interceptor",{"_index":561,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":396,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:108",{"_index":430,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:159",{"_index":411,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:168",{"_index":417,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:200",{"_index":421,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:220",{"_index":425,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:232",{"_index":424,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:244",{"_index":426,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:264",{"_index":410,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:281",{"_index":409,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:293",{"_index":436,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:51",{"_index":442,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:55",{"_index":439,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:59",{"_index":404,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http/build/src/platform/browser/otlptraceexporter",{"_index":622,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["http://localhost:16686",{"_index":1085,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":1075,"title":{},"body":{"index.html":{}}}],["http://localhost:4318/v1/trace",{"_index":130,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["http://localhost:4318/v1/traces",{"_index":989,"title":{},"body":{"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":142,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":1123,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1453,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":558,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclient",{"_index":966,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":559,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":261,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpevent",{"_index":443,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":429,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":255,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":259,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httpresponse",{"_index":260,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":1098,"title":{},"body":{"index.html":{}}}],["https://github.com/jufab/opentelemetry",{"_index":1463,"title":{},"body":{"properties.html":{}}}],["https://github.com/open",{"_index":1003,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":952,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":274,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["id",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1447,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1439,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":249,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["if(config",{"_index":168,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["if(configprovider",{"_index":170,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["if(configprovider.provide",{"_index":171,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["if(this.exporterservice.getexporter()!==undefined",{"_index":357,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ii",{"_index":1157,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1164,"title":{},"body":{"license.html":{}}}],["implement",{"_index":1058,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":273,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":47,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1367,"title":{},"body":{"license.html":{}}}],["import",{"_index":11,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":21,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":1233,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1398,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1394,"title":{},"body":{"license.html":{}}}],["include",{"_index":1206,"title":{},"body":{"license.html":{}}}],["included",{"_index":1193,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1312,"title":{},"body":{"license.html":{}}}],["including",{"_index":1174,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1216,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1242,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1428,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1424,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1415,"title":{},"body":{"license.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1191,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1151,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1166,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["infor",{"_index":1045,"title":{},"body":{"index.html":{}}}],["information",{"_index":185,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":1323,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1272,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1286,"title":{},"body":{"license.html":{}}}],["init",{"_index":305,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{}}}],["initialise",{"_index":418,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initinstrumentation",{"_index":285,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["initspan",{"_index":399,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":416,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":199,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(awsxraypropagatorservice",{"_index":230,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(b3propagatorservice",{"_index":227,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":229,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(otel_config",{"_index":455,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otel_custom_span",{"_index":457,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_exporter",{"_index":342,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_instrumentation_plugins",{"_index":344,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["inject(otel_logger",{"_index":456,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otel_propagator",{"_index":343,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(w3ctracecontextpropagatorservice",{"_index":228,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["injectable",{"_index":29,"title":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":30,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":400,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":420,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":254,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":204,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":153,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":155,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.custom",{"_index":161,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":270,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.instrumentation.plugins",{"_index":163,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":159,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":275,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":269,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":309,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":286,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":307,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertornotspanexporter",{"_index":287,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertornotspanexporter(production",{"_index":312,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["insertspanprocessorproductionmode",{"_index":288,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":315,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["install",{"_index":969,"title":{},"body":{"index.html":{}}}],["installation",{"_index":955,"title":{},"body":{"index.html":{}}}],["institute",{"_index":1276,"title":{},"body":{"license.html":{}}}],["instrumentation",{"_index":279,"title":{},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"changelog.html":{},"index.html":{}}}],["instrumentationoption",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["instrumentationoptions",{"_index":291,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentations",{"_index":355,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["instrumentationservice",{"_index":276,"title":{"injectables/InstrumentationService.html":{}},"body":{"injectables/InstrumentationService.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["integration",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["intentionally",{"_index":1214,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":401,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":427,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":419,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interception",{"_index":264,"title":{},"body":{"interfaces/CustomSpan.html":{},"index.html":{}}}],["interceptor",{"_index":392,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"properties.html":{},"todo.html":{}}}],["interceptor.js",{"_index":1090,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":551,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:36",{"_index":554,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/custom",{"_index":80,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["interceptor/opentelemetry",{"_index":560,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/component/otel",{"_index":575,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/custom",{"_index":252,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":395,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":550,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/otel",{"_index":609,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":237,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":266,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:13",{"_index":267,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/noop",{"_index":376,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":569,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":635,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts",{"_index":277,"title":{},"body":{"injectables/InstrumentationService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:112",{"_index":316,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:129",{"_index":294,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:139",{"_index":298,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:32",{"_index":323,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:37",{"_index":292,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:66",{"_index":304,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:83",{"_index":313,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/instrumentation/instrumentation.service.ts:97",{"_index":308,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["interceptor/src/lib/services/propagator/aws",{"_index":7,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":179,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":210,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":367,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":384,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":271,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:13",{"_index":272,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/w3c",{"_index":631,"title":{},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/public",{"_index":1033,"title":{},"body":{"index.html":{}}}],["interceptorprovider",{"_index":566,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptors",{"_index":394,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":49,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["interval",{"_index":116,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ipropagator",{"_index":42,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1254,"title":{},"body":{"license.html":{}}}],["issue",{"_index":1228,"title":{},"body":{"license.html":{}}}],["issue#38",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["issue#4",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["issue#41",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["issue#42",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["issue#80",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":195,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":224,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":1020,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":366,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":216,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":370,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{}}}],["jaegerpropagator(this.customheader",{"_index":374,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerpropagatorconfig",{"_index":144,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":1121,"title":{},"body":{"license.html":{}}}],["jest",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":775,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["js/tree/main/experimental/packages/opentelemetry",{"_index":1005,"title":{},"body":{"index.html":{}}}],["js/tree/main/packages/opentelemetry",{"_index":1006,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":482,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":946,"title":{},"body":{"index.html":{}}}],["julien",{"_index":1465,"title":{},"body":{"properties.html":{}}}],["key",{"_index":143,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":517,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["language",{"_index":1455,"title":{},"body":{"license.html":{}}}],["last",{"_index":1010,"title":{},"body":{"index.html":{}}}],["law",{"_index":1361,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1282,"title":{},"body":{"license.html":{}}}],["legal",{"_index":1139,"title":{},"body":{"license.html":{}}}],["legend",{"_index":593,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["level",{"_index":100,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["liability",{"_index":1383,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1391,"title":{},"body":{"license.html":{}}}],["library",{"_index":947,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":1270,"title":{},"body":{"license.html":{}}}],["license",{"_index":1118,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1450,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1287,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1133,"title":{},"body":{"license.html":{}}}],["limit",{"_index":136,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["limitation",{"_index":1368,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1457,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1175,"title":{},"body":{"license.html":{}}}],["line",{"_index":588,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["link",{"_index":741,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["list",{"_index":1002,"title":{},"body":{"index.html":{}}}],["lists",{"_index":1226,"title":{},"body":{"license.html":{}}}],["literal",{"_index":633,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":1277,"title":{},"body":{"license.html":{}}}],["load",{"_index":707,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loaded",{"_index":564,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["lock",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["lock.json",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["log",{"_index":95,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["logbody",{"_index":99,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["logger",{"_index":156,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":1053,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":1054,"title":{},"body":{"index.html":{}}}],["logging",{"_index":806,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loglevel",{"_index":102,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loglevel:diagloglevel.all",{"_index":983,"title":{},"body":{"index.html":{}}}],["long",{"_index":122,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["loss",{"_index":1399,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1406,"title":{},"body":{"license.html":{}}}],["made",{"_index":1190,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1225,"title":{},"body":{"license.html":{}}}],["main",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1264,"title":{},"body":{"license.html":{}}}],["making",{"_index":1172,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1404,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1230,"title":{},"body":{"license.html":{}}}],["management",{"_index":1153,"title":{},"body":{"license.html":{}}}],["manager",{"_index":440,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":387,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":1236,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1350,"title":{},"body":{"license.html":{}}}],["matching",{"_index":28,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["maxexportbatchsize",{"_index":115,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maximum",{"_index":105,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["maxqueuesize",{"_index":111,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["mean",{"_index":1130,"title":{},"body":{"license.html":{}}}],["means",{"_index":1148,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1180,"title":{},"body":{"license.html":{}}}],["media",{"_index":1186,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1293,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1294,"title":{},"body":{"license.html":{}}}],["member",{"_index":1109,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1370,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1209,"title":{},"body":{"license.html":{}}}],["merge",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":489,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["metadata",{"_index":580,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["method",{"_index":432,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{}}}],["methods",{"_index":34,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1471,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":318,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":1173,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1299,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1324,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1329,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":556,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["more",{"_index":184,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["named",{"_index":1046,"title":{},"body":{"index.html":{}}}],["names",{"_index":1349,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":1106,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":1271,"title":{},"body":{"license.html":{}}}],["need",{"_index":968,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1386,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1389,"title":{},"body":{"license.html":{}}}],["new",{"_index":48,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":428,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["next.handle(tracedreq).pipe",{"_index":475,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":13,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngoninit",{"_index":582,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["ngx",{"_index":937,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":958,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":1107,"title":{},"body":{"index.html":{}}}],["non",{"_index":1249,"title":{},"body":{"license.html":{}}}],["noop",{"_index":381,"title":{},"body":{"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":1018,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":389,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["noopspanexportermodule",{"_index":375,"title":{"modules/NoopSpanExporterModule.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["noopspanexporterservice",{"_index":380,"title":{"injectables/NoopSpanExporterService.html":{}},"body":{"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"coverage.html":{}}}],["noopspanprocessor",{"_index":339,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["nooptextmappropagator",{"_index":390,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":383,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":388,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":1321,"title":{},"body":{"license.html":{}}}],["notable",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":978,"title":{},"body":{"index.html":{},"license.html":{}}}],["notice",{"_index":1192,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1302,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1338,"title":{},"body":{"license.html":{}}}],["npm",{"_index":973,"title":{},"body":{"index.html":{}}}],["null",{"_index":165,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":296,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["number(config.otelcolconfig?.concurrencylimit",{"_index":628,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["number(value",{"_index":365,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["o",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":1178,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1416,"title":{},"body":{"license.html":{}}}],["observable",{"_index":434,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1452,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1265,"title":{},"body":{"license.html":{}}}],["offers",{"_index":962,"title":{},"body":{"index.html":{}}}],["ok",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":1021,"title":{},"body":{"index.html":{},"license.html":{}}}],["oninit",{"_index":579,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["op",{"_index":382,"title":{},"body":{"injectables/NoopSpanExporterService.html":{}}}],["open",{"_index":1074,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":101,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":43,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/api/build/src/propagation/nooptextmappropagator",{"_index":391,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["opentelemetry/context",{"_index":324,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["opentelemetry/core",{"_index":220,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":620,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/instrumentation",{"_index":78,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/otlp",{"_index":623,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["opentelemetry/propagator",{"_index":44,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"index.html":{}}}],["opentelemetry/resources",{"_index":336,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/sdk",{"_index":250,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"injectables/NoopSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/semantic",{"_index":333,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":1099,"title":{},"body":{"index.html":{}}}],["opentelemetry/web",{"_index":1092,"title":{},"body":{"index.html":{}}}],["opentelemetryconfig",{"_index":147,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryhttpinterceptor",{"_index":393,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinterceptor",{"_index":397,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":549,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":1029,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["opentelemtry",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":1096,"title":{},"body":{"index.html":{}}}],["option",{"_index":1056,"title":{},"body":{"index.html":{}}}],["optional",{"_index":56,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":1103,"title":{},"body":{"index.html":{}}}],["origin",{"_index":1356,"title":{},"body":{"license.html":{}}}],["original",{"_index":423,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otel",{"_index":578,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["otel_config",{"_index":151,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_custom_span",{"_index":160,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_exporter",{"_index":241,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"modules/NoopSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_instrumentation_plugins",{"_index":162,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_logger",{"_index":158,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otel_propagator",{"_index":15,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol",{"_index":571,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":149,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":568,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":570,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":128,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otelwebtracercomponent",{"_index":572,"title":{"components/OtelWebTracerComponent.html":{}},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{},"overview.html":{}}}],["otelwebtracermodule",{"_index":601,"title":{"modules/OtelWebTracerModule.html":{}},"body":{"modules/OtelWebTracerModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["otelwebtracermodule.forroot(environment.opentelemetryconfig",{"_index":1034,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":320,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["otlp",{"_index":621,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{}}}],["otlpexporterconfigbase",{"_index":617,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter",{"_index":619,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["otlptraceexporter(this.otelcolconfig",{"_index":629,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["out",{"_index":608,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":1162,"title":{},"body":{"license.html":{}}}],["overide",{"_index":431,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["override",{"_index":1042,"title":{},"body":{"index.html":{}}}],["overview",{"_index":1461,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1135,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1158,"title":{},"body":{"license.html":{}}}],["package",{"_index":669,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":1445,"title":{},"body":{"license.html":{}}}],["param",{"_index":201,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":192,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":331,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":562,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["part",{"_index":1310,"title":{},"body":{"license.html":{}}}],["partial",{"_index":133,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1372,"title":{},"body":{"license.html":{}}}],["party",{"_index":1320,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1261,"title":{},"body":{"license.html":{}}}],["peer",{"_index":326,"title":{},"body":{"injectables/InstrumentationService.html":{},"changelog.html":{},"index.html":{}}}],["peerdependencies",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["pending",{"_index":137,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["percent",{"_index":1160,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":981,"title":{},"body":{"index.html":{}}}],["perform",{"_index":1258,"title":{},"body":{"license.html":{}}}],["permission",{"_index":1347,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1168,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":1247,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1309,"title":{},"body":{"license.html":{}}}],["places",{"_index":1315,"title":{},"body":{"license.html":{}}}],["platformlocation",{"_index":403,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["plugin",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["plugins",{"_index":967,"title":{},"body":{"index.html":{}}}],["port",{"_index":415,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["possibilities",{"_index":963,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1409,"title":{},"body":{"license.html":{}}}],["power",{"_index":1149,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1171,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":1256,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1444,"title":{},"body":{"license.html":{}}}],["private",{"_index":186,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":299,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":94,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1351,"title":{},"body":{"license.html":{}}}],["production",{"_index":90,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":874,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":652,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/instrumentation",{"_index":1067,"title":{},"body":{"index.html":{}}}],["projects/interceptor",{"_index":1066,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":1301,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":1009,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":145,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":16,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.module.ts",{"_index":10,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service",{"_index":19,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":31,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:15",{"_index":217,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":37,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":368,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["propagator.service.ts:24",{"_index":191,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":369,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:35",{"_index":218,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:43",{"_index":194,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:55",{"_index":198,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/aws",{"_index":9,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/b3",{"_index":180,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":211,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":226,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":386,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator/propagator.interface",{"_index":341,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["propagator/w3c",{"_index":223,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":231,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":290,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":55,"title":{"properties.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"properties.html":{}}}],["protocol",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":23,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1195,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":45,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["provider",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/OtelWebTracerModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["provides",{"_index":1363,"title":{},"body":{"license.html":{}}}],["public",{"_index":284,"title":{},"body":{"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["publicly",{"_index":1257,"title":{},"body":{"license.html":{}}}],["publish",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1231,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1146,"title":{},"body":{"license.html":{}}}],["queue",{"_index":106,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["ray",{"_index":1023,"title":{},"body":{"index.html":{}}}],["reached",{"_index":108,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["readable",{"_index":1313,"title":{},"body":{"license.html":{}}}],["readme",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1430,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1353,"title":{},"body":{"license.html":{}}}],["received",{"_index":1240,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1296,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":1000,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1378,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1291,"title":{},"body":{"license.html":{}}}],["redo",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":1345,"title":{},"body":{"license.html":{}}}],["registerinstrumentations",{"_index":337,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["reinit",{"_index":468,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["release",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":1207,"title":{},"body":{"license.html":{}}}],["remove",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1438,"title":{},"body":{"license.html":{}}}],["represent",{"_index":1204,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1224,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1255,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1357,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1126,"title":{},"body":{"license.html":{}}}],["req,res",{"_index":991,"title":{},"body":{"index.html":{}}}],["request",{"_index":258,"title":{},"body":{"interfaces/CustomSpan.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["request.clone",{"_index":533,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":532,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":530,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":506,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method.touppercase",{"_index":504,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.params",{"_index":1061,"title":{},"body":{"index.html":{}}}],["request.urlwithparams",{"_index":508,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams.startswith('http",{"_index":497,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["requests",{"_index":138,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["required",{"_index":1352,"title":{},"body":{"license.html":{}}}],["res.status(200).send",{"_index":992,"title":{},"body":{"index.html":{}}}],["reset",{"_index":607,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"changelog.html":{},"overview.html":{}}}],["resource",{"_index":335,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["resource.default().merge",{"_index":347,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["response",{"_index":97,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/CustomSpan.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["response.status",{"_index":1062,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1422,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1374,"title":{},"body":{"license.html":{}}}],["restart",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":959,"title":{},"body":{"index.html":{},"license.html":{}}}],["resulting",{"_index":1179,"title":{},"body":{"license.html":{}}}],["results",{"_index":27,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1306,"title":{},"body":{"license.html":{}}}],["return",{"_index":38,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":40,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":1201,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1418,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1380,"title":{},"body":{"license.html":{}}}],["root",{"_index":46,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":1252,"title":{},"body":{"license.html":{}}}],["run",{"_index":123,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["rxjs",{"_index":444,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":450,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1036,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":303,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":302,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":300,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":980,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":871,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["save",{"_index":974,"title":{},"body":{"index.html":{}}}],["scheduleddelaymillis",{"_index":121,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["scheme",{"_index":413,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["section",{"_index":1032,"title":{},"body":{"index.html":{},"license.html":{}}}],["sections",{"_index":1131,"title":{},"body":{"license.html":{}}}],["see",{"_index":183,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["selector",{"_index":581,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["sell",{"_index":1266,"title":{},"body":{"license.html":{}}}],["semanticattributes",{"_index":447,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_host",{"_index":509,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_method",{"_index":505,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_scheme",{"_index":511,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_status_code",{"_index":478,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_target",{"_index":512,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_url",{"_index":507,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticattributes.http_user_agent",{"_index":515,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes",{"_index":332,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["semanticresourceattributes.service_name",{"_index":348,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["send",{"_index":977,"title":{},"body":{"index.html":{}}}],["sending",{"_index":1088,"title":{},"body":{"index.html":{}}}],["sent",{"_index":1223,"title":{},"body":{"license.html":{}}}],["separable",{"_index":1208,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1342,"title":{},"body":{"license.html":{}}}],["service",{"_index":86,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":84,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":453,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/instrumentation/instrumentation.service",{"_index":586,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{}}}],["services/propagator/propagator.interface",{"_index":454,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["set",{"_index":437,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["setcustomspan",{"_index":402,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setcustomspan(span",{"_index":435,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":534,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":1129,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1163,"title":{},"body":{"license.html":{}}}],["show",{"_index":1008,"title":{},"body":{"index.html":{}}}],["simplespanexporter(sync",{"_index":93,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":319,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(exporter.getexporter",{"_index":364,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["simplespanprocessor(new",{"_index":362,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(this.exporterservice.getexporter",{"_index":546,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["size",{"_index":107,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["skipself",{"_index":557,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["smaller",{"_index":113,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["software",{"_index":1176,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1421,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1373,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":98,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopSpanExporterModule.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["span.addevent('response",{"_index":481,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":494,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.interface",{"_index":81,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["span.interface.ts",{"_index":253,"title":{},"body":{"interfaces/CustomSpan.html":{},"coverage.html":{}}}],["span.interface.ts:16",{"_index":262,"title":{},"body":{"interfaces/CustomSpan.html":{}}}],["span.kind",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["span.recordexception",{"_index":487,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattribute('mycustom.key",{"_index":1060,"title":{},"body":{"index.html":{}}}],["span.setattributes",{"_index":477,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":483,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanattributes",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["spanexporter",{"_index":248,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/NoopSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["spans",{"_index":109,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["spanstatuscode",{"_index":445,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.error",{"_index":493,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanstatuscode.unset",{"_index":485,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":1393,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1454,"title":{},"body":{"license.html":{}}}],["specify",{"_index":177,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":491,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":438,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":1070,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":1072,"title":{},"body":{"index.html":{}}}],["started",{"_index":648,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":501,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":1337,"title":{},"body":{"license.html":{}}}],["stated",{"_index":1263,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1330,"title":{},"body":{"license.html":{}}}],["statements",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":187,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["stating",{"_index":1303,"title":{},"body":{"license.html":{}}}],["status.code",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1401,"title":{},"body":{"license.html":{}}}],["string",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":898,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":1259,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1333,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1217,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1215,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1241,"title":{},"body":{"license.html":{}}}],["such",{"_index":1154,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":1341,"title":{},"body":{"license.html":{}}}],["support",{"_index":1414,"title":{},"body":{"license.html":{},"modules.html":{}}}],["svg",{"_index":1460,"title":{},"body":{"modules.html":{}}}],["sync",{"_index":999,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1442,"title":{},"body":{"license.html":{}}}],["systems",{"_index":1227,"title":{},"body":{"license.html":{}}}],["table",{"_index":927,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":448,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1468,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":1004,"title":{},"body":{"index.html":{}}}],["template",{"_index":590,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["terminate",{"_index":1288,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1124,"title":{},"body":{"license.html":{}}}],["test",{"_index":691,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":385,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":41,"title":{},"body":{"injectables/AwsXrayPropagatorService.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/W3CTraceContextPropagatorService.html":{}}}],["theory",{"_index":1384,"title":{},"body":{"license.html":{}}}],["there's",{"_index":1077,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1211,"title":{},"body":{"license.html":{}}}],["third",{"_index":1319,"title":{},"body":{"license.html":{}}}],["this.awsxraypropagatorservice.getpropagator",{"_index":235,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.b3propagatorconfig",{"_index":203,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":232,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.console",{"_index":538,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.production",{"_index":544,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.config.commonconfig.servicename",{"_index":349,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":353,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":525,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":519,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.disable",{"_index":466,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.enable",{"_index":471,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.exporttimeoutmillis",{"_index":542,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxexportbatchsize",{"_index":540,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.maxqueuesize",{"_index":543,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.convertstringtonumber(this.config.batchspanprocessorconfig?.scheduleddelaymillis",{"_index":541,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":372,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.customspan",{"_index":547,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customspan.add(span",{"_index":548,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(config.commonconfig.probabilitysampler",{"_index":459,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.defineprobabilitysampler(this.convertstringtonumber(this.config.commonconfig.probabilitysampler",{"_index":346,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.exporterservice,this.config.commonconfig.console",{"_index":351,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.initspan(request",{"_index":472,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":474,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter",{"_index":536,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(console",{"_index":359,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertornotspanexporter",{"_index":460,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertornotspanexporter(this.config.commonconfig.production",{"_index":350,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":535,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode(production",{"_index":358,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationoptions",{"_index":356,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.instrumentationservice.initinstrumentation",{"_index":592,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":234,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.logbody",{"_index":462,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.otelcolconfig",{"_index":624,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.platformlocation.href",{"_index":495,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.propagatorservice.getpropagator",{"_index":354,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.setcustomspan(span",{"_index":486,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":458,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":539,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor(new",{"_index":537,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":461,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracerprovider",{"_index":345,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor",{"_index":361,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.addspanprocessor(new",{"_index":360,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.tracerprovider.register",{"_index":352,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["this.w3ctracecontextpropagatorservice.getpropagator",{"_index":233,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.zipkinconfig",{"_index":643,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":1268,"title":{},"body":{"license.html":{}}}],["through",{"_index":1132,"title":{},"body":{"license.html":{}}}],["throw",{"_index":172,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":1037,"title":{},"body":{"index.html":{}}}],["timeout",{"_index":1110,"title":{},"body":{"index.html":{}}}],["title",{"_index":1369,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1467,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":175,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tort",{"_index":1385,"title":{},"body":{"license.html":{}}}],["touppercase",{"_index":503,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["trace",{"_index":87,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/InstrumentationService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":473,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":330,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":310,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["tracerprovider",{"_index":281,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["traces",{"_index":982,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":1229,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1348,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1307,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1346,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1267,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1181,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1182,"title":{},"body":{"license.html":{}}}],["tree",{"_index":574,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["trouble",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":960,"title":{},"body":{"index.html":{}}}],["true",{"_index":311,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":1113,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":1105,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["twice",{"_index":1040,"title":{},"body":{"index.html":{}}}],["two",{"_index":118,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["type",{"_index":59,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"interfaces/CustomSpan.html":{},"injectables/InstrumentationService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["type/node",{"_index":1111,"title":{},"body":{"index.html":{}}}],["types",{"_index":1187,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":1117,"title":{},"body":{"index.html":{}}}],["typo",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":166,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopSpanExporterService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1145,"title":{},"body":{"license.html":{}}}],["underscore",{"_index":521,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["union",{"_index":1140,"title":{},"body":{"license.html":{}}}],["unless",{"_index":1335,"title":{},"body":{"license.html":{}}}],["unset",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1083,"title":{},"body":{"index.html":{}}}],["update",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":129,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":498,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["url(this.geturl",{"_index":499,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":496,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":510,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":513,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":502,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":514,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":91,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":24,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopSpanExporterModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["used",{"_index":1028,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":1055,"title":{},"body":{"index.html":{}}}],["useless",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":950,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":169,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["using",{"_index":1377,"title":{},"body":{"license.html":{}}}],["value",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/InstrumentationService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["valueprovider",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"modules/OtelWebTracerModule.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":597,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["variable",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1472,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":1220,"title":{},"body":{"license.html":{}}}],["verify",{"_index":314,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["version",{"_index":451,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{},"properties.html":{}}}],["version.json",{"_index":452,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":997,"title":{},"body":{"index.html":{}}}],["void",{"_index":306,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{}}}],["w3c",{"_index":221,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{}}}],["w3ctracecontext",{"_index":1019,"title":{},"body":{"index.html":{}}}],["w3ctracecontextpropagator",{"_index":632,"title":{},"body":{"injectables/W3CTraceContextPropagatorService.html":{}}}],["w3ctracecontextpropagatormodule",{"_index":630,"title":{"modules/W3CTraceContextPropagatorModule.html":{}},"body":{"modules/W3CTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["w3ctracecontextpropagatorservice",{"_index":215,"title":{"injectables/W3CTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/W3CTraceContextPropagatorModule.html":{},"injectables/W3CTraceContextPropagatorService.html":{},"coverage.html":{}}}],["want",{"_index":1076,"title":{},"body":{"index.html":{}}}],["warn",{"_index":1051,"title":{},"body":{"index.html":{}}}],["warning",{"_index":961,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1365,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1359,"title":{},"body":{"license.html":{}}}],["web",{"_index":338,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"components/OtelWebTracerComponent.html":{},"index.html":{}}}],["webtracer.component",{"_index":613,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.component.ts",{"_index":577,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"coverage.html":{}}}],["webtracer.component.ts:13",{"_index":584,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.component.ts:25",{"_index":585,"title":{},"body":{"components/OtelWebTracerComponent.html":{}}}],["webtracer.module.ts",{"_index":610,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer.module.ts:34",{"_index":611,"title":{},"body":{"modules/OtelWebTracerModule.html":{}}}],["webtracer/otel",{"_index":576,"title":{},"body":{"components/OtelWebTracerComponent.html":{},"modules/OtelWebTracerModule.html":{},"coverage.html":{}}}],["webtracerprovider",{"_index":322,"title":{},"body":{"injectables/InstrumentationService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":1318,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1155,"title":{},"body":{"license.html":{}}}],["whole",{"_index":1205,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":516,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":1243,"title":{},"body":{"license.html":{}}}],["without",{"_index":1087,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1188,"title":{},"body":{"license.html":{}}}],["works",{"_index":883,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":1248,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1238,"title":{},"body":{"license.html":{}}}],["written",{"_index":1221,"title":{},"body":{"license.html":{}}}],["x",{"_index":1022,"title":{},"body":{"index.html":{}}}],["xml",{"_index":972,"title":{},"body":{"index.html":{}}}],["xmlhttprequestinstrumentation",{"_index":1035,"title":{},"body":{"index.html":{}}}],["xray",{"_index":8,"title":{},"body":{"modules/AwsXrayPropagatorModule.html":{},"injectables/AwsXrayPropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{},"index.html":{}}}],["xsrf",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":1089,"title":{},"body":{"index.html":{}}}],["yes",{"_index":555,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelWebTracerModule.html":{}}}],["you're",{"_index":1038,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1449,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":140,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"index.html":{}}}],["zipkincollectorconfig",{"_index":141,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":150,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/BatchSpanProcessorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":639,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":646,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":634,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":636,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone",{"_index":325,"title":{},"body":{"injectables/InstrumentationService.html":{},"index.html":{}}}],["zone.js",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["zonecontextmanager",{"_index":321,"title":{},"body":{"injectables/InstrumentationService.html":{}}}],["zoom",{"_index":606,"title":{},"body":{"modules/OtelWebTracerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AwsXrayPropagatorModule.html":{"url":"modules/AwsXrayPropagatorModule.html","title":"module - AwsXrayPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    AwsXrayPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\nimport { AwsXrayPropagatorService } from './aws-xray-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: AwsXrayPropagatorService }\n  ]\n})\nexport class AwsXrayPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AwsXrayPropagatorService.html":{"url":"injectables/AwsXrayPropagatorService.html","title":"injectable - AwsXrayPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AwsXrayPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                AwsXrayPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an AwsXrayPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as AwsXrayPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { AWSXRayPropagator } from '@opentelemetry/propagator-aws-xray';\n/**\n * AwsXrayPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class AwsXrayPropagatorService implements IPropagator {\n  /**\n   * Return an AwsXrayPropagator\n   *\n   * @return TextMapPropagator as AwsXrayPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new AWSXRayPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            multiHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        defineB3Encoding\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:43\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:55\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        b3PropagatorConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         B3PropagatorConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:24\n                        \n                    \n\n            \n                \n                    B3PropagatorConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * B3PropagatorConfig\n   */\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   *\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   *\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BatchSpanProcessorConfig.html":{"url":"interfaces/BatchSpanProcessorConfig.html","title":"interface - BatchSpanProcessorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BatchSpanProcessorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                BatchSpanExporter Configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            exportTimeoutMillis\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxExportBatchSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxQueueSize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            scheduledDelayMillis\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exportTimeoutMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exportTimeoutMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    How long the export can run before it is cancelled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxExportBatchSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxExportBatchSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxQueueSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxQueueSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The maximum queue size. After the size is reached spans are dropped.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scheduledDelayMillis\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scheduledDelayMillis:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The interval between two consecutive exports\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            console\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logBody\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            probabilitySampler\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production\n                                        \n                                \n                                \n                                        \n                                            serviceName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logBody\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logBody:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log or not body response in span\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     DiagLogLevel\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DiagLogLevel\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    log level for opentelemetry\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class  CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, w3cTraceContextPropagatorService: W3CTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService, awsXrayPropagatorService: AwsXrayPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        w3cTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        W3CTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        awsXrayPropagatorService\n                                                  \n                                                        \n                                                                        AwsXrayPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:35\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { W3CTraceContextPropagatorService } from '../w3c-trace-context-propagator/w3c-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\nimport { AwsXrayPropagatorService } from '../aws-xray-propagator/aws-xray-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(W3CTraceContextPropagatorService)\n    private w3cTraceContextPropagatorService: W3CTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService,\n    @Inject(AwsXrayPropagatorService)\n    private awsXrayPropagatorService: AwsXrayPropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   *\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.w3cTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n        this.awsXrayPropagatorService.getPropagator()\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomSpan.html":{"url":"interfaces/CustomSpan.html","title":"interface - CustomSpan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomSpan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface Injected in HttpInterceptor to add attributes in a Span.\nImplements this interface\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts:16\n                \n            \n\n\n            \n                \n                    To add Attributes in a Span during interception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpRequest\n\n                                    \n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        an HttpResponse\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Span } from '@opentelemetry/api';\n\n/**\n * Interface Injected in HttpInterceptor to add attributes in a Span.\n * Implements this interface\n */\nexport interface CustomSpan {\n  /**\n   * To add Attributes in a Span during interception.\n   *\n   * @param span Span\n   * @param request an HttpRequest\n   * @param response an HttpResponse\n   */\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getExporter\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTEL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getPropagator\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:13\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   *\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTEL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InstrumentationService.html":{"url":"injectables/InstrumentationService.html","title":"injectable - InstrumentationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InstrumentationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n        \n\n\n            \n                Description\n            \n            \n                InstrumentationService.\nService for component to add instrumentation.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                contextManager\n                            \n                            \n                                    Private\n                                tracerProvider\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Public\n                                initInstrumentation\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, instrumentationOptions: InstrumentationOption[])\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        instrumentationOptions\n                                                  \n                                                        \n                                                                    InstrumentationOption[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:129\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:139\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initInstrumentation\n                        \n                    \n                \n            \n            \n                \n                    \n                    initInstrumentation()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:66\n                \n            \n\n\n            \n                \n                    Init instrumentation on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:97\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:83\n                \n            \n\n\n            \n                \n                    Verify to insert or not a Span Exporter\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, exporter: IExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:112\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    exporter\n                                    \n                                                IExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ZoneContextManager()\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:37\n                        \n                    \n\n            \n                \n                    contextManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tracerProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts:32\n                        \n                    \n\n            \n                \n                    tracerProvider\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { ZoneContextManager } from '@opentelemetry/context-zone-peer-dep';\nimport { Sampler } from '@opentelemetry/api';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { InstrumentationOption, registerInstrumentations } from '@opentelemetry/instrumentation';\nimport { WebTracerProvider } from '@opentelemetry/sdk-trace-web';\nimport { ConsoleSpanExporter, SimpleSpanProcessor, BatchSpanProcessor, NoopSpanProcessor } from '@opentelemetry/sdk-trace-base';\nimport { OTEL_CONFIG, OpenTelemetryConfig, OTEL_INSTRUMENTATION_PLUGINS } from '../../configuration/opentelemetry-config';\nimport { OTEL_EXPORTER, IExporter } from '../exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../propagator/propagator.interface';\n\n\n/**\n * InstrumentationService.\n * Service for component to add instrumentation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class InstrumentationService {\n\n  /**\n   * tracerProvider\n   */\n  private tracerProvider: WebTracerProvider;\n\n  /**\n   * contextManager\n   */\n  private contextManager = new ZoneContextManager();\n\n  /**\n   * Constructor\n   *\n   * @param config\n   * @param exporterService\n   * @param propagatorService\n   */\n  constructor(@Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Inject(OTEL_INSTRUMENTATION_PLUGINS)\n    private instrumentationOptions: InstrumentationOption[]) {\n      this.tracerProvider = new WebTracerProvider({\n        sampler: this.defineProbabilitySampler(this.convertStringToNumber(this.config.commonConfig.probabilitySampler)),\n        resource: Resource.default().merge(\n          new Resource({\n            [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n          })\n        ),\n      });\n    }\n\n  /**\n   * Init instrumentation on init\n   */\n  public initInstrumentation() {\n    this.insertOrNotSpanExporter(this.config.commonConfig.production, this.exporterService,this.config.commonConfig.console);\n\n    this.tracerProvider.register({\n      contextManager: this.contextManager,\n      propagator: this.propagatorService.getPropagator()\n    });\n\n    registerInstrumentations({\n      instrumentations: this.instrumentationOptions,\n      tracerProvider: this.tracerProvider,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n   private insertOrNotSpanExporter(production: boolean, exporter: IExporter, console: boolean) {\n    if(this.exporterService.getExporter()!==undefined) {\n      this.insertSpanProcessorProductionMode(production, exporter);\n      this.insertConsoleSpanExporter(console);\n    } else {\n      this.tracerProvider.addSpanProcessor(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   *\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracerProvider.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   *\n   * @param boolean production\n   * @param IExporter exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    exporter: IExporter\n  ) {\n    this.tracerProvider.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(exporter.getExporter())\n        : new SimpleSpanProcessor(exporter.getExporter())\n    );\n  }\n\n  /**\n   * convert String to Number (or undefined)\n   *\n   * @param value\n   * @returns number or undefined\n   */\n  private convertStringToNumber(value: string): number {\n    return value !== undefined ? Number(value) : undefined;\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an JaegerPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerPropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        customHeader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                        \n                    \n\n            \n                \n                    custom Header\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerPropagator } from '@opentelemetry/propagator-jaeger';\nimport { OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerPropagator\n   *\n   * @return TextMapPropagator as JaegerPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerPropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customHeader\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopSpanExporterModule.html":{"url":"modules/NoopSpanExporterModule.html","title":"module - NoopSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopSpanExporterService } from './noop-span-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: NoopSpanExporterService }\n  ]\n})\nexport class NoopSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopSpanExporterService.html":{"url":"injectables/NoopSpanExporterService.html","title":"injectable - NoopSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopSpanExporterService\nA No-op span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts:18\n                \n            \n\n\n            \n                \n                    Return undefined\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\n\n/**\n * NoopSpanExporterService\n * A No-op span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopSpanExporterService implements IExporter {\n  /**\n   * Return undefined\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { NoopTextMapPropagator } from '@opentelemetry/api/build/src/propagation/NoopTextMapPropagator';\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   *\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            b3PropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            batchSpanProcessorConfig\n                                        \n                                \n                                \n                                        \n                                            commonConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            jaegerPropagatorConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            otelcolConfig\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            zipkinConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchSpanProcessorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        batchSpanProcessorConfig:         BatchSpanProcessorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         BatchSpanProcessorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    batchSpanProcessorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                logBody\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                convertStringToNumber\n                            \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertOrNotSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                            \n                                    Private\n                                setCustomSpan\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator, logger: DiagLogger, customSpan: CustomSpan, platformLocation: PlatformLocation)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:59\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator injected\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    DiagLogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                define logger\n\n                                                        \n                                                \n                                                \n                                                        customSpan\n                                                  \n                                                        \n                                                                        CustomSpan\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                a customSpan interface to add attributes\n\n                                                        \n                                                \n                                                \n                                                        platformLocation\n                                                  \n                                                        \n                                                                        PlatformLocation\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                encapsulates all calls to DOM APIs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        convertStringToNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertStringToNumber(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:281\n                \n            \n\n\n            \n                \n                    convert String to Number (or undefined)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        number or undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineProbabilitySampler\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:264\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getURL\n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:159\n                \n            \n\n\n            \n                \n                    Get current scheme, hostname and port\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:168\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        injectContextAndHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:200\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertConsoleSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:232\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertOrNotSpanExporter\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertOrNotSpanExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:220\n                \n            \n\n\n            \n                \n                    Verify to insert or not a Span Exporter\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        insertSpanProcessorProductionMode\n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:244\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:108\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setCustomSpan\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCustomSpan(span: Span, request: HttpRequest<>, response: HttpResponse<> | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:293\n                \n            \n\n\n            \n                \n                    Set custom attributes in span with a CustomSpan\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            HttpResponse<> | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        Span\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contextManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StackContextManager\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:55\n                        \n                    \n\n            \n                \n                    context manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logBody\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:59\n                        \n                    \n\n            \n                \n                    Log or not body\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tracer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebTracerProvider\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:51\n                        \n                    \n\n            \n                \n                    tracer\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { PlatformLocation } from '@angular/common';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, SpanStatusCode, DiagLogger } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/sdk-trace-web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  NoopSpanProcessor,\n  BufferConfig\n} from '@opentelemetry/sdk-trace-base';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { SemanticResourceAttributes, SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { Resource } from '@opentelemetry/resources';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTEL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTEL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\nimport { OTEL_LOGGER, OTEL_CUSTOM_SPAN } from '../configuration/opentelemetry-config';\nimport { CustomSpan } from './custom-span.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n  /**\n   * Log or not body\n   */\n  logBody = false;\n\n  /**\n   * constructor\n   *\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator injected\n   * @param logger define logger\n   * @param customSpan a customSpan interface to add attributes\n   * @param platformLocation encapsulates all calls to DOM APIs\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) private config: OpenTelemetryConfig,\n    @Inject(OTEL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTEL_PROPAGATOR)\n    private propagatorService: IPropagator,\n    @Optional() @Inject(OTEL_LOGGER)\n    private logger: DiagLogger,\n    @Optional() @Inject(OTEL_CUSTOM_SPAN)\n    private customSpan: CustomSpan,\n    private platformLocation: PlatformLocation\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(this.convertStringToNumber(config.commonConfig.probabilitySampler)),\n      resource: Resource.default().merge(\n        new Resource({\n          [SemanticResourceAttributes.SERVICE_NAME]: this.config.commonConfig.serviceName,\n        })\n      ),\n    });\n    this.insertOrNotSpanExporter();\n    this.contextManager = new StackContextManager();\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n      contextManager: this.contextManager\n    });\n    this.logBody = config.commonConfig.logBody;\n    api.diag.setLogger(logger, config.commonConfig.logLevel);\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   *\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager.disable(); //FIX - reinit contextManager for each http call\n    this.contextManager.enable();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          if (this.logBody && event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: SpanStatusCode.UNSET\n          });\n          this.setCustomSpan(span, request, event);\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              [SemanticAttributes.HTTP_STATUS_CODE]: event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: SpanStatusCode.ERROR\n          });\n          this.setCustomSpan(span, request, event);\n        }\n      ),\n      finalize(() => {\n        span.end();\n        this.contextManager.disable();\n      })\n    );\n  }\n\n  /**\n   * Get current scheme, hostname and port\n   */\n  private getURL() {\n    return this.platformLocation.href;\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   *\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = (request.urlWithParams.startsWith('http')) ? new URL(request.urlWithParams) : new URL(this.getURL());\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        `${urlRequest.protocol.replace(':', '').toUpperCase()} ${request.method.toUpperCase()}`,\n        {\n          attributes: {\n            [SemanticAttributes.HTTP_METHOD]: request.method,\n            [SemanticAttributes.HTTP_URL]: request.urlWithParams,\n            [SemanticAttributes.HTTP_HOST]: urlRequest.host,\n            [SemanticAttributes.HTTP_SCHEME]: urlRequest.protocol.replace(':', ''),\n            [SemanticAttributes.HTTP_TARGET]: urlRequest.pathname + urlRequest.search,\n            [SemanticAttributes.HTTP_USER_AGENT]: window.navigator.userAgent\n          },\n          kind: api.SpanKind.CLIENT,\n        },\n        this.contextManager.active()\n      );\n    /*eslint no-underscore-dangle: [\"error\", { \"allow\": [\"_currentContext\"] }]*/\n    this.contextManager._currentContext = api.trace.setSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   *\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      this.contextManager.active(),\n      carrier,\n      api.defaultTextMapSetter\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Verify to insert or not a Span Exporter\n   */\n  private insertOrNotSpanExporter() {\n    if(this.exporterService.getExporter()!==undefined) {\n      this.insertSpanProcessorProductionMode();\n      this.insertConsoleSpanExporter();\n    } else {\n      this.tracer.addSpanProcessor(new NoopSpanProcessor());\n    }\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   */\n  private insertConsoleSpanExporter() {\n    if (this.config.commonConfig.console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   */\n  private insertSpanProcessorProductionMode() {\n    const bufferConfig: BufferConfig = {\n      maxExportBatchSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxExportBatchSize),\n      scheduledDelayMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.scheduledDelayMillis),\n      exportTimeoutMillis: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.exportTimeoutMillis),\n      maxQueueSize: this.convertStringToNumber(this.config.batchSpanProcessorConfig?.maxQueueSize)\n    };\n    this.tracer.addSpanProcessor(\n      this.config.commonConfig.production\n        ? new BatchSpanProcessor(this.exporterService.getExporter(), bufferConfig)\n        : new SimpleSpanProcessor(this.exporterService.getExporter())\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   *\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig >= 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig , response: HttpResponse | HttpErrorResponse): Span {\n    return this.customSpan != null ? this.customSpan.add(span, request, response) : span;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configProvider\n                                    \n                                            ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n    ): ModuleWithProviders {\n\n      //Interceptor\n      const interceptorProvider = {\n        provide: HTTP_INTERCEPTORS,\n        useClass: OpenTelemetryHttpInterceptor,\n        multi: true,\n      };\n\n      configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        configProvider,\n        interceptorProvider,\n      ],\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTEL_EXPORTER } from '../exporter.interface';\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: OtelcolExporterService },\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            attributes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            concurrencyLimit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     SpanAttributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpanAttributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        concurrencyLimit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        concurrencyLimit:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An optional limit on pending requests\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:4318/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OtelWebTracerComponent.html":{"url":"components/OtelWebTracerComponent.html","title":"component - OtelWebTracerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OtelWebTracerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Otel Web Tracer Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                otel-instrumentation\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(instrumentationService: InstrumentationService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        instrumentationService\n                                                  \n                                                        \n                                                                        InstrumentationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                InstrumentationService\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts:25\n                \n            \n\n\n            \n                \n                    Init Component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { InstrumentationService } from '../../services/instrumentation/instrumentation.service';\n\n\n/**\n * Otel Web Tracer Component\n */\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'otel-instrumentation',\n  template: '',\n})\nexport class OtelWebTracerComponent implements OnInit {\n\n  /**\n   * Constructor\n   *\n   * @param instrumentationService InstrumentationService\n   */\n  constructor(private instrumentationService: InstrumentationService) { }\n\n  /**\n   * Init Component\n   */\n  ngOnInit(): void {\n   this.instrumentationService.initInstrumentation();\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'OtelWebTracerComponent', 'selector': 'otel-instrumentation'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OtelWebTracerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelWebTracerModule.html":{"url":"modules/OtelWebTracerModule.html","title":"module - OtelWebTracerModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelWebTracerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OtelWebTracerComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig | null | undefined, configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/otel-webtracer.module.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig | null | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    configProvider\n                                    \n                                            ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  ClassProvider,\n  ConstructorProvider,\n  ExistingProvider,\n  FactoryProvider,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  ValueProvider,\n} from '@angular/core';\nimport {\n  defineConfigProvider,\n  OpenTelemetryConfig,\n} from './configuration/opentelemetry-config';\nimport { OtelWebTracerComponent } from './component/otel-webtracer/otel-webtracer.component';\nimport { InstrumentationService } from './services/instrumentation/instrumentation.service';\n\n@NgModule({\n  declarations: [OtelWebTracerComponent],\n  exports: [OtelWebTracerComponent]\n})\nexport class OtelWebTracerModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OtelWebTracerModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OtelWebTracerModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(\n    config: OpenTelemetryConfig | null | undefined,\n    configProvider?: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ModuleWithProviders {\n\n    configProvider = defineConfigProvider(config,configProvider);\n\n    return {\n      ngModule: OtelWebTracerModule,\n      providers: [\n        configProvider,\n        InstrumentationService\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:44\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        otelcolConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OTLPExporterConfigBase\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:21\n                        \n                    \n\n            \n                \n                    CollectorExporterConfigBase\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport {\n  OpenTelemetryConfig,\n  OTEL_CONFIG\n} from '../../../configuration/opentelemetry-config';\nimport { OTLPTraceExporter } from '@opentelemetry/exporter-trace-otlp-http/build/src/platform/browser/OTLPTraceExporter';\nimport { OTLPExporterConfigBase } from '@opentelemetry/otlp-exporter-base';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: OTLPExporterConfigBase;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(\n    @Inject(OTEL_CONFIG) config: OpenTelemetryConfig\n  ) {\n    this.otelcolConfig = {\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      concurrencyLimit: Number(config.otelcolConfig?.concurrencyLimit),\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   *\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new OTLPTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/W3CTraceContextPropagatorModule.html":{"url":"modules/W3CTraceContextPropagatorModule.html","title":"module - W3CTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    W3CTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { W3CTraceContextPropagatorService } from './w3c-trace-context-propagator.service';\nimport { OTEL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_PROPAGATOR, useClass: W3CTraceContextPropagatorService }\n  ]\n})\nexport class W3CTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/W3CTraceContextPropagatorService.html":{"url":"injectables/W3CTraceContextPropagatorService.html","title":"injectable - W3CTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  W3CTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n        \n\n\n            \n                Description\n            \n            \n                W3CTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getPropagator\n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts:18\n                \n            \n\n\n            \n                \n                    Return an W3CTraceContextPropagatorService\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as W3CTraceContextPropagatorService\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { W3CTraceContextPropagator } from '@opentelemetry/core';\n\n/**\n * W3CTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class W3CTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an W3CTraceContextPropagatorService\n   *\n   * @return TextMapPropagator as W3CTraceContextPropagatorService\n   */\n  getPropagator(): TextMapPropagator {\n    return new W3CTraceContextPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            headers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ClassProvider, ConstructorProvider, ExistingProvider, FactoryProvider, InjectionToken, ValueProvider } from '@angular/core';\nimport { DiagLogger, SpanAttributes, DiagLogLevel } from '@opentelemetry/api';\nimport { InstrumentationOption } from '@opentelemetry/instrumentation';\nimport { CustomSpan } from '../interceptor/custom-span.interface';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n  /** log or not body response in span */\n  logBody?: boolean;\n  /** log level for opentelemetry */\n  logLevel?: DiagLogLevel;\n}\n\n/**\n * BatchSpanExporter Configuration\n */\nexport interface BatchSpanProcessorConfig {\n  /** The maximum queue size. After the size is reached spans are dropped. */\n  maxQueueSize?: string;\n  /** The maximum batch size of every export. It must be smaller or equal to maxQueueSize. */\n  maxExportBatchSize?: string;\n  /** The interval between two consecutive exports */\n  scheduledDelayMillis?: string;\n  /** How long the export can run before it is cancelled */\n  exportTimeoutMillis?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:4318/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: SpanAttributes;\n  /**\n   * An optional limit on pending requests\n   */\n  concurrencyLimit?: string;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** batchSpanProcessorConfig */\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OTEL_CONFIG : Config injection */\nexport const OTEL_CONFIG = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTEL_LOGGER = new InjectionToken('otelcol.logger');\n\n/** custom span */\nexport const OTEL_CUSTOM_SPAN = new InjectionToken('otelcol.custom-span');\n\nexport const OTEL_INSTRUMENTATION_PLUGINS = new InjectionToken('otelcol.instrumentation.plugins');\n\nexport const defineConfigProvider = (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { OTEL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [],\n  providers: [\n    { provide: OTEL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExporter\n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:36\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        zipkinConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ExporterConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:17\n                        \n                    \n\n            \n                \n                    zipkinConfig\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/sdk-trace-base';\nimport { OpenTelemetryConfig, OTEL_CONFIG } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter, ExporterConfig } from '@opentelemetry/exporter-zipkin';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  /**\n   * zipkinConfig\n   */\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   *\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OTEL_CONFIG) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   *\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n1.1.0 (2022-05-27)\nFeatures\n\nremove instrumentation plugin and rename token (#106) (59ac6ca)\n\nBug Fixes\n\npackage-lock.json (e9dc64b)\n\n1.0.1 (2021-12-03)\nFeatures\n\nadd config provider for external config (7bbaf2e)\nadd example in instrumentation (e29c839)\n\n1.0.0 (2021-11-09)\n0.25.0-2 (2021-10-24)\nBug Fixes\n\nreview aws propagator integration (4fcec62)\ntest (3ae307e)\n\n0.25.0-1 (2021-10-01)\nBug Fixes\n\nissue#80: old reference package (ee08e85), closes issue#80\n\n0.25.0 (2021-09-17)\nFeatures\n\nupdate collector and add new default http port collector (4318) (5a7c375)\n\nBug Fixes\n\nadd test for instrumentation (23e35d1)\npeer dependencies version number (41c8947)\nreturn to 0.24.0 in document-load to release (1f22380)\n\n0.24.0-1 (2021-08-04)\nBug Fixes\n\nbad version on peerDependencies (c2b4209)\n\n0.24.0 (2021-08-01)\n0.23.0 (2021-07-08)\n0.22.0 (2021-06-17)\nBug Fixes\n\nreadme (a6307f2)\n\n0.21.0 (2021-06-11)\n0.20.0 (2021-06-07)\nFeatures\n\nadd concurencyLimit (40f33cc)\n\nBug Fixes\n\nspan.kind to client value and status.code to unset (#51) (b3e15af)\nissue#41: add custom dynamic span attributes (1c7c0c0), closes issue#41\n\n0.19.0 (2021-05-03)\nFeatures\n\ncomponent with instrumentation (#34) (caab7a9)\nissue#38: add batchSpanProcessorConfig (a73e382), closes issue#38\nissue#38: add batchSpanProcessorConfig (dbaec60), closes issue#38\n\nBug Fixes\n\nissue#4: link error on documentation (2965c35), closes issue#4\nissue#42: restart context for each http call (c9f8667), closes issue#42\napi breaking change (don't forget in changelog...) (18d04fd)\ncypress test error on span name (68d7aee)\ngithub action rename branch main (66ca86c)\nuse protocol and method for span name (1a56037)\n\n0.18.2 (2021-03-30)\nFeatures\n\nupdate to 0.18.2 (d8b9f3c)\n\n0.18.0-1 (2021-03-26)\n0.18.0 (2021-03-10)\nFeatures\n\nupdate to version 0.18.0 (ead3251)\n\nBug Fixes\n\nerror package-lock (c53447a)\n\n0.17.0 (2021-02-21)\nBug Fixes\n\nreadme error opentelemtery (0615f02)\n\n0.16.0 (2021-02-02)\nFeatures\n\nupdate to 0.16.0 opentelemetry-js (f0a18ea)\n\n0.15.0 (2021-01-28)\n0.14.0 (2020-12-18)\nFeatures\n\nadd log body configurable (332baf7)\nupdate angular 10.2 (efa9083)\nupdate opentelemetry-js 0.14.0 (dcde5bb)\n\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9)\n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/component/otel-webtracer/otel-webtracer.component.ts\n            \n            component\n            OtelWebTracerComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            BatchSpanProcessorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            defineConfigProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_CUSTOM_SPAN\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_INSTRUMENTATION_PLUGINS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTEL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/custom-span.interface.ts\n            \n            interface\n            CustomSpan\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTEL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/noop-exporter/noop-span-exporter.service.ts\n            \n            injectable\n            NoopSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/instrumentation/instrumentation.service.ts\n            \n            injectable\n            InstrumentationService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/aws-xray-propagator/aws-xray-propagator.service.ts\n            \n            injectable\n            AwsXrayPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTEL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/w3c-trace-context-propagator/w3c-trace-context-propagator.service.ts\n            \n            injectable\n            W3CTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.4\n        \n            @angular/cdk : ^10.2.4\n        \n            @angular/common : ^10.2.4\n        \n            @angular/compiler : ^10.2.4\n        \n            @angular/core : ^10.2.4\n        \n            @angular/forms : ^10.2.4\n        \n            @angular/material : ^10.2.4\n        \n            @angular/platform-browser : ^10.2.4\n        \n            @angular/platform-browser-dynamic : ^10.2.4\n        \n            @angular/router : ^10.2.4\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : 5.0.3\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nContent\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nBatchSpanProcessor Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\nExternal Configuration\n\n\nAngular module\nCommons Module\nExporter module\nPropagator module\n\n\nInterceptor Module\nInstrumentation Module\nInterceptor Module And Instrumentation Module\nInjection token\n\n\nComponent otel-instrumentation\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n(Optional) Add span attributes during interception\n\n\nHow it works\nExample\nRun\nInterceptor\nInstrumentation\n\n\n[Optional] Result in OpenTelemetry-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nContent\nThis library offers two possibilities to use it in Angular App : \n\nInterceptor : catch every external call with the HttpClient from angular\nInstrumentation : use instrumentation from opentelemetry-js with web plugins (You need to install and configure it) like : \n@opentelemetry/instrumentation-document-load\n@opentelemetry/instrumentation-fetch\n@opentelemetry/instrumentation-xml-http-request\n...\n\n\n\nInstallation\nWith npm :\nnpm i @jufab/opentelemetry-angular-interceptor && npm i @opentelemetry/api @opentelemetry/sdk-trace-web @opentelemetry/sdk-trace-base @opentelemetry/core @opentelemetry/semantic-conventions @opentelemetry/resources @opentelemetry/exporter-trace-otlp-http @opentelemetry/exporter-zipkin @opentelemetry/propagator-b3 @opentelemetry/propagator-jaeger @opentelemetry/context-zone-peer-dep @opentelemetry/instrumentation @opentelemetry/propagator-aws-xray --save-devConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  batchSpanProcessorConfig?: BatchSpanProcessorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n}Example global Configuration\nFrom the interceptor-example\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      logBody: true, //(boolean) true add body in a log, nothing otherwise\n      serviceName: 'interceptor-example', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n      logLevel:DiagLogLevel.ALL //(Enum) DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    batchSpanProcessorConfig: { //Only if production = true in commonConfig\n      maxQueueSize: '2048', // The maximum queue size. After the size is reached spans are dropped.\n      maxExportBatchSize: '512', // The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\n      scheduledDelayMillis: '5000', // The interval between two consecutive exports\n      exportTimeoutMillis: '30000', // How long the export can run before it is cancelled\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }From the instrumentation-example\nbackendApp.get('/api/config', (req,res) => {\n  return res.status(200).send({\n    commonConfig: {\n      console: true, // Display trace on console\n      production: true, // Send Trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false)\n      serviceName: 'instrumentation-example', // Service name send in trace\n      probabilitySampler: '0.75', // 75% sampling\n      logLevel: 99 //ALL Log, DiagLogLevel is an Enum from @opentelemetry/api\n    },\n    otelcolConfig: {\n      url: 'http://localhost:4318/v1/traces', // URL of opentelemetry collector\n    }\n  });\n})\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\nlogBody: (boolean) true add body in a log, nothing otherwise\nlogLevel: (DiagLogLevel) log level\n\nBatchSpanProcessor Configuration\nThis configuration applies if production is true in commonConfig.\n\nmaxQueueSize: (string) The maximum queue size. After the size is reached spans are dropped.\nmaxExportBatchSize: (string) The maximum batch size of every export. It must be smaller or equal to maxQueueSize.\nscheduledDelayMillis: (string) The interval between two consecutive exports\nexportTimeoutMillis: (string) How long the export can run before it is cancelled\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:4318/v1/traces)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nconcurrencyLimit (string) : An optional limit on pending requests (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : hhttps://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-b3)\n\nExternal Configuration\nInstrumentation example project have an external configuration to show how you can do it.\nAngular module\nYou need 3 modules to add to your application.\n\nExporter Module : to define type and export of traces.\nPropagator Module : to define propagation in your HTTP header.\nLast Module, 2 choices :  \nOpenTelemetryInterceptorModule : to activate interceptor in all your http call.\nOtelWebTracerModule : to activate instrumentation (you need a component to activate it, see Component otel-instrumentation).\n\n\n\nCommons Module\nYou add this modules in your application module (generally app.module.ts)\nExporter module\nThere is 4 exporters:\n\nNoopSpanExporterModule : This a fake exporter\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/experimental/packages/opentelemetry-exporter-trace-otlp-http)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 6 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nW3CTraceContextPropagatorModule : Use W3CTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-propagator-jaeger)\nAwsXrayPropagatorModule : Use AWS X-Ray propagator\nCompositePropagatorModule : use all of the propagator\n\nInterceptor Module\nJust add OpenTelemetryInterceptorModule to insert Interceptor\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}Instrumentation Module\nDeclare this OtelWebTracerModule to configure instrumentation.\nYou need to provide Web instrumentation on the OTEL_INSTRUMENTATION_PLUGINS token in providers section of NgModule\nExample in instrumentation-example project\n...\nimport { OtelColExporterModule, CompositePropagatorModule, OtelWebTracerModule } from 'projects/opentelemetry-interceptor/src/public-api';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    // OtelCol Exporter Module\n    OtelColExporterModule,\n    // Composite Propagator Module\n    CompositePropagatorModule,\n    // OtelWebTracerModule to configure instrumentation component.\n    OtelWebTracerModule.forRoot(environment.openTelemetryConfig),\n    ...\n  ],\n  providers: [\n    {provide: OTEL_INSTRUMENTATION_PLUGINS, useValue: [new XMLHttpRequestInstrumentation()]}\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\nInterceptor Module And Instrumentation Module\nDon't use them at the same time : you're going to have the same trace twice.\nInjection token\nThis library exposes injection token.\nYou can use them to override or customize. \n\nOTEL_EXPORTER : token to inject an implementation of IExporter\nOTEL_PROPAGATOR : token to inject an implementation of IPropagator\nOTEL_CONFIG : token to inject an OpenTelemetryConfig\nOTEL_INSTRUMENTATION_PLUGINS : token to inject an InstrumentationOption array\nOTEL_LOGGER : more info in (Optional) Logging in OtelColExporterModule\nOTEL_CUSTOM_SPAN : more infor in (Optional) Add span attributes during interception\n\nComponent otel-instrumentation\nA component named otel-instrumentation must be add in your application.\nIn instrumentation-example, this component is in app.component.html like this :\n...\n\n...there is no configuration/directive need : all is in OtelWebTracerModule\n(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTEL_LOGGER token.\nYou can use a custom logger which implements the DiagLogger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTEL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]Don't forget to set \"logLevel\" in Common Configuration (Level must be the same between NGXLogger and common configuration)\n\nYou can see an example in the interceptor-example.\n\n(Optional) Add span attributes during interception\nThis option is only available for Interceptor Module\nImplement a CustomSpan and the method add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span\n\nspan : Current span, you can set or get attributes\nrequest : Current request in interceptor\nresponse : Current response in interceptor\n\nImplement CustomSpan class like : \nclass CustomSpanImpl implements CustomSpan {\n  add(span: Span, request: HttpRequest, response: HttpResponse | HttpErrorResponse): Span {\n    span.setAttribute('mycustom.key', request.params + \";\" + response.status);\n    return span;\n  }\n}Inject it in you App module with OTEL_CUSTOM_SPAN :\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTEL_CUSTOM_SPAN, useClass: CustomSpanImpl }\n    ...\n  ]\nYou can see an example in the interceptor-example.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project has two example Angular Application:\n\nprojects/interceptor-example\nprojects/instrumentation-example\n\nYou can see how configure and insert all modules.\nYou can althought test opentelemetry-angular-interceptor with this two applications.\nRun\nInterceptor\nTo start this Interceptor example application, run command :\nnpm run start:complete-interceptor-exampleand open the application at http://localhost:4200\nInstrumentation\nTo start this Instrumentation example application, run command :\nnpm run start:complete-instrumentation-exampleand open the application at http://localhost:4200\n[Optional] Result in OpenTelemetry-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/exporter-zipkin\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\",\n    \"@opentelemetry/instrumentation\",\n    \"@opentelemetry/instrumentation-xml-http-request\",\n    \"@opentelemetry/instrumentation-document-load\",\n    \"@opentelemetry/instrumentation-fetch\",\n    \"@opentelemetry/context-zone-peer-dep\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AwsXrayPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelWebTracerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        W3CTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OtelWebTracerModule\n\n\n\ncluster_OtelWebTracerModule_declarations\n\n\n\ncluster_OtelWebTracerModule_exports\n\n\n\n\nOtelWebTracerComponent\n\nOtelWebTracerComponent\n\n\n\nOtelWebTracerModule\n\nOtelWebTracerModule\n\nOtelWebTracerModule -->\n\nOtelWebTracerComponent->OtelWebTracerModule\n\n\n\n\n\nOtelWebTracerComponent \n\nOtelWebTracerComponent \n\nOtelWebTracerComponent  -->\n\nOtelWebTracerModule->OtelWebTracerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.1.0\n        \n            Homepage : https://github.com/jufab/opentelemetry-angular-interceptor\n        \n            Author : Julien Fabre\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add more configuration for OpenTelemetry-collector : See here  \n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here\n\n\n Prepare baggage here\n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            defineConfigProvider   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CONFIG   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_CUSTOM_SPAN   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTEL_INSTRUMENTATION_PLUGINS   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTEL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        defineConfigProvider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: OpenTelemetryConfig | null | undefined,\n  configProvider: ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider\n  ): ValueProvider | ClassProvider | ConstructorProvider | ExistingProvider | FactoryProvider => {\n  if(config) {\n    configProvider = { provide: OTEL_CONFIG, useValue: config };\n  } else {\n    if(configProvider) {\n      if(configProvider.provide !== OTEL_CONFIG) {\n        throw new Error(`Configuration error. token must be : ${OTEL_CONFIG} ,  your token value is : ${configProvider.provide}`);\n      }\n    } else {\n      throw new Error(`Configuration error. you must specify a configuration in config or configProvider`);\n    }\n  }\n  return configProvider;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('opentelemetry.config')\n                    \n                \n\n            \n                \n                    OTEL_CONFIG : Config injection\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_CUSTOM_SPAN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.custom-span')\n                    \n                \n\n            \n                \n                    custom span\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_INSTRUMENTATION_PLUGINS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.instrumentation.plugins')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTEL_LOGGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.logger')\n                    \n                \n\n            \n                \n                    Logger : injection for a logger compatible\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_EXPORTER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.exporter')\n                    \n                \n\n            \n                \n                    injection for a Exporter\n\n                \n            \n\n        \n    \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OTEL_PROPAGATOR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('otelcol.propagator')\n                    \n                \n\n            \n                \n                    injection for a propagator\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
