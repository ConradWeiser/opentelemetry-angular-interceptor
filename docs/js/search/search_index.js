var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/B3PropagatorModule.html",[0,1.216,1,2.094]],["body/modules/B3PropagatorModule.html",[1,3.377,2,1.459,3,0.387,4,0.387,5,0.286,6,0.335,7,3.059,8,2.721,9,2.451,10,0.473,11,0.032,12,2.129,13,0.556,14,2.524,15,1.865,16,3.042,17,3.059,18,2.524,19,2.129,20,1.865,21,1.716,22,1.581,23,1.716,24,1.581,25,1.716,26,1.865,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02]],["title/injectables/B3PropagatorService.html",[16,1.886,32,0.749]],["body/injectables/B3PropagatorService.html",[3,0.356,4,0.356,5,0.262,6,0.394,7,3.598,8,3.201,10,0.459,11,0.032,13,0.51,16,3.354,27,0.356,28,0.456,29,0.018,30,0.023,31,0.018,32,1.144,33,1.713,34,1.868,35,0.894,36,0.752,37,1.462,38,2.783,39,1.053,40,3.226,41,1.7,42,6.076,43,1.142,44,2.876,45,2.018,46,2.045,47,1.576,48,2.251,49,1.713,50,1.713,51,1.452,52,0.894]],["title/interfaces/CommonCollectorConfig.html",[53,0.882,54,1.565]],["body/interfaces/CommonCollectorConfig.html",[3,0.262,4,0.262,5,0.193,6,0.227,10,0.227,11,0.032,13,0.376,27,0.493,29,0.013,30,0.019,31,0.013,35,0.658,36,0.554,52,0.658,53,1.385,54,2.259,55,1.262,56,1.506,57,1.506,58,2.131,59,1.909,60,1.947,61,2.091,62,2.825,63,2.945,64,2.945,65,2.945,66,3.188,67,1.909,68,1.626,69,3.092,70,1.947,71,2.604,72,2.604,73,1.396,74,1.947,75,1.841,76,1.506,77,1.262,78,1.947,79,2.131,80,1.161,81,1.506,82,1.658,83,2.346,84,2.131,85,1.658,86,2.591,87,1.376,88,1.262,89,1.506,90,1.396,91,2.346,92,2.131,93,1.513,94,1.161,95,1.376,96,1.658,97,1.658]],["title/modules/CompositePropagatorModule.html",[0,1.216,98,2.094]],["body/modules/CompositePropagatorModule.html",[2,1.459,3,0.387,4,0.387,5,0.286,6,0.335,9,2.451,10,0.473,11,0.032,12,2.129,13,0.556,14,2.524,15,1.865,18,2.524,19,2.129,20,1.865,21,1.716,22,1.581,23,1.716,24,1.581,25,1.716,26,1.865,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02,98,3.377,99,3.059,100,3.059,101,3.377,102,3.512]],["title/injectables/CompositePropagatorService.html",[32,0.749,101,2.094]],["body/injectables/CompositePropagatorService.html",[3,0.284,4,0.284,5,0.21,6,0.389,8,1.998,10,0.467,11,0.032,13,0.408,16,3.327,17,2.246,18,2.36,27,0.284,28,0.365,29,0.015,30,0.02,31,0.015,32,0.986,33,1.37,34,1.493,35,0.714,36,0.601,37,1.26,38,2.545,39,1.162,41,1.555,43,0.913,44,2.67,45,1.739,46,1.635,47,1.26,48,1.8,49,1.37,50,1.37,51,1.161,52,0.714,61,1.161,67,1.161,68,1.685,73,1.071,99,3.55,100,3.55,101,3.405,103,3.067,104,3.083,105,3.41,106,3.41,107,2.579,108,1.8,109,3.083,110,5.7,111,1.998,112,2.36,113,1.89,114,1.998,115,1.493,116,1.998,117,3.083,118,3.158,119,3.083,120,3.083,121,2.579,122,3.083,123,3.083,124,3.083]],["title/modules/ConsoleSpanExporterModule.html",[0,1.216,125,2.094]],["body/modules/ConsoleSpanExporterModule.html",[2,1.459,3,0.387,4,0.387,5,0.286,6,0.335,10,0.473,11,0.032,12,2.129,13,0.556,14,2.524,15,1.865,22,1.581,23,1.716,24,1.581,25,1.716,26,1.865,27,0.387,28,0.497,29,0.02,30,0.025,31,0.02,62,2.034,125,3.377,126,3.059,127,3.004,128,3.512,129,3.377,130,3.797,131,2.763]],["title/injectables/ConsoleSpanExporterService.html",[32,0.749,129,2.094]],["body/injectables/ConsoleSpanExporterService.html",[3,0.354,4,0.354,5,0.261,6,0.394,10,0.434,11,0.031,13,0.509,27,0.354,28,0.455,29,0.018,30,0.023,31,0.018,32,1.142,33,1.708,35,0.891,36,0.75,37,1.459,39,1.05,41,1.698,43,1.138,49,1.708,50,1.708,51,1.448,52,0.891,80,2.014,126,3.591,127,3.042,129,3.719,132,2.491,133,2.877,134,3.719,135,3.845,136,4.799,137,3.463,138,2.613,139,2.801,140,2.038]],["title/modules/HttpTraceContextPropagatorModule.html",[0,1.216,141,2.094]],["body/modules/HttpTraceContextPropagatorModule.html",[2,1.429,3,0.379,4,0.379,5,0.28,6,0.329,9,2.402,10,0.47,11,0.032,12,2.102,13,0.544,14,2.492,15,1.828,18,2.492,19,2.102,20,1.828,21,1.681,22,1.549,23,1.681,24,1.549,25,1.681,26,1.828,27,0.379,28,0.487,29,0.02,30,0.024,31,0.02,68,1.8,105,3.004,112,1.993,113,2.494,114,2.667,141,3.335,142,2.998]],["title/injectables/HttpTraceContextPropagatorService.html",[32,0.749,105,1.886]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.347,4,0.347,5,0.256,6,0.388,10,0.455,11,0.031,13,0.498,27,0.347,28,0.445,29,0.018,30,0.023,31,0.018,32,1.126,33,1.671,34,1.822,35,0.872,36,0.734,37,1.439,38,2.757,39,1.027,40,3.147,41,1.685,43,1.114,44,2.854,45,1.986,46,1.995,47,1.537,48,2.196,49,1.671,50,1.671,51,1.417,52,0.872,68,1.825,105,3.322,113,2.528,114,3.15,142,3.541,143,5.048]],["title/interfaces/IExporter.html",[53,0.882,138,1.713]],["body/interfaces/IExporter.html",[3,0.382,4,0.382,5,0.282,6,0.413,10,0.331,11,0.031,27,0.382,29,0.02,30,0.025,31,0.02,35,0.96,36,0.808,37,1.529,39,1.131,41,1.226,43,1.226,53,1.538,55,1.84,80,2.111,133,3.442,134,3.821,137,3.664,138,2.74,140,2.196,144,3.465,145,3.765,146,4.143,147,3.765,148,5.168]],["title/interfaces/IPropagator.html",[45,1.32,53,0.882]],["body/interfaces/IPropagator.html",[3,0.387,4,0.387,5,0.286,6,0.416,10,0.335,11,0.031,27,0.387,29,0.02,30,0.025,31,0.02,35,0.973,36,0.819,37,1.542,38,2.87,39,1.147,41,1.243,43,1.243,44,2.744,45,2.129,47,1.716,53,1.547,55,1.865,88,2.632,145,3.797,147,3.797,149,3.512,150,4.199,151,4.358,152,5.211]],["title/modules/JaegerHttpTracePropagatorModule.html",[0,1.216,153,2.094]],["body/modules/JaegerHttpTracePropagatorModule.html",[2,1.429,3,0.379,4,0.379,5,0.28,6,0.329,9,2.402,10,0.47,11,0.032,12,2.102,13,0.544,14,2.492,15,1.828,18,2.492,19,2.102,20,1.828,21,1.681,22,1.549,23,1.681,24,1.549,25,1.681,26,1.828,27,0.379,28,0.487,29,0.02,30,0.024,31,0.02,68,1.8,106,3.004,112,2.719,115,1.993,116,2.667,153,3.335,154,2.998]],["title/injectables/JaegerHttpTracePropagatorService.html",[32,0.749,106,1.886]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.284,4,0.284,5,0.209,6,0.419,10,0.455,11,0.032,13,0.407,27,0.284,28,0.364,29,0.015,30,0.02,31,0.015,32,0.984,33,1.366,34,1.49,35,0.984,36,0.6,37,1.257,38,2.542,39,1.329,41,1.553,43,0.91,44,2.668,45,1.736,46,1.631,47,1.257,49,1.366,50,1.366,51,1.158,52,0.713,60,2.057,61,1.158,67,1.599,68,1.908,69,2.252,73,1.068,89,2.58,90,1.978,93,1.158,94,2.144,103,2.841,106,3.064,108,1.795,111,1.993,112,2.881,115,1.49,116,3.401,118,3.154,154,3.824,155,2.241,156,4.248,157,3.076,158,5.508,159,2.241,160,1.993,161,2.572,162,2.572,163,2.241,164,2.572,165,3.076,166,3.076,167,3.076]],["title/interfaces/JaegerPropagatorConfig.html",[53,0.882,86,1.565]],["body/interfaces/JaegerPropagatorConfig.html",[3,0.288,4,0.288,5,0.212,6,0.249,10,0.249,11,0.032,13,0.413,27,0.511,29,0.015,30,0.02,31,0.015,35,0.723,36,0.609,52,0.723,53,1.443,54,2.079,55,1.387,56,1.655,57,1.655,58,1.655,59,1.989,60,2.079,61,1.616,62,2.376,63,2.276,64,2.276,65,2.276,66,2.801,67,1.176,68,1.376,69,3.034,70,1.512,71,2.023,72,2.023,73,1.085,74,1.512,75,2.023,76,1.655,77,1.387,78,2.079,79,2.276,80,1.276,81,1.655,82,1.823,83,2.863,84,2.276,85,1.823,86,2.839,87,2.079,88,1.907,89,2.801,90,1.491,91,2.506,92,2.276,93,1.616,94,1.276,95,1.512,96,1.823,97,1.823]],["title/modules/NoopTextMapPropagatorModule.html",[0,1.216,168,2.354]],["body/modules/NoopTextMapPropagatorModule.html",[2,1.429,3,0.379,4,0.379,5,0.28,6,0.329,9,2.402,10,0.47,11,0.032,12,2.102,13,0.544,14,2.492,15,1.828,18,2.492,19,2.102,20,2.613,21,2.294,22,1.549,23,1.681,24,1.549,25,1.681,26,1.828,27,0.379,28,0.487,29,0.02,30,0.024,31,0.02,112,1.993,168,3.749,169,2.998,170,2.998,171,3.335,172,4.115]],["title/injectables/NoopTextMapPropagatorService.html",[32,0.749,171,2.094]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.351,4,0.351,5,0.259,6,0.391,10,0.433,11,0.031,13,0.504,20,2.54,21,2.002,27,0.351,28,0.451,29,0.018,30,0.023,31,0.018,32,1.135,33,1.692,34,1.845,35,0.882,36,0.743,37,1.45,38,2.77,39,1.04,41,1.693,43,1.127,44,2.865,45,2.002,46,2.019,47,1.556,49,1.692,50,1.692,51,1.434,52,0.882,107,3.186,112,2.373,169,3.57,170,3.57,171,3.175,173,4.9,174,6.056]],["title/interfaces/OpenTelemetryConfig.html",[53,0.882,90,1.122]],["body/interfaces/OpenTelemetryConfig.html",[3,0.277,4,0.277,5,0.205,6,0.24,10,0.24,11,0.032,13,0.398,27,0.504,29,0.014,30,0.02,31,0.014,35,0.697,36,0.587,52,0.697,53,1.42,54,2.518,55,1.336,56,1.595,57,1.595,58,1.595,59,1.811,60,2.026,61,1.957,62,2.329,63,2.218,64,2.218,65,2.218,66,2.756,67,1.811,68,1.341,69,2.756,70,1.457,71,1.949,72,1.949,73,1.045,74,1.457,75,1.949,76,1.595,77,1.336,78,2.518,79,2.218,80,1.229,81,1.595,82,1.756,83,2.442,84,2.218,85,1.756,86,2.978,87,1.457,88,1.336,89,1.595,90,1.806,91,3.302,92,2.999,93,1.575,94,1.229,95,1.457,96,1.756,97,1.756]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[175,1.713,176,2.094]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.118,4,0.118,5,0.087,6,0.381,10,0.41,11,0.032,13,0.169,18,0.619,19,1.813,21,0.522,27,0.118,28,0.331,29,0.006,30,0.01,31,0.006,32,0.499,35,1.028,36,0.249,37,0.637,39,1.262,41,0.971,43,1.175,47,0.88,48,0.746,49,0.567,50,0.567,51,0.481,52,1.028,59,1.235,60,1.043,61,1.591,62,2.046,63,0.677,64,2.105,66,2.105,67,1.739,73,1.605,74,1.043,80,0.88,87,1.588,88,1.627,90,1.139,93,0.481,94,1.813,96,2.137,103,1.914,108,2.466,111,0.828,113,0.957,118,3.579,127,3.036,130,0.931,131,2.353,133,1.914,136,1.801,137,2.591,140,0.677,145,1.569,155,0.931,160,0.828,162,1.068,163,3.665,175,1.142,176,1.396,177,1.277,178,3.994,179,1.068,180,1.801,181,2.793,182,3.534,183,2.154,184,2.154,185,2.793,186,2.154,187,2.793,188,2.336,189,2.154,190,2.154,191,2.154,192,2.793,193,1.277,194,1.801,195,3.971,196,1.569,197,2.154,198,1.81,199,3.279,200,2.154,201,2.154,202,4.776,203,1.277,204,1.801,205,5.634,206,2.154,207,1.277,208,1.277,209,1.257,210,2.154,211,1.801,212,2.154,213,1.277,214,3.321,215,1.569,216,2.154,217,1.277,218,1.277,219,2.336,220,3.279,221,2.336,222,1.801,223,1.277,224,3.971,225,3.279,226,1.277,227,2.154,228,1.801,229,2.742,230,1.396,231,1.801,232,2.793,233,3.279,234,2.154,235,2.742,236,1.277,237,1.277,238,2.154,239,2.154,240,0.931,241,1.068,242,1.277,243,0.931,244,2.154,245,1.277,246,2.154,247,1.277,248,2.154,249,2.154,250,1.277,251,1.277,252,1.277,253,1.569,254,1.277,255,1.277,256,1.277,257,1.277,258,2.154,259,1.277,260,1.277,261,1.277,262,1.277,263,1.277,264,1.277,265,1.277,266,1.277,267,1.277,268,1.277,269,1.277,270,1.277,271,1.569,272,2.154,273,2.154,274,2.154,275,2.154,276,2.154,277,1.277,278,1.277,279,1.277,280,0.931,281,1.277,282,1.277,283,1.277,284,1.277,285,1.277,286,1.277,287,1.277,288,0.931,289,1.277,290,1.277,291,1.277,292,0.931,293,1.277,294,1.277,295,1.277,296,1.277,297,1.277,298,1.277,299,1.277,300,1.277,301,1.277,302,1.277,303,1.277,304,1.277,305,1.277,306,1.277,307,1.277,308,1.277,309,1.277,310,1.277,311,1.277,312,1.277,313,1.277,314,2.793,315,1.277,316,2.793,317,1.277,318,1.277,319,1.277,320,1.277,321,1.277,322,1.277,323,1.277,324,2.154,325,1.277,326,1.277,327,1.277,328,1.277]],["title/modules/OpenTelemetryInterceptorModule.html",[0,1.216,329,2.094]],["body/modules/OpenTelemetryInterceptorModule.html",[2,1.204,3,0.319,4,0.319,5,0.236,6,0.368,10,0.458,11,0.032,12,2.114,13,0.458,22,1.305,23,1.416,24,1.305,25,1.882,26,1.539,27,0.319,28,0.41,29,0.016,30,0.022,31,0.016,37,1.026,39,0.946,41,1.026,43,1.026,52,0.803,61,1.948,67,1.305,73,1.204,90,1.915,93,1.734,94,2.114,103,2.023,108,2.023,160,2.246,161,2.898,176,2.985,215,2.525,240,2.525,329,3.719,330,4.606,331,3.466,332,4.606,333,3.466,334,4.606,335,3.466,336,5.174,337,4.606,338,3.852,339,3.852,340,3.466,341,3.466,342,2.898,343,4.606,344,3.466,345,2.525,346,3.466,347,3.466,348,2.898,349,3.466,350,3.466]],["title/modules/OtelColExporterModule.html",[0,1.216,351,2.094]],["body/modules/OtelColExporterModule.html",[2,1.469,3,0.39,4,0.39,5,0.287,6,0.338,10,0.474,11,0.032,12,2.138,13,0.559,14,2.535,15,1.878,22,1.592,23,1.728,24,1.592,25,1.728,26,1.878,27,0.39,28,0.5,29,0.02,30,0.025,31,0.02,127,2.242,128,3.536,130,3.813,131,2.775,351,3.391,352,3.08,353,3.391,354,3.08]],["title/interfaces/OtelCollectorConfig.html",[53,0.882,78,1.565]],["body/interfaces/OtelCollectorConfig.html",[3,0.279,4,0.279,5,0.206,6,0.241,10,0.241,11,0.032,13,0.4,27,0.505,29,0.014,30,0.02,31,0.014,35,0.7,36,0.589,52,0.7,53,1.423,54,2.033,55,1.343,56,1.603,57,1.603,58,1.603,59,1.962,60,2.033,61,1.962,62,2.335,63,2.225,64,2.225,65,2.225,66,2.762,67,1.58,68,1.346,69,3.004,70,1.464,71,1.959,72,1.959,73,1.05,74,1.464,75,1.959,76,2.225,77,1.865,78,2.335,79,3.004,80,1.715,81,2.225,82,2.45,83,2.815,84,3.004,85,2.815,86,2.651,87,1.464,88,1.343,89,1.603,90,1.458,91,2.45,92,2.225,93,1.58,94,1.235,95,1.464,96,1.764,97,1.764]],["title/injectables/OtelcolExporterService.html",[32,0.749,353,2.094]],["body/injectables/OtelcolExporterService.html",[3,0.287,4,0.287,5,0.212,6,0.421,10,0.457,11,0.032,13,0.412,27,0.287,28,0.58,29,0.015,30,0.02,31,0.015,32,0.993,33,1.384,35,0.993,36,0.607,37,1.268,39,1.338,41,1.562,43,0.922,49,1.384,50,1.384,51,1.173,52,0.722,59,1.613,60,2.075,61,1.173,65,1.651,67,1.613,73,1.082,79,1.651,84,1.651,90,1.986,92,2.597,93,1.173,94,2.156,103,2.86,108,1.818,111,2.018,118,3.175,132,2.018,134,3.419,137,2.86,138,2.272,139,2.269,140,1.651,155,2.269,160,2.018,163,2.269,164,2.605,352,3.844,353,3.419,355,4.285,356,3.115,357,5.277,358,5.533,359,3.115,360,3.122,361,2.605,362,3.115,363,3.115,364,3.115,365,3.115,366,3.115,367,3.115]],["title/classes/SpanExporterService.html",[28,0.382,131,1.713]],["body/classes/SpanExporterService.html",[3,0.386,4,0.386,5,0.285,6,0.415,10,0.415,11,0.031,27,0.386,28,0.495,29,0.02,30,0.025,31,0.02,36,0.816,37,1.539,39,1.143,41,1.239,43,1.239,51,1.958,95,2.519,131,2.757,132,2.712,134,3.835,137,3.302,138,3,139,3.049,140,2.219,368,3.049,369,4.349,370,4.185,371,3.789,372,3.789,373,3.5]],["title/classes/TextMapPropagatorService.html",[19,1.32,28,0.382]],["body/classes/TextMapPropagatorService.html",[3,0.376,4,0.376,5,0.277,6,0.408,10,0.408,11,0.031,19,2.395,21,2.089,27,0.376,28,0.482,29,0.019,30,0.024,31,0.019,34,1.973,35,0.944,36,0.795,37,1.514,38,2.839,39,1.113,41,1.206,43,1.206,44,2.707,45,2.284,46,2.16,47,1.665,51,1.925,95,2.477,368,2.968,371,3.726,372,3.726,373,3.407,374,4.277,375,4.074]],["title/changelog.html",[376,1.579,377,1.579,378,2.263]],["body/changelog.html",[5,0.281,11,0.016,29,0.011,30,0.016,31,0.011,52,0.959,59,1.301,68,0.74,70,1.673,77,1.025,85,1.347,87,1.118,88,1.535,102,3.463,113,1.535,115,1.673,175,1.224,194,1.93,198,2.683,209,3.479,230,2.979,253,3.349,292,3.016,345,1.681,354,3.016,378,2.889,379,2.308,380,2.308,381,1.681,382,2.308,383,1.496,384,2.308,385,2.308,386,2.308,387,3.463,388,5.961,389,4.597,390,2.308,391,5.734,392,2.308,393,1.93,394,2.308,395,5.631,396,5.631,397,4.14,398,2.308,399,2.308,400,2.308,401,2.308,402,2.308,403,2.308,404,4.14,405,1.93,406,2.308,407,2.308,408,2.308,409,2.308,410,2.308,411,2.308,412,4.116,413,3.455,414,2.308,415,3.455,416,2.308,417,4.14,418,2.308,419,2.308,420,2.308,421,2.517,422,4.597,423,2.308,424,2.308,425,2.308,426,2.308,427,1.93,428,2.308,429,2.308,430,2.308,431,3.455,432,2.308,433,4.14,434,2.308,435,2.308,436,2.308,437,2.308,438,2.308,439,1.93,440,2.308,441,4.597,442,2.308,443,4.14,444,4.597,445,3.455,446,3.463,447,3.455,448,3.455,449,2.889,450,3.455,451,4.597,452,2.308,453,3.455,454,2.308,455,2.308,456,2.308,457,2.308,458,4.14,459,2.308,460,2.308,461,2.308,462,2.308,463,2.308,464,3.455,465,2.308,466,2.308,467,2.308,468,2.308,469,2.308,470,2.308,471,2.308,472,1.681,473,5.355,474,2.308,475,2.308,476,2.308,477,2.308,478,1.93,479,2.308,480,2.308,481,2.308,482,2.308,483,2.308,484,2.308,485,2.308,486,2.308,487,1.681,488,2.308,489,2.308,490,2.308,491,2.308,492,1.93,493,2.308,494,2.308,495,2.308,496,2.308,497,3.455,498,3.455,499,2.308,500,2.308,501,2.308,502,2.889,503,3.455,504,3.455,505,2.308,506,2.308,507,2.308,508,4.597,509,2.308,510,2.308,511,2.308,512,2.308,513,2.308,514,3.455,515,2.308,516,2.308]],["title/coverage.html",[517,3.675]],["body/coverage.html",[5,0.209,6,0.511,7,2.235,8,1.988,11,0.031,16,1.791,19,1.253,20,1.884,21,1.733,28,0.502,29,0.015,30,0.02,31,0.015,32,1.352,34,2.756,45,1.253,52,0.711,53,1.554,54,1.486,56,2.918,57,2.918,67,1.155,68,1.681,78,1.486,86,1.486,90,1.066,93,1.155,99,2.235,100,2.235,101,1.988,105,1.791,106,1.791,112,2.354,113,1.884,114,1.988,116,1.988,126,2.235,127,1.627,129,1.988,131,1.627,132,3.149,138,1.627,142,2.235,144,2.566,149,2.566,154,2.235,169,2.235,170,2.235,171,1.988,175,1.627,176,1.988,178,2.566,179,2.566,352,2.235,353,1.988,369,2.566,374,2.566,517,2.566,518,2.566,519,3.068,520,3.068,521,6.343,522,3.068,523,5.946,524,4.241,525,4.241,526,3.068,527,3.068,528,3.068,529,2.566,530,3.068,531,3.068,532,3.068,533,3.068,534,2.566]],["title/dependencies.html",[535,2.263,536,2.515]],["body/dependencies.html",[11,0.032,13,0.534,15,1.792,29,0.019,30,0.024,31,0.019,77,1.792,115,1.954,159,2.939,241,3.374,243,2.939,280,2.939,360,2.939,387,4.25,405,3.374,412,3.374,536,2.614,537,4.034,538,6.312,539,4.034,540,5.082,541,4.034,542,4.034,543,4.034,544,5.082,545,4.25,546,4.034,547,4.034,548,4.034,549,4.034,550,4.034,551,4.034,552,4.034,553,4.034,554,3.374,555,3.374,556,4.034,557,4.034,558,4.034,559,4.034]],["title/index.html",[36,0.528,376,1.579,377,1.579]],["body/index.html",[0,1.923,1,0.929,3,0.49,10,0.312,11,0.03,12,0.969,13,0.19,17,1.044,22,0.54,23,0.586,24,0.54,27,0.219,28,0.17,29,0.019,30,0.011,31,0.007,47,0.969,48,1.384,53,0.648,54,0.694,58,1.258,59,1.875,61,0.893,62,1.892,63,1.258,64,1.608,65,1.258,66,1.608,68,1.428,69,2.071,70,2.038,73,0.824,74,1.149,76,2.906,77,2.4,78,0.694,79,1.869,80,0.586,81,1.258,82,1.384,83,1.771,84,0.76,86,1.469,87,1.708,88,2.318,89,1.258,90,1.054,91,1.384,92,1.258,98,1.966,113,0.637,115,2.038,121,1.199,125,0.929,127,1.258,133,2.6,140,1.258,141,0.929,143,1.199,151,1.199,153,0.929,159,1.728,175,2.47,180,1.199,182,1.199,188,1.199,196,1.044,198,1.537,204,1.199,209,1.384,214,3.267,215,2.21,219,2.537,221,1.984,228,1.199,229,1.199,230,3.74,231,1.199,235,1.199,240,1.044,243,2.21,271,1.044,280,1.044,329,1.966,338,1.199,339,2.949,345,2.569,348,1.199,351,1.966,354,1.044,360,2.21,361,1.199,371,1.044,376,1.384,377,1.384,381,1.728,383,3.131,393,1.199,421,1.044,427,1.984,446,1.199,472,3.627,487,2.21,492,1.199,534,1.984,535,1.199,536,3.131,545,1.199,554,2.537,555,1.199,560,3.034,561,3.034,562,1.434,563,4.455,564,1.434,565,3.873,566,1.434,567,1.984,568,2.372,569,2.372,570,3.526,571,2.372,572,2.372,573,4.455,574,3.034,575,1.434,576,1.434,577,2.372,578,3.526,579,1.984,580,2.372,581,2.372,582,4.455,583,4.455,584,3.526,585,1.434,586,1.434,587,2.372,588,2.372,589,2.372,590,2.372,591,2.372,592,2.372,593,1.434,594,1.434,595,1.434,596,1.434,597,1.199,598,1.199,599,2.372,600,1.434,601,1.434,602,1.434,603,1.434,604,1.434,605,1.434,606,1.434,607,1.434,608,1.199,609,3.034,610,1.434,611,1.434,612,1.434,613,1.434,614,1.199,615,1.199,616,1.434,617,1.434,618,1.434,619,1.434,620,1.434,621,1.434,622,2.372,623,1.434,624,2.372,625,2.372,626,1.434,627,1.434,628,1.434,629,1.434,630,1.434,631,1.434,632,2.372,633,2.372,634,0.929,635,1.434,636,1.434,637,1.434,638,1.434,639,1.434,640,1.434,641,1.199,642,1.199,643,1.434,644,3.906,645,3.906,646,3.906,647,4.979,648,3.906,649,3.267,650,3.906,651,3.906,652,3.906,653,1.434,654,1.434,655,1.434,656,1.434,657,1.434,658,1.434,659,1.434,660,1.434,661,1.434,662,1.434,663,1.434,664,1.434,665,1.434,666,2.372,667,2.372,668,1.434,669,1.434,670,1.434,671,1.434,672,1.434,673,1.434,674,1.434]],["title/license.html",[376,1.579,377,1.579,675,2.263]],["body/license.html",[4,0.438,5,0.28,10,0.086,11,0.012,20,1.306,25,0.442,28,0.128,29,0.009,30,0.009,31,0.005,35,0.251,39,0.296,55,0.481,58,0.574,59,0.408,70,2.168,73,0.858,74,0.524,147,0.789,198,0.702,209,1.092,211,1.564,222,3.038,253,1.799,271,0.789,292,1.799,372,1.363,383,0.702,439,0.906,472,0.789,487,3.904,502,1.564,518,2.065,529,0.906,565,0.789,567,0.906,579,1.564,597,0.906,608,0.906,615,0.906,634,0.702,642,2.776,649,1.564,675,4.942,676,2.94,677,2.469,678,1.083,679,1.083,680,1.083,681,4.309,682,4.867,683,2.94,684,3.32,685,1.083,686,5.063,687,4.476,688,1.083,689,1.083,690,1.083,691,4.476,692,4.867,693,3.632,694,4.476,695,1.871,696,1.083,697,3.32,698,1.083,699,1.083,700,1.083,701,2.94,702,1.083,703,4.309,704,2.94,705,1.871,706,1.083,707,2.469,708,1.871,709,1.083,710,1.083,711,5.295,712,2.94,713,1.871,714,1.083,715,1.871,716,1.083,717,1.083,718,1.083,719,1.083,720,1.083,721,1.083,722,2.469,723,1.083,724,2.469,725,1.871,726,4.867,727,1.083,728,1.083,729,3.632,730,4.309,731,2.94,732,1.871,733,2.469,734,3.632,735,1.083,736,1.083,737,1.083,738,1.083,739,1.083,740,1.871,741,1.083,742,1.083,743,1.083,744,5.934,745,2.469,746,1.871,747,1.083,748,4.309,749,1.871,750,1.083,751,3.32,752,1.871,753,1.083,754,5.295,755,1.083,756,1.083,757,1.083,758,1.083,759,1.083,760,1.083,761,1.871,762,2.469,763,1.083,764,1.083,765,1.083,766,1.083,767,1.083,768,2.94,769,3.32,770,1.083,771,1.871,772,2.94,773,1.871,774,1.083,775,3.32,776,1.871,777,1.083,778,1.083,779,2.469,780,1.083,781,1.083,782,1.083,783,1.083,784,1.871,785,0.906,786,1.083,787,1.083,788,2.469,789,1.083,790,1.083,791,2.469,792,1.083,793,1.083,794,1.083,795,2.94,796,4.476,797,1.083,798,1.083,799,1.871,800,4.117,801,2.469,802,2.94,803,1.871,804,1.871,805,1.871,806,1.871,807,2.469,808,1.871,809,2.469,810,1.871,811,1.871,812,1.871,813,1.871,814,0.906,815,1.871,816,1.083,817,1.083,818,3.32,819,3.894,820,2.469,821,1.871,822,1.083,823,1.083,824,1.871,825,1.871,826,1.083,827,1.083,828,2.469,829,1.871,830,1.083,831,1.083,832,1.083,833,2.469,834,1.083,835,1.083,836,1.083,837,1.871,838,1.871,839,1.083,840,1.083,841,1.083,842,1.083,843,1.083,844,1.083,845,1.083,846,1.871,847,1.083,848,1.083,849,1.083,850,1.083,851,1.083,852,1.083,853,1.083,854,1.083,855,2.469,856,1.083,857,2.469,858,1.083,859,1.083,860,1.083,861,1.083,862,4.117,863,1.083,864,1.083,865,1.083,866,1.083,867,1.083,868,2.94,869,1.871,870,2.94,871,1.083,872,1.083,873,1.083,874,1.083,875,1.083,876,2.469,877,1.083,878,1.083,879,1.871,880,1.871,881,1.083,882,1.083,883,1.083,884,1.871,885,1.083,886,1.083,887,3.32,888,1.083,889,1.083,890,1.083,891,1.083,892,1.083,893,1.083,894,1.083,895,2.469,896,2.94,897,1.083,898,1.083,899,1.083,900,1.083,901,1.083,902,1.083,903,1.083,904,1.083,905,1.083,906,1.083,907,1.083,908,1.871,909,1.083,910,1.083,911,1.871,912,1.083,913,1.083,914,2.94,915,1.083,916,1.083,917,1.083,918,1.083,919,1.083,920,1.083,921,1.083,922,2.94,923,2.469,924,2.469,925,2.469,926,1.871,927,1.871,928,2.469,929,1.871,930,1.871,931,1.871,932,1.871,933,1.083,934,1.083,935,1.083,936,1.083,937,1.083,938,1.083,939,1.083,940,1.083,941,1.083,942,1.871,943,1.083,944,1.083,945,1.083,946,1.083,947,3.32,948,1.083,949,1.083,950,1.083,951,1.083,952,1.083,953,1.083,954,1.083,955,1.083,956,3.32,957,1.083,958,1.083,959,1.083,960,1.083,961,1.083,962,0.906,963,1.083,964,1.083,965,1.083,966,1.083,967,1.083,968,1.083,969,1.083,970,1.083,971,1.083,972,1.083,973,1.083,974,1.083,975,2.469,976,1.083,977,1.083,978,1.083,979,1.083,980,1.083,981,1.871,982,1.083,983,1.083,984,1.083,985,1.083,986,1.083,987,1.083,988,1.083,989,1.083,990,1.083,991,1.083,992,1.083,993,1.083,994,1.083,995,1.083,996,1.083,997,1.871,998,1.083,999,1.083,1000,1.083,1001,1.871,1002,1.871,1003,1.083,1004,1.083,1005,1.083,1006,1.083,1007,1.083,1008,1.083,1009,1.083,1010,1.083,1011,1.083,1012,1.083,1013,1.083,1014,1.083,1015,1.083,1016,1.083,1017,1.083,1018,1.083,1019,1.083,1020,1.083,1021,1.083,1022,1.083,1023,1.083,1024,1.083,1025,1.083]],["title/modules.html",[2,1.526]],["body/modules.html",[1,2.931,2,1.571,11,0.026,29,0.021,30,0.026,31,0.021,98,2.931,125,2.931,141,2.931,153,2.931,168,3.296,329,2.931,351,2.931,634,4.179,1026,6.449,1027,6.449]],["title/overview.html",[1028,3.675]],["body/overview.html",[0,1.789,2,1.65,11,0.027,22,1.789,24,1.789,29,0.023,30,0.027,31,0.023,33,2.11,55,2.11,342,3.973,368,3.461,421,3.461,449,3.973,536,3.079,614,3.973,962,3.973,1028,3.973,1029,4.751,1030,5.616,1031,4.751,1032,4.751,1033,4.751]],["title/todo.html",[288,1.971,376,1.579,377,1.579]],["body/todo.html",[11,0.03,29,0.02,30,0.025,31,0.02,59,2.143,76,2.781,77,1.885,113,1.885,115,2.757,133,3.061,175,2.249,196,3.821,209,3.633,230,2.749,288,4.147,381,3.091,383,2.749,478,3.548,565,4.147,598,3.548,634,3.399,641,4.973,785,3.548,814,3.548,1034,4.243,1035,4.243,1036,5.693,1037,4.243,1038,4.243]],["title/miscellaneous/variables.html",[1039,2.263,1040,3.246]],["body/miscellaneous/variables.html",[6,0.381,11,0.029,29,0.023,30,0.027,31,0.023,36,0.93,52,1.105,56,2.529,57,2.984,80,1.949,81,2.529,93,2.255,94,1.949,95,2.31,97,2.784,1039,3.989,1040,3.989,1041,4.769]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":592,"title":{},"body":{"index.html":{}}}],["0.10.0",{"_index":405,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.10.1",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":412,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.11.0",{"_index":387,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":586,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":198,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":427,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.5",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":669,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":421,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["2.0",{"_index":677,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":679,"title":{},"body":{"license.html":{}}}],["2020",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["3.6.0",{"_index":492,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":525,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":464,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["4/4",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":603,"title":{},"body":{"index.html":{}}}],["5.2.0",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":529,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["563071d",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":449,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["6.6.0",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["613c16d",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":1033,"title":{},"body":{"overview.html":{}}}],["735b05d",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":531,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":439,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["9.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9/node",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":900,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":978,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":975,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":671,"title":{},"body":{"index.html":{}}}],["act",{"_index":985,"title":{},"body":{"license.html":{}}}],["acting",{"_index":699,"title":{},"body":{"license.html":{}}}],["acts",{"_index":954,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":209,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":886,"title":{},"body":{"license.html":{}}}],["adding",{"_index":621,"title":{},"body":{"index.html":{}}}],["additional",{"_index":887,"title":{},"body":{"license.html":{}}}],["additions",{"_index":770,"title":{},"body":{"license.html":{}}}],["advised",{"_index":973,"title":{},"body":{"license.html":{}}}],["again",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":838,"title":{},"body":{"license.html":{}}}],["agent",{"_index":393,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":988,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":925,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":905,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":843,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":656,"title":{},"body":{"index.html":{}}}],["alone",{"_index":834,"title":{},"body":{"license.html":{}}}],["along",{"_index":877,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":885,"title":{},"body":{"license.html":{}}}],["already",{"_index":346,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":623,"title":{},"body":{"index.html":{}}}],["always",{"_index":197,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":673,"title":{},"body":{"index.html":{}}}],["amd",{"_index":648,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":858,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":865,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":871,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":982,"title":{},"body":{"license.html":{}}}],["angular",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":654,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":15,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":13,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":758,"title":{},"body":{"license.html":{}}}],["apache",{"_index":676,"title":{},"body":{"license.html":{}}}],["api",{"_index":162,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":585,"title":{},"body":{"index.html":{}}}],["api.defaultsetter",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":578,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":610,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":601,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":636,"title":{},"body":{"index.html":{}}}],["appand",{"_index":627,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":609,"title":{},"body":{"index.html":{}}}],["appear",{"_index":882,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":752,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":923,"title":{},"body":{"license.html":{}}}],["application",{"_index":563,"title":{},"body":{"index.html":{}}}],["applies",{"_index":827,"title":{},"body":{"license.html":{}}}],["apply",{"_index":997,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":348,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1007,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":940,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1016,"title":{},"body":{"license.html":{}}}],["arising",{"_index":961,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":994,"title":{},"body":{"license.html":{}}}],["associated",{"_index":945,"title":{},"body":{"license.html":{}}}],["assume",{"_index":943,"title":{},"body":{"license.html":{}}}],["async",{"_index":595,"title":{},"body":{"index.html":{}}}],["attach",{"_index":998,"title":{},"body":{"license.html":{}}}],["attached",{"_index":750,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["attribution",{"_index":868,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":695,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":745,"title":{},"body":{"license.html":{}}}],["available",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b3",{"_index":17,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["b3propagator",{"_index":42,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatormodule",{"_index":1,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":16,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b63afc1",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":651,"title":{},"body":{"index.html":{}}}],["base",{"_index":658,"title":{},"body":{"index.html":{}}}],["based",{"_index":615,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":927,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":71,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bd69598",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":775,"title":{},"body":{"license.html":{}}}],["below",{"_index":753,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":721,"title":{},"body":{"license.html":{}}}],["between",{"_index":591,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":767,"title":{},"body":{"license.html":{}}}],["body",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":999,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":593,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":614,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1002,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":545,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":619,"title":{},"body":{"index.html":{}}}],["canonicalcode",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["canonicalcode.internal",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":860,"title":{},"body":{"license.html":{}}}],["cause",{"_index":649,"title":{},"body":{"index.html":{},"license.html":{}}}],["change",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["changed",{"_index":864,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":378,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":960,"title":{},"body":{"license.html":{}}}],["charge",{"_index":809,"title":{},"body":{"license.html":{}}}],["choose",{"_index":976,"title":{},"body":{"license.html":{}}}],["claim",{"_index":840,"title":{},"body":{"license.html":{}}}],["claims",{"_index":829,"title":{},"body":{"license.html":{}}}],["class",{"_index":28,"title":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["classes",{"_index":368,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"overview.html":{}}}],["code",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":77,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":361,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["collector/build/src/types",{"_index":362,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporter",{"_index":357,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":358,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":359,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":367,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":835,"title":{},"body":{"license.html":{}}}],["command",{"_index":625,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1008,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":970,"title":{},"body":{"license.html":{}}}],["commit",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":58,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":54,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":91,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":647,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":14,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["communication",{"_index":779,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":739,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1019,"title":{},"body":{"license.html":{}}}],["complies",{"_index":893,"title":{},"body":{"license.html":{}}}],["compose",{"_index":633,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":637,"title":{},"body":{"index.html":{}}}],["composite",{"_index":102,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":110,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":98,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":101,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":967,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":682,"title":{},"body":{"license.html":{}}}],["config",{"_index":94,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":364,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":166,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.headers",{"_index":366,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":365,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":57,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configurable",{"_index":588,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":59,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":160,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["configure",{"_index":577,"title":{},"body":{"index.html":{}}}],["consequential",{"_index":959,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":210,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":984,"title":{},"body":{"license.html":{}}}],["console",{"_index":62,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":136,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":125,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":129,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":792,"title":{},"body":{"license.html":{}}}],["const",{"_index":96,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["constitutes",{"_index":844,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":164,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/OtelcolExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":104,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":155,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["construed",{"_index":888,"title":{},"body":{"license.html":{}}}],["contained",{"_index":874,"title":{},"body":{"license.html":{}}}],["content",{"_index":920,"title":{},"body":{"license.html":{}}}],["contents",{"_index":567,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":113,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":181,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":713,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":599,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":769,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":833,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":895,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":796,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":845,"title":{},"body":{"license.html":{}}}],["control",{"_index":701,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":702,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":741,"title":{},"body":{"license.html":{}}}],["copies",{"_index":852,"title":{},"body":{"license.html":{}}}],["copy",{"_index":857,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":692,"title":{},"body":{"license.html":{}}}],["core",{"_index":604,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1037,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":841,"title":{},"body":{"license.html":{}}}],["cours",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":517,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":617,"title":{},"body":{"index.html":{}}}],["cross",{"_index":839,"title":{},"body":{"license.html":{}}}],["current",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":83,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":916,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":89,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":956,"title":{},"body":{"license.html":{}}}],["date",{"_index":849,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["declarations",{"_index":22,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":672,"title":{},"body":{"index.html":{}}}],["default",{"_index":80,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":990,"title":{},"body":{"license.html":{}}}],["define",{"_index":145,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defined",{"_index":39,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":183,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":191,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":372,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["definitions",{"_index":685,"title":{},"body":{"license.html":{}}}],["del",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":951,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":667,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":536,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":653,"title":{},"body":{"index.html":{}}}],["depends",{"_index":646,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":562,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":754,"title":{},"body":{"license.html":{}}}],["derived",{"_index":755,"title":{},"body":{"license.html":{}}}],["describing",{"_index":917,"title":{},"body":{"license.html":{}}}],["description",{"_index":35,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["designated",{"_index":794,"title":{},"body":{"license.html":{}}}],["determining",{"_index":939,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":639,"title":{},"body":{"index.html":{}}}],["different",{"_index":892,"title":{},"body":{"license.html":{}}}],["dir",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":707,"title":{},"body":{"license.html":{}}}],["direction",{"_index":709,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":921,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":789,"title":{},"body":{"license.html":{}}}],["display",{"_index":579,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":818,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":876,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":684,"title":{},"body":{"license.html":{}}}],["doc",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":632,"title":{},"body":{"index.html":{}}}],["docs",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":690,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":518,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":1006,"title":{},"body":{"license.html":{}}}],["done",{"_index":1038,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":802,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1014,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":756,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":759,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":776,"title":{},"body":{"license.html":{}}}],["en",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":1001,"title":{},"body":{"license.html":{}}}],["end",{"_index":996,"title":{},"body":{"license.html":{}}}],["entities",{"_index":700,"title":{},"body":{"license.html":{}}}],["entity",{"_index":694,"title":{},"body":{"license.html":{}}}],["environment",{"_index":611,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":612,"title":{},"body":{"index.html":{}}}],["error",{"_index":345,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":972,"title":{},"body":{"license.html":{}}}],["event",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":472,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":820,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":791,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":808,"title":{},"body":{"license.html":{}}}],["executed",{"_index":906,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":946,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":723,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":897,"title":{},"body":{"license.html":{}}}],["export",{"_index":27,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["exported",{"_index":663,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":133,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["exporter.interface",{"_index":139,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["exporter.module.ts",{"_index":128,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service",{"_index":130,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{}}}],["exporter.service.ts",{"_index":132,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:17",{"_index":135,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":355,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:43",{"_index":356,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:8",{"_index":370,"title":{},"body":{"classes/SpanExporterService.html":{}}}],["exporters",{"_index":602,"title":{},"body":{"index.html":{}}}],["exports",{"_index":342,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":930,"title":{},"body":{"license.html":{}}}],["f",{"_index":635,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":968,"title":{},"body":{"license.html":{}}}],["fake",{"_index":606,"title":{},"body":{"index.html":{}}}],["false",{"_index":580,"title":{},"body":{"index.html":{}}}],["features",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":977,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":1000,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":716,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":850,"title":{},"body":{"license.html":{}}}],["files",{"_index":733,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":935,"title":{},"body":{"license.html":{}}}],["fix",{"_index":659,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":855,"title":{},"body":{"license.html":{}}}],["form",{"_index":726,"title":{},"body":{"license.html":{}}}],["format",{"_index":1010,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":333,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":334,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":811,"title":{},"body":{"license.html":{}}}],["generally",{"_index":600,"title":{},"body":{"index.html":{}}}],["generated",{"_index":740,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":134,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["getpropagator",{"_index":38,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["getting",{"_index":376,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1035,"title":{},"body":{"todo.html":{}}}],["give",{"_index":147,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":569,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":965,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1024,"title":{},"body":{"license.html":{}}}],["grant",{"_index":801,"title":{},"body":{"license.html":{}}}],["granted",{"_index":725,"title":{},"body":{"license.html":{}}}],["granting",{"_index":696,"title":{},"body":{"license.html":{}}}],["grants",{"_index":804,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":952,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":992,"title":{},"body":{"license.html":{}}}],["header",{"_index":87,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":84,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["here",{"_index":641,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":803,"title":{},"body":{"license.html":{}}}],["herein",{"_index":902,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":991,"title":{},"body":{"license.html":{}}}],["http",{"_index":112,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":341,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":179,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:132",{"_index":203,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":208,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:184",{"_index":213,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:198",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:214",{"_index":193,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:46",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:50",{"_index":189,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:84",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":640,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":629,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":82,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":680,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1021,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":338,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":339,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":202,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":652,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":582,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":566,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":152,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":143,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":141,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":105,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1015,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1004,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":138,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":714,"title":{},"body":{"license.html":{}}}],["iii",{"_index":720,"title":{},"body":{"license.html":{}}}],["implement",{"_index":616,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":151,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":51,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["implied",{"_index":931,"title":{},"body":{"license.html":{}}}],["import",{"_index":10,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":23,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["improving",{"_index":790,"title":{},"body":{"license.html":{}}}],["inability",{"_index":963,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":958,"title":{},"body":{"license.html":{}}}],["include",{"_index":762,"title":{},"body":{"license.html":{}}}],["included",{"_index":749,"title":{},"body":{"license.html":{}}}],["includes",{"_index":872,"title":{},"body":{"license.html":{}}}],["including",{"_index":730,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":773,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":799,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":993,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":989,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":980,"title":{},"body":{"license.html":{}}}],["index",{"_index":36,"title":{"index.html":{}},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":747,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":708,"title":{},"body":{"license.html":{}}}],["individual",{"_index":722,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["information",{"_index":1005,"title":{},"body":{"license.html":{}}}],["informational",{"_index":883,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":832,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":846,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":204,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":184,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":201,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":111,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(b3propagatorservice",{"_index":117,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":119,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":120,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(spanexporterservice",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(textmappropagatorservice",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":32,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":33,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":185,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(span",{"_index":207,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":190,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injection",{"_index":95,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":75,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":97,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":148,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":186,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":212,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":187,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":575,"title":{},"body":{"index.html":{}}}],["installation",{"_index":568,"title":{},"body":{"index.html":{}}}],["institute",{"_index":836,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":771,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":188,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":206,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":175,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":645,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":331,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":335,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":340,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":56,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":178,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":330,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":126,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":144,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:11",{"_index":146,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":352,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/span",{"_index":369,"title":{},"body":{"classes/SpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":7,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":99,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":142,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":154,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":169,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":149,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:11",{"_index":150,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptor/src/lib/services/propagator/text",{"_index":374,"title":{},"body":{"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptors",{"_index":177,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":53,"title":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":55,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":45,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["irrevocable",{"_index":812,"title":{},"body":{"license.html":{}}}],["issue",{"_index":785,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":196,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":115,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerconfiguration",{"_index":576,"title":{},"body":{"index.html":{}}}],["jaegerhttppropagator",{"_index":607,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":158,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":167,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":153,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":106,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":86,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":678,"title":{},"body":{"license.html":{}}}],["jest",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":554,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":584,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":560,"title":{},"body":{"index.html":{}}}],["kind",{"_index":929,"title":{},"body":{"license.html":{}}}],["language",{"_index":1023,"title":{},"body":{"license.html":{}}}],["law",{"_index":924,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":842,"title":{},"body":{"license.html":{}}}],["legal",{"_index":697,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1029,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":947,"title":{},"body":{"license.html":{}}}],["liable",{"_index":955,"title":{},"body":{"license.html":{}}}],["library",{"_index":561,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":830,"title":{},"body":{"license.html":{}}}],["license",{"_index":675,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":890,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1018,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":847,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":691,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":932,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1025,"title":{},"body":{"license.html":{}}}],["limited",{"_index":731,"title":{},"body":{"license.html":{}}}],["link",{"_index":766,"title":{},"body":{"license.html":{}}}],["list",{"_index":598,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":783,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":837,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":347,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["loss",{"_index":964,"title":{},"body":{"license.html":{}}}],["losses",{"_index":971,"title":{},"body":{"license.html":{}}}],["made",{"_index":746,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":782,"title":{},"body":{"license.html":{}}}],["make",{"_index":823,"title":{},"body":{"license.html":{}}}],["making",{"_index":728,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":969,"title":{},"body":{"license.html":{}}}],["managed",{"_index":787,"title":{},"body":{"license.html":{}}}],["management",{"_index":710,"title":{},"body":{"license.html":{}}}],["manager",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":21,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":793,"title":{},"body":{"license.html":{}}}],["marks",{"_index":912,"title":{},"body":{"license.html":{}}}],["matching",{"_index":30,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":687,"title":{},"body":{"license.html":{}}}],["means",{"_index":705,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":736,"title":{},"body":{"license.html":{}}}],["media",{"_index":742,"title":{},"body":{"license.html":{}}}],["medium",{"_index":853,"title":{},"body":{"license.html":{}}}],["meet",{"_index":854,"title":{},"body":{"license.html":{}}}],["member",{"_index":664,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":934,"title":{},"body":{"license.html":{}}}],["merely",{"_index":765,"title":{},"body":{"license.html":{}}}],["merge",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":37,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["miscellaneous",{"_index":1039,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":729,"title":{},"body":{"license.html":{}}}],["modified",{"_index":859,"title":{},"body":{"license.html":{}}}],["modify",{"_index":884,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":889,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":336,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":565,"title":{},"body":{"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":350,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["name",{"_index":73,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":911,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":661,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":831,"title":{},"body":{"license.html":{}}}],["need",{"_index":666,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":950,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":953,"title":{},"body":{"license.html":{}}}],["new",{"_index":52,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":12,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["nodejs",{"_index":662,"title":{},"body":{"index.html":{}}}],["non",{"_index":807,"title":{},"body":{"license.html":{}}}],["noop",{"_index":172,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":605,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":173,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":174,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":168,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":171,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":881,"title":{},"body":{"license.html":{}}}],["notable",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":901,"title":{},"body":{"license.html":{}}}],["notice",{"_index":748,"title":{},"body":{"license.html":{}}}],["notices",{"_index":862,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":899,"title":{},"body":{"license.html":{}}}],["npm",{"_index":574,"title":{},"body":{"index.html":{}}}],["null",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":192,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["object",{"_index":734,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":981,"title":{},"body":{"license.html":{}}}],["observable",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1020,"title":{},"body":{"license.html":{}}}],["offer",{"_index":824,"title":{},"body":{"license.html":{}}}],["ok",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":608,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":628,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":76,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":47,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":657,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":48,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":360,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":159,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":140,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":90,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":176,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":93,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":180,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":329,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":613,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":571,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":650,"title":{},"body":{"index.html":{}}}],["optional",{"_index":61,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["options",{"_index":655,"title":{},"body":{"index.html":{}}}],["origin",{"_index":918,"title":{},"body":{"license.html":{}}}],["original",{"_index":211,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":354,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcolconfig",{"_index":92,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":351,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":353,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":78,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":962,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":718,"title":{},"body":{"license.html":{}}}],["overide",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1028,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":693,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":715,"title":{},"body":{"license.html":{}}}],["package",{"_index":535,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["page",{"_index":1013,"title":{},"body":{"license.html":{}}}],["param",{"_index":163,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{}}}],["parent",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["parentmodule",{"_index":343,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parentorelsesampler",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentorelsesampler(new",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parser",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":870,"title":{},"body":{"license.html":{}}}],["partial",{"_index":85,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":936,"title":{},"body":{"license.html":{}}}],["party",{"_index":880,"title":{},"body":{"license.html":{}}}],["patent",{"_index":819,"title":{},"body":{"license.html":{}}}],["percent",{"_index":717,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":589,"title":{},"body":{"index.html":{}}}],["perform",{"_index":816,"title":{},"body":{"license.html":{}}}],["permission",{"_index":909,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":724,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":805,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":869,"title":{},"body":{"license.html":{}}}],["places",{"_index":875,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":974,"title":{},"body":{"license.html":{}}}],["power",{"_index":706,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":727,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":814,"title":{},"body":{"license.html":{},"todo.html":{}}}],["printed",{"_index":1012,"title":{},"body":{"license.html":{}}}],["private",{"_index":118,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["probability",{"_index":194,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":63,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":913,"title":{},"body":{"license.html":{}}}],["production",{"_index":64,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":478,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":381,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../opentelemetry",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":622,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":861,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":618,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":88,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["propagator.interface",{"_index":46,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":9,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":18,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["propagator.service.ts",{"_index":34,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:11",{"_index":375,"title":{},"body":{"classes/TextMapPropagatorService.html":{}}}],["propagator.service.ts:15",{"_index":156,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":107,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":40,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:28",{"_index":157,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:33",{"_index":109,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator/b3",{"_index":8,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":100,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":114,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":116,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":170,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":121,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["properties",{"_index":60,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{}}}],["provide",{"_index":25,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"license.html":{}}}],["provided",{"_index":751,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":49,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["providers",{"_index":24,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":926,"title":{},"body":{"license.html":{}}}],["public",{"_index":161,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":815,"title":{},"body":{"license.html":{}}}],["publish",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":788,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":704,"title":{},"body":{"license.html":{}}}],["readable",{"_index":873,"title":{},"body":{"license.html":{}}}],["readme",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":995,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":915,"title":{},"body":{"license.html":{}}}],["received",{"_index":797,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":856,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":597,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":942,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":851,"title":{},"body":{"license.html":{}}}],["regarding",{"_index":907,"title":{},"body":{"license.html":{}}}],["release",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":763,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1003,"title":{},"body":{"license.html":{}}}],["represent",{"_index":760,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":781,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":813,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":919,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":683,"title":{},"body":{"license.html":{}}}],["request",{"_index":205,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":914,"title":{},"body":{"license.html":{}}}],["reset",{"_index":1031,"title":{},"body":{"overview.html":{}}}],["response",{"_index":620,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":987,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":938,"title":{},"body":{"license.html":{}}}],["result",{"_index":29,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":735,"title":{},"body":{"license.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":866,"title":{},"body":{"license.html":{}}}],["return",{"_index":41,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["returns",{"_index":43,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["review",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":757,"title":{},"body":{"license.html":{}}}],["rights",{"_index":983,"title":{},"body":{"license.html":{}}}],["risks",{"_index":944,"title":{},"body":{"license.html":{}}}],["root",{"_index":50,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["royalty",{"_index":810,"title":{},"body":{"license.html":{}}}],["run",{"_index":570,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":1011,"title":{},"body":{"license.html":{}}}],["sample",{"_index":200,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":199,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":195,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":587,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":822,"title":{},"body":{"license.html":{}}}],["sections",{"_index":688,"title":{},"body":{"license.html":{}}}],["see",{"_index":383,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":825,"title":{},"body":{"license.html":{}}}],["send",{"_index":581,"title":{},"body":{"index.html":{}}}],["sending",{"_index":643,"title":{},"body":{"index.html":{}}}],["sent",{"_index":780,"title":{},"body":{"license.html":{}}}],["separable",{"_index":764,"title":{},"body":{"license.html":{}}}],["separate",{"_index":904,"title":{},"body":{"license.html":{}}}],["service",{"_index":74,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":65,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["services/exporter/span",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/text",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":686,"title":{},"body":{"license.html":{}}}],["shares",{"_index":719,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":72,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["skipself",{"_index":337,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":732,"title":{},"body":{"license.html":{}}}],["sole",{"_index":986,"title":{},"body":{"license.html":{}}}],["solely",{"_index":937,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"license.html":{}}}],["span",{"_index":127,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":137,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"classes/SpanExporterService.html":{}}}],["spanexporterservice",{"_index":131,"title":{"classes/SpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"classes/SpanExporterService.html":{},"coverage.html":{}}}],["spec",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["special",{"_index":957,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1022,"title":{},"body":{"license.html":{}}}],["stack",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":624,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":626,"title":{},"body":{"index.html":{}}}],["started",{"_index":377,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":898,"title":{},"body":{"license.html":{}}}],["stated",{"_index":821,"title":{},"body":{"license.html":{}}}],["statement",{"_index":891,"title":{},"body":{"license.html":{}}}],["statements",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":332,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":863,"title":{},"body":{"license.html":{}}}],["stoppage",{"_index":966,"title":{},"body":{"license.html":{}}}],["string",{"_index":69,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":502,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":817,"title":{},"body":{"license.html":{}}}],["submission",{"_index":894,"title":{},"body":{"license.html":{}}}],["submit",{"_index":774,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":772,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":798,"title":{},"body":{"license.html":{}}}],["such",{"_index":711,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":903,"title":{},"body":{"license.html":{}}}],["support",{"_index":979,"title":{},"body":{"license.html":{}}}],["sync",{"_index":596,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1009,"title":{},"body":{"license.html":{}}}],["systems",{"_index":784,"title":{},"body":{"license.html":{}}}],["table",{"_index":534,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1034,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":583,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":848,"title":{},"body":{"license.html":{}}}],["terms",{"_index":681,"title":{},"body":{"license.html":{}}}],["test",{"_index":446,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":20,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":44,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"classes/TextMapPropagatorService.html":{}}}],["textmappropagatorservice",{"_index":19,"title":{"classes/TextMapPropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"classes/TextMapPropagatorService.html":{},"coverage.html":{}}}],["theory",{"_index":948,"title":{},"body":{"license.html":{}}}],["there's",{"_index":631,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":768,"title":{},"body":{"license.html":{}}}],["third",{"_index":879,"title":{},"body":{"license.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":122,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":165,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":123,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(span",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":124,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":363,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.spanexporterservice.getexporter",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.textmappropagatorservice.getpropagator",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["those",{"_index":828,"title":{},"body":{"license.html":{}}}],["through",{"_index":689,"title":{},"body":{"license.html":{}}}],["throw",{"_index":344,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":665,"title":{},"body":{"index.html":{}}}],["title",{"_index":933,"title":{},"body":{"license.html":{}}}],["todo",{"_index":288,"title":{"todo.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"todo.html":{}}}],["tort",{"_index":949,"title":{},"body":{"license.html":{}}}],["trace",{"_index":68,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["tracer",{"_index":182,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":590,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":786,"title":{},"body":{"license.html":{}}}],["trade",{"_index":910,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":867,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":908,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":826,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":737,"title":{},"body":{"license.html":{}}}],["translation",{"_index":738,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":572,"title":{},"body":{"index.html":{}}}],["true",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":670,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":660,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":67,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":668,"title":{},"body":{"index.html":{}}}],["types",{"_index":743,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":674,"title":{},"body":{"index.html":{}}}],["typo",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":373,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{}}}],["under",{"_index":703,"title":{},"body":{"license.html":{}}}],["union",{"_index":698,"title":{},"body":{"license.html":{}}}],["unless",{"_index":896,"title":{},"body":{"license.html":{}}}],["unused",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":638,"title":{},"body":{"index.html":{}}}],["update",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":79,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":70,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":26,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{}}}],["used",{"_index":371,"title":{},"body":{"classes/SpanExporterService.html":{},"classes/TextMapPropagatorService.html":{},"index.html":{}}}],["user",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":564,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":349,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":941,"title":{},"body":{"license.html":{}}}],["value",{"_index":81,"title":{},"body":{"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":526,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1040,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":777,"title":{},"body":{"license.html":{}}}],["version",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["via",{"_index":594,"title":{},"body":{"index.html":{}}}],["void",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["want",{"_index":630,"title":{},"body":{"index.html":{}}}],["warning",{"_index":573,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":928,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":922,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":878,"title":{},"body":{"license.html":{}}}],["whether",{"_index":712,"title":{},"body":{"license.html":{}}}],["whole",{"_index":761,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":800,"title":{},"body":{"license.html":{}}}],["without",{"_index":642,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":744,"title":{},"body":{"license.html":{}}}],["works",{"_index":487,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":806,"title":{},"body":{"license.html":{}}}],["writing",{"_index":795,"title":{},"body":{"license.html":{}}}],["written",{"_index":778,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":644,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1017,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":1036,"title":{},"body":{"todo.html":{}}}],["zone.js",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1030,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator } from '@opentelemetry/core';\n\n/**\n * B3PropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { CompositePropagatorService } from './composite-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:33\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport {\n  CompositePropagator,\n} from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:11\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:28\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new JaegerHttpTracePropagator(this.customHeader);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextMapPropagatorService } from '../text-map-propagator.service';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: TextMapPropagatorService, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, spanExporterService: SpanExporterService, textMapPropagatorService: TextMapPropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        spanExporterService\n                                                  \n                                                        \n                                                                        SpanExporterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        textMapPropagatorService\n                                                  \n                                                        \n                                                                        TextMapPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:214\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:132\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(span: Span, request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    span\n                                    \n                                            Span\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        span\n\n                                    \n                                \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:184\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:198\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:84\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:50\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:46\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, CanonicalCode } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  setActiveSpan,\n  ProbabilitySampler,\n  ParentOrElseSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { SpanExporterService } from '../services/exporter/span-exporter.service';\nimport { TextMapPropagatorService } from '../services/propagator/text-map-propagator.service';\nimport { version, name } from '../../../package.json';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param spanExporterService service exporter injected\n   * @param textMapPropagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(SpanExporterService)\n    private spanExporterService: SpanExporterService,\n    @Inject(TextMapPropagatorService)\n    private textMapPropagatorService: TextMapPropagatorService\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.spanExporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.textMapPropagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(span, request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          // TODO : To change after new spec...\n          span.setStatus({\n            code: CanonicalCode.INTERNAL\n          });\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param span span\n   * @param request request\n   */\n  private injectContextAndHeader(\n    span: Span,\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultSetter,\n      this.contextManager.active()\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig > 1) {\n      return new ParentOrElseSampler(new AlwaysOnSampler());\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { SpanExporterService } from '../span-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: SpanExporterService, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:43\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter\n} from '@opentelemetry/exporter-collector/build/src/platform/browser';\nimport {\n  CollectorExporterConfigBase,\n} from '@opentelemetry/exporter-collector/build/src/types';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpanExporterService.html":{"url":"classes/SpanExporterService.html","title":"class - SpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            IExporter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts:8\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SpanExporter } from '@opentelemetry/tracing';\nimport { IExporter } from './exporter.interface';\n\nexport class SpanExporterService implements IExporter {\n  /**\n   * Not used, just a definition for injection\n   */\n  getExporter(): SpanExporter {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TextMapPropagatorService.html":{"url":"classes/TextMapPropagatorService.html","title":"class - TextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                TextMapPropagatorService\n\n            \n\n\n            \n                Implements\n            \n            \n                            IPropagator\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts:11\n                \n            \n\n\n            \n                \n                    Not used, just a definition for injection\n\n\n                    \n                        Returns :     TextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TextMapPropagator } from '@opentelemetry/api';\nimport { IPropagator } from './propagator.interface';\n\n/**\n * TextMapPropagatorService\n */\nexport class TextMapPropagatorService implements IPropagator {\n  /**\n   * Not used, just a definition for injection\n   */\n  getPropagator(): TextMapPropagator {\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.11.0-1 (2020-09-14)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/span-exporter.service.ts\n            \n            class\n            SpanExporterService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/text-map-propagator.service.ts\n            \n            class\n            TextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.0.5\n        \n            @angular/cdk : ^10.1.1\n        \n            @angular/common : ^10.0.5\n        \n            @angular/compiler : ^10.0.5\n        \n            @angular/core : ^10.0.5\n        \n            @angular/forms : ^10.0.5\n        \n            @angular/material : ^10.1.1\n        \n            @angular/platform-browser : ^10.0.5\n        \n            @angular/platform-browser-dynamic : ^10.0.5\n        \n            @angular/router : ^10.0.5\n        \n            @opentelemetry/exporter-collector : ^0.11.0\n        \n            @opentelemetry/propagator-jaeger : ^0.10.0\n        \n            @opentelemetry/web : ^0.11.0\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.2.0\n        \n            ngx-highlight-js : ^9.0.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/propagator-jaegerConfiguration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 2 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}How it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Add more configuration for OpenTelemetry-collector : See here  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here \n\nIn Progress\nDone ✓\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
