var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/B3PropagatorConfig.html",[0,0.688,1,1.273]],["body/interfaces/B3PropagatorConfig.html",[0,1.168,1,2.226,2,1.074,3,0.235,4,0.235,5,0.174,6,0.204,7,1.258,8,1.258,9,0.58,10,1.721,11,0.535,12,1.425,13,1.136,14,2.499,15,2.543,16,0.793,17,0.03,18,2.123,19,2.162,20,1.665,21,1.664,22,1.818,23,2.123,24,1.959,25,1.425,26,0.292,27,1.258,28,0.204,29,1.798,30,2.246,31,0.735,32,1.258,33,0.498,34,1.664,35,1.664,36,0.735,37,1.162,38,1.136,39,1.944,40,2.3,41,1.803,42,1.162,43,1.492,44,1.492,45,1.959,46,1.258,47,0.995,48,1.664,49,2.123,50,1.368,51,2.3,52,2.123,53,1.368,54,1.074,55,0.922,56,1.664,57,1.368,58,1.492,59,2.246,60,0.995,61,1.258,62,1.052,63,1.959,64,1.803,65,1.803,66,1.136,67,0.855,68,1.539,69,1.664,70,0.644,71,1.368,72,1.368,73,1.074,74,1.368,75,0.012,76,0.017,77,0.012]],["title/modules/B3PropagatorModule.html",[78,1.179,79,2.149]],["body/modules/B3PropagatorModule.html",[3,0.378,4,0.378,5,0.28,6,0.328,17,0.03,26,0.45,28,0.328,33,0.378,75,0.02,76,0.024,77,0.02,79,3.566,80,1.486,81,3.275,82,2.922,83,2.64,84,2.113,85,2.475,86,1.872,87,3.222,88,2.64,89,2.405,90,2.285,91,1.731,92,1.603,93,1.731,94,1.603,95,1.603,96,1.872,97,0.791]],["title/injectables/B3PropagatorService.html",[87,1.941,98,0.688]],["body/injectables/B3PropagatorService.html",[1,2.201,3,0.248,4,0.248,5,0.183,6,0.402,9,0.864,10,1.273,11,0.564,12,1.481,13,1.18,15,2.293,16,1.367,17,0.03,18,2.379,19,2.201,20,2.139,21,2.293,23,2.175,25,1.481,26,0.402,28,0.215,31,0.776,33,0.248,36,1.094,54,1.599,62,1.376,66,0.837,67,1.474,70,0.474,75,0.013,76,0.018,77,0.013,81,4.012,82,3.579,87,3.067,88,1.729,91,1.134,97,0.518,98,0.864,99,1.226,100,1.575,101,2.438,102,2.699,103,3.461,104,3.057,105,1.373,106,4.01,107,4.124,108,2.794,109,1.444,110,1.729,111,1.601,112,4.124,113,2.036,114,4.124,115,2.925,116,2.699,117,4.01,118,1.373,119,5.47,120,2.925,121,1.941,122,2.946,123,1.444,124,1.729,125,1.914,126,1.575,127,1.226,128,1.226,129,1.134,130,2.145,131,2.925,132,2.925,133,2.925,134,1.729,135,2.925,136,2.925,137,2.925]],["title/interfaces/CommonCollectorConfig.html",[0,0.688,34,1.377]],["body/interfaces/CommonCollectorConfig.html",[0,1.147,1,2.035,2,1.019,3,0.223,4,0.223,5,0.165,6,0.193,7,1.193,8,1.193,9,0.55,10,1.69,11,0.507,12,1.372,13,1.567,14,1.297,15,2.575,16,1.414,17,0.03,18,1.601,19,1.745,20,1.372,21,1.102,22,1.616,23,1.887,24,1.297,25,0.944,26,0.281,27,1.193,28,0.193,29,1.745,30,2.2,31,0.697,32,1.735,33,0.491,34,1.887,35,2.296,36,1.013,37,1.601,38,1.414,39,2.427,40,2.723,41,2.487,42,1.601,43,2.057,44,2.057,45,2.703,46,1.193,47,0.944,48,1.601,49,2.071,50,1.297,51,2.244,52,2.071,53,1.297,54,1.019,55,0.875,56,1.601,57,1.297,58,1.415,59,2.2,60,0.944,61,1.193,62,1.013,63,1.885,64,1.735,65,1.735,66,1.093,67,0.811,68,1.481,69,1.601,70,0.62,71,1.297,72,1.297,73,1.019,74,1.297,75,0.012,76,0.017,77,0.012]],["title/modules/CompositePropagatorModule.html",[78,1.179,138,2.149]],["body/modules/CompositePropagatorModule.html",[3,0.378,4,0.378,5,0.28,6,0.328,17,0.03,26,0.45,28,0.328,33,0.378,75,0.02,76,0.024,77,0.02,80,1.486,83,2.64,84,2.113,85,2.475,86,1.872,89,2.405,90,2.285,91,1.731,92,1.603,93,1.731,94,1.603,95,1.603,96,1.872,97,0.791,138,3.566,139,3.275,140,3.275,141,3.566,142,3.748]],["title/injectables/CompositePropagatorService.html",[98,0.688,141,2.149]],["body/injectables/CompositePropagatorService.html",[3,0.288,4,0.288,5,0.213,6,0.38,9,0.711,11,0.655,13,0.971,16,0.971,17,0.03,26,0.446,28,0.249,31,0.9,33,0.288,36,0.9,38,1.581,70,0.55,75,0.015,76,0.02,77,0.015,82,2.22,87,3.512,88,2.006,89,2.782,91,1.316,97,0.601,98,0.957,99,1.422,100,1.828,104,2.782,105,1.521,108,2.977,109,2.728,111,1.41,113,1.675,118,1.129,121,1.839,122,3.107,123,1.675,124,1.915,127,1.422,128,1.422,129,1.316,139,3.788,140,3.788,141,3.616,143,3.393,144,3.589,145,3.589,146,3.393,147,2.848,148,5.941,149,2.22,150,2.55,151,2.075,152,2.22,153,1.675,154,2.22,155,3.393,156,3.393,157,3.393,158,2.848,159,3.393,160,3.393,161,3.393]],["title/modules/ConsoleSpanExporterModule.html",[78,1.179,162,2.149]],["body/modules/ConsoleSpanExporterModule.html",[3,0.377,4,0.377,5,0.279,6,0.327,17,0.03,26,0.45,28,0.327,33,0.377,39,1.866,75,0.02,76,0.024,77,0.02,80,1.482,84,2.109,85,2.471,86,1.866,92,1.599,93,1.726,94,1.599,95,1.599,96,1.866,97,0.789,162,3.56,163,3.265,164,3.216,165,3.265,166,3.56,167,3.265,168,2.685,169,2.398]],["title/injectables/ConsoleSpanExporterService.html",[98,0.688,166,2.149]],["body/injectables/ConsoleSpanExporterService.html",[3,0.349,4,0.349,5,0.258,6,0.381,9,0.862,11,0.794,17,0.03,22,1.861,26,0.417,28,0.303,33,0.349,70,0.668,75,0.018,76,0.023,77,0.018,97,0.729,98,1.085,99,1.725,105,1.725,111,1.27,118,1.37,121,1.981,127,1.725,128,1.725,129,1.596,163,3.8,164,3.519,166,3.895,169,2.217,170,2.693,171,2.558,172,3.895,173,4.116,174,4.995,175,3.627,176,2.558,177,2.217]],["title/modules/HttpTraceContextPropagatorModule.html",[78,1.179,178,2.149]],["body/modules/HttpTraceContextPropagatorModule.html",[3,0.372,4,0.372,5,0.275,6,0.323,17,0.03,26,0.448,28,0.323,33,0.372,38,1.67,75,0.019,76,0.024,77,0.019,80,1.461,83,2.594,84,2.091,85,2.449,86,1.84,89,2.364,90,2.26,91,1.701,92,1.576,93,1.701,94,1.576,95,1.576,96,1.84,97,0.778,144,3.188,150,2.166,151,2.651,152,2.871,178,3.528,179,3.218]],["title/injectables/HttpTraceContextPropagatorService.html",[98,0.688,144,1.941]],["body/injectables/HttpTraceContextPropagatorService.html",[3,0.342,4,0.342,5,0.253,6,0.376,9,0.846,11,0.779,17,0.03,26,0.435,28,0.297,31,1.071,33,0.342,38,1.692,70,0.655,75,0.018,76,0.023,77,0.018,91,1.566,97,0.716,98,1.073,99,1.693,100,2.176,105,1.704,108,3.184,111,1.247,118,1.345,121,1.968,122,3.286,124,2.147,127,1.693,128,1.693,129,1.566,144,3.495,149,2.643,151,2.685,152,3.351,179,3.756,180,4.04,181,5.231]],["title/interfaces/IExporter.html",[0,0.688,176,1.621]],["body/interfaces/IExporter.html",[0,1.2,2,1.631,3,0.357,4,0.357,5,0.264,6,0.386,9,0.881,11,0.812,17,0.03,22,1.886,26,0.386,27,1.911,28,0.309,33,0.445,54,2.037,68,1.631,69,1.764,70,0.682,75,0.019,76,0.023,77,0.019,105,1.748,111,1.298,118,1.4,121,1.4,168,2.076,171,3.047,172,3.925,175,3.776,176,2.593,177,2.266,182,3.085,183,4.207,184,3.853,185,5.253,186,3.531]],["title/interfaces/IPropagator.html",[0,0.688,124,1.377]],["body/interfaces/IPropagator.html",[0,1.206,2,1.649,3,0.361,4,0.361,5,0.267,6,0.389,9,0.891,11,0.821,17,0.03,26,0.389,27,1.932,28,0.313,31,1.128,33,0.448,54,2.051,60,2.224,68,1.649,69,1.783,70,0.69,75,0.019,76,0.023,77,0.019,90,1.783,105,1.761,108,3.244,111,1.313,118,1.416,121,1.416,122,3.101,124,2.217,184,3.879,187,3.12,188,4.254,189,4.439,190,5.289,191,3.57]],["title/modules/JaegerHttpTracePropagatorModule.html",[78,1.179,192,2.149]],["body/modules/JaegerHttpTracePropagatorModule.html",[3,0.372,4,0.372,5,0.275,6,0.323,17,0.03,26,0.448,28,0.323,33,0.372,38,1.67,75,0.019,76,0.024,77,0.019,80,1.461,83,2.594,84,2.091,85,2.449,86,1.84,89,2.364,90,2.26,91,1.701,92,1.576,93,1.701,94,1.576,95,1.576,96,1.84,97,0.778,145,3.188,150,2.881,153,2.166,154,2.871,192,3.528,193,3.218]],["title/injectables/JaegerHttpTracePropagatorService.html",[98,0.688,145,1.941]],["body/injectables/JaegerHttpTracePropagatorService.html",[3,0.279,4,0.279,5,0.207,6,0.402,9,0.939,11,0.636,12,1.609,13,0.944,15,1.879,16,1.282,17,0.03,20,1.609,26,0.433,28,0.242,31,0.874,33,0.279,36,0.874,38,1.755,51,2.036,61,2.312,62,1.562,66,0.944,67,1.686,70,0.727,75,0.015,76,0.02,77,0.015,91,1.279,97,0.584,98,0.939,99,1.382,100,1.776,104,2.742,105,1.492,108,2.942,109,2.513,110,1.95,111,1.571,113,1.628,118,1.098,121,1.901,122,3.077,123,1.628,124,1.879,125,2.158,126,1.776,127,1.382,128,1.382,129,1.279,130,2.419,134,1.95,145,3.229,147,2.768,150,3.027,153,1.628,154,3.574,193,4.006,194,4.482,195,5.712,196,3.761,197,2.768,198,2.768,199,3.298,200,3.298,201,3.298,202,3.298]],["title/interfaces/JaegerPropagatorConfig.html",[0,0.688,59,1.377]],["body/interfaces/JaegerPropagatorConfig.html",[0,1.175,1,2.091,2,1.092,3,0.239,4,0.239,5,0.176,6,0.207,7,1.279,8,1.279,9,0.59,10,1.73,11,0.543,12,1.442,13,1.149,14,1.39,15,2.553,16,0.806,17,0.03,18,1.683,19,1.814,20,1.68,21,1.181,22,1.68,23,1.962,24,1.39,25,1.011,26,0.295,27,1.279,28,0.207,29,1.814,30,2.261,31,0.747,32,1.279,33,0.5,34,1.683,35,1.683,36,0.747,37,1.181,38,1.149,39,1.962,40,2.317,41,1.824,42,1.181,43,1.517,44,1.517,45,1.982,46,1.279,47,1.011,48,1.683,49,2.139,50,1.39,51,2.45,52,2.139,53,1.39,54,1.092,55,0.938,56,1.683,57,1.39,58,1.517,59,2.419,60,1.442,61,2.317,62,1.065,63,1.982,64,1.824,65,1.824,66,1.149,67,0.869,68,1.557,69,1.683,70,0.651,71,1.39,72,1.39,73,1.092,74,1.39,75,0.012,76,0.018,77,0.012]],["title/modules/NoopTextMapPropagatorModule.html",[78,1.179,203,2.409]],["body/modules/NoopTextMapPropagatorModule.html",[3,0.372,4,0.372,5,0.275,6,0.323,17,0.03,26,0.448,28,0.323,33,0.372,75,0.019,76,0.024,77,0.019,80,1.461,83,2.594,84,2.091,85,2.449,86,1.84,89,2.364,90,2.26,91,1.701,92,1.576,93,1.701,94,1.576,95,1.576,96,1.84,97,0.778,150,2.166,203,3.955,204,3.218,205,3.819,206,3.218,207,3.955,208,3.528,209,4.388]],["title/injectables/NoopTextMapPropagatorService.html",[98,0.688,208,2.149]],["body/injectables/NoopTextMapPropagatorService.html",[3,0.346,4,0.346,5,0.256,6,0.379,9,0.855,11,0.788,17,0.03,26,0.415,28,0.3,31,1.083,33,0.346,70,0.662,75,0.018,76,0.023,77,0.018,91,1.583,97,0.723,98,1.08,99,1.712,100,2.199,105,1.716,108,3.197,111,1.26,118,1.359,121,1.975,122,3.296,124,2.161,127,1.712,128,1.712,129,1.583,150,2.545,196,5.245,204,3.781,205,3.883,206,3.781,207,3.781,208,3.373,210,5.155,211,4.083]],["title/interfaces/OpenTelemetryConfig.html",[0,0.688,62,0.871]],["body/interfaces/OpenTelemetryConfig.html",[0,1.15,1,2.359,2,1.026,3,0.224,4,0.224,5,0.166,6,0.194,7,1.202,8,1.202,9,0.554,10,1.624,11,0.51,12,1.379,13,1.66,14,1.306,15,2.432,16,1.506,17,0.03,18,1.609,19,1.752,20,1.379,21,1.109,22,1.622,23,1.894,24,1.306,25,0.95,26,0.282,27,1.202,28,0.194,29,1.752,30,2.206,31,0.702,32,1.202,33,0.492,34,2.078,35,1.609,36,0.702,37,1.109,38,1.098,39,1.894,40,2.251,41,1.744,42,1.109,43,1.425,44,1.425,45,1.895,46,1.202,47,0.95,48,2.078,49,2.078,50,1.306,51,2.251,52,2.078,53,1.306,54,1.026,55,0.881,56,2.078,57,1.306,58,1.425,59,2.55,60,0.95,61,1.202,62,1.314,63,2.709,64,2.493,65,2.493,66,1.098,67,0.817,68,1.488,69,1.609,70,0.623,71,1.306,72,1.306,73,1.026,74,1.306,75,0.012,76,0.017,77,0.012]],["title/interceptors/OpenTelemetryHttpInterceptor.html",[212,1.769,213,2.149]],["body/interceptors/OpenTelemetryHttpInterceptor.html",[3,0.129,4,0.129,5,0.095,6,0.378,9,1.011,10,1.137,11,0.294,12,0.898,13,1.322,16,1.43,17,0.03,20,1.323,22,0.898,25,1.143,26,0.403,28,0.112,30,0.639,31,0.663,33,0.129,36,1.325,37,1.049,39,1.937,40,1.987,41,1.987,54,0.97,60,1.461,62,0.977,66,0.436,67,1.489,69,1.706,70,0.783,75,0.007,76,0.011,77,0.007,90,0.639,97,0.564,98,0.524,104,3.14,105,0.833,109,1.819,110,0.901,111,1.543,113,2.281,116,1.637,118,1.456,121,1.226,123,0.752,124,1.545,126,0.82,127,0.639,128,1.049,129,0.591,134,3.116,149,0.997,151,1.136,164,3.29,168,0.752,171,1.819,174,2.1,175,2.853,176,1.819,177,0.82,198,1.278,212,1.347,213,1.637,214,1.523,215,4.318,216,1.278,217,2.1,218,3.183,219,3.879,220,2.502,221,2.502,222,3.183,223,2.502,224,3.183,225,2.671,226,3.685,227,3.685,228,2.502,229,2.502,230,2.502,231,3.183,232,1.523,233,2.1,234,4.374,235,2.502,236,3.685,237,2.502,238,2.502,239,5.145,240,1.523,241,2.1,242,5.829,243,2.502,244,1.523,245,1.523,246,1.479,247,2.502,248,2.1,249,2.502,250,1.523,251,3.671,252,1.835,253,2.502,254,1.523,255,1.523,256,2.671,257,3.685,258,2.671,259,2.1,260,1.523,261,4.374,262,3.685,263,1.523,264,2.502,265,2.1,266,3.093,267,1.637,268,2.1,269,3.183,270,3.685,271,2.502,272,3.093,273,1.523,274,1.523,275,2.502,276,2.502,277,1.117,278,1.278,279,1.523,280,2.502,281,1.117,282,2.502,283,1.523,284,1.523,285,2.502,286,2.502,287,2.502,288,1.523,289,1.835,290,1.523,291,1.523,292,1.523,293,1.278,294,1.523,295,1.523,296,2.502,297,1.523,298,1.523,299,1.523,300,1.523,301,1.523,302,1.523,303,1.523,304,1.523,305,1.523,306,1.523,307,1.523,308,1.523,309,1.835,310,2.502,311,2.502,312,2.502,313,2.502,314,2.502,315,1.523,316,1.523,317,1.523,318,1.117,319,1.523,320,2.502,321,1.835,322,1.523,323,1.523,324,1.523,325,1.523,326,1.523,327,1.523,328,1.523,329,1.523,330,1.523,331,1.523,332,1.523,333,1.523,334,1.523,335,1.523,336,1.523,337,1.523,338,1.523,339,1.523,340,1.523,341,1.523,342,1.523,343,1.523,344,1.523,345,1.523,346,1.523,347,1.523,348,1.523,349,3.183,350,1.523,351,3.183,352,1.523,353,1.523,354,1.523,355,1.523,356,1.523,357,1.523,358,1.523,359,2.502,360,1.523,361,1.523,362,1.523]],["title/modules/OpenTelemetryInterceptorModule.html",[78,1.179,363,2.149]],["body/modules/OpenTelemetryInterceptorModule.html",[3,0.319,4,0.319,5,0.236,6,0.36,13,1.555,16,1.076,17,0.03,19,1.458,26,0.439,28,0.276,33,0.319,36,0.997,62,1.526,66,1.4,67,1.678,70,0.61,75,0.017,76,0.022,77,0.017,80,1.252,84,2.107,92,1.351,93,1.458,94,1.351,95,1.756,96,1.577,97,0.666,105,1.252,106,4.105,109,1.856,111,1.161,113,1.856,118,1.252,121,1.252,126,2.026,197,3.157,213,3.2,252,2.758,277,2.758,363,3.904,364,4.891,365,3.761,366,3.761,367,4.891,368,3.761,369,5.435,370,4.891,371,4.105,372,4.105,373,3.761,374,3.761,375,3.157,376,4.891,377,3.761,378,2.758,379,3.761,380,3.761,381,3.157,382,3.761]],["title/modules/OtelColExporterModule.html",[78,1.179,383,2.149]],["body/modules/OtelColExporterModule.html",[3,0.38,4,0.38,5,0.281,6,0.329,17,0.03,26,0.451,28,0.329,33,0.38,75,0.02,76,0.024,77,0.02,80,1.491,84,2.117,85,2.48,86,1.877,92,1.608,93,1.736,94,1.608,95,1.608,96,1.877,97,0.794,165,3.285,167,3.285,168,2.695,169,2.412,383,3.572,384,3.285,385,3.572,386,3.285]],["title/interfaces/OtelCollectorConfig.html",[0,0.688,48,1.377]],["body/interfaces/OtelCollectorConfig.html",[0,1.155,1,2.052,2,1.04,3,0.227,4,0.227,5,0.168,6,0.197,7,1.219,8,1.219,9,0.562,10,1.702,11,0.518,12,1.393,13,1.578,14,1.324,15,2.525,16,1.303,17,0.03,18,1.626,19,1.766,20,1.393,21,1.125,22,1.791,23,2.091,24,1.324,25,0.963,26,0.285,27,1.219,28,0.197,29,1.766,30,2.585,31,0.711,32,1.219,33,0.493,34,1.626,35,1.626,36,0.711,37,1.125,38,1.11,39,1.909,40,2.266,41,1.761,42,1.125,43,1.445,44,1.445,45,1.914,46,1.761,47,1.393,48,1.909,49,2.441,50,1.914,51,2.505,52,2.441,53,2.248,54,1.504,55,0.893,56,1.626,57,1.324,58,1.445,59,2.218,60,0.963,61,1.219,62,1.028,63,1.914,64,1.761,65,1.761,66,1.11,67,0.828,68,1.504,69,1.626,70,0.629,71,1.324,72,1.324,73,1.04,74,1.324,75,0.012,76,0.017,77,0.012]],["title/injectables/OtelcolExporterService.html",[98,0.688,385,2.149]],["body/injectables/OtelcolExporterService.html",[3,0.276,4,0.276,5,0.204,6,0.4,9,0.932,10,1.373,11,0.629,12,1.598,13,1.628,16,1.273,17,0.03,26,0.432,28,0.24,29,2.456,30,1.368,31,0.865,33,0.276,35,1.368,36,0.865,47,1.171,49,1.368,52,1.368,62,1.557,64,2.299,66,0.934,67,1.678,70,0.529,73,1.265,75,0.014,76,0.02,77,0.014,97,0.897,98,0.932,99,1.368,104,2.727,105,1.481,109,2.684,110,1.929,111,1.562,113,1.61,118,1.086,121,1.81,123,1.61,126,1.757,127,1.368,128,1.368,129,1.265,134,2.63,169,1.757,170,2.135,172,3.558,175,2.993,176,2.196,177,1.757,293,2.738,384,3.988,385,3.558,387,4.449,388,3.263,389,5.438,390,4.449,391,4.449,392,3.263,393,3.263,394,2.135,395,3.263,396,3.263,397,2.738,398,3.263,399,3.263,400,3.263,401,3.263]],["title/interfaces/ZipkinCollectorConfig.html",[0,0.688,56,1.377]],["body/interfaces/ZipkinCollectorConfig.html",[0,1.165,1,2.07,2,1.065,3,0.233,4,0.233,5,0.172,6,0.202,7,1.247,8,1.247,9,0.575,10,1.716,11,0.53,12,1.416,13,1.443,14,1.355,15,2.538,16,1.443,17,0.03,18,1.653,19,1.789,20,1.416,21,1.151,22,1.811,23,2.114,24,1.355,25,0.986,26,0.29,27,1.247,28,0.202,29,1.789,30,2.239,31,0.728,32,1.247,33,0.497,34,1.653,35,1.653,36,0.728,37,1.151,38,1.128,39,1.934,40,2.29,41,1.791,42,1.151,43,1.479,44,1.479,45,1.946,46,1.247,47,0.986,48,1.653,49,2.456,50,1.355,51,2.426,52,2.456,53,1.355,54,1.065,55,1.312,56,1.934,57,1.946,58,1.479,59,2.239,60,0.986,61,1.247,62,1.046,63,1.946,64,1.791,65,1.791,66,1.128,67,0.847,68,1.529,69,1.653,70,0.64,71,1.355,72,1.355,73,1.065,74,1.355,75,0.012,76,0.017,77,0.012,402,3.943]],["title/modules/ZipkinExporterModule.html",[78,1.179,403,2.149]],["body/modules/ZipkinExporterModule.html",[3,0.38,4,0.38,5,0.281,6,0.329,17,0.03,26,0.451,28,0.329,33,0.38,55,1.491,75,0.02,76,0.024,77,0.02,80,1.491,84,2.117,85,2.48,86,1.877,92,1.608,93,1.736,94,1.608,95,1.608,96,1.877,97,0.794,165,3.285,167,3.285,168,2.695,169,2.412,403,3.572,404,3.285,405,3.572]],["title/injectables/ZipkinExporterService.html",[98,0.688,405,2.149]],["body/injectables/ZipkinExporterService.html",[3,0.291,4,0.291,5,0.215,6,0.408,9,0.964,11,0.662,12,1.653,13,0.982,16,1.317,17,0.03,26,0.438,28,0.252,33,0.291,35,1.438,36,0.91,49,1.438,52,1.438,55,1.142,62,1.581,65,2.63,66,0.982,67,1.713,70,0.557,75,0.015,76,0.02,77,0.015,97,0.92,98,0.964,99,1.438,104,2.798,105,1.532,109,2.564,110,2.028,111,1.603,113,1.694,118,1.142,121,1.848,123,1.694,126,1.848,127,1.438,128,1.438,129,1.33,130,2.516,134,2.028,169,1.848,170,2.245,172,3.632,175,3.423,176,2.272,177,1.848,394,3.012,397,2.88,404,4.071,405,3.632,406,4.603,407,3.431,408,5.195,409,4.603,410,4.603,411,5.195,412,3.431,413,3.431,414,3.431,415,3.431,416,3.431]],["title/changelog.html",[417,1.625,418,1.625,419,2.307]],["body/changelog.html",[5,0.261,10,1.286,17,0.015,18,1.454,19,1.345,20,0.828,21,1.454,25,1.665,38,0.66,42,1.747,47,0.828,53,1.138,55,0.768,60,1.497,68,0.894,70,0.676,75,0.01,76,0.015,77,0.01,101,1.363,142,3.498,151,1.575,153,1.712,171,1.712,212,1.868,233,1.935,246,3.692,267,3.253,289,3.83,321,3.057,378,2.544,386,3.4,419,2.911,420,2.306,421,2.306,422,1.691,423,2.306,424,2.306,425,2.306,426,2.306,427,3.498,428,6.245,429,3.468,430,3.498,431,5.979,432,5.979,433,2.306,434,2.306,435,4.636,436,2.306,437,6.047,438,2.306,439,2.306,440,4.971,441,2.306,442,2.306,443,2.306,444,2.306,445,4.172,446,3.498,447,5.223,448,4.168,449,4.636,450,2.306,451,1.935,452,2.306,453,2.306,454,2.306,455,2.306,456,4.168,457,3.468,458,1.935,459,2.306,460,2.306,461,2.306,462,1.935,463,2.306,464,1.935,465,2.306,466,2.306,467,2.306,468,2.306,469,2.306,470,2.306,471,2.306,472,2.306,473,2.306,474,2.306,475,2.306,476,2.306,477,2.306,478,2.306,479,2.306,480,2.306,481,4.971,482,2.306,483,2.306,484,2.306,485,2.306,486,2.306,487,4.636,488,2.306,489,2.306,490,2.306,491,2.306,492,2.306,493,2.306,494,2.306,495,3.468,496,2.306,497,4.168,498,2.306,499,2.306,500,2.306,501,2.306,502,2.306,503,1.691,504,2.306,505,4.636,506,2.306,507,4.168,508,4.636,509,3.468,510,3.498,511,3.468,512,3.468,513,3.468,514,3.468,515,4.636,516,2.306,517,3.468,518,2.306,519,2.306,520,2.306,521,2.306,522,4.168,523,2.306,524,2.306,525,2.306,526,2.306,527,2.306,528,3.468,529,2.306,530,2.306,531,2.306,532,2.306,533,2.306,534,2.306,535,2.306,536,1.691,537,5.419,538,2.306,539,2.306,540,2.306,541,2.306,542,1.935,543,2.306,544,2.306,545,2.306,546,2.306,547,2.306,548,2.306,549,2.306,550,2.306,551,1.691,552,2.306,553,2.306,554,2.306,555,2.306,556,1.935,557,2.306,558,2.306,559,2.306,560,2.306,561,3.468,562,3.468,563,2.306,564,2.306,565,2.306,566,2.911,567,3.468,568,3.468,569,2.306,570,2.306,571,2.306,572,4.636,573,2.306,574,2.306,575,2.306,576,2.306,577,2.306,578,3.468,579,2.306,580,2.306]],["title/coverage.html",[581,3.751]],["body/coverage.html",[0,1.273,1,1.231,5,0.199,6,0.486,7,2.761,8,2.761,16,0.908,17,0.029,34,1.331,38,1.538,48,1.331,56,1.331,59,1.331,62,0.842,66,0.908,70,0.515,73,1.231,75,0.014,76,0.019,77,0.014,81,2.328,82,2.077,87,1.877,90,1.331,98,1.273,100,3.036,124,1.331,139,2.328,140,2.328,141,2.077,144,1.877,145,1.877,150,2.463,151,1.983,152,2.077,154,2.077,163,2.328,164,1.877,166,2.077,168,1.567,170,3.266,176,1.567,179,2.328,182,3.202,187,3.202,193,2.328,204,2.328,205,2.857,206,2.328,207,2.328,208,2.077,212,1.71,213,2.077,215,2.664,216,2.664,384,2.328,385,2.077,404,2.328,405,2.077,581,2.664,582,2.664,583,3.174,584,3.174,585,6.576,586,5.967,587,3.174,588,3.174,589,4.991,590,4.366,591,5.376,592,5.376,593,3.174,594,3.174,595,3.174,596,3.174,597,3.174,598,3.174,599,2.664]],["title/dependencies.html",[600,2.307,601,2.582]],["body/dependencies.html",[17,0.03,28,0.305,29,1.609,47,1.49,55,1.381,75,0.018,76,0.023,77,0.018,86,1.74,88,2.453,125,3.408,153,2.048,278,3.483,281,3.043,318,3.043,394,3.408,427,5.01,445,3.483,601,2.715,602,4.15,603,6.44,604,4.15,605,5.208,606,4.15,607,4.15,608,4.15,609,5.208,610,4.371,611,4.15,612,4.15,613,4.15,614,4.15,615,4.15,616,4.15,617,4.371,618,4.15,619,3.483,620,4.15,621,4.15,622,4.15,623,4.15,624,4.15,625,4.15,626,4.15]],["title/index.html",[11,0.53,417,1.625,418,1.625]],["body/index.html",[0,0.499,1,0.923,3,0.488,10,1.69,13,1.016,14,0.708,15,1.887,17,0.029,18,0.998,19,1.183,20,1.526,21,0.601,22,1.096,23,1.279,24,0.708,25,1.096,26,0.29,28,0.105,29,1.647,30,0.998,31,0.809,32,1.081,33,0.202,34,0.601,35,0.998,36,0.631,37,0.998,38,1.288,39,1.651,40,1.386,41,1.386,42,2.113,45,1.175,46,2.524,47,2.021,48,0.601,49,1.781,50,1.175,51,1.93,52,0.998,55,1.498,56,0.601,57,0.708,59,1.279,60,1.995,61,1.081,62,0.809,63,1.175,64,1.081,65,0.652,73,1.183,75,0.017,76,0.01,77,0.006,78,1.857,79,0.939,84,1.377,88,2.329,92,0.515,93,0.923,94,0.855,95,0.515,97,0.254,101,2.979,102,3.726,116,0.939,117,1.998,123,0.708,125,2.324,129,0.923,138,1.997,149,1.558,151,0.652,153,2.222,158,1.204,162,0.939,164,1.407,171,2.659,177,1.282,178,0.939,181,1.204,189,1.204,192,0.939,212,2.537,217,1.204,219,1.204,225,1.204,241,1.204,246,1.804,251,3.566,252,2.238,256,2.561,258,1.998,265,1.204,266,1.204,267,3.832,268,1.204,272,1.204,277,1.052,281,2.238,309,1.052,318,1.052,363,1.997,371,1.204,372,2.981,378,2.889,381,1.998,383,2.78,386,1.052,394,2.324,403,0.939,417,1.407,418,1.407,422,1.746,430,1.998,446,1.204,451,1.998,458,1.998,462,1.204,510,1.204,536,3.876,551,2.238,556,1.204,599,1.998,600,1.204,601,3.198,610,1.204,617,1.998,619,2.561,627,3.051,628,3.051,629,1.435,630,4.501,631,1.435,632,1.435,633,1.435,634,1.998,635,2.381,636,2.381,637,3.552,638,3.552,639,2.381,640,2.381,641,4.501,642,3.051,643,1.435,644,1.435,645,3.051,646,3.94,647,1.998,648,2.381,649,2.381,650,5.171,651,5.171,652,4.711,653,1.435,654,1.435,655,2.381,656,2.381,657,2.381,658,2.381,659,2.381,660,1.435,661,1.435,662,1.435,663,1.435,664,1.204,665,2.561,666,2.381,667,1.435,668,1.435,669,1.435,670,1.435,671,1.435,672,1.435,673,1.435,674,1.435,675,1.204,676,3.051,677,1.435,678,1.435,679,1.435,680,1.435,681,1.435,682,1.204,683,2.381,684,1.435,685,1.204,686,1.435,687,1.435,688,1.435,689,1.435,690,1.435,691,1.435,692,1.204,693,1.435,694,1.435,695,1.435,696,1.435,697,1.435,698,1.435,699,2.381,700,1.435,701,2.381,702,2.381,703,1.435,704,1.435,705,1.435,706,1.435,707,1.435,708,1.435,709,2.381,710,2.381,711,0.939,712,1.435,713,1.435,714,1.435,715,1.435,716,1.435,717,1.435,718,1.204,719,1.204,720,1.435,721,3.94,722,3.94,723,3.94,724,5.04,725,3.94,726,3.306,727,3.94,728,3.94,729,3.94,730,1.435,731,1.435,732,1.435,733,1.435,734,1.435,735,1.435,736,1.435,737,1.435,738,1.435,739,1.435,740,1.435,741,1.435,742,1.435,743,1.435,744,2.381,745,1.435,746,1.435,747,1.435,748,1.435,749,1.435,750,1.435,751,1.435]],["title/license.html",[417,1.625,418,1.625,752,2.307]],["body/license.html",[2,0.499,4,0.433,5,0.282,9,0.269,10,0.397,17,0.012,25,0.462,26,0.095,32,0.584,36,0.748,37,0.539,42,2.03,75,0.01,76,0.01,77,0.006,95,0.462,97,0.228,101,0.76,102,0.841,103,1.079,111,0.397,184,0.943,205,2.169,246,1.284,248,1.823,259,3.373,289,2.068,309,0.943,321,2.068,503,0.943,536,0.943,551,4.157,566,1.823,582,2.367,634,1.079,647,1.823,664,1.079,675,1.079,685,1.079,692,1.079,711,0.841,719,3.109,726,1.823,752,5.172,753,3.315,754,2.82,755,1.286,756,1.286,757,1.286,758,4.683,759,5.212,760,3.315,761,3.704,762,1.286,763,5.396,764,4.843,765,1.286,766,1.286,767,1.286,768,4.843,769,5.212,770,4.019,771,4.843,772,2.172,773,1.286,774,3.704,775,1.286,776,1.286,777,1.286,778,3.315,779,1.286,780,4.683,781,3.315,782,2.172,783,2.172,784,1.286,785,2.82,786,2.172,787,1.286,788,1.286,789,5.609,790,3.315,791,2.172,792,1.286,793,2.172,794,1.286,795,1.286,796,1.286,797,1.286,798,1.286,799,1.286,800,1.286,801,2.82,802,1.286,803,2.82,804,2.172,805,5.212,806,1.286,807,1.286,808,4.019,809,4.683,810,3.315,811,2.172,812,2.82,813,4.019,814,1.286,815,1.286,816,1.286,817,1.286,818,1.286,819,2.172,820,1.286,821,1.286,822,1.286,823,6.185,824,2.82,825,2.172,826,1.286,827,4.683,828,2.172,829,1.286,830,3.704,831,2.172,832,1.286,833,5.609,834,1.286,835,1.286,836,1.286,837,1.286,838,1.286,839,1.286,840,2.172,841,2.82,842,1.286,843,1.286,844,1.286,845,1.286,846,1.286,847,3.315,848,3.704,849,1.286,850,2.172,851,3.315,852,2.172,853,1.286,854,3.704,855,2.172,856,1.286,857,1.286,858,2.82,859,1.286,860,1.286,861,1.286,862,1.286,863,2.172,864,1.079,865,1.286,866,1.286,867,2.82,868,1.286,869,1.286,870,2.82,871,1.286,872,1.286,873,1.286,874,3.315,875,4.843,876,1.286,877,1.286,878,2.172,879,4.497,880,2.82,881,3.315,882,2.172,883,2.172,884,2.172,885,2.172,886,2.82,887,2.172,888,2.82,889,2.172,890,2.172,891,2.172,892,2.172,893,1.079,894,2.172,895,1.286,896,1.286,897,3.704,898,4.279,899,2.82,900,2.172,901,1.286,902,1.286,903,2.172,904,2.172,905,1.286,906,1.286,907,2.82,908,2.172,909,1.286,910,1.286,911,1.286,912,2.82,913,1.286,914,1.286,915,1.286,916,2.172,917,2.172,918,1.286,919,1.286,920,1.286,921,1.286,922,1.286,923,1.286,924,1.286,925,2.172,926,1.286,927,1.286,928,1.286,929,1.286,930,1.286,931,1.286,932,1.286,933,1.286,934,2.82,935,1.286,936,2.82,937,1.286,938,1.286,939,1.286,940,1.286,941,4.497,942,1.286,943,1.286,944,1.286,945,1.286,946,1.286,947,3.315,948,2.172,949,3.315,950,1.286,951,1.286,952,1.286,953,1.286,954,1.286,955,2.82,956,1.286,957,1.286,958,2.172,959,2.172,960,1.286,961,1.286,962,1.286,963,2.172,964,1.286,965,1.286,966,3.704,967,1.286,968,1.286,969,1.286,970,1.286,971,1.286,972,1.286,973,1.286,974,2.82,975,3.315,976,1.286,977,1.286,978,1.286,979,1.286,980,1.286,981,1.286,982,1.286,983,1.286,984,1.286,985,1.286,986,1.286,987,2.172,988,1.286,989,1.286,990,2.172,991,1.286,992,1.286,993,3.315,994,1.286,995,1.286,996,1.286,997,1.286,998,1.286,999,1.286,1000,1.286,1001,3.315,1002,2.82,1003,2.82,1004,2.82,1005,2.172,1006,2.172,1007,2.82,1008,2.172,1009,2.172,1010,2.172,1011,2.172,1012,1.286,1013,1.286,1014,1.286,1015,1.286,1016,1.286,1017,1.286,1018,1.286,1019,1.286,1020,1.286,1021,2.172,1022,1.286,1023,1.286,1024,1.286,1025,1.286,1026,3.704,1027,1.286,1028,1.286,1029,1.286,1030,1.286,1031,1.286,1032,1.286,1033,1.286,1034,1.286,1035,3.704,1036,1.286,1037,1.286,1038,1.286,1039,1.286,1040,1.286,1041,1.079,1042,1.286,1043,1.286,1044,1.286,1045,1.286,1046,1.286,1047,1.286,1048,1.286,1049,1.286,1050,1.286,1051,1.286,1052,1.286,1053,1.286,1054,2.82,1055,1.286,1056,1.286,1057,1.286,1058,1.286,1059,1.286,1060,2.172,1061,1.286,1062,1.286,1063,1.286,1064,1.286,1065,1.286,1066,1.286,1067,1.286,1068,1.286,1069,1.286,1070,1.286,1071,1.286,1072,1.286,1073,1.286,1074,1.286,1075,1.286,1076,2.172,1077,1.286,1078,1.286,1079,1.286,1080,2.172,1081,2.172,1082,1.286,1083,1.286,1084,1.286,1085,1.286,1086,1.286,1087,1.286,1088,1.286,1089,1.286,1090,1.286,1091,1.286,1092,1.286,1093,1.286,1094,1.286,1095,1.286,1096,1.286,1097,1.286,1098,1.286,1099,1.286,1100,1.286,1101,1.286,1102,1.286]],["title/modules.html",[80,1.487]],["body/modules.html",[17,0.025,75,0.021,76,0.025,77,0.021,79,3.056,80,1.555,138,3.056,162,3.056,178,3.056,192,3.056,203,3.425,363,3.056,383,3.056,403,3.056,711,4.335,1103,6.626,1104,6.626]],["title/overview.html",[1105,3.751]],["body/overview.html",[2,1.923,17,0.026,75,0.022,76,0.026,77,0.022,78,1.781,80,1.65,92,1.781,94,1.781,99,2.079,375,4.162,464,4.162,503,3.637,601,3.245,682,4.162,1041,4.162,1105,4.162,1106,4.959,1107,5.802,1108,5.802]],["title/todo.html",[417,1.625,418,1.625,1109,2.307]],["body/todo.html",[10,1.818,17,0.028,46,2.48,47,1.608,55,1.96,75,0.02,76,0.024,77,0.02,101,2.648,102,3.854,116,3.572,151,2.034,153,2.907,171,2.695,212,2.412,246,3.78,267,2.93,422,3.285,542,3.759,665,3.759,711,3.572,718,5.146,864,3.759,893,3.759,1109,4.943,1110,4.479,1111,4.479,1112,4.479,1113,4.479]],["title/miscellaneous/variables.html",[1114,2.307,1115,3.312]],["body/miscellaneous/variables.html",[6,0.43,7,1.999,8,2.655,11,0.849,17,0.029,22,2.189,23,2.555,29,2.094,60,1.58,66,1.672,67,1.358,68,2.363,70,0.989,71,2.172,72,2.172,73,2.094,74,2.172,75,0.019,76,0.024,77,0.019,90,2.264,168,2.666,171,2.172,182,3.228,186,3.694,187,3.228,191,3.694,1114,3.694,1115,3.694,1116,5.402,1117,4.401,1118,4.401]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":117,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{}}}],["0.10.0",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["0.10.1",{"_index":495,"title":{},"body":{"changelog.html":{}}}],["0.10.2",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["0.10.3",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":445,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.13.0",{"_index":427,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.4.0",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["0.7",{"_index":654,"title":{},"body":{"index.html":{}}}],["0.8.2",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["0.8.3",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["0319eee",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["042898e",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["06cb6de",{"_index":463,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["0885b40",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["09dd1bb",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["0a2ccc5",{"_index":466,"title":{},"body":{"changelog.html":{}}}],["0f35b5c",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":25,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["1.19.0",{"_index":614,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":430,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["10.0.3",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["10.1.2",{"_index":603,"title":{},"body":{"dependencies.html":{}}}],["10.2.1",{"_index":605,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":593,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["12.0.2",{"_index":746,"title":{},"body":{"index.html":{}}}],["12/typescript",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["1229a9d",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["1a1299b",{"_index":475,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["2.0",{"_index":754,"title":{},"body":{"license.html":{}}}],["2.0.1",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["2004",{"_index":756,"title":{},"body":{"license.html":{}}}],["2020",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":446,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3.6.0",{"_index":556,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["3/3",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["3516488",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["351ce3e",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["371886a",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":520,"title":{},"body":{"changelog.html":{}}}],["4.1.9",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["412d2fd",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["47aba25",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["47c249b",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["4a000b9",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["4bddf3a",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["4d886fb",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["4d9a061",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":670,"title":{},"body":{"index.html":{}}}],["5.3.0",{"_index":616,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":796,"title":{},"body":{"license.html":{}}}],["563071d",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["6.6.3",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["613c16d",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["62e0d77",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["6e5c19a",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["735b05d",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["7a5b07e",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["7b4c031",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["7bab017",{"_index":469,"title":{},"body":{"changelog.html":{}}}],["7f7c66a",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1108,"title":{},"body":{"overview.html":{}}}],["80d2ada",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["80f7bf8",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["83fc1f3",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["8b1b7b5",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["8d45a2c",{"_index":516,"title":{},"body":{"changelog.html":{}}}],["8e268a9",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["8faa4c9",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":503,"title":{},"body":{"changelog.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":632,"title":{},"body":{"index.html":{}}}],["9/node",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["92330f9",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["94e0b44",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["95167b9",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["96da55f",{"_index":560,"title":{},"body":{"changelog.html":{}}}],["a1746bf",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["a517094",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":979,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1057,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1054,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":748,"title":{},"body":{"index.html":{}}}],["act",{"_index":1064,"title":{},"body":{"license.html":{}}}],["acting",{"_index":776,"title":{},"body":{"license.html":{}}}],["acts",{"_index":1033,"title":{},"body":{"license.html":{}}}],["ad03334",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":246,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["addendum",{"_index":965,"title":{},"body":{"license.html":{}}}],["adding",{"_index":698,"title":{},"body":{"index.html":{}}}],["additional",{"_index":966,"title":{},"body":{"license.html":{}}}],["additions",{"_index":849,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1052,"title":{},"body":{"license.html":{}}}],["again",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":917,"title":{},"body":{"license.html":{}}}],["agent",{"_index":462,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["agree",{"_index":1067,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1004,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":984,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":922,"title":{},"body":{"license.html":{}}}],["allowedcommonjsdependencies",{"_index":734,"title":{},"body":{"index.html":{}}}],["alone",{"_index":913,"title":{},"body":{"license.html":{}}}],["along",{"_index":956,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":964,"title":{},"body":{"license.html":{}}}],["already",{"_index":379,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["althought",{"_index":700,"title":{},"body":{"index.html":{}}}],["always",{"_index":235,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysoffsampler",{"_index":283,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["alwaysonsampler",{"_index":282,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ambient",{"_index":750,"title":{},"body":{"index.html":{}}}],["amd",{"_index":725,"title":{},"body":{"index.html":{}}}],["and(b",{"_index":937,"title":{},"body":{"license.html":{}}}],["and(c",{"_index":944,"title":{},"body":{"license.html":{}}}],["and(d",{"_index":950,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1061,"title":{},"body":{"license.html":{}}}],["angular",{"_index":267,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["angular.json",{"_index":732,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":602,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":604,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":86,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":277,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["angular/compiler",{"_index":606,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":607,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":608,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":609,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":612,"title":{},"body":{"dependencies.html":{}}}],["annotations",{"_index":837,"title":{},"body":{"license.html":{}}}],["apache",{"_index":753,"title":{},"body":{"license.html":{}}}],["api",{"_index":198,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api#tracing",{"_index":653,"title":{},"body":{"index.html":{}}}],["api.defaulttextmapsetter",{"_index":353,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["api.propagation.inject",{"_index":352,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["app",{"_index":646,"title":{},"body":{"index.html":{}}}],["app.component",{"_index":677,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":668,"title":{},"body":{"index.html":{}}}],["app/collector/docker",{"_index":713,"title":{},"body":{"index.html":{}}}],["appand",{"_index":704,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":676,"title":{},"body":{"index.html":{}}}],["appear",{"_index":961,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":831,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1002,"title":{},"body":{"license.html":{}}}],["application",{"_index":630,"title":{},"body":{"index.html":{}}}],["applies",{"_index":906,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1076,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":381,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["appropriate",{"_index":1085,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1019,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1093,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1040,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":1073,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1024,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1022,"title":{},"body":{"license.html":{}}}],["async",{"_index":662,"title":{},"body":{"index.html":{}}}],["attach",{"_index":1077,"title":{},"body":{"license.html":{}}}],["attached",{"_index":829,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":30,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["attribution",{"_index":947,"title":{},"body":{"license.html":{}}}],["authorized",{"_index":772,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":824,"title":{},"body":{"license.html":{}}}],["available",{"_index":711,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"todo.html":{}}}],["b112065",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["b3",{"_index":88,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["b3configuration",{"_index":644,"title":{},"body":{"index.html":{}}}],["b3injectencoding",{"_index":119,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.multi_header",{"_index":136,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3injectencoding.single_header",{"_index":135,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagator",{"_index":21,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["b3propagator(this.b3propagatorconfig",{"_index":137,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b3propagatorconfig",{"_index":1,"title":{"interfaces/B3PropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["b3propagatormodule",{"_index":79,"title":{"modules/B3PropagatorModule.html":{}},"body":{"modules/B3PropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["b3propagatorservice",{"_index":87,"title":{"injectables/B3PropagatorService.html":{}},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["b3propagatorservice.defineb3encoding(config.b3propagatorconfig?.multiheader",{"_index":133,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["b63afc1",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["b679883",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["b6dcaf7",{"_index":472,"title":{},"body":{"changelog.html":{}}}],["bailouts",{"_index":728,"title":{},"body":{"index.html":{}}}],["base",{"_index":736,"title":{},"body":{"index.html":{}}}],["based",{"_index":692,"title":{},"body":{"index.html":{},"license.html":{}}}],["basis",{"_index":1006,"title":{},"body":{"license.html":{}}}],["batchspanexporter(async",{"_index":43,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["batchspanprocessor",{"_index":256,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["batchspanprocessor(spanexporter",{"_index":361,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["bca88a0",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["bd69598",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":854,"title":{},"body":{"license.html":{}}}],["below",{"_index":832,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":800,"title":{},"body":{"license.html":{}}}],["between",{"_index":659,"title":{},"body":{"index.html":{}}}],["bfc26ae",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":846,"title":{},"body":{"license.html":{}}}],["body",{"_index":318,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["boilerplate",{"_index":1078,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":40,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["boolean)send",{"_index":660,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":682,"title":{},"body":{"index.html":{},"overview.html":{}}}],["brackets",{"_index":1081,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1104,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":610,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["bug",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["c6368c9",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["c71ba73",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":696,"title":{},"body":{"index.html":{}}}],["carrier",{"_index":351,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carrier[key",{"_index":355,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["carry",{"_index":939,"title":{},"body":{"license.html":{}}}],["cause",{"_index":726,"title":{},"body":{"index.html":{},"license.html":{}}}],["changed",{"_index":943,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":419,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":421,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1039,"title":{},"body":{"license.html":{}}}],["charge",{"_index":888,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1055,"title":{},"body":{"license.html":{}}}],["claim",{"_index":919,"title":{},"body":{"license.html":{}}}],["claims",{"_index":908,"title":{},"body":{"license.html":{}}}],["class",{"_index":97,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["code",{"_index":321,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["collector",{"_index":47,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["collector/build/src/platform/browser",{"_index":730,"title":{},"body":{"index.html":{}}}],["collectorexporter",{"_index":389,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectorexporterconfigbase",{"_index":391,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter",{"_index":392,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortraceexporter(this.otelcolconfig",{"_index":401,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes",{"_index":393,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["collectortypes.collectorexporterconfigbase",{"_index":390,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["combination",{"_index":914,"title":{},"body":{"license.html":{}}}],["command",{"_index":702,"title":{},"body":{"index.html":{}}}],["comment",{"_index":1086,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1049,"title":{},"body":{"license.html":{}}}],["commit",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":32,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["commoncollectorconfig",{"_index":34,"title":{"interfaces/CommonCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["commonconfig",{"_index":63,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["commonjs",{"_index":724,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":85,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["communication",{"_index":858,"title":{},"body":{"license.html":{}}}],["compatible",{"_index":72,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["compiled",{"_index":818,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1096,"title":{},"body":{"license.html":{}}}],["complies",{"_index":972,"title":{},"body":{"license.html":{}}}],["compose",{"_index":710,"title":{},"body":{"index.html":{}}}],["compose.yaml",{"_index":714,"title":{},"body":{"index.html":{}}}],["composite",{"_index":142,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"changelog.html":{}}}],["compositepropagator",{"_index":148,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["compositepropagatormodule",{"_index":138,"title":{"modules/CompositePropagatorModule.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["compositepropagatorservice",{"_index":141,"title":{"injectables/CompositePropagatorService.html":{}},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["computer",{"_index":1046,"title":{},"body":{"license.html":{}}}],["concurrently",{"_index":615,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":759,"title":{},"body":{"license.html":{}}}],["config",{"_index":67,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["config.commonconfig.servicename",{"_index":397,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["config.jaegerpropagatorconfig?.customheader",{"_index":200,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["config.otelcolconfig?.attributes",{"_index":400,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.headers",{"_index":399,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.otelcolconfig?.url",{"_index":398,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["config.ts",{"_index":8,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.zipkinconfig?.headers",{"_index":415,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["config.zipkinconfig?.url",{"_index":414,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["configurable",{"_index":656,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":10,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["configuration/opentelemetry",{"_index":126,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["configure",{"_index":645,"title":{},"body":{"index.html":{}}}],["configured",{"_index":409,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["consequential",{"_index":1038,"title":{},"body":{"license.html":{}}}],["conserve",{"_index":247,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consistent",{"_index":1063,"title":{},"body":{"license.html":{}}}],["console",{"_index":39,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/ConsoleSpanExporterModule.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["consolespanexporter",{"_index":174,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["consolespanexportermodule",{"_index":162,"title":{"modules/ConsoleSpanExporterModule.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"index.html":{},"modules.html":{}}}],["consolespanexporterservice",{"_index":166,"title":{"injectables/ConsoleSpanExporterService.html":{}},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["conspicuously",{"_index":871,"title":{},"body":{"license.html":{}}}],["const",{"_index":69,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["constitutes",{"_index":923,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":109,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(@inject(opentelemetryinjectconfig",{"_index":130,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/ZipkinExporterService.html":{}}}],["constructor(b3propagatorservice",{"_index":143,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["constructor(config",{"_index":110,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["construed",{"_index":967,"title":{},"body":{"license.html":{}}}],["contained",{"_index":953,"title":{},"body":{"license.html":{}}}],["content",{"_index":999,"title":{},"body":{"license.html":{}}}],["contents",{"_index":634,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":151,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["contextmanager",{"_index":218,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["contract",{"_index":791,"title":{},"body":{"license.html":{}}}],["contrib/tree/master/propagators/opentelemetry",{"_index":666,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":848,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":912,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":974,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":875,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":924,"title":{},"body":{"license.html":{}}}],["control",{"_index":778,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":779,"title":{},"body":{"license.html":{}}}],["conversions",{"_index":820,"title":{},"body":{"license.html":{}}}],["copies",{"_index":931,"title":{},"body":{"license.html":{}}}],["copy",{"_index":936,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":769,"title":{},"body":{"license.html":{}}}],["core",{"_index":671,"title":{},"body":{"index.html":{}}}],["correlation",{"_index":1112,"title":{},"body":{"todo.html":{}}}],["counterclaim",{"_index":920,"title":{},"body":{"license.html":{}}}],["cours",{"_index":545,"title":{},"body":{"changelog.html":{}}}],["coverage",{"_index":581,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":694,"title":{},"body":{"index.html":{}}}],["cross",{"_index":918,"title":{},"body":{"license.html":{}}}],["current",{"_index":268,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["custom",{"_index":51,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["customary",{"_index":995,"title":{},"body":{"license.html":{}}}],["customheader",{"_index":61,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["cypress",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["d2ecbb8",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1035,"title":{},"body":{"license.html":{}}}],["date",{"_index":928,"title":{},"body":{"license.html":{}}}],["dd7a0e5",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["dda5d54",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["de09c4d",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["de1f141",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["debug",{"_index":688,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["declared",{"_index":749,"title":{},"body":{"index.html":{}}}],["default",{"_index":22,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defend",{"_index":1069,"title":{},"body":{"license.html":{}}}],["define",{"_index":54,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["defineb3encoding",{"_index":107,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defineb3encoding(value",{"_index":114,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["defined",{"_index":111,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["defineprobabilitysampler",{"_index":220,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["defineprobabilitysampler(sampleconfig",{"_index":230,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["definition",{"_index":782,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":762,"title":{},"body":{"license.html":{}}}],["del",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["delete",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":1030,"title":{},"body":{"license.html":{}}}],["dependence",{"_index":451,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":601,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependenciesadd",{"_index":731,"title":{},"body":{"index.html":{}}}],["depends",{"_index":723,"title":{},"body":{"index.html":{}}}],["deploy",{"_index":629,"title":{},"body":{"index.html":{}}}],["derivative",{"_index":833,"title":{},"body":{"license.html":{}}}],["derived",{"_index":834,"title":{},"body":{"license.html":{}}}],["describing",{"_index":996,"title":{},"body":{"license.html":{}}}],["description",{"_index":9,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["designated",{"_index":873,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1018,"title":{},"body":{"license.html":{}}}],["dgo",{"_index":716,"title":{},"body":{"index.html":{}}}],["different",{"_index":971,"title":{},"body":{"license.html":{}}}],["dir",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":785,"title":{},"body":{"license.html":{}}}],["direction",{"_index":787,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1000,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":868,"title":{},"body":{"license.html":{}}}],["display",{"_index":647,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribute",{"_index":897,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":955,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":761,"title":{},"body":{"license.html":{}}}],["doc",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":709,"title":{},"body":{"index.html":{}}}],["docs",{"_index":529,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":767,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":582,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["documented",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["don't",{"_index":1084,"title":{},"body":{"license.html":{}}}],["done",{"_index":1113,"title":{},"body":{"todo.html":{}}}],["downgrade",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":611,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["e5eb09e",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["e6073bf",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":881,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1091,"title":{},"body":{"license.html":{}}}],["ec28651",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["editorial",{"_index":835,"title":{},"body":{"license.html":{}}}],["elaborations",{"_index":838,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":855,"title":{},"body":{"license.html":{}}}],["en",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["enclosed",{"_index":1080,"title":{},"body":{"license.html":{}}}],["end",{"_index":1075,"title":{},"body":{"license.html":{}}}],["entities",{"_index":777,"title":{},"body":{"license.html":{}}}],["entity",{"_index":771,"title":{},"body":{"license.html":{}}}],["environment",{"_index":678,"title":{},"body":{"index.html":{}}}],["environments/environment",{"_index":679,"title":{},"body":{"index.html":{}}}],["error",{"_index":378,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"changelog.html":{},"index.html":{}}}],["even",{"_index":1051,"title":{},"body":{"license.html":{}}}],["event",{"_index":309,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"license.html":{}}}],["event.body",{"_index":315,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.error",{"_index":328,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.message",{"_index":326,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.name",{"_index":324,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.status",{"_index":312,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["event.statustext",{"_index":314,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["example",{"_index":536,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["except",{"_index":899,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":870,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":887,"title":{},"body":{"license.html":{}}}],["executed",{"_index":985,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1025,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":802,"title":{},"body":{"license.html":{}}}],["existing",{"_index":684,"title":{},"body":{"index.html":{}}}],["explicitly",{"_index":976,"title":{},"body":{"license.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["exported",{"_index":741,"title":{},"body":{"index.html":{}}}],["exporter",{"_index":171,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["exporter.interface",{"_index":169,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{}}}],["exporter.module.ts",{"_index":165,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service",{"_index":167,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["exporter.service.ts",{"_index":170,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["exporter.service.ts:15",{"_index":406,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:17",{"_index":173,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{}}}],["exporter.service.ts:25",{"_index":387,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporter.service.ts:33",{"_index":407,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporter.service.ts:49",{"_index":388,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["exporterconfig",{"_index":411,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["exporters",{"_index":669,"title":{},"body":{"index.html":{}}}],["exporterservice",{"_index":226,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["exports",{"_index":375,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"overview.html":{}}}],["express",{"_index":1009,"title":{},"body":{"license.html":{}}}],["f",{"_index":712,"title":{},"body":{"index.html":{}}}],["f195a50",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["f206c5e",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["fad044a",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["failure",{"_index":1047,"title":{},"body":{"license.html":{}}}],["fake",{"_index":673,"title":{},"body":{"index.html":{}}}],["false",{"_index":648,"title":{},"body":{"index.html":{}}}],["features",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["fee",{"_index":1056,"title":{},"body":{"license.html":{}}}],["ff373c0",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":410,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["fields",{"_index":1079,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":794,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":929,"title":{},"body":{"license.html":{}}}],["files",{"_index":812,"title":{},"body":{"license.html":{}}}],["finalize",{"_index":287,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["fitness",{"_index":1014,"title":{},"body":{"license.html":{}}}],["fix",{"_index":737,"title":{},"body":{"index.html":{}}}],["fixes",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":934,"title":{},"body":{"license.html":{}}}],["form",{"_index":805,"title":{},"body":{"license.html":{}}}],["format",{"_index":1088,"title":{},"body":{"license.html":{}}}],["forroot",{"_index":366,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["forroot(config",{"_index":367,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["free",{"_index":890,"title":{},"body":{"license.html":{}}}],["functions",{"_index":686,"title":{},"body":{"index.html":{}}}],["generally",{"_index":667,"title":{},"body":{"index.html":{}}}],["generated",{"_index":819,"title":{},"body":{"license.html":{}}}],["getexporter",{"_index":172,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["getpropagator",{"_index":108,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["getting",{"_index":417,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["gettracer(name",{"_index":333,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["github",{"_index":1111,"title":{},"body":{"todo.html":{}}}],["give",{"_index":184,"title":{},"body":{"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"license.html":{}}}],["global",{"_index":636,"title":{},"body":{"index.html":{}}}],["goodwill",{"_index":1044,"title":{},"body":{"license.html":{}}}],["governing",{"_index":1101,"title":{},"body":{"license.html":{}}}],["grant",{"_index":880,"title":{},"body":{"license.html":{}}}],["granted",{"_index":804,"title":{},"body":{"license.html":{}}}],["granting",{"_index":773,"title":{},"body":{"license.html":{}}}],["grants",{"_index":883,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1103,"title":{},"body":{"modules.html":{}}}],["grossly",{"_index":1031,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["harmless",{"_index":1071,"title":{},"body":{"license.html":{}}}],["header",{"_index":20,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["headers",{"_index":52,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["here",{"_index":718,"title":{},"body":{"index.html":{},"todo.html":{}}}],["hereby",{"_index":882,"title":{},"body":{"license.html":{}}}],["herein",{"_index":981,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["hold",{"_index":1070,"title":{},"body":{"license.html":{}}}],["http",{"_index":150,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["http.host",{"_index":340,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor",{"_index":374,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["http.interceptor.ts",{"_index":216,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["http.interceptor.ts:133",{"_index":240,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:162",{"_index":245,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:183",{"_index":250,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:197",{"_index":255,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:213",{"_index":232,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:45",{"_index":273,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:49",{"_index":228,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.interceptor.ts:83",{"_index":263,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.method",{"_index":336,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.scheme",{"_index":342,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_code",{"_index":311,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.status_text",{"_index":313,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.target",{"_index":344,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.url",{"_index":338,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http.user_agent",{"_index":347,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["http://localhost:16686",{"_index":717,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":706,"title":{},"body":{"index.html":{}}}],["http://localhost:55681/v1/trace",{"_index":50,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://localhost:9411/api/v2/spans",{"_index":57,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["http://www.apache.org/licenses",{"_index":757,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1098,"title":{},"body":{"license.html":{}}}],["http_interceptors",{"_index":371,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httpclientmodule",{"_index":372,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["httperrorresponse",{"_index":276,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpevent",{"_index":274,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httphandler",{"_index":262,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpinterceptor",{"_index":266,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["httprequest",{"_index":239,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["httpresponse",{"_index":275,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["https://angular.io/guide/build#configuring",{"_index":729,"title":{},"body":{"index.html":{}}}],["https://github.com/open",{"_index":650,"title":{},"body":{"index.html":{}}}],["https://jufab.github.io/opentelemetry",{"_index":633,"title":{},"body":{"index.html":{}}}],["httptextpropagator",{"_index":190,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["httptracecontext",{"_index":181,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{},"index.html":{}}}],["httptracecontextpropagatormodule",{"_index":178,"title":{"modules/HttpTraceContextPropagatorModule.html":{}},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["httptracecontextpropagatorservice",{"_index":144,"title":{"injectables/HttpTraceContextPropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["id",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["identification",{"_index":1092,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":583,"title":{},"body":{"coverage.html":{}}}],["identifying",{"_index":1083,"title":{},"body":{"license.html":{}}}],["iexporter",{"_index":176,"title":{"interfaces/IExporter.html":{}},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["ii",{"_index":792,"title":{},"body":{"license.html":{}}}],["iii",{"_index":799,"title":{},"body":{"license.html":{}}}],["implement",{"_index":693,"title":{},"body":{"index.html":{}}}],["implementation",{"_index":189,"title":{},"body":{"interfaces/IPropagator.html":{},"index.html":{}}}],["implements",{"_index":129,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["implied",{"_index":1010,"title":{},"body":{"license.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["imports",{"_index":93,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["improving",{"_index":869,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1042,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1037,"title":{},"body":{"license.html":{}}}],["include",{"_index":841,"title":{},"body":{"license.html":{}}}],["included",{"_index":828,"title":{},"body":{"license.html":{}}}],["includes",{"_index":951,"title":{},"body":{"license.html":{}}}],["including",{"_index":809,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":852,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":878,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1072,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1068,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1059,"title":{},"body":{"license.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":826,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":786,"title":{},"body":{"license.html":{}}}],["individual",{"_index":801,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["information",{"_index":103,"title":{},"body":{"injectables/B3PropagatorService.html":{},"license.html":{}}}],["informational",{"_index":962,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":911,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":925,"title":{},"body":{"license.html":{}}}],["initialise",{"_index":241,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["initspan",{"_index":221,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["initspan(request",{"_index":238,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject",{"_index":123,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["inject(b3propagatorservice",{"_index":155,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(httptracecontextpropagatorservice",{"_index":156,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(jaegerhttptracepropagatorservice",{"_index":157,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["inject(opentelemetryinjectconfig",{"_index":293,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_exporter",{"_index":294,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["inject(otelcol_logger",{"_index":395,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["inject(otelcol_propagator",{"_index":295,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectable",{"_index":98,"title":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["injectables",{"_index":99,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"overview.html":{}}}],["injectcontextandheader",{"_index":222,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectcontextandheader(request",{"_index":244,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injected",{"_index":229,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["injectencoding",{"_index":132,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["injection",{"_index":68,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken",{"_index":27,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["injectiontoken('opentelemetry.config",{"_index":71,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.exporter",{"_index":186,"title":{},"body":{"interfaces/IExporter.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.logger",{"_index":74,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('otelcol.propagator",{"_index":191,"title":{},"body":{"interfaces/IPropagator.html":{},"miscellaneous/variables.html":{}}}],["inmplementation",{"_index":185,"title":{},"body":{"interfaces/IExporter.html":{}}}],["insert",{"_index":251,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["insertconsolespanexporter",{"_index":223,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertconsolespanexporter(console",{"_index":249,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode",{"_index":224,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["insertspanprocessorproductionmode(production",{"_index":254,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["install",{"_index":643,"title":{},"body":{"index.html":{}}}],["installation",{"_index":635,"title":{},"body":{"index.html":{}}}],["institute",{"_index":915,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":850,"title":{},"body":{"license.html":{}}}],["intercept",{"_index":225,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["intercept(request",{"_index":260,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["intercepted",{"_index":243,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interceptor",{"_index":212,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"todo.html":{}}}],["interceptor.js",{"_index":722,"title":{},"body":{"index.html":{}}}],["interceptor.module.ts",{"_index":365,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor.module.ts:30",{"_index":368,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/opentelemetry",{"_index":373,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/configuration/opentelemetry",{"_index":7,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/interceptor/opentelemetry",{"_index":215,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["interceptor/src/lib/opentelemetry",{"_index":364,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["interceptor/src/lib/services/exporter/console/console",{"_index":163,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts",{"_index":182,"title":{},"body":{"interfaces/IExporter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/exporter/exporter.interface.ts:12",{"_index":183,"title":{},"body":{"interfaces/IExporter.html":{}}}],["interceptor/src/lib/services/exporter/otelcol/otelcol",{"_index":384,"title":{},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/exporter/zipkin/zipkin",{"_index":404,"title":{},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/b3",{"_index":81,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/composite",{"_index":139,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/http",{"_index":179,"title":{},"body":{"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/jaeger",{"_index":193,"title":{},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/noop",{"_index":204,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts",{"_index":187,"title":{},"body":{"interfaces/IPropagator.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor/src/lib/services/propagator/propagator.interface.ts:12",{"_index":188,"title":{},"body":{"interfaces/IPropagator.html":{}}}],["interceptors",{"_index":214,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"license.html":{},"overview.html":{}}}],["ipropagator",{"_index":124,"title":{"interfaces/IPropagator.html":{}},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{}}}],["irrevocable",{"_index":891,"title":{},"body":{"license.html":{}}}],["issue",{"_index":864,"title":{},"body":{"license.html":{},"todo.html":{}}}],["it's",{"_index":116,"title":{},"body":{"injectables/B3PropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{},"todo.html":{}}}],["jaeger",{"_index":153,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["jaegerhttppropagator",{"_index":674,"title":{},"body":{"index.html":{}}}],["jaegerhttptracepropagator",{"_index":195,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagator(this.customheader",{"_index":201,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["jaegerhttptracepropagatormodule",{"_index":192,"title":{"modules/JaegerHttpTracePropagatorModule.html":{}},"body":{"modules/JaegerHttpTracePropagatorModule.html":{},"index.html":{},"modules.html":{}}}],["jaegerhttptracepropagatorservice",{"_index":145,"title":{"injectables/JaegerHttpTracePropagatorService.html":{}},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["jaegerpropagator",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["jaegerpropagatorconfig",{"_index":59,"title":{"interfaces/JaegerPropagatorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["january",{"_index":755,"title":{},"body":{"license.html":{}}}],["jest",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":619,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js/tree/master/packages/opentelemetry",{"_index":652,"title":{},"body":{"index.html":{}}}],["json.stringify(event.body",{"_index":319,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["jsonp",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["jufab/opentelemetry",{"_index":627,"title":{},"body":{"index.html":{}}}],["key",{"_index":58,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["kind",{"_index":1008,"title":{},"body":{"license.html":{}}}],["language",{"_index":1100,"title":{},"body":{"license.html":{}}}],["law",{"_index":1003,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":921,"title":{},"body":{"license.html":{}}}],["legal",{"_index":774,"title":{},"body":{"license.html":{}}}],["legend",{"_index":1106,"title":{},"body":{"overview.html":{}}}],["liability",{"_index":1026,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1034,"title":{},"body":{"license.html":{}}}],["library",{"_index":628,"title":{},"body":{"index.html":{}}}],["licensable",{"_index":909,"title":{},"body":{"license.html":{}}}],["license",{"_index":752,"title":{"license.html":{}},"body":{"license.html":{}}}],["license.you",{"_index":969,"title":{},"body":{"license.html":{}}}],["licensed",{"_index":1095,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":926,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":768,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1011,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1102,"title":{},"body":{"license.html":{}}}],["limited",{"_index":810,"title":{},"body":{"license.html":{}}}],["link",{"_index":845,"title":{},"body":{"license.html":{}}}],["list",{"_index":665,"title":{},"body":{"index.html":{},"todo.html":{}}}],["lists",{"_index":862,"title":{},"body":{"license.html":{}}}],["literal",{"_index":402,"title":{},"body":{"interfaces/ZipkinCollectorConfig.html":{}}}],["litigation",{"_index":916,"title":{},"body":{"license.html":{}}}],["loaded",{"_index":380,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["logger",{"_index":29,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["loggermodule",{"_index":689,"title":{},"body":{"index.html":{}}}],["loggermodule.forroot(environment.loggerconfig",{"_index":690,"title":{},"body":{"index.html":{}}}],["logging",{"_index":458,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["loss",{"_index":1043,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1050,"title":{},"body":{"license.html":{}}}],["made",{"_index":825,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":861,"title":{},"body":{"license.html":{}}}],["make",{"_index":902,"title":{},"body":{"license.html":{}}}],["making",{"_index":807,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1048,"title":{},"body":{"license.html":{}}}],["managed",{"_index":866,"title":{},"body":{"license.html":{}}}],["management",{"_index":788,"title":{},"body":{"license.html":{}}}],["manager",{"_index":271,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["map",{"_index":207,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["marked",{"_index":872,"title":{},"body":{"license.html":{}}}],["marks",{"_index":991,"title":{},"body":{"license.html":{}}}],["matching",{"_index":76,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["mean",{"_index":764,"title":{},"body":{"license.html":{}}}],["means",{"_index":783,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":815,"title":{},"body":{"license.html":{}}}],["media",{"_index":821,"title":{},"body":{"license.html":{}}}],["medium",{"_index":932,"title":{},"body":{"license.html":{}}}],["meet",{"_index":933,"title":{},"body":{"license.html":{}}}],["member",{"_index":742,"title":{},"body":{"index.html":{}}}],["merchantability",{"_index":1013,"title":{},"body":{"license.html":{}}}],["merely",{"_index":844,"title":{},"body":{"license.html":{}}}],["merge",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":325,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["method",{"_index":265,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["methods",{"_index":105,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["miscellaneous",{"_index":1114,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":257,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["modifications",{"_index":808,"title":{},"body":{"license.html":{}}}],["modified",{"_index":938,"title":{},"body":{"license.html":{}}}],["modify",{"_index":963,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":968,"title":{},"body":{"license.html":{}}}],["module",{"_index":78,"title":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":369,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["more",{"_index":102,"title":{},"body":{"injectables/B3PropagatorService.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["multi",{"_index":19,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["multiheader",{"_index":14,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["name",{"_index":36,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":990,"title":{},"body":{"license.html":{}}}],["namespace",{"_index":739,"title":{},"body":{"index.html":{}}}],["necessarily",{"_index":910,"title":{},"body":{"license.html":{}}}],["need",{"_index":744,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1029,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1032,"title":{},"body":{"license.html":{}}}],["new",{"_index":70,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":261,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["next.handle(tracedreq).pipe",{"_index":308,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["ngcc",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["ngmodule",{"_index":84,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{}}}],["ngx",{"_index":617,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["ngxlogger",{"_index":637,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":740,"title":{},"body":{"index.html":{}}}],["non",{"_index":886,"title":{},"body":{"license.html":{}}}],["noop",{"_index":209,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{}}}],["noophttptextpropagatormodule",{"_index":672,"title":{},"body":{"index.html":{}}}],["noophttptextpropagatorservice",{"_index":210,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagator",{"_index":196,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["nooptextmappropagatormodule",{"_index":203,"title":{"modules/NoopTextMapPropagatorModule.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"modules.html":{}}}],["nooptextmappropagatorservice",{"_index":208,"title":{"injectables/NoopTextMapPropagatorService.html":{}},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["normally",{"_index":960,"title":{},"body":{"license.html":{}}}],["notable",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":980,"title":{},"body":{"license.html":{}}}],["notice",{"_index":827,"title":{},"body":{"license.html":{}}}],["notices",{"_index":941,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":978,"title":{},"body":{"license.html":{}}}],["npm",{"_index":642,"title":{},"body":{"index.html":{}}}],["null",{"_index":316,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["number",{"_index":231,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["o",{"_index":24,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["object",{"_index":813,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1060,"title":{},"body":{"license.html":{}}}],["observable",{"_index":269,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["obtain",{"_index":1097,"title":{},"body":{"license.html":{}}}],["offer",{"_index":903,"title":{},"body":{"license.html":{}}}],["ok",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["one",{"_index":675,"title":{},"body":{"index.html":{},"license.html":{}}}],["open",{"_index":705,"title":{},"body":{"index.html":{}}}],["opentelemetry",{"_index":46,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"todo.html":{}}}],["opentelemetry/api",{"_index":31,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["opentelemetry/context",{"_index":735,"title":{},"body":{"index.html":{}}}],["opentelemetry/core",{"_index":149,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetry/exporter",{"_index":394,"title":{},"body":{"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/propagator",{"_index":125,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetry/tracing",{"_index":177,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["opentelemetry/web",{"_index":281,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["opentelemetryconfig",{"_index":62,"title":{"interfaces/OpenTelemetryConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"index.html":{}}}],["opentelemetryhttpinterceptor",{"_index":213,"title":{"interceptors/OpenTelemetryHttpInterceptor.html":{}},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"coverage.html":{}}}],["opentelemetryinjectconfig",{"_index":66,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["opentelemetryinterceptor",{"_index":217,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["opentelemetryinterceptormodule",{"_index":363,"title":{"modules/OpenTelemetryInterceptorModule.html":{}},"body":{"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{},"modules.html":{}}}],["opentelemetryinterceptormodule.forroot(environment.opentelemetryconfig",{"_index":681,"title":{},"body":{"index.html":{}}}],["opentelemtery",{"_index":639,"title":{},"body":{"index.html":{}}}],["opentelemtry",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["optimization",{"_index":727,"title":{},"body":{"index.html":{}}}],["optional",{"_index":13,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["options",{"_index":733,"title":{},"body":{"index.html":{}}}],["origin",{"_index":997,"title":{},"body":{"license.html":{}}}],["original",{"_index":248,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otelcol",{"_index":386,"title":{},"body":{"modules/OtelColExporterModule.html":{},"changelog.html":{},"index.html":{}}}],["otelcol_exporter",{"_index":168,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcol_logger",{"_index":73,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otelcol_propagator",{"_index":90,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["otelcolconfig",{"_index":64,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["otelcolexportermodule",{"_index":383,"title":{"modules/OtelColExporterModule.html":{}},"body":{"modules/OtelColExporterModule.html":{},"index.html":{},"modules.html":{}}}],["otelcolexporterservice",{"_index":385,"title":{"injectables/OtelcolExporterService.html":{}},"body":{"modules/OtelColExporterModule.html":{},"injectables/OtelcolExporterService.html":{},"coverage.html":{}}}],["otelcollectorconfig",{"_index":48,"title":{"interfaces/OtelCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["otherwise",{"_index":259,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"license.html":{}}}],["otlp",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["out",{"_index":1041,"title":{},"body":{"license.html":{},"overview.html":{}}}],["outstanding",{"_index":797,"title":{},"body":{"license.html":{}}}],["overide",{"_index":264,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["overview",{"_index":1105,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":770,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":793,"title":{},"body":{"license.html":{}}}],["package",{"_index":600,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":1090,"title":{},"body":{"license.html":{}}}],["param",{"_index":134,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parameter",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":113,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["parent",{"_index":518,"title":{},"body":{"changelog.html":{}}}],["parentbasedsampler",{"_index":285,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["parentmodule",{"_index":376,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["parser",{"_index":613,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":949,"title":{},"body":{"license.html":{}}}],["partial",{"_index":53,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{}}}],["particular",{"_index":1015,"title":{},"body":{"license.html":{}}}],["party",{"_index":959,"title":{},"body":{"license.html":{}}}],["patent",{"_index":898,"title":{},"body":{"license.html":{}}}],["peerdependencies",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["percent",{"_index":795,"title":{},"body":{"license.html":{}}}],["percentage",{"_index":657,"title":{},"body":{"index.html":{}}}],["perform",{"_index":895,"title":{},"body":{"license.html":{}}}],["permission",{"_index":988,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":803,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":884,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":948,"title":{},"body":{"license.html":{}}}],["places",{"_index":954,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1053,"title":{},"body":{"license.html":{}}}],["power",{"_index":784,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":806,"title":{},"body":{"license.html":{}}}],["prepare",{"_index":893,"title":{},"body":{"license.html":{},"todo.html":{}}}],["previous",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["printed",{"_index":1089,"title":{},"body":{"license.html":{}}}],["private",{"_index":104,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["probability",{"_index":233,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{}}}],["probabilitysampler",{"_index":45,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["problem",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":992,"title":{},"body":{"license.html":{}}}],["production",{"_index":41,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["progress",{"_index":542,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["project",{"_index":422,"title":{},"body":{"changelog.html":{},"index.html":{},"todo.html":{}}}],["projects/.../exporter.interface.ts",{"_index":1117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../opentelemetry",{"_index":1116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../propagator.interface.ts",{"_index":1118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/example",{"_index":699,"title":{},"body":{"index.html":{}}}],["projects/opentelemetry",{"_index":6,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prominent",{"_index":940,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":695,"title":{},"body":{"index.html":{}}}],["propagator",{"_index":60,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/IPropagator.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["propagator.interface",{"_index":91,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.module.ts",{"_index":83,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service",{"_index":89,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{}}}],["propagator.service.ts",{"_index":100,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagator.service.ts:14",{"_index":146,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["propagator.service.ts:16",{"_index":211,"title":{},"body":{"injectables/NoopTextMapPropagatorService.html":{}}}],["propagator.service.ts:17",{"_index":180,"title":{},"body":{"injectables/HttpTraceContextPropagatorService.html":{}}}],["propagator.service.ts:18",{"_index":194,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:21",{"_index":112,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:31",{"_index":147,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{}}}],["propagator.service.ts:34",{"_index":115,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator.service.ts:45",{"_index":120,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["propagator/b3",{"_index":82,"title":{},"body":{"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/composite",{"_index":140,"title":{},"body":{"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"coverage.html":{}}}],["propagator/http",{"_index":152,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"coverage.html":{}}}],["propagator/jaeger",{"_index":154,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"coverage.html":{}}}],["propagator/noop",{"_index":206,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{}}}],["propagators",{"_index":158,"title":{},"body":{"injectables/CompositePropagatorService.html":{},"index.html":{}}}],["propagatorservice",{"_index":227,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{}}}],["provide",{"_index":95,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"license.html":{}}}],["provided",{"_index":830,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":127,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{},"index.html":{},"overview.html":{}}}],["provides",{"_index":1005,"title":{},"body":{"license.html":{}}}],["public",{"_index":197,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["publicly",{"_index":894,"title":{},"body":{"license.html":{}}}],["publish",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":867,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":781,"title":{},"body":{"license.html":{}}}],["readable",{"_index":952,"title":{},"body":{"license.html":{}}}],["readme",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":1074,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":994,"title":{},"body":{"license.html":{}}}],["received",{"_index":876,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":935,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":664,"title":{},"body":{"index.html":{},"license.html":{}}}],["record",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["redistributing",{"_index":1021,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":930,"title":{},"body":{"license.html":{}}}],["redo",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["regarding",{"_index":986,"title":{},"body":{"license.html":{}}}],["release",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["remain",{"_index":842,"title":{},"body":{"license.html":{}}}],["replaced",{"_index":1082,"title":{},"body":{"license.html":{}}}],["represent",{"_index":839,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":860,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":892,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":998,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":760,"title":{},"body":{"license.html":{}}}],["request",{"_index":242,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.clone",{"_index":357,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.get(key",{"_index":356,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.headers.keys().map(key",{"_index":354,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.method",{"_index":337,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.url",{"_index":335,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["request.urlwithparams",{"_index":339,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["required",{"_index":993,"title":{},"body":{"license.html":{}}}],["reset",{"_index":464,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["response",{"_index":697,"title":{},"body":{"index.html":{}}}],["responsibility",{"_index":1066,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1017,"title":{},"body":{"license.html":{}}}],["result",{"_index":75,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["resulting",{"_index":814,"title":{},"body":{"license.html":{}}}],["results",{"_index":77,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":945,"title":{},"body":{"license.html":{}}}],["return",{"_index":121,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["returns",{"_index":118,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["review",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["revisions",{"_index":836,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1062,"title":{},"body":{"license.html":{}}}],["risks",{"_index":1023,"title":{},"body":{"license.html":{}}}],["root",{"_index":128,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/ConsoleSpanExporterService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["royalty",{"_index":889,"title":{},"body":{"license.html":{}}}],["run",{"_index":638,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":278,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":288,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["same",{"_index":685,"title":{},"body":{"index.html":{},"license.html":{}}}],["sample",{"_index":237,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampleconfig",{"_index":236,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["sampler",{"_index":234,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["samples",{"_index":655,"title":{},"body":{"index.html":{}}}],["sampling",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":901,"title":{},"body":{"license.html":{}}}],["sections",{"_index":765,"title":{},"body":{"license.html":{}}}],["see",{"_index":101,"title":{},"body":{"injectables/B3PropagatorService.html":{},"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}}}],["sell",{"_index":904,"title":{},"body":{"license.html":{}}}],["send",{"_index":649,"title":{},"body":{"index.html":{}}}],["sending",{"_index":720,"title":{},"body":{"index.html":{}}}],["sent",{"_index":859,"title":{},"body":{"license.html":{}}}],["separable",{"_index":843,"title":{},"body":{"license.html":{}}}],["separate",{"_index":983,"title":{},"body":{"license.html":{}}}],["service",{"_index":37,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"license.html":{}}}],["servicename",{"_index":35,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["services/exporter/exporter.interface",{"_index":291,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["services/propagator/propagator.interface",{"_index":292,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setactivespan",{"_index":280,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["setheaders",{"_index":358,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["shall",{"_index":763,"title":{},"body":{"license.html":{}}}],["shares",{"_index":798,"title":{},"body":{"license.html":{}}}],["simplespanexporter(sync",{"_index":44,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{}}}],["simplespanprocessor",{"_index":258,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["simplespanprocessor(new",{"_index":360,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["simplespanprocessor(spanexporter",{"_index":362,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["single",{"_index":18,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{}}}],["skipself",{"_index":370,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["software",{"_index":811,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1065,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1016,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"modules/B3PropagatorModule.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"modules/CompositePropagatorModule.html":{},"injectables/CompositePropagatorService.html":{},"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IExporter.html":{},"interfaces/IPropagator.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"license.html":{}}}],["span",{"_index":164,"title":{},"body":{"modules/ConsoleSpanExporterModule.html":{},"injectables/ConsoleSpanExporterService.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"coverage.html":{},"index.html":{}}}],["span.addevent('response",{"_index":317,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.end",{"_index":330,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.recordexception",{"_index":323,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setattributes",{"_index":310,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["span.setstatus",{"_index":320,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["spanexporter",{"_index":175,"title":{},"body":{"injectables/ConsoleSpanExporterService.html":{},"interfaces/IExporter.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"injectables/OtelcolExporterService.html":{},"injectables/ZipkinExporterService.html":{}}}],["special",{"_index":1036,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1099,"title":{},"body":{"license.html":{}}}],["stack",{"_index":327,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stackcontextmanager",{"_index":270,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["standard",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":701,"title":{},"body":{"index.html":{}}}],["start:complete",{"_index":703,"title":{},"body":{"index.html":{}}}],["started",{"_index":418,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{"index.html":{}}}],["startspan",{"_index":334,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["state",{"_index":977,"title":{},"body":{"license.html":{}}}],["stated",{"_index":900,"title":{},"body":{"license.html":{}}}],["statement",{"_index":970,"title":{},"body":{"license.html":{}}}],["statements",{"_index":584,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":106,"title":{},"body":{"injectables/B3PropagatorService.html":{},"modules/OpenTelemetryInterceptorModule.html":{}}}],["stating",{"_index":942,"title":{},"body":{"license.html":{}}}],["statuscode",{"_index":279,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["statuscode.error",{"_index":329,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["statuscode.ok",{"_index":322,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["stoppage",{"_index":1045,"title":{},"body":{"license.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{}}}],["subject",{"_index":566,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sublicense",{"_index":896,"title":{},"body":{"license.html":{}}}],["submission",{"_index":973,"title":{},"body":{"license.html":{}}}],["submit",{"_index":853,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":851,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":877,"title":{},"body":{"license.html":{}}}],["such",{"_index":789,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":982,"title":{},"body":{"license.html":{}}}],["support",{"_index":1058,"title":{},"body":{"license.html":{}}}],["sync",{"_index":663,"title":{},"body":{"index.html":{}}}],["syntax",{"_index":1087,"title":{},"body":{"license.html":{}}}],["systems",{"_index":863,"title":{},"body":{"license.html":{}}}],["table",{"_index":599,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":286,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["task",{"_index":1110,"title":{},"body":{"todo.html":{}}}],["telemetry/opentelemetry",{"_index":651,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":927,"title":{},"body":{"license.html":{}}}],["terms",{"_index":758,"title":{},"body":{"license.html":{}}}],["test",{"_index":510,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["text",{"_index":205,"title":{},"body":{"modules/NoopTextMapPropagatorModule.html":{},"injectables/NoopTextMapPropagatorService.html":{},"coverage.html":{},"license.html":{}}}],["textmappropagator",{"_index":122,"title":{},"body":{"injectables/B3PropagatorService.html":{},"injectables/CompositePropagatorService.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"interfaces/IPropagator.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"injectables/NoopTextMapPropagatorService.html":{}}}],["theory",{"_index":1027,"title":{},"body":{"license.html":{}}}],["there's",{"_index":708,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":847,"title":{},"body":{"license.html":{}}}],["third",{"_index":958,"title":{},"body":{"license.html":{}}}],["this.b3propagatorconfig",{"_index":131,"title":{},"body":{"injectables/B3PropagatorService.html":{}}}],["this.b3propagatorservice.getpropagator",{"_index":159,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.config.commonconfig.production",{"_index":299,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager",{"_index":304,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager._currentcontext",{"_index":350,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.contextmanager.active",{"_index":349,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.customheader",{"_index":199,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["this.defineprobabilitysampler(number(config.commonconfig.probabilitysampler",{"_index":297,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.exporterservice.getexporter",{"_index":300,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.httptracecontextpropagatorservice.getpropagator",{"_index":160,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.initspan(request",{"_index":305,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.injectcontextandheader(request",{"_index":307,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertconsolespanexporter(this.config.commonconfig.console",{"_index":301,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.insertspanprocessorproductionmode",{"_index":298,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.jaegerhttptracepropagatorservice.getpropagator",{"_index":161,"title":{},"body":{"injectables/CompositePropagatorService.html":{}}}],["this.otelcolconfig",{"_index":396,"title":{},"body":{"injectables/OtelcolExporterService.html":{}}}],["this.propagatorservice.getpropagator",{"_index":303,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer",{"_index":296,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.addspanprocessor",{"_index":359,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.tracer.register",{"_index":302,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["this.zipkinconfig",{"_index":413,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["those",{"_index":907,"title":{},"body":{"license.html":{}}}],["through",{"_index":766,"title":{},"body":{"license.html":{}}}],["throw",{"_index":377,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["timeout",{"_index":743,"title":{},"body":{"index.html":{}}}],["title",{"_index":1012,"title":{},"body":{"license.html":{}}}],["todo",{"_index":1109,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["token",{"_index":683,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1028,"title":{},"body":{"license.html":{}}}],["trace",{"_index":38,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"injectables/HttpTraceContextPropagatorService.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["tracedreq",{"_index":306,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["traceid",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["traceidratiobasedsampler",{"_index":284,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["tracer",{"_index":219,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["traces",{"_index":658,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":865,"title":{},"body":{"license.html":{}}}],["trade",{"_index":989,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":946,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":987,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":905,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":816,"title":{},"body":{"license.html":{}}}],["translation",{"_index":817,"title":{},"body":{"license.html":{}}}],["trouble",{"_index":493,"title":{},"body":{"changelog.html":{}}}],["troubleshoot",{"_index":640,"title":{},"body":{"index.html":{}}}],["true",{"_index":252,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"index.html":{}}}],["ts",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["ts1086",{"_index":747,"title":{},"body":{"index.html":{}}}],["ts2694",{"_index":738,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"injectables/CompositePropagatorService.html":{},"injectables/JaegerHttpTracePropagatorService.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interceptors/OpenTelemetryHttpInterceptor.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["type/node",{"_index":745,"title":{},"body":{"index.html":{}}}],["types",{"_index":822,"title":{},"body":{"license.html":{}}}],["typescript",{"_index":751,"title":{},"body":{"index.html":{}}}],["typo",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["umdmoduleids",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":780,"title":{},"body":{"license.html":{}}}],["union",{"_index":775,"title":{},"body":{"license.html":{}}}],["unless",{"_index":975,"title":{},"body":{"license.html":{}}}],["unused",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":715,"title":{},"body":{"index.html":{}}}],["update",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["upgrade",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["upgrate",{"_index":476,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":49,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"injectables/OtelcolExporterService.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["url(request.urlwithparams",{"_index":332,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest",{"_index":331,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.host",{"_index":341,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.pathname",{"_index":345,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.protocol.replace",{"_index":343,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["urlrequest.search",{"_index":346,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["use",{"_index":42,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":96,"title":{},"body":{"modules/B3PropagatorModule.html":{},"modules/CompositePropagatorModule.html":{},"modules/ConsoleSpanExporterModule.html":{},"modules/HttpTraceContextPropagatorModule.html":{},"modules/JaegerHttpTracePropagatorModule.html":{},"modules/NoopTextMapPropagatorModule.html":{},"modules/OpenTelemetryInterceptorModule.html":{},"modules/OtelColExporterModule.html":{},"modules/ZipkinExporterModule.html":{}}}],["used",{"_index":680,"title":{},"body":{"index.html":{}}}],["useexisting",{"_index":691,"title":{},"body":{"index.html":{}}}],["useless",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["user",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":631,"title":{},"body":{"index.html":{}}}],["usevalue",{"_index":382,"title":{},"body":{"modules/OpenTelemetryInterceptorModule.html":{}}}],["using",{"_index":1020,"title":{},"body":{"license.html":{}}}],["value",{"_index":23,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"injectables/B3PropagatorService.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1115,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbal",{"_index":856,"title":{},"body":{"license.html":{}}}],["version",{"_index":289,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"changelog.html":{},"license.html":{}}}],["version.json",{"_index":290,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["via",{"_index":661,"title":{},"body":{"index.html":{}}}],["void",{"_index":253,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["wait",{"_index":202,"title":{},"body":{"injectables/JaegerHttpTracePropagatorService.html":{}}}],["want",{"_index":707,"title":{},"body":{"index.html":{}}}],["warn",{"_index":687,"title":{},"body":{"index.html":{}}}],["warning",{"_index":641,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1007,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1001,"title":{},"body":{"license.html":{}}}],["webtracerprovider",{"_index":272,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{},"index.html":{}}}],["wherever",{"_index":957,"title":{},"body":{"license.html":{}}}],["whether",{"_index":790,"title":{},"body":{"license.html":{}}}],["whole",{"_index":840,"title":{},"body":{"license.html":{}}}],["window.navigator.useragent",{"_index":348,"title":{},"body":{"interceptors/OpenTelemetryHttpInterceptor.html":{}}}],["within",{"_index":879,"title":{},"body":{"license.html":{}}}],["without",{"_index":719,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":823,"title":{},"body":{"license.html":{}}}],["works",{"_index":551,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["worldwide",{"_index":885,"title":{},"body":{"license.html":{}}}],["writing",{"_index":874,"title":{},"body":{"license.html":{}}}],["written",{"_index":857,"title":{},"body":{"license.html":{}}}],["xsrf",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["xxx/fesm2015/jufab",{"_index":721,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":1094,"title":{},"body":{"license.html":{}}}],["zipkin",{"_index":55,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"todo.html":{}}}],["zipkin/build/src/types",{"_index":412,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkincollectorconfig",{"_index":56,"title":{"interfaces/ZipkinCollectorConfig.html":{}},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"coverage.html":{},"index.html":{}}}],["zipkinconfig",{"_index":65,"title":{},"body":{"interfaces/B3PropagatorConfig.html":{},"interfaces/CommonCollectorConfig.html":{},"interfaces/JaegerPropagatorConfig.html":{},"interfaces/OpenTelemetryConfig.html":{},"interfaces/OtelCollectorConfig.html":{},"interfaces/ZipkinCollectorConfig.html":{},"injectables/ZipkinExporterService.html":{},"index.html":{}}}],["zipkinexporter",{"_index":408,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexporter(this.zipkinconfig",{"_index":416,"title":{},"body":{"injectables/ZipkinExporterService.html":{}}}],["zipkinexportermodule",{"_index":403,"title":{"modules/ZipkinExporterModule.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"index.html":{},"modules.html":{}}}],["zipkinexporterservice",{"_index":405,"title":{"injectables/ZipkinExporterService.html":{}},"body":{"modules/ZipkinExporterModule.html":{},"injectables/ZipkinExporterService.html":{},"coverage.html":{}}}],["zone.js",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1107,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/B3PropagatorConfig.html":{"url":"interfaces/B3PropagatorConfig.html","title":"interface - B3PropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  B3PropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for B3PropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        multiHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        multiHeader\n                                    \n                                \n                                \n                                    \n                                        multiHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Single or Multi Header for b3propagator (default: multi)\nValue : 'O' (single), '1' (multi)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/B3PropagatorModule.html":{"url":"modules/B3PropagatorModule.html","title":"module - B3PropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    B3PropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { B3PropagatorService } from './b3-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: B3PropagatorService }\n  ]\n})\nexport class B3PropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/B3PropagatorService.html":{"url":"injectables/B3PropagatorService.html","title":"injectable - B3PropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  B3PropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                B3PropagatorService\nCan be a single or multi header.\nSee Configuration for more information\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                b3PropagatorConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                defineB3Encoding\n                            \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Static\n                            defineB3Encoding\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineB3Encoding(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:34\n                \n            \n\n\n            \n                \n                    Define if it's a single or multi header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string (0 => single header, 1 => Multi Header)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     B3InjectEncoding\n\n                    \n                    \n                        B3InjectEncoding\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:45\n                \n            \n\n\n            \n                \n                    Return an B3Propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as B3Propagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            b3PropagatorConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         B3PropagatorConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { B3Propagator, B3PropagatorConfig, B3InjectEncoding } from '@opentelemetry/propagator-b3';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../../../configuration/opentelemetry-config';\n\n/**\n * B3PropagatorService\n *\n * Can be a single or multi header.\n *\n * See Configuration for more information\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class B3PropagatorService implements IPropagator {\n  private b3PropagatorConfig: B3PropagatorConfig;\n\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.b3PropagatorConfig = {\n      injectEncoding: B3PropagatorService.defineB3Encoding(config.b3PropagatorConfig?.multiHeader)\n    };\n  }\n\n  /**\n   * Define if it's a single or multi header\n   * @param value string (0 => single header, 1 => Multi Header)\n   * @return B3InjectEncoding\n   */\n  private static defineB3Encoding(value: string): B3InjectEncoding {\n    if (value && '0' === value) {\n      return B3InjectEncoding.SINGLE_HEADER;\n    }\n    return B3InjectEncoding.MULTI_HEADER;\n  }\n\n  /**\n   * Return an B3Propagator\n   * @return TextMapPropagator as B3Propagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new B3Propagator(this.b3PropagatorConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonCollectorConfig.html":{"url":"interfaces/CommonCollectorConfig.html","title":"interface - CommonCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Common configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        console\n                                \n                                \n                                            Optional\n                                        probabilitySampler\n                                \n                                \n                                            Optional\n                                        production\n                                \n                                \n                                        serviceName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        console\n                                    \n                                \n                                \n                                    \n                                        console:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    console : boolean to trace in console \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        probabilitySampler\n                                    \n                                \n                                \n                                    \n                                        probabilitySampler:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    probabilitySampler \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production\n                                    \n                                \n                                \n                                    \n                                        production:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        serviceName\n                                    \n                                \n                                \n                                    \n                                        serviceName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    serviceName : Name of service in trace \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompositePropagatorModule.html":{"url":"modules/CompositePropagatorModule.html","title":"module - CompositePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    CompositePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompositePropagatorService } from './composite-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: CompositePropagatorService }\n  ]\n})\nexport class CompositePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompositePropagatorService.html":{"url":"injectables/CompositePropagatorService.html","title":"injectable - CompositePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CompositePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                CompositePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(b3PropagatorService: B3PropagatorService, httpTraceContextPropagatorService: HttpTraceContextPropagatorService, jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        b3PropagatorService\n                                                  \n                                                        \n                                                                        B3PropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpTraceContextPropagatorService\n                                                  \n                                                        \n                                                                        HttpTraceContextPropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jaegerHttpTracePropagatorService\n                                                  \n                                                        \n                                                                        JaegerHttpTracePropagatorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an CompositePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as CompositePropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { CompositePropagator } from '@opentelemetry/core';\nimport { B3PropagatorService } from '../b3-propagator/b3-propagator.service';\nimport { HttpTraceContextPropagatorService } from '../http-trace-context-propagator/http-trace-context-propagator.service';\nimport { JaegerHttpTracePropagatorService } from '../jaeger-http-trace-propagator/jaeger-http-trace-propagator.service';\n/**\n * CompositePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CompositePropagatorService implements IPropagator {\n  /**\n   * Constructor\n   */\n  constructor(\n    @Inject(B3PropagatorService)\n    private b3PropagatorService: B3PropagatorService,\n    @Inject(HttpTraceContextPropagatorService)\n    private httpTraceContextPropagatorService: HttpTraceContextPropagatorService,\n    @Inject(JaegerHttpTracePropagatorService)\n    private jaegerHttpTracePropagatorService: JaegerHttpTracePropagatorService\n  ) {}\n\n  /**\n   * Return an CompositePropagator\n   * @return TextMapPropagator as CompositePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new CompositePropagator({\n      propagators: [\n        this.b3PropagatorService.getPropagator(),\n        this.httpTraceContextPropagatorService.getPropagator(),\n        this.jaegerHttpTracePropagatorService.getPropagator(),\n      ],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleSpanExporterModule.html":{"url":"modules/ConsoleSpanExporterModule.html","title":"module - ConsoleSpanExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleSpanExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleSpanExporterService } from './console-span-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ConsoleSpanExporterService }\n  ]\n})\nexport class ConsoleSpanExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsoleSpanExporterService.html":{"url":"injectables/ConsoleSpanExporterService.html","title":"injectable - ConsoleSpanExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsoleSpanExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ConsoleSpanExporterService\nA default span exporter\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts:17\n                \n            \n\n\n            \n                \n                    Return a ConsoleSpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter, ConsoleSpanExporter } from '@opentelemetry/tracing';\n\n/**\n * ConsoleSpanExporterService\n * A default span exporter\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsoleSpanExporterService implements IExporter {\n  /**\n   * Return a ConsoleSpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ConsoleSpanExporter();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HttpTraceContextPropagatorModule.html":{"url":"modules/HttpTraceContextPropagatorModule.html","title":"module - HttpTraceContextPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    HttpTraceContextPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpTraceContextPropagatorService } from './http-trace-context-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: HttpTraceContextPropagatorService }\n  ]\n})\nexport class  HttpTraceContextPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpTraceContextPropagatorService.html":{"url":"injectables/HttpTraceContextPropagatorService.html","title":"injectable - HttpTraceContextPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HttpTraceContextPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                HttpTraceContextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts:17\n                \n            \n\n\n            \n                \n                    Return an HttpTraceContext\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as HttpTraceContext\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator } from '@opentelemetry/api';\nimport { HttpTraceContext } from '@opentelemetry/core';\n\n/**\n * HttpTraceContextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpTraceContextPropagatorService implements IPropagator {\n  /**\n   * Return an HttpTraceContext\n   * @return TextMapPropagator as HttpTraceContext\n   */\n  getPropagator(): TextMapPropagator {\n    return new HttpTraceContext();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExporter.html":{"url":"interfaces/IExporter.html","title":"interface - IExporter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExporter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n        \n\n            \n                Description\n            \n            \n                Exporter interface to define a default exporter\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getExporter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an inmplementation of SpanExporter\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { SpanExporter } from '@opentelemetry/tracing';\n\n/**\n * Exporter interface to define a default exporter\n */\nexport interface IExporter {\n  /**\n   * give an inmplementation of SpanExporter\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter;\n}\n\n/** injection for a Exporter */\nexport const OTELCOL_EXPORTER = new InjectionToken('otelcol.exporter');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPropagator.html":{"url":"interfaces/IPropagator.html","title":"interface - IPropagator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPropagator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface to define propagator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getPropagator\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts:12\n                \n            \n\n\n            \n                \n                    give an implementation of a propagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        HttpTextPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * Interface to define propagator\n */\nexport interface IPropagator {\n  /**\n   * give an implementation of a propagator\n   * @return HttpTextPropagator\n   */\n  getPropagator(): TextMapPropagator;\n}\n\n/** injection for a propagator */\nexport const OTELCOL_PROPAGATOR = new InjectionToken('otelcol.propagator');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JaegerHttpTracePropagatorModule.html":{"url":"modules/JaegerHttpTracePropagatorModule.html","title":"module - JaegerHttpTracePropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    JaegerHttpTracePropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JaegerHttpTracePropagatorService } from './jaeger-http-trace-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: JaegerHttpTracePropagatorService }\n  ]\n})\nexport class JaegerHttpTracePropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JaegerHttpTracePropagatorService.html":{"url":"injectables/JaegerHttpTracePropagatorService.html","title":"injectable - JaegerHttpTracePropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JaegerHttpTracePropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                JaegerHttpTracePropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                customHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:31\n                \n            \n\n\n            \n                \n                    Return an JaegerHttpTracePropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as JaegerHttpTracePropagator\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            customHeader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts:18\n                            \n                        \n\n                \n                    \n                        custom Header\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { TextMapPropagator, NoopTextMapPropagator } from '@opentelemetry/api';\nimport { JaegerHttpTracePropagator } from '@opentelemetry/propagator-jaeger';\nimport { OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { OpenTelemetryConfig } from '../../../../public-api';\n\n/**\n * JaegerHttpTracePropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JaegerHttpTracePropagatorService implements IPropagator {\n  /**\n   * custom Header\n   */\n  private customHeader: string;\n  /**\n   * Constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.customHeader = config.jaegerPropagatorConfig?.customHeader;\n  }\n\n  /**\n   * Return an JaegerHttpTracePropagator\n   * @return TextMapPropagator as JaegerHttpTracePropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n    //return new JaegerHttpTracePropagator(this.customHeader); Wait\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JaegerPropagatorConfig.html":{"url":"interfaces/JaegerPropagatorConfig.html","title":"interface - JaegerPropagatorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JaegerPropagatorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for JaegerPropagatorConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        customHeader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customHeader\n                                    \n                                \n                                \n                                    \n                                        customHeader:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A custom Header for the propagator\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NoopTextMapPropagatorModule.html":{"url":"modules/NoopTextMapPropagatorModule.html","title":"module - NoopTextMapPropagatorModule","body":"\n                   \n\n\n\n\n    Modules\n    NoopTextMapPropagatorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NoopTextMapPropagatorService } from './noop-text-map-propagator.service';\nimport { OTELCOL_PROPAGATOR } from '../propagator.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    { provide: OTELCOL_PROPAGATOR, useClass: NoopTextMapPropagatorService }\n  ]\n})\nexport class NoopTextMapPropagatorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoopTextMapPropagatorService.html":{"url":"injectables/NoopTextMapPropagatorService.html","title":"injectable - NoopTextMapPropagatorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoopTextMapPropagatorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n        \n\n            \n                Description\n            \n            \n                NoopHttpTextPropagatorService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPropagator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPropagator\n                        \n                        \n                    \n                \n            \n            \n                \ngetPropagator()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts:16\n                \n            \n\n\n            \n                \n                    Return an NoopTextMapPropagator\n\n\n                    \n                    \n                    \n                        Returns :     TextMapPropagator\n\n                    \n                    \n                        TextMapPropagator as NoopTextMapPropagator\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IPropagator } from '../propagator.interface';\nimport { NoopTextMapPropagator, TextMapPropagator } from '@opentelemetry/api';\n\n/**\n * NoopHttpTextPropagatorService\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NoopTextMapPropagatorService implements IPropagator {\n  /**\n   * Return an NoopTextMapPropagator\n   * @return TextMapPropagator as NoopTextMapPropagator\n   */\n  getPropagator(): TextMapPropagator {\n    return new NoopTextMapPropagator();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenTelemetryConfig.html":{"url":"interfaces/OpenTelemetryConfig.html","title":"interface - OpenTelemetryConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OpenTelemetryConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryConfig\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        b3PropagatorConfig\n                                \n                                \n                                        commonConfig\n                                \n                                \n                                            Optional\n                                        jaegerPropagatorConfig\n                                \n                                \n                                            Optional\n                                        otelcolConfig\n                                \n                                \n                                            Optional\n                                        zipkinConfig\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        b3PropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        b3PropagatorConfig:         B3PropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         B3PropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    b3PropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        commonConfig\n                                    \n                                \n                                \n                                    \n                                        commonConfig:         CommonCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CommonCollectorConfig\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    commonConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jaegerPropagatorConfig\n                                    \n                                \n                                \n                                    \n                                        jaegerPropagatorConfig:         JaegerPropagatorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         JaegerPropagatorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    jaegerPropagatorConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        otelcolConfig\n                                    \n                                \n                                \n                                    \n                                        otelcolConfig:         OtelCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OtelCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    otelcolConfig \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipkinConfig\n                                    \n                                \n                                \n                                    \n                                        zipkinConfig:         ZipkinCollectorConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ZipkinCollectorConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    zipkinConfig \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/OpenTelemetryHttpInterceptor.html":{"url":"interceptors/OpenTelemetryHttpInterceptor.html","title":"interceptor - OpenTelemetryHttpInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  OpenTelemetryHttpInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetryInterceptor class\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contextManager\n                            \n                            \n                                tracer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defineProbabilitySampler\n                            \n                            \n                                    Private\n                                initSpan\n                            \n                            \n                                    Private\n                                injectContextAndHeader\n                            \n                            \n                                    Private\n                                insertConsoleSpanExporter\n                            \n                            \n                                    Private\n                                insertSpanProcessorProductionMode\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, exporterService: IExporter, propagatorService: IPropagator)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                configuration\n\n                                                        \n                                                \n                                                \n                                                        exporterService\n                                                  \n                                                        \n                                                                        IExporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service exporter injected\n\n                                                        \n                                                \n                                                \n                                                        propagatorService\n                                                  \n                                                        \n                                                                        IPropagator\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                propagator\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            defineProbabilitySampler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    defineProbabilitySampler(sampleConfig: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:213\n                \n            \n\n\n            \n                \n                    define the Probability Sampler\nBy Default, it's always (or 1)\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sampleConfig\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the sample configuration\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Sampler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            initSpan\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    initSpan(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:133\n                \n            \n\n\n            \n                \n                    Initialise a span for a request intercepted\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Span\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            injectContextAndHeader\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    injectContextAndHeader(request: HttpRequest)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:162\n                \n            \n\n\n            \n                \n                    Add header propagator in request and conserve original header\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertConsoleSpanExporter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertConsoleSpanExporter(console: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:183\n                \n            \n\n\n            \n                \n                    Insert in tracer the console span if config is true\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    console\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        config to insert console span\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            insertSpanProcessorProductionMode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    insertSpanProcessorProductionMode(production: boolean, spanExporter: SpanExporter)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:197\n                \n            \n\n\n            \n                \n                    Insert BatchSpanProcessor in production mode\nSimpleSpanProcessor otherwise\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    production\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        mode\n\n                                    \n                                \n                                \n                                    spanExporter\n                                    \n                                            SpanExporter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Exporter\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:83\n                \n            \n\n\n            \n                \n                    Overide method\nInterceptor from HttpInterceptor Angular\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the current request\n\n                                    \n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        next\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contextManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     StackContextManager\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:49\n                            \n                        \n\n                \n                    \n                        context manager\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tracer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebTracerProvider\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts:45\n                            \n                        \n\n                \n                    \n                        tracer\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as api from '@opentelemetry/api';\nimport { Sampler, Span, StatusCode, setActiveSpan } from '@opentelemetry/api';\nimport { WebTracerProvider, StackContextManager } from '@opentelemetry/web';\nimport {\n  SimpleSpanProcessor,\n  ConsoleSpanExporter,\n  BatchSpanProcessor,\n  SpanExporter,\n} from '@opentelemetry/tracing';\nimport {\n  AlwaysOnSampler,\n  AlwaysOffSampler,\n  TraceIdRatioBasedSampler,\n  ParentBasedSampler,\n} from '@opentelemetry/core';\nimport { tap, finalize } from 'rxjs/operators';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from '../configuration/opentelemetry-config';\nimport { version, name } from '../../version.json';\nimport { OTELCOL_EXPORTER, IExporter } from '../services/exporter/exporter.interface';\nimport { OTELCOL_PROPAGATOR, IPropagator } from '../services/propagator/propagator.interface';\n\n/**\n * OpenTelemetryInterceptor class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OpenTelemetryHttpInterceptor implements HttpInterceptor {\n  /**\n   * tracer\n   */\n  tracer: WebTracerProvider;\n  /**\n   * context manager\n   */\n  contextManager: StackContextManager;\n\n  /**\n   * constructor\n   * @param config configuration\n   * @param exporterService service exporter injected\n   * @param propagatorService propagator\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) private config: OpenTelemetryConfig,\n    @Inject(OTELCOL_EXPORTER)\n    private exporterService: IExporter,\n    @Inject(OTELCOL_PROPAGATOR)\n    private propagatorService: IPropagator\n  ) {\n    this.tracer = new WebTracerProvider({\n      sampler: this.defineProbabilitySampler(Number(config.commonConfig.probabilitySampler)),\n    });\n    this.insertSpanProcessorProductionMode(\n      this.config.commonConfig.production,\n      this.exporterService.getExporter()\n    );\n    this.insertConsoleSpanExporter(this.config.commonConfig.console);\n    this.tracer.register({\n      propagator: this.propagatorService.getPropagator(),\n    });\n  }\n\n  /**\n   * Overide method\n   * Interceptor from HttpInterceptor Angular\n   * @param request the current request\n   * @param next next\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    this.contextManager = new StackContextManager();\n    const span: Span = this.initSpan(request);\n    const tracedReq = this.injectContextAndHeader(request);\n    return next.handle(tracedReq).pipe(\n      tap(\n        (event: HttpResponse) => {\n          span.setAttributes(\n            {\n              'http.status_code': event.status,\n              'http.status_text': event.statusText,\n            }\n          );\n          if (event.body != null) {\n            span.addEvent('response', { body: JSON.stringify(event.body) });\n          }\n          span.setStatus({\n            code: StatusCode.OK\n          });\n        },\n        (event: HttpErrorResponse) => {\n          span.setAttributes(\n            {\n              'http.status_text': event.statusText,\n              'http.status_code': event.status,\n            }\n          );\n          span.recordException({\n            name: event.name,\n            message: event.message,\n            stack: event.error\n          });\n          span.setStatus({\n            code: StatusCode.ERROR\n          });\n        }\n      ),\n      finalize(() => {\n        span.end();\n      })\n    );\n  }\n\n  /**\n   * Initialise a span for a request intercepted\n   * @param request request\n   */\n  private initSpan(request: HttpRequest): Span {\n    const urlRequest = new URL(request.urlWithParams);\n    const span = this.tracer\n      .getTracer(name, version)\n      .startSpan(\n        request.url,\n        {\n          attributes: {\n            ['http.method']: request.method,\n            ['http.url']: request.urlWithParams,\n            ['http.host']: urlRequest.host,\n            ['http.scheme']: urlRequest.protocol.replace(':', ''),\n            ['http.target']: urlRequest.pathname + urlRequest.search,\n            ['http.user_agent']: window.navigator.userAgent\n          },\n        },\n        this.contextManager.active()\n      );\n    this.contextManager._currentContext = setActiveSpan(\n      this.contextManager.active(),\n      span\n    );\n    return span;\n  }\n\n  /**\n   * Add header propagator in request and conserve original header\n   * @param request request\n   */\n  private injectContextAndHeader(\n    request: HttpRequest\n  ) {\n    const carrier = {};\n    api.propagation.inject(\n      carrier,\n      api.defaultTextMapSetter,\n      this.contextManager.active()\n    );\n    request.headers.keys().map(key => {\n      carrier[key] = request.headers.get(key);\n    });\n    return request.clone({\n      setHeaders: carrier,\n    });\n  }\n\n  /**\n   * Insert in tracer the console span if config is true\n   * @param console config to insert console span\n   */\n  private insertConsoleSpanExporter(console: boolean) {\n    if (console) {\n      this.tracer.addSpanProcessor(\n        new SimpleSpanProcessor(new ConsoleSpanExporter())\n      );\n    }\n  }\n\n  /**\n   * Insert BatchSpanProcessor in production mode\n   * SimpleSpanProcessor otherwise\n   * @param production mode\n   * @param spanExporter Exporter\n   */\n  private insertSpanProcessorProductionMode(\n    production: boolean,\n    spanExporter: SpanExporter\n  ) {\n    this.tracer.addSpanProcessor(\n      production\n        ? new BatchSpanProcessor(spanExporter)\n        : new SimpleSpanProcessor(spanExporter)\n    );\n  }\n\n  /**\n   * define the Probability Sampler\n   * By Default, it's always (or 1)\n   * @param sampleConfig the sample configuration\n   */\n  private defineProbabilitySampler(sampleConfig: number): Sampler {\n    if (sampleConfig > 1) {\n      return new ParentBasedSampler({ root: new AlwaysOnSampler() });\n    }\n    else if (sampleConfig \n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpenTelemetryInterceptorModule.html":{"url":"modules/OpenTelemetryInterceptorModule.html","title":"module - OpenTelemetryInterceptorModule","body":"\n                   \n\n\n\n\n    Modules\n    OpenTelemetryInterceptorModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: OpenTelemetryConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/opentelemetry-interceptor.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                OpenTelemetryConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {\n  NgModule,\n  ModuleWithProviders,\n  Optional,\n  SkipSelf,\n} from '@angular/core';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n} from './configuration/opentelemetry-config';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryHttpInterceptor } from './interceptor/opentelemetry-http.interceptor';\n\n@NgModule({\n  declarations: [],\n  imports: [HttpClientModule],\n  exports: [],\n})\nexport class OpenTelemetryInterceptorModule {\n  constructor(\n    @Optional() @SkipSelf() parentModule?: OpenTelemetryInterceptorModule\n  ) {\n    if (parentModule) {\n      throw new Error(\n        'OpentelemetryInterceptorModule is already loaded. Import it in the AppModule only'\n      );\n    }\n  }\n\n  public static forRoot(config: OpenTelemetryConfig): ModuleWithProviders {\n    return {\n      ngModule: OpenTelemetryInterceptorModule,\n      providers: [\n        { provide: OpenTelemetryInjectConfig, useValue: config },\n        {\n          provide: HTTP_INTERCEPTORS,\n          useClass: OpenTelemetryHttpInterceptor,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OtelColExporterModule.html":{"url":"modules/OtelColExporterModule.html","title":"module - OtelColExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    OtelColExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OtelcolExporterService } from './otelcol-exporter.service';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: OtelcolExporterService }\n  ]\n})\nexport class OtelColExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OtelCollectorConfig.html":{"url":"interfaces/OtelCollectorConfig.html","title":"interface - OtelCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OtelCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                OpenTelemetry Collector configuration\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        attributes\n                                \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                    \n                                \n                                \n                                    \n                                        attributes:     Attributes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Attributes\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    attributes : define some custom attributes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:55681/v1/trace)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OtelcolExporterService.html":{"url":"injectables/OtelcolExporterService.html","title":"injectable - OtelcolExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OtelcolExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                OtelcolExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                otelcolConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig, logger: Logger)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                    Logger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Logger (Optional)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:49\n                \n            \n\n\n            \n                \n                    Return a CollectorExporter with the configuration\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        a CollectorExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            otelcolConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     collectorTypes.CollectorExporterConfigBase\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts:25\n                            \n                        \n\n                \n                    \n                        CollectorExporterConfigBase\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, Optional } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport {\n  OpenTelemetryConfig,\n  OpenTelemetryInjectConfig,\n  OTELCOL_LOGGER\n} from '../../../configuration/opentelemetry-config';\nimport {\n  CollectorTraceExporter,\n  collectorTypes,\n} from '@opentelemetry/exporter-collector';\nimport { Logger } from '@opentelemetry/api';\n\n/**\n * OtelcolExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OtelcolExporterService implements IExporter {\n  /**\n   * CollectorExporterConfigBase\n   */\n  private otelcolConfig: collectorTypes.CollectorExporterConfigBase;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   * @param logger Logger (Optional)\n   */\n  constructor(\n    @Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig,\n    @Optional() @Inject(OTELCOL_LOGGER) logger: Logger\n  ) {\n    this.otelcolConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.otelcolConfig?.url,\n      headers: config.otelcolConfig?.headers,\n      attributes: config.otelcolConfig?.attributes,\n      logger,\n    };\n  }\n\n  /**\n   * Return a CollectorExporter with the configuration\n   * @return a CollectorExporter\n   */\n  getExporter(): SpanExporter {\n    return new CollectorTraceExporter(this.otelcolConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ZipkinCollectorConfig.html":{"url":"interfaces/ZipkinCollectorConfig.html","title":"interface - ZipkinCollectorConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ZipkinCollectorConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for Zipkin\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        headers\n                                \n                                \n                                            Optional\n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        headers\n                                    \n                                \n                                \n                                    \n                                        headers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom headers\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An url (Default value: http://localhost:9411/api/v2/spans)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken } from '@angular/core';\nimport { Logger, Attributes } from '@opentelemetry/api';\n\n/**\n * Common configuration\n */\nexport interface CommonCollectorConfig {\n  /** serviceName : Name of service in trace */\n  serviceName: string;\n  /** console : boolean to trace in console */\n  console?: boolean;\n  /** production : boolean to use a BatchSpanExporter(async) or SimpleSpanExporter(sync) */\n  production?: boolean;\n  /** probabilitySampler */\n  probabilitySampler?: string;\n}\n\n/**\n * OpenTelemetry Collector configuration\n */\nexport interface OtelCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:55681/v1/trace)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: Partial>;\n  /**\n   * attributes : define some custom attributes\n   */\n  attributes?: Attributes;\n}\n\n/**\n * Configuration for Zipkin\n */\nexport interface ZipkinCollectorConfig {\n  /**\n   * An url (Default value: http://localhost:9411/api/v2/spans)\n   */\n  url?: string;\n  /**\n   * custom headers\n   */\n  headers?: {\n    [key: string]: string;\n  };\n}\n\n/**\n * Configuration for JaegerPropagatorConfig\n */\nexport interface JaegerPropagatorConfig {\n  /**\n   * A custom Header for the propagator\n   */\n  customHeader?: string;\n}\n\n/**\n * Configuration for B3PropagatorConfig\n */\nexport interface B3PropagatorConfig {\n  /**\n   * Single or Multi Header for b3propagator (default: multi)\n   * Value : 'O' (single), '1' (multi)\n   */\n  multiHeader?: string;\n}\n/**\n * OpenTelemetryConfig\n */\nexport interface OpenTelemetryConfig {\n  /** commonConfig */\n  commonConfig: CommonCollectorConfig;\n  /** otelcolConfig */\n  otelcolConfig?: OtelCollectorConfig;\n  /** zipkinConfig */\n  zipkinConfig?: ZipkinCollectorConfig;\n  /** jaegerPropagatorConfig */\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  /** b3PropagatorConfig */\n  b3PropagatorConfig?: B3PropagatorConfig;\n}\n\n/** OpenTelemetryInjectConfig : Config injection */\nexport const OpenTelemetryInjectConfig = new InjectionToken('opentelemetry.config');\n\n/** Logger : injection for a logger compatible */\nexport const OTELCOL_LOGGER = new InjectionToken('otelcol.logger');\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ZipkinExporterModule.html":{"url":"modules/ZipkinExporterModule.html","title":"module - ZipkinExporterModule","body":"\n                   \n\n\n\n\n    Modules\n    ZipkinExporterModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OTELCOL_EXPORTER } from '../exporter.interface';\nimport { ZipkinExporterService } from './zipkin-exporter.service';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    { provide: OTELCOL_EXPORTER, useClass: ZipkinExporterService }\n  ]\n})\nexport class ZipkinExporterModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ZipkinExporterService.html":{"url":"injectables/ZipkinExporterService.html","title":"injectable - ZipkinExporterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ZipkinExporterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n        \n\n            \n                Description\n            \n            \n                ZipkinExporterService class\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                zipkinConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExporter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: OpenTelemetryConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        OpenTelemetryConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                OpenTelemetryConfig\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getExporter\n                        \n                        \n                    \n                \n            \n            \n                \ngetExporter()\n                \n            \n\n\n            \n                \n                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:33\n                \n            \n\n\n            \n                \n                    Return a ZipkinExporter configured with zipkinConfig field\n\n\n                    \n                    \n                    \n                        Returns :     SpanExporter\n\n                    \n                    \n                        SpanExporter\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            zipkinConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ExporterConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { IExporter } from '../exporter.interface';\nimport { SpanExporter } from '@opentelemetry/tracing';\nimport { OpenTelemetryConfig, OpenTelemetryInjectConfig } from '../../../configuration/opentelemetry-config';\nimport { ZipkinExporter } from '@opentelemetry/exporter-zipkin';\nimport { ExporterConfig } from '@opentelemetry/exporter-zipkin/build/src/types';\n\n/**\n * ZipkinExporterService class\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ZipkinExporterService implements IExporter {\n  private zipkinConfig: ExporterConfig;\n\n  /**\n   * constructor\n   * @param config OpenTelemetryConfig\n   */\n  constructor(@Inject(OpenTelemetryInjectConfig) config: OpenTelemetryConfig) {\n    this.zipkinConfig = {\n      serviceName: config.commonConfig.serviceName,\n      url: config.zipkinConfig?.url,\n      headers: config.zipkinConfig?.headers\n    };\n  }\n\n  /**\n   * Return a ZipkinExporter configured with zipkinConfig field\n   * @return SpanExporter\n   */\n  getExporter(): SpanExporter {\n    return new ZipkinExporter(this.zipkinConfig);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n0.13.0-1 (2020-12-10)\nBug Fixes\n\nerror peerDependencies, umdModuleIds and doc (e6073bf)\n\n0.13.0 (2020-12-10)\nFeatures\n\nadd B3Propagator single or multi (c71ba73)\nadd B3Propagator single or multi (de1f141)\nupdate to 0.13.0. Add Zipkin Exporter (f206c5e)\n\nBug Fixes\n\nuseless parameter (bca88a0)\n\n0.11.0-3 (2020-09-16)\nFeatures\n\nreview injection for exporter and propagator (8faa4c9)\n\nBug Fixes\n\ndependence (b112065)\nredo update angular (#21) (6e5c19a)\n\n0.11.0-2 (2020-09-15)\nFeatures\n\nAdd otelcol configuration and Logging (#19) (042898e)\n\n0.11.0-1 (2020-09-15)\nFeatures\n\nadd user-agent to otelcol (06cb6de)\n\nBug Fixes\n\nreset to previous version (0a2ccc5)\nreview code (8b1b7b5)\nreview code again (7bab017)\nuse partial and record (4bddf3a)\nversion to use in interceptor (b6dcaf7)\n\n0.11.0 (2020-09-11)\nFeatures\n\nupdate propagator-jaeger version to 0.10.0 (1a1299b)\nupgrate to 0.11.0 otelcol (09dd1bb)\n\nBug Fixes\n\nts-jest configuration (4d9a061)\n\n0.10.2-3 (2020-09-02)\nFeatures\n\nadd error in interceptor (#16) (de09c4d)\n\nBug Fixes\n\ndoc (7f7c66a)\nmerge (ff373c0)\n\n0.10.2-2 (2020-08-20)\nBug Fixes\n\nprobability (62e0d77)\n\n0.10.2-1 (2020-08-16)\n0.10.2 (2020-08-09)\nFeatures\n\nupgrade to 0.10.2 otelcol (351ce3e)\n\nBug Fixes\n\nangular 10 ngcc trouble (4d886fb)\n\n0.10.1 (2020-07-28)\nFeatures\n\nupdate angular (bfc26ae)\nupdate opentelemtry 0.10.1 (94e0b44)\n\nBug Fixes\n\notlp collector version 0.4.0 (#9) (80d2ada)\nrelease (d2ecbb8)\n\n0.9.0 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3 (2020-06-28)\nFeatures\n\nadd cypress test e2e (7b4c031)\nadd new release 0.9.0 (#6) (0319eee)\n\n0.8.3-2 (2020-06-08)\nBug Fixes\n\nchangelog (8d45a2c)\nproblem with context and trace parent id (#4) (f195a50)\n\n0.8.3-1 (2020-06-05)\nFeatures\n\nadd jaeger propagator (fad044a)\nadd JaegerPropagator to composite (8e268a9)\n\nBug Fixes\n\ncontext traceId problem (#3) (c6368c9) \n\n0.8.3 (2020-05-30)\nFeatures\n\nadd docs (bd69598)\nreview before new release version (1229a9d)\n\n0.8.2 (2020-05-30)\nFeatures\n\nadd composite (7a5b07e)\nadd composite header (83fc1f3)\nadd example ok (e5eb09e)\nadd sampling configuration (ad03334)\nangular downgrade in progress (92330f9)\nen cours (0885b40)\nok (dd7a0e5)\nok (3516488)\nok (b63afc1)\nok (b679883)\nOK it works (ec28651)\ntest (0f35b5c)\n\nBug Fixes\n\ncan be use in angular 9/node 12/Typescript 3.6.0 (563071d)\ndel doc dir (96da55f)\ndelete unused file (dda5d54)\ndelete unused file (a1746bf)\ndoc and code (4a000b9)\nno subject with JSONP and XSRF (95167b9)\nno subject with JSONP and XSRF (47aba25)\nok (371886a)\npublish (613c16d)\npublish (47c249b)\npublish (a517094)\npublish and readme (412d2fd)\nsome typo (80f7bf8)\nsome typo (735b05d)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            B3PropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            CommonCollectorConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            JaegerPropagatorConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OpenTelemetryConfig\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            OtelCollectorConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            interface\n            ZipkinCollectorConfig\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OpenTelemetryInjectConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n            \n            variable\n            OTELCOL_LOGGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/interceptor/opentelemetry-http.interceptor.ts\n            \n            interceptor\n            OpenTelemetryHttpInterceptor\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/console/console-span-exporter.service.ts\n            \n            injectable\n            ConsoleSpanExporterService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            interface\n            IExporter\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n            \n            variable\n            OTELCOL_EXPORTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/otelcol/otelcol-exporter.service.ts\n            \n            injectable\n            OtelcolExporterService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/exporter/zipkin/zipkin-exporter.service.ts\n            \n            injectable\n            ZipkinExporterService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/b3-propagator/b3-propagator.service.ts\n            \n            injectable\n            B3PropagatorService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/composite-propagator/composite-propagator.service.ts\n            \n            injectable\n            CompositePropagatorService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/http-trace-context-propagator/http-trace-context-propagator.service.ts\n            \n            injectable\n            HttpTraceContextPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/jaeger-http-trace-propagator/jaeger-http-trace-propagator.service.ts\n            \n            injectable\n            JaegerHttpTracePropagatorService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/noop-http-text-propagator/noop-text-map-propagator.service.ts\n            \n            injectable\n            NoopTextMapPropagatorService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            interface\n            IPropagator\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n            \n            variable\n            OTELCOL_PROPAGATOR\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.1.2\n        \n            @angular/cdk : ^10.2.1\n        \n            @angular/common : ^10.1.2\n        \n            @angular/compiler : ^10.1.2\n        \n            @angular/core : ^10.1.2\n        \n            @angular/forms : ^10.1.2\n        \n            @angular/material : ^10.2.1\n        \n            @angular/platform-browser : ^10.1.2\n        \n            @angular/platform-browser-dynamic : ^10.1.2\n        \n            @angular/router : ^10.1.2\n        \n            @opentelemetry/exporter-collector : ^0.13.0\n        \n            @opentelemetry/exporter-zipkin : ^0.13.0\n        \n            @opentelemetry/propagator-b3 : ^0.13.0\n        \n            @opentelemetry/propagator-jaeger : ^0.11.0\n        \n            @opentelemetry/web : ^0.13.0\n        \n            body-parser : ^1.19.0\n        \n            concurrently : ^5.3.0\n        \n            ngx-highlight-js : ^10.0.3\n        \n            ngx-logger : ^4.1.9\n        \n            rxjs : ^6.6.3\n        \n            tslib : ^2.0.1\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOpenTelemetry Angular Interceptor\n@jufab/opentelemetry-angular-interceptor is an Angular Library to deploy OpenTelemetry in your Angular application\nThis library uses opentelemetry-js package\nOnly works for Angular >= 9.0.0\nMore info : https://jufab.github.io/opentelemetry-angular-interceptor/\n\n\nTable of contents\n\nOpenTelemetry Angular Interceptor\nTable of contents\nGetting started\nInstallation\nConfiguration\nExample global Configuration\nCommon Configuration\nOpenTelemetry-collector Configuration\nJaeger Propagator Configuration\nZipkin Exporter Configuration\nB3 Propagator Configuration\n\n\nAngular module\nExporter module\nPropagator module\n\n\n(Optional) Logging in OtelColExporterModule\nNGXLogger\n\n\n\n\nHow it works\nExample\nRun\n[Optional] Result in OpenTelemtery-collector\n\n\nTroubleshoot\nAngular 10 Warning\nOther\n\n\n\n\n\nGetting started\nInstallation\nWith npm :\nnpm install @jufab/opentelemetry-angular-interceptor @opentelemetry/web @opentelemetry/exporter-collector @opentelemetry/exporter-zipkin @opentelemetry/propagator-jaeger @opentelemetry/propagator-b3Configuration\nUse the \"OpentelemetryConfig\" interface to configure the Tracer\nexport interface OpenTelemetryConfig {\n  commonConfig: CommonCollectorConfig;\n  otelcolConfig?: OtelCollectorConfig;\n  jaegerPropagatorConfig?: JaegerPropagatorConfig;\n  zipkinConfig?: ZipkinCollectorConfig;\n  b3PropagatorConfig?: B3PropagatorConfig;\n}Example global Configuration\nFrom the example-app\nopentelemetryConfig: {\n    commonConfig: {\n      console: true, //(boolean) Display trace on console\n      production: false, //(boolean) Send trace with BatchSpanProcessor (true) or SimpleSpanProcessor (false) more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-api#tracing\n      serviceName: 'example-app', //Service name send in trace\n      probabilitySampler: '0.7', //Samples a configurable percentage of traces, string value between '0' to '1'\n    },\n    otelcolConfig: {\n      url: 'http://localhost:55681/v1/trace', //URL of opentelemetry collector\n    },\n    jaegerPropagatorConfig: {\n      customHeader: 'custom-header',\n    }\n  }\nCommon Configuration\n\nconsole: (boolean) Display trace on console if true\nproduction: (boolean)Send trace via BatchSpanProcessor (Async) or SimpleSpanProcessor (Sync) : It's recommend to use BatchSpanProcessor on Production.\nserviceName: (string) Service name in your trace\nprobabilitySampler: (string) Samples a configurable percentage of traces, value between 0 to 1\n\nOpenTelemetry-collector Configuration\n\nurl: (string) url of opentelemetry collector (default : http://localhost:55681/v1/trace)\nheaders: list of custom header (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nattributes : list of custom attributes (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\n\nJaeger Propagator Configuration\n\ncustomHeader: (string) custom header (more info : https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\n\nZipkin Exporter Configuration\n\nurl: (string) url of zipkin collector (default : http://localhost:9411/api/v2/spans)\nheaders: list of custom header (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-zipkin)\n\nB3 Propagator Configuration\n\nmultiHeader : (string) Single or Multi Header for b3propagator (default: multi). Value : 'O' (single), '1' (multi) (more info: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-propagator-b3)\n\nAngular module\nTo insert OpenTelemetryInterceptorModule, you can add in your application module (generally app.module.ts)\nExporter module\nThere is 3 exporters:\n\nOtelColExporterModule : OpenTelemetry exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-collector)\nConsoleSpanExporterModule : Console Exporter\nZipkinExporterModule : Zipkin Exporter (more info : https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-exporter-zipkin)\n\nPropagator module\nthere is 5 propagators (more info about propagator: https://github.com/open-telemetry/opentelemetry-js/tree/master/packages/opentelemetry-core)\n\nNoopHttpTextPropagatorModule : This is a fake propagator\nB3PropagatorModule : Use B3 propagator\nHttpTraceContextPropagatorModule : Use HttpTraceContext propagator\nJaegerHttpTracePropagatorModule : Use JaegerHttpPropagator (more info about this one: https://github.com/open-telemetry/opentelemetry-js-contrib/tree/master/propagators/opentelemetry-propagator-jaeger)\nCompositePropagatorModule : use all of the propagator\n\nimport { NgModule } from '@angular/core';\n...\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OpenTelemetryInterceptorModule, OtelColExporterModule, CompositePropagatorModule } from '@jufab/opentelemetry-angular-interceptor';\nimport { environment } from '../environments/environment';\n...\n\n@NgModule({\n  declarations: [AppComponent, ...],\n  imports: [\n    ...\n    HttpClientModule,\n    //Insert module OpenTelemetryInterceptorModule with configuration, HttpClientModule is used for interceptor\n    OpenTelemetryInterceptorModule.forRoot(environment.opentelemetryConfig),\n    //Insert OtelCol exporter module\n    OtelColExporterModule,\n    //Insert propagator module\n    CompositePropagatorModule,\n    ...\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}(Optional) Logging in OtelColExporterModule\nYou can add a logger to the OtelColExporterModule with the OTELCOL_LOGGER token.\nYou can use a custom logger which implements the Logger in @opentelemetry/api.\nOr, you can use an existing logger which implements the same functions (error, warn, info, debug) like ngx-logger.\nNGXLogger\nYou can use ngx-logger.\nIn your appModule, insert LoggerModule and configure it\n@NgModule({\n  ...\n  imports: [\n    LoggerModule.forRoot(environment.loggerConfig),\n  ]\n  ...And use OTELCOL_LOGGER token to inject NGXLogger\n@NgModule({\n  ...\n  providers: [\n    ...\n    { provide: OTELCOL_LOGGER, useExisting: NGXLogger }\n    ...\n  ]\nYou can see an example in the example-app.\n\nHow it works\nThis library is based on HttpClientModule and the HTTP_INTERCEPTORS\nOpenTelemetryInterceptor implement an HttpInterceptor and the intercept method.\nThis implementation initialise a WebTracerProvider, create a Span and add header propagation in the current call.\n\nThe response body is adding by an event in span.\n\nExample\nThis project have an \"example-app\" as Angular application example.\nprojects/example-app\nYou can see how configure and insert this module.\nYou can althought test opentelemetry-angular-interceptor with this application.\nRun\nTo start this Example application, run command :\nnpm run start:complete-example-appand open the application at http://localhost:4200\n[Optional] Result in OpenTelemtery-collector\nIf you want to see the result in a collector *, there's a docker-compose available in this project.\nYou can start it with this command :\ndocker-compose -f projects/example-app/collector/docker-compose.yaml up -dGo to the jaeger application (http://localhost:16686) to see result.\nMore info about the collector here : https://github.com/open-telemetry/opentelemetry-collector\n\n* without an Agent or a Collector you can see an error in your browser about sending a \"trace\".\n\nTroubleshoot\nAngular 10 Warning\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/web'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/core'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/tracing'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/api'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependencies\n\nWARNING in xxx/fesm2015/jufab-opentelemetry-angular-interceptor.js depends on '@opentelemetry/exporter-collector/build/src/platform/browser'. CommonJS or AMD dependencies can cause optimization bailouts.\nFor more info see: https://angular.io/guide/build#configuring-commonjs-dependenciesAdd to your angular.json\n\"options\": {\n  \"allowedCommonJsDependencies\": [\n    \"@opentelemetry/web\",\n    \"@opentelemetry/core\",\n    \"@opentelemetry/tracing\",\n    \"@opentelemetry/api\",\n    \"@opentelemetry/exporter-collector\",\n    \"@opentelemetry/context-base\",\n    \"@opentelemetry/propagator-jaeger\",\n    \"@opentelemetry/propagator-b3\"\n  ],Other\n\n\n\nError\nFix\n\n\n\n\nerror TS2694: Namespace 'NodeJS' has no exported member 'Timeout'.\nNeed dependence @type/node >= 12.0.2\n\n\nerror TS1086: An accessor cannot be declared in an ambient context.\nNeed dependence typescript >= 3.6.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.You may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\nEND OF TERMS AND CONDITIONS\nAPPENDIX: How to apply the Apache License to your work.\nTo apply the Apache License to your work, attach the following\nboilerplate notice, with the fields enclosed by brackets \"[]\"\nreplaced with your own identifying information. (Don't include\nthe brackets!)  The text should be enclosed in the appropriate\ncomment syntax for the file format. We also recommend that a\nfile or class name and description of purpose be included on the\nsame \"printed page\" as the copyright notice for easier\nidentification within third-party archives.\nCopyright [yyyy] [name of copyright owner]\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        B3PropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompositePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleSpanExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HttpTraceContextPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JaegerHttpTracePropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NoopTextMapPropagatorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpenTelemetryInterceptorModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OtelColExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ZipkinExporterModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTask for opentelemetry-angular-interceptor\nTodo in project...\nTodo\n\n Add in issue Github this todo list  \n Zipkin  \n Add Zipkin exporter (when it's available)  \n Add more configuration for Zipkin : here  \n\n\n Jaeger  \n Add Jaeger exporter (when it's available)  \n Add more configuration for Jaeger : here  \n\n\n Prepare correlation-context here  \n\nIn Progress\nDone ✓\n\n Add more configuration for OpenTelemetry-collector : See here  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            OpenTelemetryInjectConfig   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_EXPORTER   (projects/.../exporter.interface.ts)\n                        \n                        \n                            OTELCOL_LOGGER   (projects/.../opentelemetry-config.ts)\n                        \n                        \n                            OTELCOL_PROPAGATOR   (projects/.../propagator.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/opentelemetry-interceptor/src/lib/configuration/opentelemetry-config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OpenTelemetryInjectConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('opentelemetry.config')\n                        \n                    \n\n                \n                    \n                        OpenTelemetryInjectConfig : Config injection \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_LOGGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.logger')\n                        \n                    \n\n                \n                    \n                        Logger : injection for a logger compatible \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/exporter/exporter.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_EXPORTER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.exporter')\n                        \n                    \n\n                \n                    \n                        injection for a Exporter \n\n                    \n                \n\n            \n        \n\n    projects/opentelemetry-interceptor/src/lib/services/propagator/propagator.interface.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OTELCOL_PROPAGATOR\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('otelcol.propagator')\n                        \n                    \n\n                \n                    \n                        injection for a propagator \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
